{"version":3,"sources":["mixins/stateful.js"],"names":["define","evented","Obj","StatefulMixin","state","[object Object]","stateUpdates","changes","each","value","key","this","from","to","isEvented","trigger","type","target","defaultState","assign","handleStateChanged","on"],"mappings":";;;;;;;AAAAA,QACI,YACA,gBACD,SAAUC,EAASC,GAClB,aACA,MAAMC,GACFC,SACAC,SAASC,GAIL,IAAIC,EAiBJ,MApB4B,mBAAjBD,IACPA,EAAeA,KAGnBJ,EAAIM,KAAKF,EAAc,CAACG,EAAOC,KACvBC,KAAKP,MAAMM,KAASD,KACpBF,EAAUA,OACFG,IACJE,KAAMD,KAAKP,MAAMM,GACjBG,GAAIJ,IAGZE,KAAKP,MAAMM,GAAOD,IAElBF,GAAWN,EAAQa,UAAUH,OAC7BA,KAAKI,SACDR,QAAAA,EACAS,KAAM,iBAGPT,IAWf,OARA,SAAkBU,EAAQC,GAMtB,OALAhB,EAAIiB,OAAOF,EAAQd,GACnBc,EAAOb,MAAQF,EAAIiB,UAAWF,EAAOb,MAAOc,GACH,mBAA9BD,EAAOG,oBAAqCnB,EAAQa,UAAUG,IACrEA,EAAOI,GAAG,eAAgBJ,EAAOG,oBAE9BH","file":"../../mixins/stateful.js","sourcesContent":["define([\n    './evented',\n    '../utils/obj'\n], function (evented, Obj) {\n    'use strict';\n    const StatefulMixin = {\n        state: {},\n        setState(stateUpdates) {\n            if (typeof stateUpdates === 'function') {\n                stateUpdates = stateUpdates();\n            }\n            let changes;\n            Obj.each(stateUpdates, (value, key) => {\n                if (this.state[key] !== value) {\n                    changes = changes || {};\n                    changes[key] = {\n                        from: this.state[key],\n                        to: value\n                    };\n                }\n                this.state[key] = value;\n            });\n            if (changes && evented.isEvented(this)) {\n                this.trigger({\n                    changes,\n                    type: 'statechanged'\n                });\n            }\n            return changes;\n        }\n    };\n    function stateful(target, defaultState) {\n        Obj.assign(target, StatefulMixin);\n        target.state = Obj.assign({}, target.state, defaultState);\n        if (typeof target.handleStateChanged === 'function' && evented.isEvented(target)) {\n            target.on('statechanged', target.handleStateChanged);\n        }\n        return target;\n    }\n    return stateful;\n});"]}