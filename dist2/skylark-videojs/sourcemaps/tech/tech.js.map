{"version":3,"sources":["tech/tech.js"],"names":["define","window","document","Component","mergeOptions","Fn","log","timeRages","buffer","MediaError","obj","TRACK_TYPES","stringCases","vtt","Tech","[object Object]","options","ready","reportTouchActivity","super","this","hasStarted_","on","ALL","names","forEach","name","props","getterName","privateName","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","track","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","preloadTextTracks","autoRemoteTextTracks_","text","ListClass","initTrackListeners","nativeControlsForTouch","emitTapEvents","constructor","name_","src","isReady_","one","setTimeout","triggerSourceset","trigger","type","onDurationChange","manualProgress","trackProgress","stopTrackingProgress","off","event","progressInterval","setInterval","bind","numBufferedPercent","undefined","bufferedPercent_","duration_","duration","createTimeRange","bufferedPercent","buffered","clearInterval","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","currentTimeInterval","target","manuallyTriggered","clearTracks","NORMAL","manualProgressOff","manualTimeUpdatesOff","dispose","types","concat","list","i","length","removeRemoteTextTrack","removeTrack","err","error_","trackListChanges","tracks","addEventListener","removeEventListener","WebVTT","body","contains","el","options_","isPlain","Object","keys","script","createElement","onload","onerror","parentNode","appendChild","addWebVttScript_","textTracks","remoteTracks","remoteTextTracks","handleAddTrack","e","addTrack","handleRemoveTrack","updateDisplay","textTracksChanges","mode","kind","label","language","Error","self","tech","TrackClass","createTrackHelper","REMOTE","remoteTextEl","manualCleanup","htmlTrackElement","createRemoteTextTrack","warn","remoteTextTrackEls","addTrackElement_","trackElement","getTrackElementByTrack_","removeTrackElement_","PromiseClass","Promise","reject","srcObj","canPlayType","component","prototype","techs_","isTech","canPlaySource","toTitleCase","toLowerCase","defaultTechOrder_","push","videojs","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","index","handlers","sourceHandlers","splice","can","selectSourceHandler","source","canHandleSource","sh","fnName","originalFn","sourceHandler_","apply","arguments","setSource","nativeSourceHandler","error","disposeSourceHandler","currentSource_","handleSource","cleanupAutoTextTracks","registerComponent","registerTech"],"mappings":";;;;;;;AAAAA,QACI,+BACA,iCACA,eACA,yBACA,cACA,eACA,uBACA,kBACA,iBACA,eACA,wBACA,wBACA,uBACD,SAAUC,EAAQC,EAAUC,EAAWC,EAAcC,EAAIC,EAAKC,EAAWC,EAAQC,EAAYC,EAAKC,EAAaC,EAAaC,GAC3H,mBAeMC,UAAaX,EACfY,YAAYC,KAAcC,EAAQ,cAE9BD,EAAQE,qBAAsB,EAC9BC,MAAM,KAAMH,EAASC,GACrBG,KAAKC,aAAc,EACnBD,KAAKE,GAAG,UAAW,WACfF,KAAKC,aAAc,IAEvBD,KAAKE,GAAG,YAAa,WACjBF,KAAKC,aAAc,IAEvBV,EAAYY,IAAIC,MAAMC,QAAQC,IAC1B,MAAMC,EAAQhB,EAAYY,IAAIG,GAC1BV,GAAWA,EAAQW,EAAMC,cACzBR,KAAKO,EAAME,aAAeb,EAAQW,EAAMC,eAG3CR,KAAKU,wBACNV,KAAKW,mBAEJX,KAAKY,0BACNZ,KAAKa,uBAGL,OACA,QACA,SACFR,QAAQS,KACoC,IAAtClB,WAAkBkB,aAClBd,sBAAuBc,YAAkB,MAGlB,IAA3BlB,EAAQmB,iBAAyD,IAA7BnB,EAAQoB,iBAC5ChB,KAAKiB,0BAA2B,GACE,IAA3BrB,EAAQmB,iBAAwD,IAA7BnB,EAAQoB,mBAClDhB,KAAKiB,0BAA2B,GAE/BjB,KAAKiB,0BACNjB,KAAKkB,oBAETlB,KAAKmB,mBAAkD,IAA9BvB,EAAQuB,kBACjCnB,KAAKoB,sBAAwB,IAAI7B,EAAYY,IAAIkB,KAAKC,UACtDtB,KAAKuB,qBACA3B,EAAQ4B,wBACTxB,KAAKyB,gBAELzB,KAAK0B,cACL1B,KAAK2B,MAAQ3B,KAAK0B,YAAYpB,MAAQ,gBAG9CX,iBAAiBiC,GACR5B,KAAK6B,UACN7B,KAAK8B,IAAI,QAAS,IAAM9B,KAAK+B,WAAW,IAAM/B,KAAKgC,iBAAiBJ,GAAM,IAE9E5B,KAAKiC,SACDL,IAAAA,EACAM,KAAM,cAGdvC,mBACIK,KAAKE,GAAG,iBAAkBF,KAAKmC,kBAC/BnC,KAAKoC,gBAAiB,EACtBpC,KAAK8B,IAAI,QAAS9B,KAAKqC,eAE3B1C,oBACIK,KAAKoC,gBAAiB,EACtBpC,KAAKsC,uBACLtC,KAAKuC,IAAI,iBAAkBvC,KAAKmC,kBAEpCxC,cAAc6C,GACVxC,KAAKsC,uBACLtC,KAAKyC,iBAAmBzC,KAAK0C,YAAYzD,EAAG0D,KAAK3C,KAAM,WACnD,MAAM4C,EAAqB5C,KAAK6C,YAC5B7C,KAAK8C,mBAAqBF,GAC1B5C,KAAKiC,QAAQ,YAEjBjC,KAAK8C,iBAAmBF,EACG,IAAvBA,GACA5C,KAAKsC,yBAET,KAER3C,iBAAiB6C,GACbxC,KAAK+C,UAAY/C,KAAKgD,WAE1BrD,WACI,OAAOR,EAAU8D,gBAAgB,EAAG,GAExCtD,kBACI,OAAOP,EAAO8D,gBAAgBlD,KAAKmD,WAAYnD,KAAK+C,WAExDpD,uBACIK,KAAKoD,cAAcpD,KAAKyC,kBAE5B9C,sBACIK,KAAKqD,mBAAoB,EACzBrD,KAAKE,GAAG,OAAQF,KAAKsD,kBACrBtD,KAAKE,GAAG,QAASF,KAAKuD,yBAE1B5D,uBACIK,KAAKqD,mBAAoB,EACzBrD,KAAKuD,0BACLvD,KAAKuC,IAAI,OAAQvC,KAAKsD,kBACtBtD,KAAKuC,IAAI,QAASvC,KAAKuD,yBAE3B5D,mBACQK,KAAKwD,qBACLxD,KAAKuD,0BAETvD,KAAKwD,oBAAsBxD,KAAK0C,YAAY,WACxC1C,KAAKiC,SACDC,KAAM,aACNuB,OAAQzD,KACR0D,mBAAmB,KAExB,KAEP/D,0BACIK,KAAKoD,cAAcpD,KAAKwD,qBACxBxD,KAAKiC,SACDC,KAAM,aACNuB,OAAQzD,KACR0D,mBAAmB,IAG3B/D,UACIK,KAAK2D,YAAYpE,EAAYqE,OAAOxD,OAChCJ,KAAKoC,gBACLpC,KAAK6D,oBAEL7D,KAAKqD,mBACLrD,KAAK8D,uBAET/D,MAAMgE,UAEVpE,YAAYqE,IACRA,KAAWC,OAAOD,IACZ3D,QAAQ6B,IACV,MAAMgC,EAAOlE,QAASkC,iBACtB,IAAIiC,EAAID,EAAKE,OACb,KAAOD,KAAK,CACR,MAAMrD,EAAQoD,EAAKC,GACN,SAATjC,GACAlC,KAAKqE,sBAAsBvD,GAE/BoD,EAAKI,YAAYxD,MAI7BnB,wBACI,MAAMuE,EAAOlE,KAAKoB,0BAClB,IAAI+C,EAAID,EAAKE,OACb,KAAOD,KAAK,CACR,MAAMrD,EAAQoD,EAAKC,GACnBnE,KAAKqE,sBAAsBvD,IAGnCnB,SAEAA,eAEAA,kBAEAA,MAAM4E,GAKF,YAJY1B,IAAR0B,IACAvE,KAAKwE,OAAS,IAAInF,EAAWkF,GAC7BvE,KAAKiC,QAAQ,UAEVjC,KAAKwE,OAEhB7E,SACI,OAAIK,KAAKC,YACEd,EAAU8D,gBAAgB,EAAG,GAEjC9D,EAAU8D,kBAErBtD,QAEAA,gBAEAA,aAEAA,iBACQK,KAAKqD,mBACLrD,KAAKiC,SACDC,KAAM,aACNuB,OAAQzD,KACR0D,mBAAmB,IAI/B/D,qBACIJ,EAAYqE,OAAOxD,MAAMC,QAAQC,IAC7B,MACMmE,EAAmB,KACrBzE,KAAKiC,WAAY3B,iBAEfoE,EAAS1E,KAJDT,EAAYqE,OAAOtD,GAIPE,cAC1BkE,EAAOC,iBAAiB,cAAeF,GACvCC,EAAOC,iBAAiB,WAAYF,GACpCzE,KAAKE,GAAG,UAAW,KACfwE,EAAOE,oBAAoB,cAAeH,GAC1CC,EAAOE,oBAAoB,WAAYH,OAInD9E,mBACI,IAAId,EAAOgG,OAGX,GAAI/F,EAASgG,KAAKC,SAAS/E,KAAKgF,MAAO,CACnC,IAAKhF,KAAKiF,SAAS,WAAa3F,EAAI4F,QAAQzF,IAAQ0F,OAAOC,KAAK3F,GAAK2E,OAAS,EAE1E,YADApE,KAAKiC,QAAQ,eAGjB,MAAMoD,EAASvG,EAASwG,cAAc,UACtCD,EAAOzD,IAAM5B,KAAKiF,SAAS,WAAa,iDACxCI,EAAOE,OAAS,MACZvF,KAAKiC,QAAQ,iBAEjBoD,EAAOG,QAAU,MACbxF,KAAKiC,QAAQ,gBAEjBjC,KAAKE,GAAG,UAAW,KACfmF,EAAOE,OAAS,KAChBF,EAAOG,QAAU,OAErB3G,EAAOgG,QAAS,EAChB7E,KAAKgF,KAAKS,WAAWC,YAAYL,QAEjCrF,KAAKH,MAAMG,KAAK2F,kBAGxBhG,oBACI,MAAM+E,EAAS1E,KAAK4F,aACdC,EAAe7F,KAAK8F,mBACpBC,EAAiBC,GAAKtB,EAAOuB,SAASD,EAAElF,OACxCoF,EAAoBF,GAAKtB,EAAOJ,YAAY0B,EAAElF,OACpD+E,EAAa3F,GAAG,WAAY6F,GAC5BF,EAAa3F,GAAG,cAAegG,GAC/BlG,KAAK2F,mBACL,MAAMQ,EAAgB,IAAMnG,KAAKiC,QAAQ,mBACnCmE,EAAoB,KACtBD,IACA,IAAK,IAAIhC,EAAI,EAAGA,EAAIO,EAAON,OAAQD,IAAK,CACpC,MAAMrD,EAAQ4D,EAAOP,GACrBrD,EAAM8D,oBAAoB,YAAauB,GACpB,YAAfrF,EAAMuF,MACNvF,EAAM6D,iBAAiB,YAAawB,KAIhDC,IACA1B,EAAOC,iBAAiB,SAAUyB,GAClC1B,EAAOC,iBAAiB,WAAYyB,GACpC1B,EAAOC,iBAAiB,cAAeyB,GACvCpG,KAAKE,GAAG,UAAW,WACf2F,EAAatD,IAAI,WAAYwD,GAC7BF,EAAatD,IAAI,cAAe2D,GAChCxB,EAAOE,oBAAoB,SAAUwB,GACrC1B,EAAOE,oBAAoB,WAAYwB,GACvC1B,EAAOE,oBAAoB,cAAewB,GAC1C,IAAK,IAAIjC,EAAI,EAAGA,EAAIO,EAAON,OAAQD,IAAK,CACtBO,EAAOP,GACfS,oBAAoB,YAAauB,MAInDxG,aAAa2G,EAAMC,EAAOC,GACtB,IAAKF,EACD,MAAM,IAAIG,MAAM,mDAEpB,OA/RR,SAA2BC,EAAMJ,EAAMC,EAAOC,EAAU5G,MACpD,MAAM8E,EAASgC,EAAKd,aACpBhG,EAAQ0G,KAAOA,EACXC,IACA3G,EAAQ2G,MAAQA,GAEhBC,IACA5G,EAAQ4G,SAAWA,GAEvB5G,EAAQ+G,KAAOD,EACf,MAAM5F,EAAQ,IAAIvB,EAAYY,IAAIkB,KAAKuF,WAAWhH,GAElD,OADA8E,EAAOuB,SAASnF,GACTA,EAmRI+F,CAAkB7G,KAAMsG,EAAMC,EAAOC,GAEhD7G,sBAAsBC,GAClB,MAAMkB,EAAQ9B,EAAaY,GAAW+G,KAAM3G,OAC5C,OAAO,IAAIT,EAAYuH,OAAOC,aAAaH,WAAW9F,GAE1DnB,mBAAmBC,KAAcoH,GAC7B,MAAMC,EAAmBjH,KAAKkH,sBAAsBtH,GAUpD,OATsB,IAAlBoH,IAA4C,IAAlBA,IAC1B9H,EAAIiI,KAAK,oKACTH,GAAgB,GAEpBhH,KAAKoH,qBAAqBC,iBAAiBJ,GAC3CjH,KAAK8F,mBAAmBG,SAASgB,EAAiBnG,QAC5B,IAAlBkG,GACAhH,KAAKH,MAAM,IAAMG,KAAKoB,sBAAsB6E,SAASgB,EAAiBnG,QAEnEmG,EAEXtH,sBAAsBmB,GAClB,MAAMwG,EAAetH,KAAKoH,qBAAqBG,wBAAwBzG,GACvEd,KAAKoH,qBAAqBI,oBAAoBF,GAC9CtH,KAAK8F,mBAAmBxB,YAAYxD,GACpCd,KAAKoB,sBAAsBkD,YAAYxD,GAE3CnB,0BACI,SAEJA,0BACI,MAAM8H,EAAezH,KAAKiF,SAASyC,SAAW7I,EAAO6I,QACrD,GAAID,EACA,OAAOA,EAAaE,SAG5BhI,0BACI,OAAO,EAEXA,8BAEAA,aAEAA,eAEAA,kBAEAA,6BAEAA,6BAEAA,cACI,MAAO,GAEXA,qBACI,MAAO,GAEXA,qBAAqBiI,EAAQhI,GACzB,OAAOF,EAAKmI,YAAYD,EAAO1F,MAEnCvC,cAAcmI,GACV,OAAOA,EAAUC,qBAAqBrI,GAAQoI,aAAqBpI,GAAQoI,IAAcpI,EAE7FC,oBAAoBW,EAAMqG,GAItB,GAHKjH,EAAKsI,SACNtI,EAAKsI,YAEJtI,EAAKuI,OAAOtB,GACb,MAAM,IAAIF,cAAenG,oBAE7B,IAAKZ,EAAKmI,YACN,MAAM,IAAIpB,MAAM,uDAEpB,IAAK/G,EAAKwI,cACN,MAAM,IAAIzB,MAAM,yDAQpB,OANAnG,EAAOd,EAAY2I,YAAY7H,GAC/BZ,EAAKsI,OAAO1H,GAAQqG,EACpBjH,EAAKsI,OAAOxI,EAAY4I,YAAY9H,IAASqG,EAChC,SAATrG,GACAZ,EAAK2I,kBAAkBC,KAAKhI,GAEzBqG,EAEXhH,eAAeW,GACX,GAAKA,EAGL,OAAIZ,EAAKsI,QAAUtI,EAAKsI,OAAO1H,GACpBZ,EAAKsI,OAAO1H,IAEvBA,EAAOd,EAAY2I,YAAY7H,GAC3BzB,GAAUA,EAAO0J,SAAW1J,EAAO0J,QAAQjI,IAC3CpB,EAAIiI,YAAa7G,8GACVzB,EAAO0J,QAAQjI,SAF1B,IAmHR,OA7GAf,EAAYY,IAAIC,MAAMC,QAAQ,SAAUC,GACpC,MAAMC,EAAQhB,EAAYY,IAAIG,GAC9BZ,EAAKqI,UAAUxH,EAAMC,YAAc,WAE/B,OADAR,KAAKO,EAAME,aAAeT,KAAKO,EAAME,cAAgB,IAAIF,EAAMe,UACxDtB,KAAKO,EAAME,gBAG1Bf,EAAKqI,UAAUS,uBAAwB,EACvC9I,EAAKqI,UAAUU,qBAAsB,EACrC/I,EAAKqI,UAAUW,0BAA2B,EAC1ChJ,EAAKqI,UAAUY,sBAAuB,EACtCjJ,EAAKqI,UAAUrH,wBAAyB,EACxChB,EAAKqI,UAAUa,mBAAoB,EACnClJ,EAAKqI,UAAUnH,0BAA2B,EAC1ClB,EAAKqI,UAAU9G,0BAA2B,EAC1CvB,EAAKmJ,mBAAqB,SAAUC,GAChCA,EAAMC,sBAAwB,SAAUC,EAASC,GAC7C,IAAIC,EAAWJ,EAAMK,eAChBD,IACDA,EAAWJ,EAAMK,wBAEPtG,IAAVoG,IACAA,EAAQC,EAAS9E,QAErB8E,EAASE,OAAOH,EAAO,EAAGD,IAE9BF,EAAMjB,YAAc,SAAU3F,GAC1B,MAAMgH,EAAWJ,EAAMK,mBACvB,IAAIE,EACJ,IAAK,IAAIlF,EAAI,EAAGA,EAAI+E,EAAS9E,OAAQD,IAEjC,GADAkF,EAAMH,EAAS/E,GAAG0D,YAAY3F,GAE1B,OAAOmH,EAGf,MAAO,IAEXP,EAAMQ,oBAAsB,SAAUC,EAAQ3J,GAC1C,MAAMsJ,EAAWJ,EAAMK,mBACvB,IAAIE,EACJ,IAAK,IAAIlF,EAAI,EAAGA,EAAI+E,EAAS9E,OAAQD,IAEjC,GADAkF,EAAMH,EAAS/E,GAAGqF,gBAAgBD,EAAQ3J,GAEtC,OAAOsJ,EAAS/E,GAGxB,OAAO,MAEX2E,EAAMZ,cAAgB,SAAUN,EAAQhI,GACpC,MAAM6J,EAAKX,EAAMQ,oBAAoB1B,EAAQhI,GAC7C,OAAI6J,EACOA,EAAGD,gBAAgB5B,EAAQhI,GAE/B,KAGP,WACA,UACA,YAEOS,QAAQ,SAAUqJ,GACzB,MAAMC,EAAa3J,KAAK0J,GACE,mBAAfC,IAGX3J,KAAK0J,GAAU,WACX,OAAI1J,KAAK4J,gBAAkB5J,KAAK4J,eAAeF,GACpC1J,KAAK4J,eAAeF,GAAQG,MAAM7J,KAAK4J,eAAgBE,WAE3DH,EAAWE,MAAM7J,KAAM8J,cAEnChB,EAAMf,WACTe,EAAMf,UAAUgC,UAAY,SAAUR,GAClC,IAAIE,EAAKX,EAAMQ,oBAAoBC,EAAQvJ,KAAKiF,UAC3CwE,IACGX,EAAMkB,oBACNP,EAAKX,EAAMkB,oBAEX9K,EAAI+K,MAAM,oDAGlBjK,KAAKkK,uBACLlK,KAAKuC,IAAI,UAAWvC,KAAKkK,sBACrBT,IAAOX,EAAMkB,sBACbhK,KAAKmK,eAAiBZ,GAE1BvJ,KAAK4J,eAAiBH,EAAGW,aAAab,EAAQvJ,KAAMA,KAAKiF,UACzDjF,KAAK8B,IAAI,UAAW9B,KAAKkK,uBAE7BpB,EAAMf,UAAUmC,qBAAuB,WAC/BlK,KAAKmK,iBACLnK,KAAK2D,aACD,QACA,UAEJ3D,KAAKmK,eAAiB,MAE1BnK,KAAKqK,wBACDrK,KAAK4J,iBACD5J,KAAK4J,eAAe7F,SACpB/D,KAAK4J,eAAe7F,UAExB/D,KAAK4J,eAAiB,QAIlC7K,EAAUuL,kBAAkB,OAAQ5K,GACpCA,EAAK6K,aAAa,OAAQ7K,GAC1BA,EAAK2I,qBACE3I","file":"../../tech/tech.js","sourcesContent":["define([\n    'skylark-langx-globals/window',\n    'skylark-langx-globals/document',\n    '../component',\n    '../utils/merge-options',\n    '../utils/fn',\n    '../utils/log',\n    '../utils/time-ranges',\n    '../utils/buffer',\n    '../media-error',\n    '../utils/obj',\n    '../tracks/track-types',\n    '../utils/string-cases',\n    'skylark-videojs-vtt'\n], function (window, document, Component, mergeOptions, Fn, log, timeRages, buffer, MediaError, obj, TRACK_TYPES, stringCases, vtt) {\n    'use strict';\n    function createTrackHelper(self, kind, label, language, options = {}) {\n        const tracks = self.textTracks();\n        options.kind = kind;\n        if (label) {\n            options.label = label;\n        }\n        if (language) {\n            options.language = language;\n        }\n        options.tech = self;\n        const track = new TRACK_TYPES.ALL.text.TrackClass(options);\n        tracks.addTrack(track);\n        return track;\n    }\n    class Tech extends Component {\n        constructor(options = {}, ready = function () {\n        }) {\n            options.reportTouchActivity = false;\n            super(null, options, ready);\n            this.hasStarted_ = false;\n            this.on('playing', function () {\n                this.hasStarted_ = true;\n            });\n            this.on('loadstart', function () {\n                this.hasStarted_ = false;\n            });\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                if (options && options[props.getterName]) {\n                    this[props.privateName] = options[props.getterName];\n                }\n            });\n            if (!this.featuresProgressEvents) {\n                this.manualProgressOn();\n            }\n            if (!this.featuresTimeupdateEvents) {\n                this.manualTimeUpdatesOn();\n            }\n            [\n                'Text',\n                'Audio',\n                'Video'\n            ].forEach(track => {\n                if (options[`native${ track }Tracks`] === false) {\n                    this[`featuresNative${ track }Tracks`] = false;\n                }\n            });\n            if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n                this.featuresNativeTextTracks = false;\n            } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n                this.featuresNativeTextTracks = true;\n            }\n            if (!this.featuresNativeTextTracks) {\n                this.emulateTextTracks();\n            }\n            this.preloadTextTracks = options.preloadTextTracks !== false;\n            this.autoRemoteTextTracks_ = new TRACK_TYPES.ALL.text.ListClass();\n            this.initTrackListeners();\n            if (!options.nativeControlsForTouch) {\n                this.emitTapEvents();\n            }\n            if (this.constructor) {\n                this.name_ = this.constructor.name || 'Unknown Tech';\n            }\n        }\n        triggerSourceset(src) {\n            if (!this.isReady_) {\n                this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n            }\n            this.trigger({\n                src,\n                type: 'sourceset'\n            });\n        }\n        manualProgressOn() {\n            this.on('durationchange', this.onDurationChange);\n            this.manualProgress = true;\n            this.one('ready', this.trackProgress);\n        }\n        manualProgressOff() {\n            this.manualProgress = false;\n            this.stopTrackingProgress();\n            this.off('durationchange', this.onDurationChange);\n        }\n        trackProgress(event) {\n            this.stopTrackingProgress();\n            this.progressInterval = this.setInterval(Fn.bind(this, function () {\n                const numBufferedPercent = this.undefined();\n                if (this.bufferedPercent_ !== numBufferedPercent) {\n                    this.trigger('progress');\n                }\n                this.bufferedPercent_ = numBufferedPercent;\n                if (numBufferedPercent === 1) {\n                    this.stopTrackingProgress();\n                }\n            }), 500);\n        }\n        onDurationChange(event) {\n            this.duration_ = this.duration();\n        }\n        buffered() {\n            return timeRages.createTimeRange(0, 0);\n        }\n        bufferedPercent() {\n            return buffer.bufferedPercent(this.buffered(), this.duration_);\n        }\n        stopTrackingProgress() {\n            this.clearInterval(this.progressInterval);\n        }\n        manualTimeUpdatesOn() {\n            this.manualTimeUpdates = true;\n            this.on('play', this.trackCurrentTime);\n            this.on('pause', this.stopTrackingCurrentTime);\n        }\n        manualTimeUpdatesOff() {\n            this.manualTimeUpdates = false;\n            this.stopTrackingCurrentTime();\n            this.off('play', this.trackCurrentTime);\n            this.off('pause', this.stopTrackingCurrentTime);\n        }\n        trackCurrentTime() {\n            if (this.currentTimeInterval) {\n                this.stopTrackingCurrentTime();\n            }\n            this.currentTimeInterval = this.setInterval(function () {\n                this.trigger({\n                    type: 'timeupdate',\n                    target: this,\n                    manuallyTriggered: true\n                });\n            }, 250);\n        }\n        stopTrackingCurrentTime() {\n            this.clearInterval(this.currentTimeInterval);\n            this.trigger({\n                type: 'timeupdate',\n                target: this,\n                manuallyTriggered: true\n            });\n        }\n        dispose() {\n            this.clearTracks(TRACK_TYPES.NORMAL.names);\n            if (this.manualProgress) {\n                this.manualProgressOff();\n            }\n            if (this.manualTimeUpdates) {\n                this.manualTimeUpdatesOff();\n            }\n            super.dispose();\n        }\n        clearTracks(types) {\n            types = [].concat(types);\n            types.forEach(type => {\n                const list = this[`${ type }Tracks`]() || [];\n                let i = list.length;\n                while (i--) {\n                    const track = list[i];\n                    if (type === 'text') {\n                        this.removeRemoteTextTrack(track);\n                    }\n                    list.removeTrack(track);\n                }\n            });\n        }\n        cleanupAutoTextTracks() {\n            const list = this.autoRemoteTextTracks_ || [];\n            let i = list.length;\n            while (i--) {\n                const track = list[i];\n                this.removeRemoteTextTrack(track);\n            }\n        }\n        reset() {\n        }\n        crossOrigin() {\n        }\n        setCrossOrigin() {\n        }\n        error(err) {\n            if (err !== undefined) {\n                this.error_ = new MediaError(err);\n                this.trigger('error');\n            }\n            return this.error_;\n        }\n        played() {\n            if (this.hasStarted_) {\n                return timeRages.createTimeRange(0, 0);\n            }\n            return timeRages.createTimeRange();\n        }\n        play() {\n        }\n        setScrubbing() {\n        }\n        scrubbing() {\n        }\n        setCurrentTime() {\n            if (this.manualTimeUpdates) {\n                this.trigger({\n                    type: 'timeupdate',\n                    target: this,\n                    manuallyTriggered: true\n                });\n            }\n        }\n        initTrackListeners() {\n            TRACK_TYPES.NORMAL.names.forEach(name => {\n                const props = TRACK_TYPES.NORMAL[name];\n                const trackListChanges = () => {\n                    this.trigger(`${ name }trackchange`);\n                };\n                const tracks = this[props.getterName]();\n                tracks.addEventListener('removetrack', trackListChanges);\n                tracks.addEventListener('addtrack', trackListChanges);\n                this.on('dispose', () => {\n                    tracks.removeEventListener('removetrack', trackListChanges);\n                    tracks.removeEventListener('addtrack', trackListChanges);\n                });\n            });\n        }\n        addWebVttScript_() {\n            if (window.WebVTT) {\n                return;\n            }\n            if (document.body.contains(this.el())) {\n                if (!this.options_['vtt.js'] && obj.isPlain(vtt) && Object.keys(vtt).length > 0) {\n                    this.trigger('vttjsloaded');\n                    return;\n                }\n                const script = document.createElement('script');\n                script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n                script.onload = () => {\n                    this.trigger('vttjsloaded');\n                };\n                script.onerror = () => {\n                    this.trigger('vttjserror');\n                };\n                this.on('dispose', () => {\n                    script.onload = null;\n                    script.onerror = null;\n                });\n                window.WebVTT = true;\n                this.el().parentNode.appendChild(script);\n            } else {\n                this.ready(this.addWebVttScript_);\n            }\n        }\n        emulateTextTracks() {\n            const tracks = this.textTracks();\n            const remoteTracks = this.remoteTextTracks();\n            const handleAddTrack = e => tracks.addTrack(e.track);\n            const handleRemoveTrack = e => tracks.removeTrack(e.track);\n            remoteTracks.on('addtrack', handleAddTrack);\n            remoteTracks.on('removetrack', handleRemoveTrack);\n            this.addWebVttScript_();\n            const updateDisplay = () => this.trigger('texttrackchange');\n            const textTracksChanges = () => {\n                updateDisplay();\n                for (let i = 0; i < tracks.length; i++) {\n                    const track = tracks[i];\n                    track.removeEventListener('cuechange', updateDisplay);\n                    if (track.mode === 'showing') {\n                        track.addEventListener('cuechange', updateDisplay);\n                    }\n                }\n            };\n            textTracksChanges();\n            tracks.addEventListener('change', textTracksChanges);\n            tracks.addEventListener('addtrack', textTracksChanges);\n            tracks.addEventListener('removetrack', textTracksChanges);\n            this.on('dispose', function () {\n                remoteTracks.off('addtrack', handleAddTrack);\n                remoteTracks.off('removetrack', handleRemoveTrack);\n                tracks.removeEventListener('change', textTracksChanges);\n                tracks.removeEventListener('addtrack', textTracksChanges);\n                tracks.removeEventListener('removetrack', textTracksChanges);\n                for (let i = 0; i < tracks.length; i++) {\n                    const track = tracks[i];\n                    track.removeEventListener('cuechange', updateDisplay);\n                }\n            });\n        }\n        addTextTrack(kind, label, language) {\n            if (!kind) {\n                throw new Error('TextTrack kind is required but was not provided');\n            }\n            return createTrackHelper(this, kind, label, language);\n        }\n        createRemoteTextTrack(options) {\n            const track = mergeOptions(options, { tech: this });\n            return new TRACK_TYPES.REMOTE.remoteTextEl.TrackClass(track);\n        }\n        addRemoteTextTrack(options = {}, manualCleanup) {\n            const htmlTrackElement = this.createRemoteTextTrack(options);\n            if (manualCleanup !== true && manualCleanup !== false) {\n                log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n                manualCleanup = true;\n            }\n            this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n            this.remoteTextTracks().addTrack(htmlTrackElement.track);\n            if (manualCleanup !== true) {\n                this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n            }\n            return htmlTrackElement;\n        }\n        removeRemoteTextTrack(track) {\n            const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n            this.remoteTextTrackEls().removeTrackElement_(trackElement);\n            this.remoteTextTracks().removeTrack(track);\n            this.autoRemoteTextTracks_.removeTrack(track);\n        }\n        getVideoPlaybackQuality() {\n            return {};\n        }\n        requestPictureInPicture() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                return PromiseClass.reject();\n            }\n        }\n        disablePictureInPicture() {\n            return true;\n        }\n        setDisablePictureInPicture() {\n        }\n        setPoster() {\n        }\n        playsinline() {\n        }\n        setPlaysinline() {\n        }\n        overrideNativeAudioTracks() {\n        }\n        overrideNativeVideoTracks() {\n        }\n        canPlayType() {\n            return '';\n        }\n        static canPlayType() {\n            return '';\n        }\n        static canPlaySource(srcObj, options) {\n            return Tech.canPlayType(srcObj.type);\n        }\n        static isTech(component) {\n            return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n        }\n        static registerTech(name, tech) {\n            if (!Tech.techs_) {\n                Tech.techs_ = {};\n            }\n            if (!Tech.isTech(tech)) {\n                throw new Error(`Tech ${ name } must be a Tech`);\n            }\n            if (!Tech.canPlayType) {\n                throw new Error('Techs must have a static canPlayType method on them');\n            }\n            if (!Tech.canPlaySource) {\n                throw new Error('Techs must have a static canPlaySource method on them');\n            }\n            name = stringCases.toTitleCase(name);\n            Tech.techs_[name] = tech;\n            Tech.techs_[stringCases.toLowerCase(name)] = tech;\n            if (name !== 'Tech') {\n                Tech.defaultTechOrder_.push(name);\n            }\n            return tech;\n        }\n        static getTech(name) {\n            if (!name) {\n                return;\n            }\n            if (Tech.techs_ && Tech.techs_[name]) {\n                return Tech.techs_[name];\n            }\n            name = stringCases.toTitleCase(name);\n            if (window && window.videojs && window.videojs[name]) {\n                log.warn(`The ${ name } tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n                return window.videojs[name];\n            }\n        }\n    }\n    TRACK_TYPES.ALL.names.forEach(function (name) {\n        const props = TRACK_TYPES.ALL[name];\n        Tech.prototype[props.getterName] = function () {\n            this[props.privateName] = this[props.privateName] || new props.ListClass();\n            return this[props.privateName];\n        };\n    });\n    Tech.prototype.featuresVolumeControl = true;\n    Tech.prototype.featuresMuteControl = true;\n    Tech.prototype.featuresFullscreenResize = false;\n    Tech.prototype.featuresPlaybackRate = false;\n    Tech.prototype.featuresProgressEvents = false;\n    Tech.prototype.featuresSourceset = false;\n    Tech.prototype.featuresTimeupdateEvents = false;\n    Tech.prototype.featuresNativeTextTracks = false;\n    Tech.withSourceHandlers = function (_Tech) {\n        _Tech.registerSourceHandler = function (handler, index) {\n            let handlers = _Tech.sourceHandlers;\n            if (!handlers) {\n                handlers = _Tech.sourceHandlers = [];\n            }\n            if (index === undefined) {\n                index = handlers.length;\n            }\n            handlers.splice(index, 0, handler);\n        };\n        _Tech.canPlayType = function (type) {\n            const handlers = _Tech.sourceHandlers || [];\n            let can;\n            for (let i = 0; i < handlers.length; i++) {\n                can = handlers[i].canPlayType(type);\n                if (can) {\n                    return can;\n                }\n            }\n            return '';\n        };\n        _Tech.selectSourceHandler = function (source, options) {\n            const handlers = _Tech.sourceHandlers || [];\n            let can;\n            for (let i = 0; i < handlers.length; i++) {\n                can = handlers[i].canHandleSource(source, options);\n                if (can) {\n                    return handlers[i];\n                }\n            }\n            return null;\n        };\n        _Tech.canPlaySource = function (srcObj, options) {\n            const sh = _Tech.selectSourceHandler(srcObj, options);\n            if (sh) {\n                return sh.canHandleSource(srcObj, options);\n            }\n            return '';\n        };\n        const deferrable = [\n            'seekable',\n            'seeking',\n            'duration'\n        ];\n        deferrable.forEach(function (fnName) {\n            const originalFn = this[fnName];\n            if (typeof originalFn !== 'function') {\n                return;\n            }\n            this[fnName] = function () {\n                if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n                    return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n                }\n                return originalFn.apply(this, arguments);\n            };\n        }, _Tech.prototype);\n        _Tech.prototype.setSource = function (source) {\n            let sh = _Tech.selectSourceHandler(source, this.options_);\n            if (!sh) {\n                if (_Tech.nativeSourceHandler) {\n                    sh = _Tech.nativeSourceHandler;\n                } else {\n                    log.error('No source handler found for the current source.');\n                }\n            }\n            this.disposeSourceHandler();\n            this.off('dispose', this.disposeSourceHandler);\n            if (sh !== _Tech.nativeSourceHandler) {\n                this.currentSource_ = source;\n            }\n            this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n            this.one('dispose', this.disposeSourceHandler);\n        };\n        _Tech.prototype.disposeSourceHandler = function () {\n            if (this.currentSource_) {\n                this.clearTracks([\n                    'audio',\n                    'video'\n                ]);\n                this.currentSource_ = null;\n            }\n            this.cleanupAutoTextTracks();\n            if (this.sourceHandler_) {\n                if (this.sourceHandler_.dispose) {\n                    this.sourceHandler_.dispose();\n                }\n                this.sourceHandler_ = null;\n            }\n        };\n    };\n    Component.registerComponent('Tech', Tech);\n    Tech.registerTech('Tech', Tech);\n    Tech.defaultTechOrder_ = [];\n    return Tech;\n});"]}