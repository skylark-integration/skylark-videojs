{"version":3,"sources":["tracks/text-track-settings.js"],"names":["define","Component","ModalDialog","Dom","Fn","Obj","log","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","backgroundColor","selector","id","label","options","backgroundOpacity","color","edgeStyle","fontFamily","fontPercent","default","parser","v","Number","textOpacity","windowColor","windowOpacity","parseOptionValue","value","TextTrackSettings","[object Object]","player","temporary","super","this","updateDisplay","bind","fill","hasBeenOpened_","hasBeenFilled_","endDialog","createEl","className","textContent","localize","el","appendChild","setDefaults","undefined","persistTextTrackSettings","options_","playerOptions","on","$","saveSettings","close","each","config","restoreSettings","dispose","key","legendId","type","replace","id_","selectLabelledbyIds","join","trim","concat","map","o","optionId","createElSelect_","innerHTML","createElFgColor_","createElBgColor_","createElWinColor_","defaultsDescription","createElColors_","createElFont_","createElControls_","buildCSSClass","reduce","accum","selectedIndex","values","i","length","setSelectedOption","index","hasOwnProperty","JSON","parse","window","localStorage","getItem","err","warn","setValues","getValues","Object","keys","setItem","stringify","removeItem","ttDisplay","player_","getChild","previouslyActiveEl_","cb","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","focus","registerComponent"],"mappings":";;;;;;;AAAAA,QACI,eACA,kBACA,eACA,cACA,eACA,gBACD,SAAUC,EAAWC,EAAaC,EAAKC,EAAIC,EAAKC,GAC/C,aACA,MAAMC,EAAoB,0BACpBC,GACF,OACA,SAEEC,GACF,OACA,QAEEC,GACF,OACA,QAEEC,GACF,OACA,SAEEC,GACF,OACA,WAEEC,GACF,OACA,OAEEC,GACF,OACA,SAEEC,GACF,OACA,UAEEC,GACF,IACA,UAEEC,GACF,MACA,oBAEEC,GACF,IACA,eAEEC,GACFC,iBACIC,SAAU,yBACVC,GAAI,+BACJC,MAAO,QACPC,SACIhB,EACAM,EACAD,EACAF,EACAF,EACAM,EACAH,EACAF,IAGRe,mBACIJ,SAAU,2BACVC,GAAI,iCACJC,MAAO,eACPC,SACIR,EACAC,EACAC,IAGRQ,OACIL,SAAU,yBACVC,GAAI,+BACJC,MAAO,QACPC,SACIV,EACAN,EACAK,EACAF,EACAF,EACAM,EACAH,EACAF,IAGRiB,WACIN,SAAU,2BACVC,GAAI,KACJC,MAAO,kBACPC,UAEQ,OACA,SAGA,SACA,WAGA,YACA,cAGA,UACA,YAGA,aACA,gBAIZI,YACIP,SAAU,4BACVC,GAAI,0BACJC,MAAO,cACPC,UAEQ,wBACA,4BAGA,qBACA,yBAGA,oBACA,uBAGA,iBACA,oBAGA,SACA,WAGA,SACA,WAGA,aACA,gBAIZK,aACIR,SAAU,6BACVC,GAAI,wBACJC,MAAO,YACPC,UAEQ,OACA,QAGA,OACA,QAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGRM,QAAS,EACTC,OAAQC,GAAW,SAANA,EAAe,KAAOC,OAAOD,IAE9CE,aACIb,SAAU,6BACVC,GAAI,iCACJC,MAAO,eACPC,SACIR,EACAC,IAGRkB,aACId,SAAU,6BACVC,GAAI,2BACJC,MAAO,SAEXa,eACIf,SAAU,+BACVC,GAAI,6BACJC,MAAO,eACPC,SACIN,EACAD,EACAD,KAKZ,SAASqB,EAAiBC,EAAOP,GAI7B,GAHIA,IACAO,EAAQP,EAAOO,IAEfA,GAAmB,S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","file":"../../tracks/text-track-settings.js","sourcesContent":["define([\n    '../component',\n    '../modal-dialog',\n    '../utils/dom',\n    '../utils/fn',\n    '../utils/obj',\n    '../utils/log'\n], function (Component, ModalDialog, Dom, Fn, Obj, log) {\n    'use strict';\n    const LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n    const COLOR_BLACK = [\n        '#000',\n        'Black'\n    ];\n    const COLOR_BLUE = [\n        '#00F',\n        'Blue'\n    ];\n    const COLOR_CYAN = [\n        '#0FF',\n        'Cyan'\n    ];\n    const COLOR_GREEN = [\n        '#0F0',\n        'Green'\n    ];\n    const COLOR_MAGENTA = [\n        '#F0F',\n        'Magenta'\n    ];\n    const COLOR_RED = [\n        '#F00',\n        'Red'\n    ];\n    const COLOR_WHITE = [\n        '#FFF',\n        'White'\n    ];\n    const COLOR_YELLOW = [\n        '#FF0',\n        'Yellow'\n    ];\n    const OPACITY_OPAQUE = [\n        '1',\n        'Opaque'\n    ];\n    const OPACITY_SEMI = [\n        '0.5',\n        'Semi-Transparent'\n    ];\n    const OPACITY_TRANS = [\n        '0',\n        'Transparent'\n    ];\n    const selectConfigs = {\n        backgroundColor: {\n            selector: '.vjs-bg-color > select',\n            id: 'captions-background-color-%s',\n            label: 'Color',\n            options: [\n                COLOR_BLACK,\n                COLOR_WHITE,\n                COLOR_RED,\n                COLOR_GREEN,\n                COLOR_BLUE,\n                COLOR_YELLOW,\n                COLOR_MAGENTA,\n                COLOR_CYAN\n            ]\n        },\n        backgroundOpacity: {\n            selector: '.vjs-bg-opacity > select',\n            id: 'captions-background-opacity-%s',\n            label: 'Transparency',\n            options: [\n                OPACITY_OPAQUE,\n                OPACITY_SEMI,\n                OPACITY_TRANS\n            ]\n        },\n        color: {\n            selector: '.vjs-fg-color > select',\n            id: 'captions-foreground-color-%s',\n            label: 'Color',\n            options: [\n                COLOR_WHITE,\n                COLOR_BLACK,\n                COLOR_RED,\n                COLOR_GREEN,\n                COLOR_BLUE,\n                COLOR_YELLOW,\n                COLOR_MAGENTA,\n                COLOR_CYAN\n            ]\n        },\n        edgeStyle: {\n            selector: '.vjs-edge-style > select',\n            id: '%s',\n            label: 'Text Edge Style',\n            options: [\n                [\n                    'none',\n                    'None'\n                ],\n                [\n                    'raised',\n                    'Raised'\n                ],\n                [\n                    'depressed',\n                    'Depressed'\n                ],\n                [\n                    'uniform',\n                    'Uniform'\n                ],\n                [\n                    'dropshadow',\n                    'Dropshadow'\n                ]\n            ]\n        },\n        fontFamily: {\n            selector: '.vjs-font-family > select',\n            id: 'captions-font-family-%s',\n            label: 'Font Family',\n            options: [\n                [\n                    'proportionalSansSerif',\n                    'Proportional Sans-Serif'\n                ],\n                [\n                    'monospaceSansSerif',\n                    'Monospace Sans-Serif'\n                ],\n                [\n                    'proportionalSerif',\n                    'Proportional Serif'\n                ],\n                [\n                    'monospaceSerif',\n                    'Monospace Serif'\n                ],\n                [\n                    'casual',\n                    'Casual'\n                ],\n                [\n                    'script',\n                    'Script'\n                ],\n                [\n                    'small-caps',\n                    'Small Caps'\n                ]\n            ]\n        },\n        fontPercent: {\n            selector: '.vjs-font-percent > select',\n            id: 'captions-font-size-%s',\n            label: 'Font Size',\n            options: [\n                [\n                    '0.50',\n                    '50%'\n                ],\n                [\n                    '0.75',\n                    '75%'\n                ],\n                [\n                    '1.00',\n                    '100%'\n                ],\n                [\n                    '1.25',\n                    '125%'\n                ],\n                [\n                    '1.50',\n                    '150%'\n                ],\n                [\n                    '1.75',\n                    '175%'\n                ],\n                [\n                    '2.00',\n                    '200%'\n                ],\n                [\n                    '3.00',\n                    '300%'\n                ],\n                [\n                    '4.00',\n                    '400%'\n                ]\n            ],\n            default: 2,\n            parser: v => v === '1.00' ? null : Number(v)\n        },\n        textOpacity: {\n            selector: '.vjs-text-opacity > select',\n            id: 'captions-foreground-opacity-%s',\n            label: 'Transparency',\n            options: [\n                OPACITY_OPAQUE,\n                OPACITY_SEMI\n            ]\n        },\n        windowColor: {\n            selector: '.vjs-window-color > select',\n            id: 'captions-window-color-%s',\n            label: 'Color'\n        },\n        windowOpacity: {\n            selector: '.vjs-window-opacity > select',\n            id: 'captions-window-opacity-%s',\n            label: 'Transparency',\n            options: [\n                OPACITY_TRANS,\n                OPACITY_SEMI,\n                OPACITY_OPAQUE\n            ]\n        }\n    };\n    selectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n    function parseOptionValue(value, parser) {\n        if (parser) {\n            value = parser(value);\n        }\n        if (value && value !== 'none') {\n            return value;\n        }\n    }\n    function getSelectedOptionValue(el, parser) {\n        const value = el.options[el.options.selectedIndex].value;\n        return parseOptionValue(value, parser);\n    }\n    function setSelectedOption(el, value, parser) {\n        if (!value) {\n            return;\n        }\n        for (let i = 0; i < el.options.length; i++) {\n            if (parseOptionValue(el.options[i].value, parser) === value) {\n                el.selectedIndex = i;\n                break;\n            }\n        }\n    }\n    class TextTrackSettings extends ModalDialog {\n        constructor(player, options) {\n            options.temporary = false;\n            super(player, options);\n            this.updateDisplay = Fn.bind(this, this.updateDisplay);\n            this.fill();\n            this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n            this.endDialog = Dom.createEl('p', {\n                className: 'vjs-control-text',\n                textContent: this.localize('End of dialog window.')\n            });\n            this.el().appendChild(this.endDialog);\n            this.setDefaults();\n            if (options.persistTextTrackSettings === undefined) {\n                this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n            }\n            this.on(this.$('.vjs-done-button'), 'click', () => {\n                this.saveSettings();\n                this.close();\n            });\n            this.on(this.$('.vjs-default-button'), 'click', () => {\n                this.setDefaults();\n                this.updateDisplay();\n            });\n            Obj.each(selectConfigs, config => {\n                this.on(this.$(config.selector), 'change', this.updateDisplay);\n            });\n            if (this.options_.persistTextTrackSettings) {\n                this.restoreSettings();\n            }\n        }\n        dispose() {\n            this.endDialog = null;\n            super.dispose();\n        }\n        createElSelect_(key, legendId = '', type = 'label') {\n            const config = selectConfigs[key];\n            const id = config.id.replace('%s', this.id_);\n            const selectLabelledbyIds = [\n                legendId,\n                id\n            ].join(' ').trim();\n            return [\n                `<${ type } id=\"${ id }\" class=\"${ type === 'label' ? 'vjs-label' : '' }\">`,\n                this.localize(config.label),\n                `</${ type }>`,\n                `<select aria-labelledby=\"${ selectLabelledbyIds }\">`\n            ].concat(config.options.map(o => {\n                const optionId = id + '-' + o[1].replace(/\\W+/g, '');\n                return [\n                    `<option id=\"${ optionId }\" value=\"${ o[0] }\" `,\n                    `aria-labelledby=\"${ selectLabelledbyIds } ${ optionId }\">`,\n                    this.localize(o[1]),\n                    '</option>'\n                ].join('');\n            })).concat('</select>').join('');\n        }\n        createElFgColor_() {\n            const legendId = `captions-text-legend-${ this.id_ }`;\n            return [\n                '<fieldset class=\"vjs-fg-color vjs-track-setting\">',\n                `<legend id=\"${ legendId }\">`,\n                this.localize('Text'),\n                '</legend>',\n                this.createElSelect_('color', legendId),\n                '<span class=\"vjs-text-opacity vjs-opacity\">',\n                this.createElSelect_('textOpacity', legendId),\n                '</span>',\n                '</fieldset>'\n            ].join('');\n        }\n        createElBgColor_() {\n            const legendId = `captions-background-${ this.id_ }`;\n            return [\n                '<fieldset class=\"vjs-bg-color vjs-track-setting\">',\n                `<legend id=\"${ legendId }\">`,\n                this.localize('Background'),\n                '</legend>',\n                this.createElSelect_('backgroundColor', legendId),\n                '<span class=\"vjs-bg-opacity vjs-opacity\">',\n                this.createElSelect_('backgroundOpacity', legendId),\n                '</span>',\n                '</fieldset>'\n            ].join('');\n        }\n        createElWinColor_() {\n            const legendId = `captions-window-${ this.id_ }`;\n            return [\n                '<fieldset class=\"vjs-window-color vjs-track-setting\">',\n                `<legend id=\"${ legendId }\">`,\n                this.localize('Window'),\n                '</legend>',\n                this.createElSelect_('windowColor', legendId),\n                '<span class=\"vjs-window-opacity vjs-opacity\">',\n                this.createElSelect_('windowOpacity', legendId),\n                '</span>',\n                '</fieldset>'\n            ].join('');\n        }\n        createElColors_() {\n            return Dom.createEl('div', {\n                className: 'vjs-track-settings-colors',\n                innerHTML: [\n                    this.createElFgColor_(),\n                    this.createElBgColor_(),\n                    this.createElWinColor_()\n                ].join('')\n            });\n        }\n        createElFont_() {\n            return Dom.createEl('div', {\n                className: 'vjs-track-settings-font',\n                innerHTML: [\n                    '<fieldset class=\"vjs-font-percent vjs-track-setting\">',\n                    this.createElSelect_('fontPercent', '', 'legend'),\n                    '</fieldset>',\n                    '<fieldset class=\"vjs-edge-style vjs-track-setting\">',\n                    this.createElSelect_('edgeStyle', '', 'legend'),\n                    '</fieldset>',\n                    '<fieldset class=\"vjs-font-family vjs-track-setting\">',\n                    this.createElSelect_('fontFamily', '', 'legend'),\n                    '</fieldset>'\n                ].join('')\n            });\n        }\n        createElControls_() {\n            const defaultsDescription = this.localize('restore all settings to the default values');\n            return Dom.createEl('div', {\n                className: 'vjs-track-settings-controls',\n                innerHTML: [\n                    `<button type=\"button\" class=\"vjs-default-button\" title=\"${ defaultsDescription }\">`,\n                    this.localize('Reset'),\n                    `<span class=\"vjs-control-text\"> ${ defaultsDescription }</span>`,\n                    '</button>',\n                    `<button type=\"button\" class=\"vjs-done-button\">${ this.localize('Done') }</button>`\n                ].join('')\n            });\n        }\n        content() {\n            return [\n                this.createElColors_(),\n                this.createElFont_(),\n                this.createElControls_()\n            ];\n        }\n        label() {\n            return this.localize('Caption Settings Dialog');\n        }\n        description() {\n            return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n        }\n        buildCSSClass() {\n            return super.buildCSSClass() + ' vjs-text-track-settings';\n        }\n        getValues() {\n            return Obj.reduce(selectConfigs, (accum, config, key) => {\n                const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n                if (value !== undefined) {\n                    accum[key] = value;\n                }\n                return accum;\n            }, {});\n        }\n        setValues(values) {\n            Obj.each(selectConfigs, (config, key) => {\n                setSelectedOption(this.$(config.selector), values[key], config.parser);\n            });\n        }\n        setDefaults() {\n            Obj.each(selectConfigs, config => {\n                const index = config.hasOwnProperty('default') ? config.default : 0;\n                this.$(config.selector).selectedIndex = index;\n            });\n        }\n        restoreSettings() {\n            let values;\n            try {\n                values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY));\n            } catch (err) {\n                log.warn(err);\n            }\n            if (values) {\n                this.setValues(values);\n            }\n        }\n        saveSettings() {\n            if (!this.options_.persistTextTrackSettings) {\n                return;\n            }\n            const values = this.getValues();\n            try {\n                if (Object.keys(values).length) {\n                    window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n                } else {\n                    window.localStorage.removeItem(LOCAL_STORAGE_KEY);\n                }\n            } catch (err) {\n                log.warn(err);\n            }\n        }\n        updateDisplay() {\n            const ttDisplay = this.player_.getChild('textTrackDisplay');\n            if (ttDisplay) {\n                ttDisplay.updateDisplay();\n            }\n        }\n        conditionalBlur_() {\n            this.previouslyActiveEl_ = null;\n            const cb = this.player_.controlBar;\n            const subsCapsBtn = cb && cb.subsCapsButton;\n            const ccBtn = cb && cb.captionsButton;\n            if (subsCapsBtn) {\n                subsCapsBtn.focus();\n            } else if (ccBtn) {\n                ccBtn.focus();\n            }\n        }\n    }\n    Component.registerComponent('TextTrackSettings', TextTrackSettings);\n    return TextTrackSettings;\n});"]}