{"version":3,"sources":["tracks/audio-track-list.js"],"names":["define","TrackList","disableOthers","list","track","i","length","Object","keys","id","enabled","[object Object]","tracks","super","this","changing_","addTrack","addEventListener","enabledChange_","trigger","rtrack","removeTrack","removeEventListener"],"mappings":";;;;;;;AAAAA,QACI,gBACD,SAAUC,GACT,aACA,MAAMC,EAAgB,SAAUC,EAAMC,GAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IACxBE,OAAOC,KAAKL,EAAKE,IAAIC,QAAUF,EAAMK,KAAON,EAAKE,GAAGI,KAGzDN,EAAKE,GAAGK,SAAU,IAyC1B,qBAtC6BT,EACzBU,YAAYC,MACR,IAAK,IAAIP,EAAIO,EAAON,OAAS,EAAGD,GAAK,EAAGA,IACpC,GAAIO,EAAOP,GAAGK,QAAS,CACnBR,EAAcU,EAAQA,EAAOP,IAC7B,MAGRQ,MAAMD,GACNE,KAAKC,WAAY,EAErBJ,SAASP,GACDA,EAAMM,SACNR,EAAcY,KAAMV,GAExBS,MAAMG,SAASZ,GACVA,EAAMa,mBAGXb,EAAMc,eAAiB,MACfJ,KAAKC,YAGTD,KAAKC,WAAY,EACjBb,EAAcY,KAAMV,GACpBU,KAAKC,WAAY,EACjBD,KAAKK,QAAQ,aAEjBf,EAAMa,iBAAiB,gBAAiBb,EAAMc,iBAElDP,YAAYS,GACRP,MAAMQ,YAAYD,GACdA,EAAOE,qBAAuBF,EAAOF,iBACrCE,EAAOE,oBAAoB,gBAAiBF,EAAOF,gBACnDE,EAAOF,eAAiB","file":"../../tracks/audio-track-list.js","sourcesContent":["define([\n    './track-list'\n], function (TrackList) {\n    'use strict';\n    const disableOthers = function (list, track) {\n        for (let i = 0; i < list.length; i++) {\n            if (!Object.keys(list[i]).length || track.id === list[i].id) {\n                continue;\n            }\n            list[i].enabled = false;\n        }\n    };\n    class AudioTrackList extends TrackList {\n        constructor(tracks = []) {\n            for (let i = tracks.length - 1; i >= 0; i--) {\n                if (tracks[i].enabled) {\n                    disableOthers(tracks, tracks[i]);\n                    break;\n                }\n            }\n            super(tracks);\n            this.changing_ = false;\n        }\n        addTrack(track) {\n            if (track.enabled) {\n                disableOthers(this, track);\n            }\n            super.addTrack(track);\n            if (!track.addEventListener) {\n                return;\n            }\n            track.enabledChange_ = () => {\n                if (this.changing_) {\n                    return;\n                }\n                this.changing_ = true;\n                disableOthers(this, track);\n                this.changing_ = false;\n                this.trigger('change');\n            };\n            track.addEventListener('enabledchange', track.enabledChange_);\n        }\n        removeTrack(rtrack) {\n            super.removeTrack(rtrack);\n            if (rtrack.removeEventListener && rtrack.enabledChange_) {\n                rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n                rtrack.enabledChange_ = null;\n            }\n        }\n    }\n    return AudioTrackList;\n});"]}