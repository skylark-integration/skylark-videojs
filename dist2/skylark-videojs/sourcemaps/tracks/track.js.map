{"version":3,"sources":["tracks/track.js"],"names":["define","Guid","EventTarget","[object Object]","options","super","trackProps","id","newGUID","kind","language","label","key","Object","defineProperty","this","get","newLabel","trigger"],"mappings":";;;;;;;AAAAA,QACI,gBACA,mBACD,SAAUC,EAAMC,GACf,aAgCA,qBA/BoBA,EAChBC,YAAYC,MACRC,QACA,MAAMC,GACFC,GAAIH,EAAQG,IAAM,aAAeN,EAAKO,UACtCC,KAAML,EAAQK,MAAQ,GACtBC,SAAUN,EAAQM,UAAY,IAElC,IAAIC,EAAQP,EAAQO,OAAS,GAC7B,IAAK,MAAMC,KAAON,EACdO,OAAOC,eAAeC,KAAMH,GACxBI,IAAG,IACQV,EAAWM,GAEtBT,UAIRU,OAAOC,eAAeC,KAAM,SACxBC,IAAG,IACQL,EAEXR,IAAIc,GACIA,IAAaN,IACbA,EAAQM,EACRF,KAAKG,QAAQ","file":"../../tracks/track.js","sourcesContent":["define([\n    '../utils/guid',\n    '../event-target'\n], function (Guid, EventTarget) {\n    'use strict';\n    class Track extends EventTarget {\n        constructor(options = {}) {\n            super();\n            const trackProps = {\n                id: options.id || 'vjs_track_' + Guid.newGUID(),\n                kind: options.kind || '',\n                language: options.language || ''\n            };\n            let label = options.label || '';\n            for (const key in trackProps) {\n                Object.defineProperty(this, key, {\n                    get() {\n                        return trackProps[key];\n                    },\n                    set() {\n                    }\n                });\n            }\n            Object.defineProperty(this, 'label', {\n                get() {\n                    return label;\n                },\n                set(newLabel) {\n                    if (newLabel !== label) {\n                        label = newLabel;\n                        this.trigger('labelchange');\n                    }\n                }\n            });\n        }\n    }\n    return Track;\n});"]}