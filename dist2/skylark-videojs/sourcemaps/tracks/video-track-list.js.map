{"version":3,"sources":["tracks/video-track-list.js"],"names":["define","TrackList","disableOthers","list","track","i","length","Object","keys","id","selected","[object Object]","tracks","super","this","changing_","defineProperty","addTrack","addEventListener","selectedChange_","trigger","rtrack","removeTrack","removeEventListener"],"mappings":";;;;;;;AAAAA,QAAQ,gBAAiB,SAAUC,GAC/B,aACA,MAAMC,EAAgB,SAAUC,EAAMC,GAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IACxBE,OAAOC,KAAKL,EAAKE,IAAIC,QAAUF,EAAMK,KAAON,EAAKE,GAAGI,KAGzDN,EAAKE,GAAGK,UAAW,IAqD3B,qBAlD6BT,EACzBU,YAAYC,MACR,IAAK,IAAIP,EAAIO,EAAON,OAAS,EAAGD,GAAK,EAAGA,IACpC,GAAIO,EAAOP,GAAGK,SAAU,CACpBR,EAAcU,EAAQA,EAAOP,IAC7B,MAGRQ,MAAMD,GACNE,KAAKC,WAAY,EACjBR,OAAOS,eAAeF,KAAM,iBACxBH,MACI,IAAK,IAAIN,EAAI,EAAGA,EAAIS,KAAKR,OAAQD,IAC7B,GAAIS,KAAKT,GAAGK,SACR,OAAOL,EAGf,OAAQ,GAEZM,UAIRA,SAASP,GACDA,EAAMM,UACNR,EAAcY,KAAMV,GAExBS,MAAMI,SAASb,GACVA,EAAMc,mBAGXd,EAAMe,gBAAkB,MAChBL,KAAKC,YAGTD,KAAKC,WAAY,EACjBb,EAAcY,KAAMV,GACpBU,KAAKC,WAAY,EACjBD,KAAKM,QAAQ,aAEjBhB,EAAMc,iBAAiB,iBAAkBd,EAAMe,kBAEnDR,YAAYU,GACRR,MAAMS,YAAYD,GACdA,EAAOE,qBAAuBF,EAAOF,kBACrCE,EAAOE,oBAAoB,iBAAkBF,EAAOF,iBACpDE,EAAOF,gBAAkB","file":"../../tracks/video-track-list.js","sourcesContent":["define(['./track-list'], function (TrackList) {\n    'use strict';\n    const disableOthers = function (list, track) {\n        for (let i = 0; i < list.length; i++) {\n            if (!Object.keys(list[i]).length || track.id === list[i].id) {\n                continue;\n            }\n            list[i].selected = false;\n        }\n    };\n    class VideoTrackList extends TrackList {\n        constructor(tracks = []) {\n            for (let i = tracks.length - 1; i >= 0; i--) {\n                if (tracks[i].selected) {\n                    disableOthers(tracks, tracks[i]);\n                    break;\n                }\n            }\n            super(tracks);\n            this.changing_ = false;\n            Object.defineProperty(this, 'selectedIndex', {\n                get() {\n                    for (let i = 0; i < this.length; i++) {\n                        if (this[i].selected) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                },\n                set() {\n                }\n            });\n        }\n        addTrack(track) {\n            if (track.selected) {\n                disableOthers(this, track);\n            }\n            super.addTrack(track);\n            if (!track.addEventListener) {\n                return;\n            }\n            track.selectedChange_ = () => {\n                if (this.changing_) {\n                    return;\n                }\n                this.changing_ = true;\n                disableOthers(this, track);\n                this.changing_ = false;\n                this.trigger('change');\n            };\n            track.addEventListener('selectedchange', track.selectedChange_);\n        }\n        removeTrack(rtrack) {\n            super.removeTrack(rtrack);\n            if (rtrack.removeEventListener && rtrack.selectedChange_) {\n                rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n                rtrack.selectedChange_ = null;\n            }\n        }\n    }\n    return VideoTrackList;\n});"]}