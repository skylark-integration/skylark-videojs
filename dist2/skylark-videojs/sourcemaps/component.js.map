{"version":3,"sources":["component.js"],"names":["define","evented","stateful","Dom","DomData","Fn","Guid","stringCases","mergeOptions","computedStyle","Map","Set","Component","[object Object]","player","options","ready","this","play","player_","isDisposed_","parentComponent_","options_","id_","id","el","newGUID","name_","name","el_","createEl","eventBusKey","handleLanguagechange","bind","on","constructor","defaultState","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","length","trigger","type","bubbles","i","dispose","parentNode","removeChild","has","delete","Boolean","obj","tagName","properties","attributes","string","tokens","defaultValue","code","language","languages","primaryCode","split","primaryLang","localizedString","replace","match","index","value","ret","contentEl_","names","reduce","acc","n","concat","currentChild","getChild","child","component","componentName","toTitleCase","componentClassName","componentClass","ComponentClass","getComponent","Error","splice","toLowerCase","refNode","isEl","contentEl","insertBefore","childFound","compEl","children","parentOptions","handleAdd","opts","undefined","playerOptions","newChild","addChild","workingChildren","Tech","Array","isArray","Object","keys","filter","some","wchild","map","c","isTech","forEach","fn","sync","isReady_","call","setTimeout","push","readyQueue","selector","context","$","$$","classToCheck","hasClass","classToAdd","addClass","classToRemove","removeClass","classToToggle","predicate","toggleClass","attribute","getAttribute","setAttribute","removeAttribute","num","skipListeners","dimension","width","height","widthOrHeight","indexOf","style","val","pxIndex","parseInt","slice","computedWidthOrHeight","parseFloat","isNaN","rule","currentDimension","focus","blur","event","stopPropagation","handleKeyDown","touchStart","firstTouch","couldBeTap","touches","pageX","pageY","window","performance","now","xdiff","ydiff","Math","sqrt","noTap","preventDefault","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeout","timeoutId","clearTimersOnDispose_","add","clearTimeout","interval","intervalId","supportsRaf_","requestAnimationFrame","set","cancelAnimationFrame","get","one","idName","cancelName","key","ComponentToRegister","isComp","prototype","isPrototypeOf","reason","components_","Player","players","playerNames","pname","every","registerComponent"],"mappings":"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","file":"../component.js","sourcesContent":["define([\n    './mixins/evented',\n    './mixins/stateful',\n    './utils/dom',\n    './utils/dom-data',\n    './utils/fn',\n    './utils/guid',\n    './utils/string-cases',\n    './utils/merge-options',\n    './utils/computed-style',\n    './utils/map',\n    './utils/set'\n], function (evented, stateful, Dom, DomData, Fn, Guid, stringCases, mergeOptions, computedStyle, Map, Set) {\n    'use strict';\n    class Component {\n        constructor(player, options, ready) {\n            if (!player && this.play) {\n                this.player_ = player = this;\n            } else {\n                this.player_ = player;\n            }\n            this.isDisposed_ = false;\n            this.parentComponent_ = null;\n            this.options_ = mergeOptions({}, this.options_);\n            options = this.options_ = mergeOptions(this.options_, options);\n            this.id_ = options.id || options.el && options.el.id;\n            if (!this.id_) {\n                const id = player && player.id && player.id() || 'no_player';\n                this.id_ = `${ id }_component_${ Guid.newGUID() }`;\n            }\n            this.name_ = options.name || null;\n            if (options.el) {\n                this.el_ = options.el;\n            } else if (options.createEl !== false) {\n                this.el_ = this.createEl();\n            }\n            if (options.evented !== false) {\n                evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n                this.handleLanguagechange = this.handleLanguagechange.bind(this);\n                this.on(this.player_, 'languagechange', this.handleLanguagechange);\n            }\n            stateful(this, this.constructor.defaultState);\n            this.children_ = [];\n            this.childIndex_ = {};\n            this.childNameIndex_ = {};\n            this.setTimeoutIds_ = new Set();\n            this.setIntervalIds_ = new Set();\n            this.rafIds_ = new Set();\n            this.namedRafs_ = new Map();\n            this.clearingTimersOnDispose_ = false;\n            if (options.initChildren !== false) {\n                this.initChildren();\n            }\n            this.ready(ready);\n            if (options.reportTouchActivity !== false) {\n                this.enableTouchActivity();\n            }\n        }\n        dispose() {\n            if (this.isDisposed_) {\n                return;\n            }\n            if (this.readyQueue_) {\n                this.readyQueue_.length = 0;\n            }\n            this.trigger({\n                type: 'dispose',\n                bubbles: false\n            });\n            this.isDisposed_ = true;\n            if (this.children_) {\n                for (let i = this.children_.length - 1; i >= 0; i--) {\n                    if (this.children_[i].dispose) {\n                        this.children_[i].dispose();\n                    }\n                }\n            }\n            this.children_ = null;\n            this.childIndex_ = null;\n            this.childNameIndex_ = null;\n            this.parentComponent_ = null;\n            if (this.el_) {\n                if (this.el_.parentNode) {\n                    this.el_.parentNode.removeChild(this.el_);\n                }\n                if (DomData.has(this.el_)) {\n                    DomData.delete(this.el_);\n                }\n                this.el_ = null;\n            }\n            this.player_ = null;\n        }\n        isDisposed() {\n            return Boolean(this.isDisposed_);\n        }\n        player() {\n            return this.player_;\n        }\n        options(obj) {\n            if (!obj) {\n                return this.options_;\n            }\n            this.options_ = mergeOptions(this.options_, obj);\n            return this.options_;\n        }\n        el() {\n            return this.el_;\n        }\n        createEl(tagName, properties, attributes) {\n            return Dom.createEl(tagName, properties, attributes);\n        }\n        localize(string, tokens, defaultValue = string) {\n            const code = this.player_.language && this.player_.language();\n            const languages = this.player_.languages && this.player_.languages();\n            const language = languages && languages[code];\n            const primaryCode = code && code.split('-')[0];\n            const primaryLang = languages && languages[primaryCode];\n            let localizedString = defaultValue;\n            if (language && language[string]) {\n                localizedString = language[string];\n            } else if (primaryLang && primaryLang[string]) {\n                localizedString = primaryLang[string];\n            }\n            if (tokens) {\n                localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n                    const value = tokens[index - 1];\n                    let ret = value;\n                    if (typeof value === 'undefined') {\n                        ret = match;\n                    }\n                    return ret;\n                });\n            }\n            return localizedString;\n        }\n        handleLanguagechange() {\n        }\n        contentEl() {\n            return this.contentEl_ || this.el_;\n        }\n        id() {\n            return this.id_;\n        }\n        name() {\n            return this.name_;\n        }\n        children() {\n            return this.children_;\n        }\n        getChildById(id) {\n            return this.childIndex_[id];\n        }\n        getChild(name) {\n            if (!name) {\n                return;\n            }\n            return this.childNameIndex_[name];\n        }\n        getDescendant(...names) {\n            names = names.reduce((acc, n) => acc.concat(n), []);\n            let currentChild = this;\n            for (let i = 0; i < names.length; i++) {\n                currentChild = currentChild.getChild(names[i]);\n                if (!currentChild || !currentChild.getChild) {\n                    return;\n                }\n            }\n            return currentChild;\n        }\n        addChild(child, options = {}, index = this.children_.length) {\n            let component;\n            let componentName;\n            if (typeof child === 'string') {\n                componentName = stringCases.toTitleCase(child);\n                const componentClassName = options.componentClass || componentName;\n                options.name = componentName;\n                const ComponentClass = Component.getComponent(componentClassName);\n                if (!ComponentClass) {\n                    throw new Error(`Component ${ componentClassName } does not exist`);\n                }\n                if (typeof ComponentClass !== 'function') {\n                    return null;\n                }\n                component = new ComponentClass(this.player_ || this, options);\n            } else {\n                component = child;\n            }\n            if (component.parentComponent_) {\n                component.parentComponent_.removeChild(component);\n            }\n            this.children_.splice(index, 0, component);\n            component.parentComponent_ = this;\n            if (typeof component.id === 'function') {\n                this.childIndex_[component.id()] = component;\n            }\n            componentName = componentName || component.name && stringCases.toTitleCase(component.name());\n            if (componentName) {\n                this.childNameIndex_[componentName] = component;\n                this.childNameIndex_[stringCases.toLowerCase(componentName)] = component;\n            }\n            if (typeof component.el === 'function' && component.el()) {\n                let refNode = null;\n                if (this.children_[index + 1]) {\n                    if (this.children_[index + 1].el_) {\n                        refNode = this.children_[index + 1].el_;\n                    } else if (Dom.isEl(this.children_[index + 1])) {\n                        refNode = this.children_[index + 1];\n                    }\n                }\n                this.contentEl().insertBefore(component.el(), refNode);\n            }\n            return component;\n        }\n        removeChild(component) {\n            if (typeof component === 'string') {\n                component = this.getChild(component);\n            }\n            if (!component || !this.children_) {\n                return;\n            }\n            let childFound = false;\n            for (let i = this.children_.length - 1; i >= 0; i--) {\n                if (this.children_[i] === component) {\n                    childFound = true;\n                    this.children_.splice(i, 1);\n                    break;\n                }\n            }\n            if (!childFound) {\n                return;\n            }\n            component.parentComponent_ = null;\n            this.childIndex_[component.id()] = null;\n            this.childNameIndex_[stringCases.toTitleCase(component.name())] = null;\n            this.childNameIndex_[stringCases.toLowerCase(component.name())] = null;\n            const compEl = component.el();\n            if (compEl && compEl.parentNode === this.contentEl()) {\n                this.contentEl().removeChild(component.el());\n            }\n        }\n        initChildren() {\n            const children = this.options_.children;\n            if (children) {\n                const parentOptions = this.options_;\n                const handleAdd = child => {\n                    const name = child.name;\n                    let opts = child.opts;\n                    if (parentOptions[name] !== undefined) {\n                        opts = parentOptions[name];\n                    }\n                    if (opts === false) {\n                        return;\n                    }\n                    if (opts === true) {\n                        opts = {};\n                    }\n                    opts.playerOptions = this.options_.playerOptions;\n                    const newChild = this.addChild(name, opts);\n                    if (newChild) {\n                        this[name] = newChild;\n                    }\n                };\n                let workingChildren;\n                const Tech = Component.getComponent('Tech');\n                if (Array.isArray(children)) {\n                    workingChildren = children;\n                } else {\n                    workingChildren = Object.keys(children);\n                }\n                workingChildren.concat(Object.keys(this.options_).filter(function (child) {\n                    return !workingChildren.some(function (wchild) {\n                        if (typeof wchild === 'string') {\n                            return child === wchild;\n                        }\n                        return child === wchild.name;\n                    });\n                })).map(child => {\n                    let name;\n                    let opts;\n                    if (typeof child === 'string') {\n                        name = child;\n                        opts = children[name] || this.options_[name] || {};\n                    } else {\n                        name = child.name;\n                        opts = child;\n                    }\n                    return {\n                        name,\n                        opts\n                    };\n                }).filter(child => {\n                    const c = Component.getComponent(child.opts.componentClass || stringCases.toTitleCase(child.name));\n                    return c && !Tech.isTech(c);\n                }).forEach(handleAdd);\n            }\n        }\n        buildCSSClass() {\n            return '';\n        }\n        ready(fn, sync = false) {\n            if (!fn) {\n                return;\n            }\n            if (!this.isReady_) {\n                this.readyQueue_ = this.readyQueue_ || [];\n                this.readyQueue_.push(fn);\n                return;\n            }\n            if (sync) {\n                fn.call(this);\n            } else {\n                this.setTimeout(fn, 1);\n            }\n        }\n        triggerReady() {\n            this.isReady_ = true;\n            this.setTimeout(function () {\n                const readyQueue = this.readyQueue_;\n                this.readyQueue_ = [];\n                if (readyQueue && readyQueue.length > 0) {\n                    readyQueue.forEach(function (fn) {\n                        fn.call(this);\n                    }, this);\n                }\n                this.trigger('ready');\n            }, 1);\n        }\n        $(selector, context) {\n            return Dom.$(selector, context || this.contentEl());\n        }\n        $$(selector, context) {\n            return Dom.$$(selector, context || this.contentEl());\n        }\n        hasClass(classToCheck) {\n            return Dom.hasClass(this.el_, classToCheck);\n        }\n        addClass(classToAdd) {\n            Dom.addClass(this.el_, classToAdd);\n        }\n        removeClass(classToRemove) {\n            Dom.removeClass(this.el_, classToRemove);\n        }\n        toggleClass(classToToggle, predicate) {\n            Dom.toggleClass(this.el_, classToToggle, predicate);\n        }\n        show() {\n            this.removeClass('vjs-hidden');\n        }\n        hide() {\n            this.addClass('vjs-hidden');\n        }\n        lockShowing() {\n            this.addClass('vjs-lock-showing');\n        }\n        unlockShowing() {\n            this.removeClass('vjs-lock-showing');\n        }\n        getAttribute(attribute) {\n            return Dom.getAttribute(this.el_, attribute);\n        }\n        setAttribute(attribute, value) {\n            Dom.setAttribute(this.el_, attribute, value);\n        }\n        removeAttribute(attribute) {\n            Dom.removeAttribute(this.el_, attribute);\n        }\n        width(num, skipListeners) {\n            return this.dimension('width', num, skipListeners);\n        }\n        height(num, skipListeners) {\n            return this.dimension('height', num, skipListeners);\n        }\n        dimensions(width, height) {\n            this.width(width, true);\n            this.height(height);\n        }\n        dimension(widthOrHeight, num, skipListeners) {\n            if (num !== undefined) {\n                if (num === null || num !== num) {\n                    num = 0;\n                }\n                if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n                    this.el_.style[widthOrHeight] = num;\n                } else if (num === 'auto') {\n                    this.el_.style[widthOrHeight] = '';\n                } else {\n                    this.el_.style[widthOrHeight] = num + 'px';\n                }\n                if (!skipListeners) {\n                    this.trigger('componentresize');\n                }\n                return;\n            }\n            if (!this.el_) {\n                return 0;\n            }\n            const val = this.el_.style[widthOrHeight];\n            const pxIndex = val.indexOf('px');\n            if (pxIndex !== -1) {\n                return parseInt(val.slice(0, pxIndex), 10);\n            }\n            return parseInt(this.el_['offset' + stringCases.toTitleCase(widthOrHeight)], 10);\n        }\n        currentDimension(widthOrHeight) {\n            let computedWidthOrHeight = 0;\n            if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n                throw new Error('currentDimension only accepts width or height value');\n            }\n            computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n            computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n            if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n                const rule = `offset${ stringCases.toTitleCase(widthOrHeight) }`;\n                computedWidthOrHeight = this.el_[rule];\n            }\n            return computedWidthOrHeight;\n        }\n        currentDimensions() {\n            return {\n                width: this.currentDimension('width'),\n                height: this.currentDimension('height')\n            };\n        }\n        currentWidth() {\n            return this.currentDimension('width');\n        }\n        currentHeight() {\n            return this.currentDimension('height');\n        }\n        focus() {\n            this.el_.focus();\n        }\n        blur() {\n            this.el_.blur();\n        }\n        handleKeyDown(event) {\n            if (this.player_) {\n                event.stopPropagation();\n                this.player_.handleKeyDown(event);\n            }\n        }\n        handleKeyPress(event) {\n            this.handleKeyDown(event);\n        }\n        emitTapEvents() {\n            let touchStart = 0;\n            let firstTouch = null;\n            const tapMovementThreshold = 10;\n            const touchTimeThreshold = 200;\n            let couldBeTap;\n            this.on('touchstart', function (event) {\n                if (event.touches.length === 1) {\n                    firstTouch = {\n                        pageX: event.touches[0].pageX,\n                        pageY: event.touches[0].pageY\n                    };\n                    touchStart = window.performance.now();\n                    couldBeTap = true;\n                }\n            });\n            this.on('touchmove', function (event) {\n                if (event.touches.length > 1) {\n                    couldBeTap = false;\n                } else if (firstTouch) {\n                    const xdiff = event.touches[0].pageX - firstTouch.pageX;\n                    const ydiff = event.touches[0].pageY - firstTouch.pageY;\n                    const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n                    if (touchDistance > tapMovementThreshold) {\n                        couldBeTap = false;\n                    }\n                }\n            });\n            const noTap = function () {\n                couldBeTap = false;\n            };\n            this.on('touchleave', noTap);\n            this.on('touchcancel', noTap);\n            this.on('touchend', function (event) {\n                firstTouch = null;\n                if (couldBeTap === true) {\n                    const touchTime = window.performance.now() - touchStart;\n                    if (touchTime < touchTimeThreshold) {\n                        event.preventDefault();\n                        this.trigger('tap');\n                    }\n                }\n            });\n        }\n        enableTouchActivity() {\n            if (!this.player() || !this.player().reportUserActivity) {\n                return;\n            }\n            const report = Fn.bind(this.player(), this.player().reportUserActivity);\n            let touchHolding;\n            this.on('touchstart', function () {\n                report();\n                this.clearInterval(touchHolding);\n                touchHolding = this.setInterval(report, 250);\n            });\n            const touchEnd = function (event) {\n                report();\n                this.clearInterval(touchHolding);\n            };\n            this.on('touchmove', report);\n            this.on('touchend', touchEnd);\n            this.on('touchcancel', touchEnd);\n        }\n        setTimeout(fn, timeout) {\n            var timeoutId, disposeFn;\n            fn = Fn.bind(this, fn);\n            this.clearTimersOnDispose_();\n            timeoutId = window.setTimeout(() => {\n                if (this.setTimeoutIds_.has(timeoutId)) {\n                    this.setTimeoutIds_.delete(timeoutId);\n                }\n                fn();\n            }, timeout);\n            this.setTimeoutIds_.add(timeoutId);\n            return timeoutId;\n        }\n        clearTimeout(timeoutId) {\n            if (this.setTimeoutIds_.has(timeoutId)) {\n                this.setTimeoutIds_.delete(timeoutId);\n                window.clearTimeout(timeoutId);\n            }\n            return timeoutId;\n        }\n        setInterval(fn, interval) {\n            fn = Fn.bind(this, fn);\n            this.clearTimersOnDispose_();\n            const intervalId = window.setInterval(fn, interval);\n            this.setIntervalIds_.add(intervalId);\n            return intervalId;\n        }\n        clearInterval(intervalId) {\n            if (this.setIntervalIds_.has(intervalId)) {\n                this.setIntervalIds_.delete(intervalId);\n                window.clearInterval(intervalId);\n            }\n            return intervalId;\n        }\n        requestAnimationFrame(fn) {\n            if (!this.supportsRaf_) {\n                return this.setTimeout(fn, 1000 / 60);\n            }\n            this.clearTimersOnDispose_();\n            var id;\n            fn = Fn.bind(this, fn);\n            id = window.requestAnimationFrame(() => {\n                if (this.rafIds_.has(id)) {\n                    this.rafIds_.delete(id);\n                }\n                fn();\n            });\n            this.rafIds_.add(id);\n            return id;\n        }\n        requestNamedAnimationFrame(name, fn) {\n            if (this.namedRafs_.has(name)) {\n                return;\n            }\n            this.clearTimersOnDispose_();\n            fn = Fn.bind(this, fn);\n            const id = this.requestAnimationFrame(() => {\n                fn();\n                if (this.namedRafs_.has(name)) {\n                    this.namedRafs_.delete(name);\n                }\n            });\n            this.namedRafs_.set(name, id);\n            return name;\n        }\n        cancelNamedAnimationFrame(name) {\n            if (!this.namedRafs_.has(name)) {\n                return;\n            }\n            this.cancelAnimationFrame(this.namedRafs_.get(name));\n            this.namedRafs_.delete(name);\n        }\n        cancelAnimationFrame(id) {\n            if (!this.supportsRaf_) {\n                return this.clearTimeout(id);\n            }\n            if (this.rafIds_.has(id)) {\n                this.rafIds_.delete(id);\n                window.cancelAnimationFrame(id);\n            }\n            return id;\n        }\n        clearTimersOnDispose_() {\n            if (this.clearingTimersOnDispose_) {\n                return;\n            }\n            this.clearingTimersOnDispose_ = true;\n            this.one('dispose', () => {\n                [\n                    [\n                        'namedRafs_',\n                        'cancelNamedAnimationFrame'\n                    ],\n                    [\n                        'rafIds_',\n                        'cancelAnimationFrame'\n                    ],\n                    [\n                        'setTimeoutIds_',\n                        'clearTimeout'\n                    ],\n                    [\n                        'setIntervalIds_',\n                        'clearInterval'\n                    ]\n                ].forEach(([idName, cancelName]) => {\n                    this[idName].forEach((val, key) => this[cancelName](key));\n                });\n                this.clearingTimersOnDispose_ = false;\n            });\n        }\n        static registerComponent(name, ComponentToRegister) {\n            if (typeof name !== 'string' || !name) {\n                throw new Error(`Illegal component name, \"${ name }\"; must be a non-empty string.`);\n            }\n            const Tech = Component.getComponent('Tech');\n            const isTech = Tech && Tech.isTech(ComponentToRegister);\n            const isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n            if (isTech || !isComp) {\n                let reason;\n                if (isTech) {\n                    reason = 'techs must be registered using Tech.registerTech()';\n                } else {\n                    reason = 'must be a Component subclass';\n                }\n                throw new Error(`Illegal component, \"${ name }\"; ${ reason }.`);\n            }\n            name = stringCases.toTitleCase(name);\n            if (!Component.components_) {\n                Component.components_ = {};\n            }\n            const Player = Component.getComponent('Player');\n            if (name === 'Player' && Player && Player.players) {\n                const players = Player.players;\n                const playerNames = Object.keys(players);\n                if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n                    throw new Error('Can not register Player component after player has been created.');\n                }\n            }\n            Component.components_[name] = ComponentToRegister;\n            Component.components_[stringCases.toLowerCase(name)] = ComponentToRegister;\n            return ComponentToRegister;\n        }\n        static getComponent(name) {\n            if (!name || !Component.components_) {\n                return;\n            }\n            return Component.components_[name];\n        }\n    }\n    Component.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n    Component.registerComponent('Component', Component);\n    return Component;\n});"]}