{"version":3,"sources":["utils/dom.js"],"names":["define","window","document","fs","log","obj","computedStyle","browser","isNonBlankString","str","Boolean","trim","throwIfWhitespace","indexOf","Error","isEl","value","isObject","nodeType","createQuerier","method","selector","context","querySelector","ctx","textContent","el","text","innerText","hasClass","element","classToCheck","classList","contains","className","RegExp","test","addClass","classToAdd","add","removeClass","classToRemove","remove","split","filter","c","join","findPosition","offsetParent","left","top","width","height","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","isTextNode","emptyEl","firstChild","removeChild","normalizeContent","content","Array","isArray","map","createTextNode","appendContent","forEach","node","appendChild","$","$$","isReal","isInFrame","parent","self","x","createEl","tagName","properties","attributes","createElement","Object","getOwnPropertyNames","propName","val","warn","setAttribute","attrName","prependTo","child","insertBefore","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","tag","knownBooleans","length","attrs","i","name","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","result","k","undefined","parseFloat","getPointerPosition","event","translated","y","IS_IOS","item","nodeName","toLowerCase","transform","values","slice","Number","position","boxTarget","target","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","Math","max","min","insertContent","isSingleLeftClick","button","buttons","type"],"mappings":"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","file":"../../utils/dom.js","sourcesContent":["define([\n    \"skylark-langx-globals/window\",\n    \"skylark-langx-globals/document\",   \n    '../fullscreen-api',\n    './log',\n    './obj',\n    './computed-style',\n    './browser'\n], function (window,document,fs, log, obj, computedStyle, browser) {\n    'use strict';\n    function isNonBlankString(str) {\n        return typeof str === 'string' && Boolean(str.trim());\n    }\n    function throwIfWhitespace(str) {\n        if (str.indexOf(' ') >= 0) {\n            throw new Error('class has illegal whitespace characters');\n        }\n    }\n    function classRegExp(className) {\n        return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n    }\n\n    function isEl(value) {\n        return obj.isObject(value) && value.nodeType === 1;\n    }\n    function isInFrame() {\n        try {\n            return window.parent !== window.self;\n        } catch (x) {\n            return true;\n        }\n    }\n    function createQuerier(method) {\n        return function (selector, context) {\n            if (!isNonBlankString(selector)) {\n                return document[method](null);\n            }\n            if (isNonBlankString(context)) {\n                context = document.querySelector(context);\n            }\n            const ctx = isEl(context) ? context : document;\n            return ctx[method] && ctx[method](selector);\n        };\n    }\n    function createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n        const el = document.createElement(tagName);\n        Object.getOwnPropertyNames(properties).forEach(function (propName) {\n            const val = properties[propName];\n            if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n                log.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + `createEl(type, properties, attributes). Attempting to set ${ propName } to ${ val }.`);\n                el.setAttribute(propName, val);\n            } else if (propName === 'textContent') {\n                textContent(el, val);\n            } else if (el[propName] !== val || propName === 'tabIndex') {\n                el[propName] = val;\n            }\n        });\n        Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n            el.setAttribute(attrName, attributes[attrName]);\n        });\n        if (content) {\n            appendContent(el, content);\n        }\n        return el;\n    }\n    function textContent(el, text) {\n        if (typeof el.textContent === 'undefined') {\n            el.innerText = text;\n        } else {\n            el.textContent = text;\n        }\n        return el;\n    }\n    function prependTo(child, parent) {\n        if (parent.firstChild) {\n            parent.insertBefore(child, parent.firstChild);\n        } else {\n            parent.appendChild(child);\n        }\n    }\n    function hasClass(element, classToCheck) {\n        throwIfWhitespace(classToCheck);\n        if (element.classList) {\n            return element.classList.contains(classToCheck);\n        }\n        return classRegExp(classToCheck).test(element.className);\n    }\n    function addClass(element, classToAdd) {\n        if (element.classList) {\n            element.classList.add(classToAdd);\n        } else if (!hasClass(element, classToAdd)) {\n            element.className = (element.className + ' ' + classToAdd).trim();\n        }\n        return element;\n    }\n    function removeClass(element, classToRemove) {\n        if (element.classList) {\n            element.classList.remove(classToRemove);\n        } else {\n            throwIfWhitespace(classToRemove);\n            element.className = element.className.split(/\\s+/).filter(function (c) {\n                return c !== classToRemove;\n            }).join(' ');\n        }\n        return element;\n    }\n    function toggleClass(element, classToToggle, predicate) {\n        const has = hasClass(element, classToToggle);\n        if (typeof predicate === 'function') {\n            predicate = predicate(element, classToToggle);\n        }\n        if (typeof predicate !== 'boolean') {\n            predicate = !has;\n        }\n        if (predicate === has) {\n            return;\n        }\n        if (predicate) {\n            addClass(element, classToToggle);\n        } else {\n            removeClass(element, classToToggle);\n        }\n        return element;\n    }\n    function setAttributes(el, attributes) {\n        Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n            const attrValue = attributes[attrName];\n            if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n                el.removeAttribute(attrName);\n            } else {\n                el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n            }\n        });\n    }\n    function getAttributes(tag) {\n        const obj = {};\n        const knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n        if (tag && tag.attributes && tag.attributes.length > 0) {\n            const attrs = tag.attributes;\n            for (let i = attrs.length - 1; i >= 0; i--) {\n                const attrName = attrs[i].name;\n                let attrVal = attrs[i].value;\n                if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n                    attrVal = attrVal !== null ? true : false;\n                }\n                obj[attrName] = attrVal;\n            }\n        }\n        return obj;\n    }\n    function getAttribute(el, attribute) {\n        return el.getAttribute(attribute);\n    }\n    function setAttribute(el, attribute, value) {\n        el.setAttribute(attribute, value);\n    }\n    function removeAttribute(el, attribute) {\n        el.removeAttribute(attribute);\n    }\n    function blockTextSelection() {\n        document.body.focus();\n        document.onselectstart = function () {\n            return false;\n        };\n    }\n    function unblockTextSelection() {\n        document.onselectstart = function () {\n            return true;\n        };\n    }\n    function getBoundingClientRect(el) {\n        if (el && el.getBoundingClientRect && el.parentNode) {\n            const rect = el.getBoundingClientRect();\n            const result = {};\n            [\n                'bottom',\n                'height',\n                'left',\n                'right',\n                'top',\n                'width'\n            ].forEach(k => {\n                if (rect[k] !== undefined) {\n                    result[k] = rect[k];\n                }\n            });\n            if (!result.height) {\n                result.height = parseFloat(computedStyle(el, 'height'));\n            }\n            if (!result.width) {\n                result.width = parseFloat(computedStyle(el, 'width'));\n            }\n            return result;\n        }\n    }\n    function findPosition(el) {\n        if (!el || el && !el.offsetParent) {\n            return {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0\n            };\n        }\n        const width = el.offsetWidth;\n        const height = el.offsetHeight;\n        let left = 0;\n        let top = 0;\n        while (el.offsetParent && el !== document[fs.fullscreenElement]) {\n            left += el.offsetLeft;\n            top += el.offsetTop;\n            el = el.offsetParent;\n        }\n        return {\n            left,\n            top,\n            width,\n            height\n        };\n    }\n    function getPointerPosition(el, event) {\n        const translated = {\n            x: 0,\n            y: 0\n        };\n        if (browser.IS_IOS) {\n            let item = el;\n            while (item && item.nodeName.toLowerCase() !== 'html') {\n                const transform = computedStyle(item, 'transform');\n                if (/^matrix/.test(transform)) {\n                    const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n                    translated.x += values[4];\n                    translated.y += values[5];\n                } else if (/^matrix3d/.test(transform)) {\n                    const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n                    translated.x += values[12];\n                    translated.y += values[13];\n                }\n                item = item.parentNode;\n            }\n        }\n        const position = {};\n        const boxTarget = findPosition(event.target);\n        const box = findPosition(el);\n        const boxW = box.width;\n        const boxH = box.height;\n        let offsetY = event.offsetY - (box.top - boxTarget.top);\n        let offsetX = event.offsetX - (box.left - boxTarget.left);\n        if (event.changedTouches) {\n            offsetX = event.changedTouches[0].pageX - box.left;\n            offsetY = event.changedTouches[0].pageY + box.top;\n            if (browser.IS_IOS) {\n                offsetX -= translated.x;\n                offsetY -= translated.y;\n            }\n        }\n        position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n        position.x = Math.max(0, Math.min(1, offsetX / boxW));\n        return position;\n    }\n    function isTextNode(value) {\n        return obj.isObject(value) && value.nodeType === 3;\n    }\n    function emptyEl(el) {\n        while (el.firstChild) {\n            el.removeChild(el.firstChild);\n        }\n        return el;\n    }\n    function normalizeContent(content) {\n        if (typeof content === 'function') {\n            content = content();\n        }\n        return (Array.isArray(content) ? content : [content]).map(value => {\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (isEl(value) || isTextNode(value)) {\n                return value;\n            }\n            if (typeof value === 'string' && /\\S/.test(value)) {\n                return document.createTextNode(value);\n            }\n        }).filter(value => value);\n    }\n    function appendContent(el, content) {\n        normalizeContent(content).forEach(node => el.appendChild(node));\n        return el;\n    }\n    function insertContent(el, content) {\n        return appendContent(emptyEl(el), content);\n    }\n    function isSingleLeftClick(event) {\n        if (event.button === undefined && event.buttons === undefined) {\n            return true;\n        }\n        if (event.button === 0 && event.buttons === undefined) {\n            return true;\n        }\n        if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n            return true;\n        }\n        if (event.button !== 0 || event.buttons !== 1) {\n            return false;\n        }\n        return true;\n    }\n    const $ = createQuerier('querySelector');\n    const $$ = createQuerier('querySelectorAll');\n    return {\n        isReal: browser.isReal,\n        isEl: isEl,\n        isInFrame: isInFrame,\n        createEl: createEl,\n        textContent: textContent,\n        prependTo: prependTo,\n        hasClass: hasClass,\n        addClass: addClass,\n        removeClass: removeClass,\n        toggleClass: toggleClass,\n        setAttributes: setAttributes,\n        getAttributes: getAttributes,\n        getAttribute: getAttribute,\n        setAttribute: setAttribute,\n        removeAttribute: removeAttribute,\n        blockTextSelection: blockTextSelection,\n        unblockTextSelection: unblockTextSelection,\n        getBoundingClientRect: getBoundingClientRect,\n        findPosition: findPosition,\n        getPointerPosition: getPointerPosition,\n        isTextNode: isTextNode,\n        emptyEl: emptyEl,\n        normalizeContent: normalizeContent,\n        appendContent: appendContent,\n        insertContent: insertContent,\n        isSingleLeftClick: isSingleLeftClick,\n        $: $,\n        $$: $$\n    };\n});"]}