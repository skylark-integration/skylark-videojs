{"version":3,"sources":["utils/url.js"],"names":["define","document","parseUrl","url","props","a","createElement","href","addToBody","host","protocol","div","innerHTML","firstChild","setAttribute","body","appendChild","details","i","length","replace","window","location","removeChild","getAbsoluteURL","match","getFileExtension","path","pathParts","exec","pop","toLowerCase","isCrossOrigin","winLoc","urlInfo"],"mappings":";;;;;;;AAAAA,QACI,kCACD,SAAUC,GACT,aACA,MAAMC,EAAW,SAAUC,GACvB,MAAMC,GACF,WACA,WACA,OACA,WACA,SACA,OACA,QAEJ,IAAIC,EAAIJ,EAASK,cAAc,KAC/BD,EAAEE,KAAOJ,EACT,MAAMK,EAAuB,KAAXH,EAAEI,MAA8B,UAAfJ,EAAEK,SACrC,IAAIC,EACAH,KACAG,EAAMV,EAASK,cAAc,QACzBM,sBAAyBT,UAC7BE,EAAIM,EAAIE,WACRF,EAAIG,aAAa,QAAS,oCAC1Bb,EAASc,KAAKC,YAAYL,IAE9B,MAAMM,KACN,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAMe,OAAQD,IAC9BD,EAAQb,EAAMc,IAAMb,EAAED,EAAMc,IAchC,MAZyB,UAArBD,EAAQP,WACRO,EAAQR,KAAOQ,EAAQR,KAAKW,QAAQ,OAAQ,KAEvB,WAArBH,EAAQP,WACRO,EAAQR,KAAOQ,EAAQR,KAAKW,QAAQ,QAAS,KAE5CH,EAAQP,WACTO,EAAQP,SAAWW,OAAOC,SAASZ,UAEnCF,GACAP,EAASc,KAAKQ,YAAYZ,GAEvBM,GA0BX,OACIf,SAAUA,EACVsB,eA1BmB,SAAUrB,GAC7B,IAAKA,EAAIsB,MAAM,gBAAiB,CAC5B,MAAMd,EAAMV,EAASK,cAAc,OACnCK,EAAIC,sBAAyBT,WAC7BA,EAAMQ,EAAIE,WAAWN,KAEzB,OAAOJ,GAqBPuB,iBAnBqB,SAAUC,GAC/B,GAAoB,iBAATA,EAAmB,CAC1B,MACMC,EADc,yEACUC,KAAKF,GACnC,GAAIC,EACA,OAAOA,EAAUE,MAAMC,cAG/B,MAAO,IAYPC,cAVkB,SAAU7B,EAAK8B,EAASZ,OAAOC,UACjD,MAAMY,EAAUhC,EAASC,GAGzB,OAFyC,MAArB+B,EAAQxB,SAAmBuB,EAAOvB,SAAWwB,EAAQxB,UACvCwB,EAAQzB,OAASwB,EAAOvB,SAAWuB,EAAOxB","file":"../../utils/url.js","sourcesContent":["define([\n    'skylark-langx-globals/document'\n], function (document) {\n    'use strict';\n    const parseUrl = function (url) {\n        const props = [\n            'protocol',\n            'hostname',\n            'port',\n            'pathname',\n            'search',\n            'hash',\n            'host'\n        ];\n        let a = document.createElement('a');\n        a.href = url;\n        const addToBody = a.host === '' && a.protocol !== 'file:';\n        let div;\n        if (addToBody) {\n            div = document.createElement('div');\n            div.innerHTML = `<a href=\"${ url }\"></a>`;\n            a = div.firstChild;\n            div.setAttribute('style', 'display:none; position:absolute;');\n            document.body.appendChild(div);\n        }\n        const details = {};\n        for (let i = 0; i < props.length; i++) {\n            details[props[i]] = a[props[i]];\n        }\n        if (details.protocol === 'http:') {\n            details.host = details.host.replace(/:80$/, '');\n        }\n        if (details.protocol === 'https:') {\n            details.host = details.host.replace(/:443$/, '');\n        }\n        if (!details.protocol) {\n            details.protocol = window.location.protocol;\n        }\n        if (addToBody) {\n            document.body.removeChild(div);\n        }\n        return details;\n    };\n    const getAbsoluteURL = function (url) {\n        if (!url.match(/^https?:\\/\\//)) {\n            const div = document.createElement('div');\n            div.innerHTML = `<a href=\"${ url }\">x</a>`;\n            url = div.firstChild.href;\n        }\n        return url;\n    };\n    const getFileExtension = function (path) {\n        if (typeof path === 'string') {\n            const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n            const pathParts = splitPathRe.exec(path);\n            if (pathParts) {\n                return pathParts.pop().toLowerCase();\n            }\n        }\n        return '';\n    };\n    const isCrossOrigin = function (url, winLoc = window.location) {\n        const urlInfo = parseUrl(url);\n        const srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n        const crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n        return crossOrigin;\n    };\n    return {\n        parseUrl: parseUrl,\n        getAbsoluteURL: getAbsoluteURL,\n        getFileExtension: getFileExtension,\n        isCrossOrigin: isCrossOrigin\n    };\n});"]}