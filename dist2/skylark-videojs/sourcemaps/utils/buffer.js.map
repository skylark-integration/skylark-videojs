{"version":3,"sources":["utils/buffer.js"],"names":["define","timeRages","bufferedPercent","buffered","duration","start","end","bufferedDuration","length","createTimeRange","i"],"mappings":";;;;;;;AAAAA,QAAQ,iBAAkB,SAAUC,GAChC,aAqBA,OAASC,gBApBT,SAAyBC,EAAUC,GAC/B,IACIC,EACAC,EAFAC,EAAmB,EAGvB,IAAKH,EACD,OAAO,EAEND,GAAaA,EAASK,SACvBL,EAAWF,EAAUQ,gBAAgB,EAAG,IAE5C,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAASK,OAAQE,IACjCL,EAAQF,EAASE,MAAMK,IACvBJ,EAAMH,EAASG,IAAII,IACTN,IACNE,EAAMF,GAEVG,GAAoBD,EAAMD,EAE9B,OAAOE,EAAmBH","file":"../../utils/buffer.js","sourcesContent":["define(['./time-ranges'], function (timeRages) {\n    'use strict';\n    function bufferedPercent(buffered, duration) {\n        let bufferedDuration = 0;\n        let start;\n        let end;\n        if (!duration) {\n            return 0;\n        }\n        if (!buffered || !buffered.length) {\n            buffered = timeRages.createTimeRange(0, 0);\n        }\n        for (let i = 0; i < buffered.length; i++) {\n            start = buffered.start(i);\n            end = buffered.end(i);\n            if (end > duration) {\n                end = duration;\n            }\n            bufferedDuration += end - start;\n        }\n        return bufferedDuration / duration;\n    }\n    return { bufferedPercent: bufferedPercent };\n});"]}