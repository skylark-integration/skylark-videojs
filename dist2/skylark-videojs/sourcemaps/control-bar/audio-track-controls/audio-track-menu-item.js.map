{"version":3,"sources":["control-bar/audio-track-controls/audio-track-menu-item.js"],"names":["define","MenuItem","Component","obj","AudioTrackMenuItem","[object Object]","player","options","track","tracks","audioTracks","label","language","selected","enabled","super","this","addClass","kind","changeHandler","args","handleTracksChange","apply","addEventListener","on","removeEventListener","type","props","attrs","innerHTML","localize","options_","createEl","assign","event","player_","handleClick","i","length","registerComponent"],"mappings":";;;;;;;AAAAA,QACI,uBACA,kBACA,mBACD,SAAUC,EAAUC,EAAWC,GAC9B,mBACMC,UAA2BH,EAC7BI,YAAYC,EAAQC,GAChB,MAAMC,EAAQD,EAAQC,MAChBC,EAASH,EAAOI,cACtBH,EAAQI,MAAQH,EAAMG,OAASH,EAAMI,UAAY,UACjDL,EAAQM,SAAWL,EAAMM,QACzBC,MAAMT,EAAQC,GACdS,KAAKR,MAAQA,EACbQ,KAAKC,gBAAiBT,EAAMU,kBAC5B,MAAMC,EAAgB,IAAIC,KACtBJ,KAAKK,mBAAmBC,MAAMN,KAAMI,IAExCX,EAAOc,iBAAiB,SAAUJ,GAClCH,KAAKQ,GAAG,UAAW,KACff,EAAOgB,oBAAoB,SAAUN,KAG7Cd,SAASqB,EAAMC,EAAOC,GAClB,IAAIC,sCAAiDb,KAAKc,SAASd,KAAKe,SAASpB,SASjF,MARiC,cAA7BK,KAAKe,SAASvB,MAAMU,OACpBW,uHAE2Bb,KAAKc,SAAS,kCAG7CD,GAAa,UACFd,MAAMiB,SAASN,EAAMvB,EAAI8B,QAASJ,UAAAA,GAAaF,GAAQC,GAGtEvB,YAAY6B,GACR,MAAMzB,EAASO,KAAKmB,QAAQzB,cAC5BK,MAAMqB,YAAYF,GAClB,IAAK,IAAIG,EAAI,EAAGA,EAAI5B,EAAO6B,OAAQD,IAAK,CACpC,MAAM7B,EAAQC,EAAO4B,GACrB7B,EAAMM,QAAUN,IAAUQ,KAAKR,OAGvCH,mBAAmB6B,GACflB,KAAKH,SAASG,KAAKR,MAAMM,UAIjC,OADAZ,EAAUqC,kBAAkB,qBAAsBnC,GAC3CA","file":"../../../control-bar/audio-track-controls/audio-track-menu-item.js","sourcesContent":["define([\n    '../../menu/menu-item',\n    '../../component',\n    '../../utils/obj'\n], function (MenuItem, Component, obj) {\n    'use strict';\n    class AudioTrackMenuItem extends MenuItem {\n        constructor(player, options) {\n            const track = options.track;\n            const tracks = player.audioTracks();\n            options.label = track.label || track.language || 'Unknown';\n            options.selected = track.enabled;\n            super(player, options);\n            this.track = track;\n            this.addClass(`vjs-${ track.kind }-menu-item`);\n            const changeHandler = (...args) => {\n                this.handleTracksChange.apply(this, args);\n            };\n            tracks.addEventListener('change', changeHandler);\n            this.on('dispose', () => {\n                tracks.removeEventListener('change', changeHandler);\n            });\n        }\n        createEl(type, props, attrs) {\n            let innerHTML = `<span class=\"vjs-menu-item-text\">${ this.localize(this.options_.label) }`;\n            if (this.options_.track.kind === 'main-desc') {\n                innerHTML += `\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\n        <span class=\"vjs-control-text\"> ${ this.localize('Descriptions') }</span>\n      `;\n            }\n            innerHTML += '</span>';\n            const el = super.createEl(type, obj.assign({ innerHTML }, props), attrs);\n            return el;\n        }\n        handleClick(event) {\n            const tracks = this.player_.audioTracks();\n            super.handleClick(event);\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                track.enabled = track === this.track;\n            }\n        }\n        handleTracksChange(event) {\n            this.selected(this.track.enabled);\n        }\n    }\n    Component.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n    return AudioTrackMenuItem;\n});"]}