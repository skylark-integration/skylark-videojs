{"version":3,"sources":["control-bar/text-track-controls/off-text-track-menu-item.js"],"names":["define","TextTrackMenuItem","Component","OffTextTrackMenuItem","[object Object]","player","options","track","kind","kinds","default","mode","label","join","selectable","multiSelectable","super","event","tracks","this","textTracks","shouldBeSelected","i","l","length","options_","indexOf","isSelected_","selected","allHidden","player_","cache_","selectedLanguage","enabled","registerComponent"],"mappings":";;;;;;;AAAAA,QACI,yBACA,mBACD,SAAUC,EAAmBC,GAC5B,mBACMC,UAA6BF,EAC/BG,YAAYC,EAAQC,GAChBA,EAAQC,OACJF,OAAAA,EACAG,KAAMF,EAAQE,KACdC,MAAOH,EAAQG,MACfC,SAAS,EACTC,KAAM,YAELL,EAAQG,QACTH,EAAQG,OAASH,EAAQE,OAEzBF,EAAQM,MACRN,EAAQC,MAAMK,MAAQN,EAAQM,MAE9BN,EAAQC,MAAMK,MAAQN,EAAQG,MAAMI,KAAK,SAAW,OAExDP,EAAQQ,YAAa,EACrBR,EAAQS,iBAAkB,EAC1BC,MAAMX,EAAQC,GAElBF,mBAAmBa,GACf,MAAMC,EAASC,KAAKd,SAASe,aAC7B,IAAIC,GAAmB,EACvB,IAAK,IAAIC,EAAI,EAAGC,EAAIL,EAAOM,OAAQF,EAAIC,EAAGD,IAAK,CAC3C,MAAMf,EAAQW,EAAOI,GACrB,GAAIH,KAAKM,SAAShB,MAAMiB,QAAQnB,EAAMC,OAAS,GAAoB,YAAfD,EAAMI,KAAoB,CAC1EU,GAAmB,EACnB,OAGJA,IAAqBF,KAAKQ,aAC1BR,KAAKS,SAASP,GAGtBjB,6BAA6Ba,GACzB,MAAMC,EAASC,KAAKd,SAASe,aAC7B,IAAIS,GAAY,EAChB,IAAK,IAAIP,EAAI,EAAGC,EAAIL,EAAOM,OAAQF,EAAIC,EAAGD,IAAK,CAC3C,MAAMf,EAAQW,EAAOI,GACrB,IACQ,WACA,eACA,aACFI,QAAQnB,EAAMC,OAAS,GAAoB,YAAfD,EAAMI,KAAoB,CACxDkB,GAAY,EACZ,OAGJA,IACAV,KAAKW,QAAQC,OAAOC,kBAAqBC,SAAS,KAK9D,OADA/B,EAAUgC,kBAAkB,uBAAwB/B,GAC7CA","file":"../../../control-bar/text-track-controls/off-text-track-menu-item.js","sourcesContent":["define([\n    './text-track-menu-item',\n    '../../component'\n], function (TextTrackMenuItem, Component) {\n    'use strict';\n    class OffTextTrackMenuItem extends TextTrackMenuItem {\n        constructor(player, options) {\n            options.track = {\n                player,\n                kind: options.kind,\n                kinds: options.kinds,\n                default: false,\n                mode: 'disabled'\n            };\n            if (!options.kinds) {\n                options.kinds = [options.kind];\n            }\n            if (options.label) {\n                options.track.label = options.label;\n            } else {\n                options.track.label = options.kinds.join(' and ') + ' off';\n            }\n            options.selectable = true;\n            options.multiSelectable = false;\n            super(player, options);\n        }\n        handleTracksChange(event) {\n            const tracks = this.player().textTracks();\n            let shouldBeSelected = true;\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                const track = tracks[i];\n                if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n                    shouldBeSelected = false;\n                    break;\n                }\n            }\n            if (shouldBeSelected !== this.isSelected_) {\n                this.selected(shouldBeSelected);\n            }\n        }\n        handleSelectedLanguageChange(event) {\n            const tracks = this.player().textTracks();\n            let allHidden = true;\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                const track = tracks[i];\n                if ([\n                        'captions',\n                        'descriptions',\n                        'subtitles'\n                    ].indexOf(track.kind) > -1 && track.mode === 'showing') {\n                    allHidden = false;\n                    break;\n                }\n            }\n            if (allHidden) {\n                this.player_.cache_.selectedLanguage = { enabled: false };\n            }\n        }\n    }\n    Component.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n    return OffTextTrackMenuItem;\n});"]}