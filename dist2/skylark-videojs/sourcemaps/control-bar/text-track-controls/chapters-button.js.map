{"version":3,"sources":["control-bar/text-track-controls/chapters-button.js"],"names":["define","TextTrackButton","Component","ChaptersTrackMenuItem","stringCases","ChaptersButton","[object Object]","player","options","ready","super","buildCSSClass","buildWrapperCSSClass","event","this","track_","type","setTrack","findChaptersTrack","update","track","updateHandler_","bind","remoteTextTrackEl","player_","remoteTextTrackEls","getTrackElementByTrack_","removeEventListener","mode","addEventListener","tracks","textTracks","i","length","kind","kind_","label","localize","toTitleCase","options_","title","getMenuCaption","createMenu","items","cues","l","cue","mi","push","prototype","controlText_","registerComponent"],"mappings":";;;;;;;AAAAA,QACI,sBACA,kBACA,6BACA,4BACD,SAAUC,EAAiBC,EAAWC,EAAuBC,GAC5D,mBACMC,UAAuBJ,EACzBK,YAAYC,EAAQC,EAASC,GACzBC,MAAMH,EAAQC,EAASC,GAE3BH,gBACI,6BAA+BI,MAAMC,kBAEzCL,uBACI,6BAA+BI,MAAME,yBAEzCN,OAAOO,GACEC,KAAKC,UAAUF,GAAyB,aAAfA,EAAMG,MAAsC,gBAAfH,EAAMG,OAC7DF,KAAKG,SAASH,KAAKI,qBAEvBR,MAAMS,SAEVb,SAASc,GACL,GAAIN,KAAKC,SAAWK,EAApB,CAMA,GAHKN,KAAKO,iBACNP,KAAKO,eAAiBP,KAAKK,OAAOG,KAAKR,OAEvCA,KAAKC,OAAQ,CACb,MAAMQ,EAAoBT,KAAKU,QAAQC,qBAAqBC,wBAAwBZ,KAAKC,QACrFQ,GACAA,EAAkBI,oBAAoB,OAAQb,KAAKO,gBAEvDP,KAAKC,OAAS,KAGlB,GADAD,KAAKC,OAASK,EACVN,KAAKC,OAAQ,CACbD,KAAKC,OAAOa,KAAO,SACnB,MAAML,EAAoBT,KAAKU,QAAQC,qBAAqBC,wBAAwBZ,KAAKC,QACrFQ,GACAA,EAAkBM,iBAAiB,OAAQf,KAAKO,kBAI5Df,oBACI,MAAMwB,EAAShB,KAAKU,QAAQO,iBAC5B,IAAK,IAAIC,EAAIF,EAAOG,OAAS,EAAGD,GAAK,EAAGA,IAAK,CACzC,MAAMZ,EAAQU,EAAOE,GACrB,GAAIZ,EAAMc,OAASpB,KAAKqB,MACpB,OAAOf,GAInBd,iBACI,OAAIQ,KAAKC,QAAUD,KAAKC,OAAOqB,MACpBtB,KAAKC,OAAOqB,MAEhBtB,KAAKuB,SAASjC,EAAYkC,YAAYxB,KAAKqB,QAEtD7B,aAEI,OADAQ,KAAKyB,SAASC,MAAQ1B,KAAK2B,iBACpB/B,MAAMgC,aAEjBpC,cACI,MAAMqC,KACN,IAAK7B,KAAKC,OACN,OAAO4B,EAEX,MAAMC,EAAO9B,KAAKC,OAAO6B,KACzB,IAAKA,EACD,OAAOD,EAEX,IAAK,IAAIX,EAAI,EAAGa,EAAID,EAAKX,OAAQD,EAAIa,EAAGb,IAAK,CACzC,MAAMc,EAAMF,EAAKZ,GACXe,EAAK,IAAI5C,EAAsBW,KAAKU,SACtCJ,MAAON,KAAKC,OACZ+B,IAAAA,IAEJH,EAAMK,KAAKD,GAEf,OAAOJ,GAMf,OAHAtC,EAAe4C,UAAUd,MAAQ,WACjC9B,EAAe4C,UAAUC,aAAe,WACxChD,EAAUiD,kBAAkB,iBAAkB9C,GACvCA","file":"../../../control-bar/text-track-controls/chapters-button.js","sourcesContent":["define([\n    './text-track-button',\n    '../../component',\n    './chapters-track-menu-item',\n    '../../utils/string-cases'\n], function (TextTrackButton, Component, ChaptersTrackMenuItem, stringCases) {\n    'use strict';\n    class ChaptersButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n        }\n        buildCSSClass() {\n            return `vjs-chapters-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-chapters-button ${ super.buildWrapperCSSClass() }`;\n        }\n        update(event) {\n            if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n                this.setTrack(this.findChaptersTrack());\n            }\n            super.update();\n        }\n        setTrack(track) {\n            if (this.track_ === track) {\n                return;\n            }\n            if (!this.updateHandler_) {\n                this.updateHandler_ = this.update.bind(this);\n            }\n            if (this.track_) {\n                const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n                if (remoteTextTrackEl) {\n                    remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n                }\n                this.track_ = null;\n            }\n            this.track_ = track;\n            if (this.track_) {\n                this.track_.mode = 'hidden';\n                const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n                if (remoteTextTrackEl) {\n                    remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n                }\n            }\n        }\n        findChaptersTrack() {\n            const tracks = this.player_.textTracks() || [];\n            for (let i = tracks.length - 1; i >= 0; i--) {\n                const track = tracks[i];\n                if (track.kind === this.kind_) {\n                    return track;\n                }\n            }\n        }\n        getMenuCaption() {\n            if (this.track_ && this.track_.label) {\n                return this.track_.label;\n            }\n            return this.localize(stringCases.toTitleCase(this.kind_));\n        }\n        createMenu() {\n            this.options_.title = this.getMenuCaption();\n            return super.createMenu();\n        }\n        createItems() {\n            const items = [];\n            if (!this.track_) {\n                return items;\n            }\n            const cues = this.track_.cues;\n            if (!cues) {\n                return items;\n            }\n            for (let i = 0, l = cues.length; i < l; i++) {\n                const cue = cues[i];\n                const mi = new ChaptersTrackMenuItem(this.player_, {\n                    track: this.track_,\n                    cue\n                });\n                items.push(mi);\n            }\n            return items;\n        }\n    }\n    ChaptersButton.prototype.kind_ = 'chapters';\n    ChaptersButton.prototype.controlText_ = 'Chapters';\n    Component.registerComponent('ChaptersButton', ChaptersButton);\n    return ChaptersButton;\n});"]}