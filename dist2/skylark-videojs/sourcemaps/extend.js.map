{"version":3,"sources":["extend.js"],"names":["define","_inherits","superClass","subClassMethods","subClass","apply","this","arguments","methods","constructor","Object","prototype","super_","name","hasOwnProperty"],"mappings":";;;;;;;AAAAA,QACI,oBACD,SAAUC,GACT,aAyBA,OAxBe,SAAUC,EAAYC,MACjC,IAAIC,EAAW,WACXF,EAAWG,MAAMC,KAAMC,YAEvBC,KAC2B,iBAApBL,GACHA,EAAgBM,cAAgBC,OAAOC,UAAUF,cACjDL,EAAWD,EAAgBM,aAE/BD,EAAUL,GACwB,mBAApBA,IACdC,EAAWD,GAEfF,EAAUG,EAAUF,GAChBA,IACAE,EAASQ,OAASV,GAEtB,IAAK,MAAMW,KAAQL,EACXA,EAAQM,eAAeD,KACvBT,EAASO,UAAUE,GAAQL,EAAQK,IAG3C,OAAOT","file":"../extend.js","sourcesContent":["define([\n    './utils/inherits'\n], function (_inherits) {\n    'use strict';\n    const extend = function (superClass, subClassMethods = {}) {\n        let subClass = function () {\n            superClass.apply(this, arguments);\n        };\n        let methods = {};\n        if (typeof subClassMethods === 'object') {\n            if (subClassMethods.constructor !== Object.prototype.constructor) {\n                subClass = subClassMethods.constructor;\n            }\n            methods = subClassMethods;\n        } else if (typeof subClassMethods === 'function') {\n            subClass = subClassMethods;\n        }\n        _inherits(subClass, superClass);\n        if (superClass) {\n            subClass.super_ = superClass;\n        }\n        for (const name in methods) {\n            if (methods.hasOwnProperty(name)) {\n                subClass.prototype[name] = methods[name];\n            }\n        }\n        return subClass;\n    };\n    return extend;\n});"]}