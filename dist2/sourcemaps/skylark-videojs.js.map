{"version":3,"sources":["skylark-videojs.js"],"names":["define","skylark","types","objects","arrays","funcs","Deferred","Evented","http","each","mixin","noop","isArray","isFunction","isPlainObject","type","getAbsoluteUrl","url","a","document","createElement","href","Xhr","jsonpID","key","name","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","async","beforeSend","success","error","complete","context","global","accepts","script","json","xml","html","text","crossDomain","timeout","processData","cache","traditional","xhrFields","withCredentials","mimeToDataType","mime","split","test","appendQuery","query","replace","serializeData","options","data","param","toUpperCase","undefined","serialize","params","obj","scope","t","array","hash","value","add","this","push","encodeURIComponent","join","inherit","klassName","_request","args","_","self","xhr","XMLHttpRequest","call","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","deferred","contentType","indexOf","overrideMimeType","responseType","finish","onloadend","onabort","onprogress","ontimeout","result","status","startsWith","getResponseHeader","eval","responseText","responseXML","JSON","parse","response","reponse","e","reject","resolve","Error","statusText","evt","notify","open","toLowerCase","setRequestHeader","send","promise","abort","request","get","post","patch","put","del","init","forEach","defaultOptions","FullscreenApi","prefixed","apiMap","specApi","browserApi","i","length","history","createLogger","logByType","level","log","lvl","levels","lvlRegExp","RegExp","unshift","concat","splice","window","console","fn","info","Array","LogByTypeFactory","subname","all","off","debug","warn","DEFAULT","hasOwnProperty","filter","fname","historyItem","clear","disable","enable","toString","Object","prototype","keys","object","isObject","reduce","initial","accum","assign","target","sources","source","isPlain","constructor","el","prop","getComputedStyle","computedStyleValue","getPropertyValue","isReal","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPOD","IOS_VERSION","match","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","version","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","Boolean","maxTouchPoints","DocumentTouch","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI","fs","computedStyle","browser","isNonBlankString","str","trim","throwIfWhitespace","isEl","nodeType","createQuerier","method","selector","querySelector","ctx","textContent","innerText","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","removeClass","classToRemove","remove","c","findPosition","offsetParent","left","top","width","height","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","isTextNode","emptyEl","firstChild","removeChild","normalizeContent","content","map","createTextNode","appendContent","node","appendChild","$","$$","isInFrame","parent","x","createEl","tagName","properties","attributes","getOwnPropertyNames","propName","val","setAttribute","attrName","prependTo","child","insertBefore","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","tag","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","getPointerPosition","event","translated","y","item","nodeName","transform","values","slice","Number","position","boxTarget","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","Math","max","min","insertContent","isSingleLeftClick","button","buttons","Dom","videojs","_windowLoaded","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","hasLoaded","createStyleElement","style","setTextContent","styleSheet","cssText","_initialGuid","_guid","newGUID","resetGuidInTestsOnly","Guid","FakeWeakMap","WeakMap","[object Object]","vdata","floor","performance","now","Date","access","DomData","_cleanUpEvents","elem","handlers","dispatcher","detachEvent","disabled","delete","_handleMultipleEvents","callback","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","documentElement","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","_supportsPassive","supportsPassive","opts","defineProperty","passiveEvents","on","set","guid","handlersCopy","m","n","passive","attachEvent","removeType","trigger","elemData","ownerDocument","bubbles","targetData","one","func","apply","arguments","any","GUID","UPDATE_REFRESH_INTERVAL","bind","uid","bound","throttle","last","debounce","immediate","debounced","later","clearTimeout","cancel","Events","EventTarget","EVENT_MAP","allowedEvents_","ael","dispatchEvent","queueTrigger","Map","oldTimeout","size","Fn","Obj","objName","name_","isEvented","eventBusEl_","every","isValidEventType","validateTarget","fnName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","removeListenerOnDispose","removeRemoverOnTargetDispose","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","addEventedCallback","StatefulMixin","state","stateUpdates","changes","from","to","defaultState","handleStateChanged","toTitleCase","string","w","titleCaseEquals","str1","str2","mergeOptions","map_","thisArg","Set","set_","stateful","stringCases","Component","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","el_","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","dispose","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","index","ret","contentEl_","names","acc","currentChild","getChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","contentEl","childFound","compEl","children","parentOptions","handleAdd","playerOptions","newChild","addChild","workingChildren","Tech","some","wchild","isTech","sync","isReady_","readyQueue","num","skipListeners","dimension","widthOrHeight","pxIndex","parseInt","computedWidthOrHeight","isNaN","rule","currentDimension","blur","handleKeyDown","touchStart","firstTouch","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","supportsRaf_","requestAnimationFrame","cancelAnimationFrame","idName","cancelName","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","registerComponent","getRange","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","start","end","createTimeRanges","timeRages","bufferedPercent","buffered","duration","bufferedDuration","createTimeRange","MediaError","message","defaultMessages","errorTypes","1","2","3","4","5","errNum","reviver","err","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTracksToJson","tech","trackEls","trackObjs","trackEl","src","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","searchInput","hasKeyCode","search","String","foundNamedKey","codes","aliases","charCodeAt","isEventKey","nameOrCode","exports","backspace","tab","enter","ctrl","alt","pause/break","caps lock","esc","space","page up","page down","home","up","right","down","insert","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","option","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","cmd","fromCharCode","title","alias","keycode","MODAL_CLASS_NAME","ModalDialog","super","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","buildCSSClass","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","localize","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","controls","show","conditionalFocus_","hide","conditionalBlur_","temporary","closeable_","close","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","tracks","tracks_","addTrack","labelchange_","rtrack","l","change","addtrack","removetrack","labelchange","disableOthers","list","enabled","changing_","enabledChange_","removeTrack","selected","selectedChange_","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","trackElements","trackElements_","addTrackElement_","trackElement","trackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","trackProps","newLabel","parseUrl","props","addToBody","host","protocol","div","innerHTML","details","location","getAbsoluteURL","getFileExtension","path","splitPathRe","pathParts","isCrossOrigin","winLoc","urlInfo","_xhr","parseHeaders","row","initParams","uri","createXHR","_createXHR","called","errorFunc","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","useXDR","firefoxBugTakenEffect","getXml","isJson","getBody","rawRequest","getAllResponseHeaders","cors","XDomainRequest","stringify","onreadystatechange","onload","onerror","username","isEmpty","iterator","forEachArray","vtt","TrackEnums","Track","XHR","merge","parseCues","srcContent","parser","WebVTT","Parser","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","tech_","responseBody","loaded_","TextTrack","settings","srclang","mode","default_","default","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","isDisposed","defineProperties","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","cuechange","newEnabled","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","AudioTrackList","VideoTrackList","TextTrackList","HtmlTrackElementList","AudioTrack","VideoTrack","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","buffer","TRACK_TYPES","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","emitTapEvents","triggerSourceset","onDurationChange","manualProgress","trackProgress","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","currentTimeInterval","manuallyTriggered","clearTracks","manualProgressOff","manualTimeUpdatesOff","removeRemoteTextTrack","error_","trackListChanges","addWebVttScript_","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","createTrackHelper","manualCleanup","htmlTrackElement","createRemoteTextTrack","remoteTextTrackEls","getTrackElementByTrack_","removeTrackElement_","PromiseClass","Promise","srcObj","canPlayType","techs_","canPlaySource","defaultTechOrder_","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","cleanupAutoTextTracks","registerTech","middlewares","middlewareInstances","TERMINATOR","middlewareIterator","mw","setSourceHelper","middleware","next","lastRun","mwFactory","mwrest","mws","mwf","mwi","getOrCreateFactory","_src","use","getMiddleware","setTech","reduceRight","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","muted","played","seekable","volume","allowedSetters","setCurrentTime","setMuted","setVolume","allowedMediators","clearCacheForPlayer","Url","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","s","mimetypes","filterSource","newsrc","srcobj","fixSource","MediaLoader","j","techOrder","techName","getTech","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleMouseOver","handleMouseOut","clickHandler","PosterImage","update","poster","setSrc","backgroundImage","sourceIsEncrypted","usingPlugin","eme","sessions","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","modes","trackList","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","processCues","allowMultipleShowingTracks","clearDisplay","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","cueEl","updateDisplayState","dom","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","h","gm","gh","Infinity","implementation","formatTime","setFormatTime","customImplementation","resetFormatTime","TimeDisplay","updateContent","updateTextNode_","labelText_","textNode_","time","formattedTime_","requestNamedAnimationFrame","oldNode","replaceChild","CurrentTimeDisplay","ended","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","number","clamp","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getProgress","progress_","sizeKey","toFixed","getPercent","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","round","write","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","updateTime","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","SeekBar","setEventHandlers_","update_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","getCurrentTime_","liveCurrentTime","currentTime_","seekableStart","videoWasPlaying","newTime","distance","calculateDistance","mouseTimeDisplay","handleAction","gotoFraction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","playProgressBar","seekBarEl","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","pictureInPictureEnabled","disablePictureInPicture","isInPictureInPicture","exitPictureInPicture","requestPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","checkVolumeSupport","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","volumePanelState_","muteToggle","handleKeyPress","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","removeEventListenerForItem","childComponent","addEventListenerForItem","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","haveTitle","MenuButton","buttonClass","menu","handleMenuKeyUp","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","addItem","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","lockShowing","unlockShowing","TrackButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","allHidden","TextTrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","ControlBar","ErrorDisplay","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","legendId","selectLabelledbyIds","o","optionId","createElSelect_","createElFgColor_","createElBgColor_","createElWinColor_","defaultsDescription","createElColors_","createElFont_","createElControls_","selectedIndex","setSelectedOption","localStorage","getItem","setValues","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","abs","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","trackLive_","handleFirstTimeupdate","timeDiff","skipNextSeeked_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","enumerable","configurable","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","getValue","setter","writable","setupSourceset","defineLazyProperty","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","triggerReady","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","override","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","overrideNative_","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","webkitEnterFullScreen","HAVE_METADATA","webkitDisplayingFullscreen","webkitExitFullScreen","resetMediaElement","addTextTrack","getVideoPlaybackQuality","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","patchCanPlayType","unpatchCanPlayType","r","stylesheet","safeParseTuple","textTrackConverter","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","crossorigin","links","linkEl","techGet_","techCall_","privDimension","parsedVal","ratio","aspectRatio_","width_","height_","techEl","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","techOptions","playsinline","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","manualAutoplay_","previouslyMuted","restoreMuted","mutedPromise","catch","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","updateSourceCaches_","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","starttime","inAllowedEls","userActions","doubleClick","userWasActive","cancelable","targetPlayer","isFs","matches","fullscreen","msMatchesSelector","initTime","inactivityTimeout","defaultPlaybackRate","media","play_","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","applyInitTime_","percentAsDecimal","defaultMuted","isFS","oldValue","toggleFullscreenClass_","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","fsOptions","supportsFullScreen","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","togglePictureInPictureClass_","hotkeys","isContentEditable","excludeElement","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","finder","sourceOrder","b","flip","middlewareSource","src_","notSupportedMessage","sourceTech","selectSource","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","durationDisplay","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","modal","currentBreakpoint","currentWidth","candidateBreakpoint","maxWidth","breakpoints_","breakpoint_","currentBreakpointClass","updateCurrentBreakpoint_","responsive_","current","removeCurrentBreakpoint_","reset","artwork","tt","currentSources","baseOptions","tagOptions","dataSetup","childName","previousLogLevel_","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","instance","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","p","isBasic","registerPlugin","hasPlugin","subClass","superClass","TypeError","create","setPrototypeOf","_inherits","subClassMethods","methods","super_","setup","timeRanges","extend","middlewareUse","normalizeId","getPlayer","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","getAllPlayers","comp","writeable","deregisterPlugin","getPlugins","getPluginVersion","addLanguage","attach"],"mappings":"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OACA,UAEAC,GACA,IACA,UAEAC,GACA,MACA,oBAEAC,GACA,IACA,eAEAC,GACAlT,iBACAv8B,SAAA,yBACA+R,GAAA,+BACA+O,MAAA,QACAnsB,SACAm6C,EACAM,EACAD,EACAF,EACAF,EACAM,EACAH,EACAF,IAGAxS,mBACAx8B,SAAA,2BACA+R,GAAA,iCACA+O,MAAA,eACAnsB,SACA26C,EACAC,EACAC,IAGA9U,OACA16B,SAAA,yBACA+R,GAAA,+BACA+O,MAAA,QACAnsB,SACAy6C,EACAN,EACAK,EACAF,EACAF,EACAM,EACAH,EACAF,IAGArS,WACA38B,SAAA,2BACA+R,GAAA,KACA+O,MAAA,kBACAnsB,UAEA,OACA,SAGA,SACA,WAGA,YACA,cAGA,UACA,YAGA,aACA,gBAIAooC,YACA/8B,SAAA,4BACA+R,GAAA,0BACA+O,MAAA,cACAnsB,UAEA,wBACA,4BAGA,qBACA,yBAGA,oBACA,uBAGA,iBACA,oBAGA,SACA,WAGA,SACA,WAGA,aACA,gBAIAkoC,aACA78B,SAAA,6BACA+R,GAAA,wBACA+O,MAAA,YACAnsB,UAEA,OACA,QAGA,OACA,QAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGAm3B,QAAA,EACArB,OAAAilB,GAAA,SAAAA,EAAA,KAAAlqC,OAAAkqC,IAEApT,aACAt8B,SAAA,6BACA+R,GAAA,iCACA+O,MAAA,eACAnsB,SACA26C,EACAC,IAGA9S,aACAz8B,SAAA,6BACA+R,GAAA,2BACA+O,MAAA,SAEA4b,eACA18B,SAAA,+BACA+R,GAAA,6BACA+O,MAAA,eACAnsB,SACA66C,EACAD,EACAD,KAKA,SAAAK,EAAAp6C,EAAAk1B,GAIA,GAHAA,IACAl1B,EAAAk1B,EAAAl1B,IAEAA,GAAA,SAAAA,EACA,OAAAA,EANAk6C,EAAAhT,YAAA9nC,QAAA86C,EAAAlT,gBAAA5nC,cAwBAi7C,UAAA7vB,EACArX,YAAArB,EAAA1S,GACAA,EAAAktB,WAAA,EACA7B,MAAA3Y,EAAA1S,GACAc,KAA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A,cACA,uBACA,sBACA,iBACA,qBACA,mBACA,gBACA,yBACA,cACA,wBACA,kBACA,qCACA,iBACA,cACA,oBACA,uBACA,wBACA,oBACA,kBACA,gBACA,iBACA,8BACA,oBACA,oBACA,iBACA,4BACA,kBACA,+BACA,mBACA,iBACA,gBACA,SACAmB,EACAsf,EACAzB,EACAlC,EACAlH,EACA4H,EACA/F,EACAhJ,EACAlF,EACAiX,EACAyH,EACA2V,EACAqtB,EACAriD,EACA2f,EACA2iC,EACA9mD,EACA8b,EACAjY,EACAkjD,EACAl8B,EACAhL,EACAgf,EACApF,EACAiJ,EACAD,EACA9X,GAEA,aACA,MAAAq8B,GACA,WACA,QACA,UACA,UACA,UACA,iBACA,aACA,aACA,SACA,eACA,mBAEAC,GACAC,QAAA,UACAC,eAAA,iBACAC,QAAA,UACAC,OAAA,UAEAC,GACA,OACA,SACA,QACA,SACA,QACA,SACA,QAEAC,KACAD,EAAAhjD,QAAAsL,IACA,MAAA4qC,EAAA,MAAA5qC,EAAA43C,OAAA,QAAA53C,EAAA63C,UAAA,KAAA73C,EACA23C,EAAA33C,iBAAA4qC,MAEA,MAAAkN,GACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,KACAC,OAAA,KACAC,KAAAte,EAAAA,SAEA7mB,UAAAzG,EACA7I,YAAA1E,EAAArP,EAAA6c,GAOA,GANAxN,EAAA+N,GAAA/N,EAAA+N,IAAApd,EAAAod,iBAAAxJ,EAAAF,aACA1T,EAAAO,EAAAuH,OAAAub,EAAAolC,eAAAp5C,GAAArP,IACA+d,cAAA,EACA/d,EAAAiO,UAAA,EACAjO,EAAAmb,SAAA,EACAnb,EAAAge,qBAAA,GACAhe,EAAAue,SACA,GAAA,mBAAAlP,EAAAq5C,QAAA,CACA,MAAAA,EAAAr5C,EAAAq5C,QAAA,UACAA,GAAAA,EAAAj5C,eACAzP,EAAAue,SAAAmqC,EAAAj5C,aAAA,aAEA,CACA,IAAA9D,EAAA0D,EACA,KAAA1D,GAAA,IAAAA,EAAAT,UAAA,CACA,GAAA6G,EAAA3C,cAAA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","file":"../skylark-videojs.js","sourcesContent":["define('skylark-net-http/xhr',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-async/Deferred\",\r\n  \"skylark-langx-emitter/Evented\",\r\n  \"./http\"\r\n],function(skylark,types,objects,arrays,funcs,Deferred,Evented,http){\r\n\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: false,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            traditional : false,\r\n            \r\n            xhrFields : {\r\n                withCredentials : false\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                if (type(options.data) != \"string\") {\r\n                    options.data = param(options.data, options.traditional);\r\n                }\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n        \r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) {\r\n                  value = value();\r\n                }\r\n                if (value == null) {\r\n                  value = \"\";\r\n                }\r\n                this.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n            };\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                if (options.beforeSend) {\r\n                    options.beforeSend.call(this, xhr, options);\r\n                }                \r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = options.contentType || (isFormData ? false : 'application/x-www-form-urlencoded');\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                if (dataType == \"blob\" || dataType == \"arraybuffer\") {\r\n                    xhr.responseType = dataType;\r\n                }\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        //result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(xhr.responseText);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(xhr.responseText) ? null : JSON.parse(xhr.responseText);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = xhr.response; // new Blob([xhr.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n                \r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = value;\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    //xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest'); // del for s02\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn http.Xhr = Xhr;\t\r\n});\ndefine('skylark-videojs/fullscreen-api',[], function () {\n    'use strict';\n    const FullscreenApi = { prefixed: true };\n    const apiMap = [\n        [\n            'requestFullscreen',\n            'exitFullscreen',\n            'fullscreenElement',\n            'fullscreenEnabled',\n            'fullscreenchange',\n            'fullscreenerror',\n            'fullscreen'\n        ],\n        [\n            'webkitRequestFullscreen',\n            'webkitExitFullscreen',\n            'webkitFullscreenElement',\n            'webkitFullscreenEnabled',\n            'webkitfullscreenchange',\n            'webkitfullscreenerror',\n            '-webkit-full-screen'\n        ],\n        [\n            'mozRequestFullScreen',\n            'mozCancelFullScreen',\n            'mozFullScreenElement',\n            'mozFullScreenEnabled',\n            'mozfullscreenchange',\n            'mozfullscreenerror',\n            '-moz-full-screen'\n        ],\n        [\n            'msRequestFullscreen',\n            'msExitFullscreen',\n            'msFullscreenElement',\n            'msFullscreenEnabled',\n            'MSFullscreenChange',\n            'MSFullscreenError',\n            '-ms-fullscreen'\n        ]\n    ];\n    const specApi = apiMap[0];\n    let browserApi;\n    for (let i = 0; i < apiMap.length; i++) {\n        if (apiMap[i][1] in document) {\n            browserApi = apiMap[i];\n            break;\n        }\n    }\n    if (browserApi) {\n        for (let i = 0; i < browserApi.length; i++) {\n            FullscreenApi[specApi[i]] = browserApi[i];\n        }\n        FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n    }\n    return FullscreenApi;\n});\ndefine('skylark-videojs/utils/create-logger',[], function () {\n    'use strict';\n    let history = [];\n    const LogByTypeFactory = (name, log) => (type, level, args) => {\n        const lvl = log.levels[level];\n        const lvlRegExp = new RegExp(`^(${ lvl })$`);\n        if (type !== 'log') {\n            args.unshift(type.toUpperCase() + ':');\n        }\n        args.unshift(name + ':');\n        if (history) {\n            history.push([].concat(args));\n            const splice = history.length - 1000;\n            history.splice(0, splice > 0 ? splice : 0);\n        }\n        if (!window.console) {\n            return;\n        }\n        let fn = window.console[type];\n        if (!fn && type === 'debug') {\n            fn = window.console.info || window.console.log;\n        }\n        if (!fn || !lvl || !lvlRegExp.test(type)) {\n            return;\n        }\n        fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n    };\n    return function createLogger(name) {\n        let level = 'info';\n        let logByType;\n        const log = function (...args) {\n            logByType('log', level, args);\n        };\n        logByType = LogByTypeFactory(name, log);\n        log.createLogger = subname => createLogger(name + ': ' + subname);\n        log.levels = {\n            all: 'debug|log|warn|error',\n            off: '',\n            debug: 'debug|log|warn|error',\n            info: 'log|warn|error',\n            warn: 'warn|error',\n            error: 'error',\n            DEFAULT: level\n        };\n        log.level = lvl => {\n            if (typeof lvl === 'string') {\n                if (!log.levels.hasOwnProperty(lvl)) {\n                    throw new Error(`\"${ lvl }\" in not a valid log level`);\n                }\n                level = lvl;\n            }\n            return level;\n        };\n        log.history = () => history ? [].concat(history) : [];\n        log.history.filter = fname => {\n            return (history || []).filter(historyItem => {\n                return new RegExp(`.*${ fname }.*`).test(historyItem[0]);\n            });\n        };\n        log.history.clear = () => {\n            if (history) {\n                history.length = 0;\n            }\n        };\n        log.history.disable = () => {\n            if (history !== null) {\n                history.length = 0;\n                history = null;\n            }\n        };\n        log.history.enable = () => {\n            if (history === null) {\n                history = [];\n            }\n        };\n        log.error = (...args) => logByType('error', level, args);\n        log.warn = (...args) => logByType('warn', level, args);\n        log.debug = (...args) => logByType('debug', level, args);\n        return log;\n    };\n});\ndefine('skylark-videojs/utils/log',['./create-logger'], function (createLogger) {\n    'use strict';\n    const log = createLogger('VIDEOJS');\n    log.createLogger = createLogger;\n    return log;\n});\ndefine('skylark-videojs/utils/obj',[],function () {\n    'use strict';\n    const toString = Object.prototype.toString;\n    const keys = function (object) {\n        return isObject(object) ? Object.keys(object) : [];\n    };\n    function each(object, fn) {\n        keys(object).forEach(key => fn(object[key], key));\n    }\n    function reduce(object, fn, initial = 0) {\n        return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n    }\n    function assign(target, ...sources) {\n        if (Object.assign) {\n            return Object.assign(target, ...sources);\n        }\n        sources.forEach(source => {\n            if (!source) {\n                return;\n            }\n            each(source, (value, key) => {\n                target[key] = value;\n            });\n        });\n        return target;\n    }\n    function isObject(value) {\n        return !!value && typeof value === 'object';\n    }\n    function isPlain(value) {\n        return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n    }\n    return {\n        each: each,\n        reduce: reduce,\n        assign: assign,\n        isObject: isObject,\n        isPlain: isPlain\n    };\n});\ndefine('skylark-videojs/utils/computed-style',[\n    'skylark-langx-globals/window'\n], function (window) {\n    'use strict';\n    function computedStyle(el, prop) {\n        if (!el || !prop) {\n            return '';\n        }\n        if (typeof window.getComputedStyle === 'function') {\n            const computedStyleValue = window.getComputedStyle(el);\n            return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n        }\n        return '';\n    }\n    return computedStyle;\n});\ndefine('skylark-videojs/utils/browser',[\n    \"skylark-langx-globals/window\",\n    \"skylark-langx-globals/document\"\n], function (window,document) {\n    'use strict';\n\n    function isReal() {\n        return document === window.document;\n    }\n\n    const USER_AGENT = window.navigator && window.navigator.userAgent || '';\n    const webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\n    const appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n    const IS_IPOD = /iPod/i.test(USER_AGENT);\n    const IOS_VERSION = function () {\n        const match = USER_AGENT.match(/OS (\\d+)_/i);\n        if (match && match[1]) {\n            return match[1];\n        }\n        return null;\n    }();\n    const IS_ANDROID = /Android/i.test(USER_AGENT);\n    const ANDROID_VERSION = function () {\n        const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n        if (!match) {\n            return null;\n        }\n        const major = match[1] && parseFloat(match[1]);\n        const minor = match[2] && parseFloat(match[2]);\n        if (major && minor) {\n            return parseFloat(match[1] + '.' + match[2]);\n        } else if (major) {\n            return major;\n        }\n        return null;\n    }();\n    const IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n    const IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n    const IS_EDGE = /Edg/i.test(USER_AGENT);\n    const IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n    const CHROME_VERSION = function () {\n        const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n        if (match && match[2]) {\n            return parseFloat(match[2]);\n        }\n        return null;\n    }();\n    const IE_VERSION = function () {\n        const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n        let version = result && parseFloat(result[1]);\n        if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n            version = 11;\n        }\n        return version;\n    }();\n    const IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n    const IS_WINDOWS = /Windows/i.test(USER_AGENT);\n    const TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch));\n    const IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n    const IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n    const IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n    const IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n    return {\n        IS_IPOD: IS_IPOD,\n        IOS_VERSION: IOS_VERSION,\n        IS_ANDROID: IS_ANDROID,\n        ANDROID_VERSION: ANDROID_VERSION,\n        IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n        IS_FIREFOX: IS_FIREFOX,\n        IS_EDGE: IS_EDGE,\n        IS_CHROME: IS_CHROME,\n        CHROME_VERSION: CHROME_VERSION,\n        IE_VERSION: IE_VERSION,\n        IS_SAFARI: IS_SAFARI,\n        IS_WINDOWS: IS_WINDOWS,\n        TOUCH_ENABLED: TOUCH_ENABLED,\n        IS_IPAD: IS_IPAD,\n        IS_IPHONE: IS_IPHONE,\n        IS_IOS: IS_IOS,\n        IS_ANY_SAFARI: IS_ANY_SAFARI,\n\n        isReal\n    };\n});\ndefine('skylark-videojs/utils/dom',[\n    \"skylark-langx-globals/window\",\n    \"skylark-langx-globals/document\",   \n    '../fullscreen-api',\n    './log',\n    './obj',\n    './computed-style',\n    './browser'\n], function (window,document,fs, log, obj, computedStyle, browser) {\n    'use strict';\n    function isNonBlankString(str) {\n        return typeof str === 'string' && Boolean(str.trim());\n    }\n    function throwIfWhitespace(str) {\n        if (str.indexOf(' ') >= 0) {\n            throw new Error('class has illegal whitespace characters');\n        }\n    }\n    function classRegExp(className) {\n        return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n    }\n\n    function isEl(value) {\n        return obj.isObject(value) && value.nodeType === 1;\n    }\n    function isInFrame() {\n        try {\n            return window.parent !== window.self;\n        } catch (x) {\n            return true;\n        }\n    }\n    function createQuerier(method) {\n        return function (selector, context) {\n            if (!isNonBlankString(selector)) {\n                return document[method](null);\n            }\n            if (isNonBlankString(context)) {\n                context = document.querySelector(context);\n            }\n            const ctx = isEl(context) ? context : document;\n            return ctx[method] && ctx[method](selector);\n        };\n    }\n    function createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n        const el = document.createElement(tagName);\n        Object.getOwnPropertyNames(properties).forEach(function (propName) {\n            const val = properties[propName];\n            if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n                log.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + `createEl(type, properties, attributes). Attempting to set ${ propName } to ${ val }.`);\n                el.setAttribute(propName, val);\n            } else if (propName === 'textContent') {\n                textContent(el, val);\n            } else if (el[propName] !== val || propName === 'tabIndex') {\n                el[propName] = val;\n            }\n        });\n        Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n            el.setAttribute(attrName, attributes[attrName]);\n        });\n        if (content) {\n            appendContent(el, content);\n        }\n        return el;\n    }\n    function textContent(el, text) {\n        if (typeof el.textContent === 'undefined') {\n            el.innerText = text;\n        } else {\n            el.textContent = text;\n        }\n        return el;\n    }\n    function prependTo(child, parent) {\n        if (parent.firstChild) {\n            parent.insertBefore(child, parent.firstChild);\n        } else {\n            parent.appendChild(child);\n        }\n    }\n    function hasClass(element, classToCheck) {\n        throwIfWhitespace(classToCheck);\n        if (element.classList) {\n            return element.classList.contains(classToCheck);\n        }\n        return classRegExp(classToCheck).test(element.className);\n    }\n    function addClass(element, classToAdd) {\n        if (element.classList) {\n            element.classList.add(classToAdd);\n        } else if (!hasClass(element, classToAdd)) {\n            element.className = (element.className + ' ' + classToAdd).trim();\n        }\n        return element;\n    }\n    function removeClass(element, classToRemove) {\n        if (element.classList) {\n            element.classList.remove(classToRemove);\n        } else {\n            throwIfWhitespace(classToRemove);\n            element.className = element.className.split(/\\s+/).filter(function (c) {\n                return c !== classToRemove;\n            }).join(' ');\n        }\n        return element;\n    }\n    function toggleClass(element, classToToggle, predicate) {\n        const has = hasClass(element, classToToggle);\n        if (typeof predicate === 'function') {\n            predicate = predicate(element, classToToggle);\n        }\n        if (typeof predicate !== 'boolean') {\n            predicate = !has;\n        }\n        if (predicate === has) {\n            return;\n        }\n        if (predicate) {\n            addClass(element, classToToggle);\n        } else {\n            removeClass(element, classToToggle);\n        }\n        return element;\n    }\n    function setAttributes(el, attributes) {\n        Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n            const attrValue = attributes[attrName];\n            if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n                el.removeAttribute(attrName);\n            } else {\n                el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n            }\n        });\n    }\n    function getAttributes(tag) {\n        const obj = {};\n        const knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n        if (tag && tag.attributes && tag.attributes.length > 0) {\n            const attrs = tag.attributes;\n            for (let i = attrs.length - 1; i >= 0; i--) {\n                const attrName = attrs[i].name;\n                let attrVal = attrs[i].value;\n                if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n                    attrVal = attrVal !== null ? true : false;\n                }\n                obj[attrName] = attrVal;\n            }\n        }\n        return obj;\n    }\n    function getAttribute(el, attribute) {\n        return el.getAttribute(attribute);\n    }\n    function setAttribute(el, attribute, value) {\n        el.setAttribute(attribute, value);\n    }\n    function removeAttribute(el, attribute) {\n        el.removeAttribute(attribute);\n    }\n    function blockTextSelection() {\n        document.body.focus();\n        document.onselectstart = function () {\n            return false;\n        };\n    }\n    function unblockTextSelection() {\n        document.onselectstart = function () {\n            return true;\n        };\n    }\n    function getBoundingClientRect(el) {\n        if (el && el.getBoundingClientRect && el.parentNode) {\n            const rect = el.getBoundingClientRect();\n            const result = {};\n            [\n                'bottom',\n                'height',\n                'left',\n                'right',\n                'top',\n                'width'\n            ].forEach(k => {\n                if (rect[k] !== undefined) {\n                    result[k] = rect[k];\n                }\n            });\n            if (!result.height) {\n                result.height = parseFloat(computedStyle(el, 'height'));\n            }\n            if (!result.width) {\n                result.width = parseFloat(computedStyle(el, 'width'));\n            }\n            return result;\n        }\n    }\n    function findPosition(el) {\n        if (!el || el && !el.offsetParent) {\n            return {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0\n            };\n        }\n        const width = el.offsetWidth;\n        const height = el.offsetHeight;\n        let left = 0;\n        let top = 0;\n        while (el.offsetParent && el !== document[fs.fullscreenElement]) {\n            left += el.offsetLeft;\n            top += el.offsetTop;\n            el = el.offsetParent;\n        }\n        return {\n            left,\n            top,\n            width,\n            height\n        };\n    }\n    function getPointerPosition(el, event) {\n        const translated = {\n            x: 0,\n            y: 0\n        };\n        if (browser.IS_IOS) {\n            let item = el;\n            while (item && item.nodeName.toLowerCase() !== 'html') {\n                const transform = computedStyle(item, 'transform');\n                if (/^matrix/.test(transform)) {\n                    const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n                    translated.x += values[4];\n                    translated.y += values[5];\n                } else if (/^matrix3d/.test(transform)) {\n                    const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n                    translated.x += values[12];\n                    translated.y += values[13];\n                }\n                item = item.parentNode;\n            }\n        }\n        const position = {};\n        const boxTarget = findPosition(event.target);\n        const box = findPosition(el);\n        const boxW = box.width;\n        const boxH = box.height;\n        let offsetY = event.offsetY - (box.top - boxTarget.top);\n        let offsetX = event.offsetX - (box.left - boxTarget.left);\n        if (event.changedTouches) {\n            offsetX = event.changedTouches[0].pageX - box.left;\n            offsetY = event.changedTouches[0].pageY + box.top;\n            if (browser.IS_IOS) {\n                offsetX -= translated.x;\n                offsetY -= translated.y;\n            }\n        }\n        position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n        position.x = Math.max(0, Math.min(1, offsetX / boxW));\n        return position;\n    }\n    function isTextNode(value) {\n        return obj.isObject(value) && value.nodeType === 3;\n    }\n    function emptyEl(el) {\n        while (el.firstChild) {\n            el.removeChild(el.firstChild);\n        }\n        return el;\n    }\n    function normalizeContent(content) {\n        if (typeof content === 'function') {\n            content = content();\n        }\n        return (Array.isArray(content) ? content : [content]).map(value => {\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (isEl(value) || isTextNode(value)) {\n                return value;\n            }\n            if (typeof value === 'string' && /\\S/.test(value)) {\n                return document.createTextNode(value);\n            }\n        }).filter(value => value);\n    }\n    function appendContent(el, content) {\n        normalizeContent(content).forEach(node => el.appendChild(node));\n        return el;\n    }\n    function insertContent(el, content) {\n        return appendContent(emptyEl(el), content);\n    }\n    function isSingleLeftClick(event) {\n        if (event.button === undefined && event.buttons === undefined) {\n            return true;\n        }\n        if (event.button === 0 && event.buttons === undefined) {\n            return true;\n        }\n        if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n            return true;\n        }\n        if (event.button !== 0 || event.buttons !== 1) {\n            return false;\n        }\n        return true;\n    }\n    const $ = createQuerier('querySelector');\n    const $$ = createQuerier('querySelectorAll');\n    return {\n        isReal: browser.isReal,\n        isEl: isEl,\n        isInFrame: isInFrame,\n        createEl: createEl,\n        textContent: textContent,\n        prependTo: prependTo,\n        hasClass: hasClass,\n        addClass: addClass,\n        removeClass: removeClass,\n        toggleClass: toggleClass,\n        setAttributes: setAttributes,\n        getAttributes: getAttributes,\n        getAttribute: getAttribute,\n        setAttribute: setAttribute,\n        removeAttribute: removeAttribute,\n        blockTextSelection: blockTextSelection,\n        unblockTextSelection: unblockTextSelection,\n        getBoundingClientRect: getBoundingClientRect,\n        findPosition: findPosition,\n        getPointerPosition: getPointerPosition,\n        isTextNode: isTextNode,\n        emptyEl: emptyEl,\n        normalizeContent: normalizeContent,\n        appendContent: appendContent,\n        insertContent: insertContent,\n        isSingleLeftClick: isSingleLeftClick,\n        $: $,\n        $$: $$\n    };\n});\ndefine('skylark-videojs/setup',[\n    'skylark-langx-globals/document',\n    './utils/dom'\n], function (document,Dom) {\n    'use strict';\n    let _windowLoaded = false;\n    let videojs;\n    const autoSetup = function () {\n        if (!Dom.isReal() || videojs.options.autoSetup === false) {\n            return;\n        }\n        const vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n        const audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n        const divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n        const mediaEls = vids.concat(audios, divs);\n        if (mediaEls && mediaEls.length > 0) {\n            for (let i = 0, e = mediaEls.length; i < e; i++) {\n                const mediaEl = mediaEls[i];\n                if (mediaEl && mediaEl.getAttribute) {\n                    if (mediaEl.player === undefined) {\n                        const options = mediaEl.getAttribute('data-setup');\n                        if (options !== null) {\n                            videojs(mediaEl);\n                        }\n                    }\n                } else {\n                    autoSetupTimeout(1);\n                    break;\n                }\n            }\n        } else if (!_windowLoaded) {\n            autoSetupTimeout(1);\n        }\n    };\n    function autoSetupTimeout(wait, vjs) {\n        if (vjs) {\n            videojs = vjs;\n        }\n        window.setTimeout(autoSetup, wait);\n    }\n    function setWindowLoaded() {\n        _windowLoaded = true;\n        window.removeEventListener('load', setWindowLoaded);\n    }\n    if (Dom.isReal()) {\n        if (document.readyState === 'complete') {\n            setWindowLoaded();\n        } else {\n            window.addEventListener('load', setWindowLoaded);\n        }\n    }\n    const hasLoaded = function () {\n        return _windowLoaded;\n    };\n    return {\n        autoSetup,\n        autoSetupTimeout,\n        hasLoaded\n    };\n});\ndefine('skylark-videojs/utils/stylesheet',[\n    'skylark-langx-globals/document'\n], function (document) {\n    'use strict';\n    const createStyleElement = function (className) {\n        const style = document.createElement('style');\n        style.className = className;\n        return style;\n    };\n    const setTextContent = function (el, content) {\n        if (el.styleSheet) {\n            el.styleSheet.cssText = content;\n        } else {\n            el.textContent = content;\n        }\n    };\n    return {\n        createStyleElement: createStyleElement,\n        setTextContent: setTextContent\n    };\n});\ndefine('skylark-videojs/utils/guid',[],function () {\n    'use strict';\n    const _initialGuid = 3;\n    let _guid = _initialGuid;\n    function newGUID() {\n        return _guid++;\n    }\n    function resetGuidInTestsOnly() {\n        _guid = _initialGuid;\n    }\n    return {\n        newGUID: newGUID,\n        resetGuidInTestsOnly: resetGuidInTestsOnly\n    };\n});\ndefine('skylark-videojs/utils/dom-data',[\n    './log',\n    './guid'\n], function (log, Guid) {\n    'use strict';\n    let FakeWeakMap;\n    if (!window.WeakMap) {\n        FakeWeakMap = class {\n            constructor() {\n                this.vdata = 'vdata' + Math.floor(window.performance && window.performance.now() || Date.now());\n                this.data = {};\n            }\n            set(key, value) {\n                const access = key[this.vdata] || Guid.newGUID();\n                if (!key[this.vdata]) {\n                    key[this.vdata] = access;\n                }\n                this.data[access] = value;\n                return this;\n            }\n            get(key) {\n                const access = key[this.vdata];\n                if (access) {\n                    return this.data[access];\n                }\n                log('We have no data for this element', key);\n                return undefined;\n            }\n            has(key) {\n                const access = key[this.vdata];\n                return access in this.data;\n            }\n            delete(key) {\n                const access = key[this.vdata];\n                if (access) {\n                    delete this.data[access];\n                    delete key[this.vdata];\n                }\n            }\n        };\n    }\n    return window.WeakMap ? new WeakMap() : new FakeWeakMap();\n});\ndefine('skylark-videojs/utils/events',[\n    'skylark-langx-globals/document',\n    './dom-data',\n    './guid',\n    './log'\n], function (document, DomData, Guid, log) {\n    'use strict';\n    function _cleanUpEvents(elem, type) {\n        if (!DomData.has(elem)) {\n            return;\n        }\n        const data = DomData.get(elem);\n        if (data.handlers[type].length === 0) {\n            delete data.handlers[type];\n            if (elem.removeEventListener) {\n                elem.removeEventListener(type, data.dispatcher, false);\n            } else if (elem.detachEvent) {\n                elem.detachEvent('on' + type, data.dispatcher);\n            }\n        }\n        if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n            delete data.handlers;\n            delete data.dispatcher;\n            delete data.disabled;\n        }\n        if (Object.getOwnPropertyNames(data).length === 0) {\n            DomData.delete(elem);\n        }\n    }\n    function _handleMultipleEvents(fn, elem, types, callback) {\n        types.forEach(function (type) {\n            fn(elem, type, callback);\n        });\n    }\n    function fixEvent(event) {\n        if (event.fixed_) {\n            return event;\n        }\n        function returnTrue() {\n            return true;\n        }\n        function returnFalse() {\n            return false;\n        }\n        if (!event || !event.isPropagationStopped) {\n            const old = event || window.event;\n            event = {};\n            for (const key in old) {\n                if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n                    if (!(key === 'returnValue' && old.preventDefault)) {\n                        event[key] = old[key];\n                    }\n                }\n            }\n            if (!event.target) {\n                event.target = event.srcElement || document;\n            }\n            if (!event.relatedTarget) {\n                event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n            }\n            event.preventDefault = function () {\n                if (old.preventDefault) {\n                    old.preventDefault();\n                }\n                event.returnValue = false;\n                old.returnValue = false;\n                event.defaultPrevented = true;\n            };\n            event.defaultPrevented = false;\n            event.stopPropagation = function () {\n                if (old.stopPropagation) {\n                    old.stopPropagation();\n                }\n                event.cancelBubble = true;\n                old.cancelBubble = true;\n                event.isPropagationStopped = returnTrue;\n            };\n            event.isPropagationStopped = returnFalse;\n            event.stopImmediatePropagation = function () {\n                if (old.stopImmediatePropagation) {\n                    old.stopImmediatePropagation();\n                }\n                event.isImmediatePropagationStopped = returnTrue;\n                event.stopPropagation();\n            };\n            event.isImmediatePropagationStopped = returnFalse;\n            if (event.clientX !== null && event.clientX !== undefined) {\n                const doc = document.documentElement;\n                const body = document.body;\n                event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n                event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n            }\n            event.which = event.charCode || event.keyCode;\n            if (event.button !== null && event.button !== undefined) {\n                event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n            }\n        }\n        event.fixed_ = true;\n        return event;\n    }\n    let _supportsPassive;\n    const supportsPassive = function () {\n        if (typeof _supportsPassive !== 'boolean') {\n            _supportsPassive = false;\n            try {\n                const opts = Object.defineProperty({}, 'passive', {\n                    get() {\n                        _supportsPassive = true;\n                    }\n                });\n                window.addEventListener('test', null, opts);\n                window.removeEventListener('test', null, opts);\n            } catch (e) {\n            }\n        }\n        return _supportsPassive;\n    };\n    const passiveEvents = [\n        'touchstart',\n        'touchmove'\n    ];\n    function on(elem, type, fn) {\n        if (Array.isArray(type)) {\n            return _handleMultipleEvents(on, elem, type, fn);\n        }\n        if (!DomData.has(elem)) {\n            DomData.set(elem, {});\n        }\n        const data = DomData.get(elem);\n        if (!data.handlers) {\n            data.handlers = {};\n        }\n        if (!data.handlers[type]) {\n            data.handlers[type] = [];\n        }\n        if (!fn.guid) {\n            fn.guid = Guid.newGUID();\n        }\n        data.handlers[type].push(fn);\n        if (!data.dispatcher) {\n            data.disabled = false;\n            data.dispatcher = function (event, hash) {\n                if (data.disabled) {\n                    return;\n                }\n                event = fixEvent(event);\n                const handlers = data.handlers[event.type];\n                if (handlers) {\n                    const handlersCopy = handlers.slice(0);\n                    for (let m = 0, n = handlersCopy.length; m < n; m++) {\n                        if (event.isImmediatePropagationStopped()) {\n                            break;\n                        } else {\n                            try {\n                                handlersCopy[m].call(elem, event, hash);\n                            } catch (e) {\n                                log.error(e);\n                            }\n                        }\n                    }\n                }\n            };\n        }\n        if (data.handlers[type].length === 1) {\n            if (elem.addEventListener) {\n                let options = false;\n                if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n                    options = { passive: true };\n                }\n                elem.addEventListener(type, data.dispatcher, options);\n            } else if (elem.attachEvent) {\n                elem.attachEvent('on' + type, data.dispatcher);\n            }\n        }\n    }\n    function off(elem, type, fn) {\n        if (!DomData.has(elem)) {\n            return;\n        }\n        const data = DomData.get(elem);\n        if (!data.handlers) {\n            return;\n        }\n        if (Array.isArray(type)) {\n            return _handleMultipleEvents(off, elem, type, fn);\n        }\n        const removeType = function (el, t) {\n            data.handlers[t] = [];\n            _cleanUpEvents(el, t);\n        };\n        if (type === undefined) {\n            for (const t in data.handlers) {\n                if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n                    removeType(elem, t);\n                }\n            }\n            return;\n        }\n        const handlers = data.handlers[type];\n        if (!handlers) {\n            return;\n        }\n        if (!fn) {\n            removeType(elem, type);\n            return;\n        }\n        if (fn.guid) {\n            for (let n = 0; n < handlers.length; n++) {\n                if (handlers[n].guid === fn.guid) {\n                    handlers.splice(n--, 1);\n                }\n            }\n        }\n        _cleanUpEvents(elem, type);\n    }\n    function trigger(elem, event, hash) {\n        const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n        const parent = elem.parentNode || elem.ownerDocument;\n        if (typeof event === 'string') {\n            event = {\n                type: event,\n                target: elem\n            };\n        } else if (!event.target) {\n            event.target = elem;\n        }\n        event = fixEvent(event);\n        if (elemData.dispatcher) {\n            elemData.dispatcher.call(elem, event, hash);\n        }\n        if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n            trigger.call(null, parent, event, hash);\n        } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n            if (!DomData.has(event.target)) {\n                DomData.set(event.target, {});\n            }\n            const targetData = DomData.get(event.target);\n            if (event.target[event.type]) {\n                targetData.disabled = true;\n                if (typeof event.target[event.type] === 'function') {\n                    event.target[event.type]();\n                }\n                targetData.disabled = false;\n            }\n        }\n        return !event.defaultPrevented;\n    }\n    function one(elem, type, fn) {\n        if (Array.isArray(type)) {\n            return _handleMultipleEvents(one, elem, type, fn);\n        }\n        const func = function () {\n            off(elem, type, func);\n            fn.apply(this, arguments);\n        };\n        func.guid = fn.guid = fn.guid || Guid.newGUID();\n        on(elem, type, func);\n    }\n    function any(elem, type, fn) {\n        const func = function () {\n            off(elem, type, func);\n            fn.apply(this, arguments);\n        };\n        func.guid = fn.guid = fn.guid || Guid.newGUID();\n        on(elem, type, func);\n    }\n    return {\n        fixEvent: fixEvent,\n        on: on,\n        off: off,\n        trigger: trigger,\n        one: one,\n        any: any\n    };\n});\ndefine('skylark-videojs/utils/fn',[\n    './guid'\n], function (GUID) {\n    'use strict';\n    const UPDATE_REFRESH_INTERVAL = 30;\n    const bind = function (context, fn, uid) {\n        if (!fn.guid) {\n            fn.guid = GUID.newGUID();\n        }\n        const bound = fn.bind(context);\n        bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n        return bound;\n    };\n    const throttle = function (fn, wait) {\n        let last = window.performance.now();\n        const throttled = function (...args) {\n            const now = window.performance.now();\n            if (now - last >= wait) {\n                fn(...args);\n                last = now;\n            }\n        };\n        return throttled;\n    };\n    const debounce = function (func, wait, immediate, context = window) {\n        let timeout;\n        const cancel = () => {\n            context.clearTimeout(timeout);\n            timeout = null;\n        };\n        const debounced = function () {\n            const self = this;\n            const args = arguments;\n            let later = function () {\n                timeout = null;\n                later = null;\n                if (!immediate) {\n                    func.apply(self, args);\n                }\n            };\n            if (!timeout && immediate) {\n                func.apply(self, args);\n            }\n            context.clearTimeout(timeout);\n            timeout = context.setTimeout(later, wait);\n        };\n        debounced.cancel = cancel;\n        return debounced;\n    };\n    return {\n        UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n        bind: bind,\n        throttle: throttle,\n        debounce: debounce\n    };\n});\ndefine('skylark-videojs/event-target',[\n    './utils/events'\n], function (Events) {\n    'use strict';\n    const EventTarget = function () {\n    };\n    EventTarget.prototype.allowedEvents_ = {};\n    EventTarget.prototype.on = function (type, fn) {\n        const ael = this.addEventListener;\n        this.addEventListener = () => {\n        };\n        Events.on(this, type, fn);\n        this.addEventListener = ael;\n    };\n    EventTarget.prototype.addEventListener = EventTarget.prototype.on;\n    EventTarget.prototype.off = function (type, fn) {\n        Events.off(this, type, fn);\n    };\n    EventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n    EventTarget.prototype.one = function (type, fn) {\n        const ael = this.addEventListener;\n        this.addEventListener = () => {\n        };\n        Events.one(this, type, fn);\n        this.addEventListener = ael;\n    };\n    EventTarget.prototype.any = function (type, fn) {\n        const ael = this.addEventListener;\n        this.addEventListener = () => {\n        };\n        Events.any(this, type, fn);\n        this.addEventListener = ael;\n    };\n    EventTarget.prototype.trigger = function (event) {\n        const type = event.type || event;\n        if (typeof event === 'string') {\n            event = { type };\n        }\n        event = Events.fixEvent(event);\n        if (this.allowedEvents_[type] && this['on' + type]) {\n            this['on' + type](event);\n        }\n        Events.trigger(this, event);\n    };\n    EventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n    let EVENT_MAP;\n    EventTarget.prototype.queueTrigger = function (event) {\n        if (!EVENT_MAP) {\n            EVENT_MAP = new Map();\n        }\n        const type = event.type || event;\n        let map = EVENT_MAP.get(this);\n        if (!map) {\n            map = new Map();\n            EVENT_MAP.set(this, map);\n        }\n        const oldTimeout = map.get(type);\n        map.delete(type);\n        window.clearTimeout(oldTimeout);\n        const timeout = window.setTimeout(() => {\n            if (map.size === 0) {\n                map = null;\n                EVENT_MAP.delete(this);\n            }\n            this.trigger(event);\n        }, 0);\n        map.set(type, timeout);\n    };\n    return EventTarget;\n});\ndefine('skylark-videojs/mixins/evented',[\n    '../utils/dom',\n    '../utils/events',\n    '../utils/fn',\n    '../utils/obj',\n    '../event-target',\n    '../utils/log'\n], function (Dom, Events, Fn, Obj, EventTarget, log) {\n    'use strict';\n    const objName = obj => {\n        if (typeof obj.name === 'function') {\n            return obj.name();\n        }\n        if (typeof obj.name === 'string') {\n            return obj.name;\n        }\n        if (obj.name_) {\n            return obj.name_;\n        }\n        if (obj.constructor && obj.constructor.name) {\n            return obj.constructor.name;\n        }\n        return typeof obj;\n    };\n    const isEvented = object => object instanceof EventTarget || !!object.eventBusEl_ && [\n        'on',\n        'one',\n        'off',\n        'trigger'\n    ].every(k => typeof object[k] === 'function');\n    const addEventedCallback = (target, callback) => {\n        if (isEvented(target)) {\n            callback();\n        } else {\n            if (!target.eventedCallbacks) {\n                target.eventedCallbacks = [];\n            }\n            target.eventedCallbacks.push(callback);\n        }\n    };\n    const isValidEventType = type => typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n    const validateTarget = (target, obj, fnName) => {\n        if (!target || !target.nodeName && !isEvented(target)) {\n            throw new Error(`Invalid target for ${ objName(obj) }#${ fnName }; must be a DOM node or evented object.`);\n        }\n    };\n    const validateEventType = (type, obj, fnName) => {\n        if (!isValidEventType(type)) {\n            throw new Error(`Invalid event type for ${ objName(obj) }#${ fnName }; must be a non-empty string or array.`);\n        }\n    };\n    const validateListener = (listener, obj, fnName) => {\n        if (typeof listener !== 'function') {\n            throw new Error(`Invalid listener for ${ objName(obj) }#${ fnName }; must be a function.`);\n        }\n    };\n    const normalizeListenArgs = (self, args, fnName) => {\n        const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n        let target;\n        let type;\n        let listener;\n        if (isTargetingSelf) {\n            target = self.eventBusEl_;\n            if (args.length >= 3) {\n                args.shift();\n            }\n            [type, listener] = args;\n        } else {\n            [target, type, listener] = args;\n        }\n        validateTarget(target, self, fnName);\n        validateEventType(type, self, fnName);\n        validateListener(listener, self, fnName);\n        listener = Fn.bind(self, listener);\n        return {\n            isTargetingSelf,\n            target,\n            type,\n            listener\n        };\n    };\n    const listen = (target, method, type, listener) => {\n        validateTarget(target, target, method);\n        if (target.nodeName) {\n            Events[method](target, type, listener);\n        } else {\n            target[method](type, listener);\n        }\n    };\n    const EventedMixin = {\n        on(...args) {\n            const {isTargetingSelf, target, type, listener} = normalizeListenArgs(this, args, 'on');\n            listen(target, 'on', type, listener);\n            if (!isTargetingSelf) {\n                const removeListenerOnDispose = () => this.off(target, type, listener);\n                removeListenerOnDispose.guid = listener.guid;\n                const removeRemoverOnTargetDispose = () => this.off('dispose', removeListenerOnDispose);\n                removeRemoverOnTargetDispose.guid = listener.guid;\n                listen(this, 'on', 'dispose', removeListenerOnDispose);\n                listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n            }\n        },\n        one(...args) {\n            const {isTargetingSelf, target, type, listener} = normalizeListenArgs(this, args, 'one');\n            if (isTargetingSelf) {\n                listen(target, 'one', type, listener);\n            } else {\n                const wrapper = (...largs) => {\n                    this.off(target, type, wrapper);\n                    listener.apply(null, largs);\n                };\n                wrapper.guid = listener.guid;\n                listen(target, 'one', type, wrapper);\n            }\n        },\n        any(...args) {\n            const {isTargetingSelf, target, type, listener} = normalizeListenArgs(this, args, 'any');\n            if (isTargetingSelf) {\n                listen(target, 'any', type, listener);\n            } else {\n                const wrapper = (...largs) => {\n                    this.off(target, type, wrapper);\n                    listener.apply(null, largs);\n                };\n                wrapper.guid = listener.guid;\n                listen(target, 'any', type, wrapper);\n            }\n        },\n        off(targetOrType, typeOrListener, listener) {\n            if (!targetOrType || isValidEventType(targetOrType)) {\n                Events.off(this.eventBusEl_, targetOrType, typeOrListener);\n            } else {\n                const target = targetOrType;\n                const type = typeOrListener;\n                validateTarget(target, this, 'off');\n                validateEventType(type, this, 'off');\n                validateListener(listener, this, 'off');\n                listener = Fn.bind(this, listener);\n                this.off('dispose', listener);\n                if (target.nodeName) {\n                    Events.off(target, type, listener);\n                    Events.off(target, 'dispose', listener);\n                } else if (isEvented(target)) {\n                    target.off(type, listener);\n                    target.off('dispose', listener);\n                }\n            }\n        },\n        trigger(event, hash) {\n            validateTarget(this.eventBusEl_, this, 'trigger');\n            const type = event && typeof event !== 'string' ? event.type : event;\n            if (!isValidEventType(type)) {\n                const error = `Invalid event type for ${ objName(this) }#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.';\n                if (event) {\n                    (this.log || log).error(error);\n                } else {\n                    throw new Error(error);\n                }\n            }\n            return Events.trigger(this.eventBusEl_, event, hash);\n        }\n    };\n    function evented(target, options = {}) {\n        const {eventBusKey} = options;\n        if (eventBusKey) {\n            if (!target[eventBusKey].nodeName) {\n                throw new Error(`The eventBusKey \"${ eventBusKey }\" does not refer to an element.`);\n            }\n            target.eventBusEl_ = target[eventBusKey];\n        } else {\n            target.eventBusEl_ = Dom.createEl('span', { className: 'vjs-event-bus' });\n        }\n        Obj.assign(target, EventedMixin);\n        if (target.eventedCallbacks) {\n            target.eventedCallbacks.forEach(callback => {\n                callback();\n            });\n        }\n        target.on('dispose', () => {\n            target.off();\n            window.setTimeout(() => {\n                target.eventBusEl_ = null;\n            }, 0);\n        });\n        return target;\n    }\n\n    evented.isEvented = isEvented;\n    evented.addEventedCallback = addEventedCallback;\n\n    return evented;\n    \n});\ndefine('skylark-videojs/mixins/stateful',[\n    './evented',\n    '../utils/obj'\n], function (evented, Obj) {\n    'use strict';\n    const StatefulMixin = {\n        state: {},\n        setState(stateUpdates) {\n            if (typeof stateUpdates === 'function') {\n                stateUpdates = stateUpdates();\n            }\n            let changes;\n            Obj.each(stateUpdates, (value, key) => {\n                if (this.state[key] !== value) {\n                    changes = changes || {};\n                    changes[key] = {\n                        from: this.state[key],\n                        to: value\n                    };\n                }\n                this.state[key] = value;\n            });\n            if (changes && evented.isEvented(this)) {\n                this.trigger({\n                    changes,\n                    type: 'statechanged'\n                });\n            }\n            return changes;\n        }\n    };\n    function stateful(target, defaultState) {\n        Obj.assign(target, StatefulMixin);\n        target.state = Obj.assign({}, target.state, defaultState);\n        if (typeof target.handleStateChanged === 'function' && evented.isEvented(target)) {\n            target.on('statechanged', target.handleStateChanged);\n        }\n        return target;\n    }\n    return stateful;\n});\ndefine('skylark-videojs/utils/string-cases',[],function () {\n    'use strict';\n    const toLowerCase = function (string) {\n        if (typeof string !== 'string') {\n            return string;\n        }\n        return string.replace(/./, w => w.toLowerCase());\n    };\n    const toTitleCase = function (string) {\n        if (typeof string !== 'string') {\n            return string;\n        }\n        return string.replace(/./, w => w.toUpperCase());\n    };\n    const titleCaseEquals = function (str1, str2) {\n        return toTitleCase(str1) === toTitleCase(str2);\n    };\n    return {\n        toLowerCase: toLowerCase,\n        toTitleCase: toTitleCase,\n        titleCaseEquals: titleCaseEquals\n    };\n});\ndefine('skylark-videojs/utils/merge-options',['./obj'], function (obj) {\n    'use strict';\n    function mergeOptions(...sources) {\n        const result = {};\n        sources.forEach(source => {\n            if (!source) {\n                return;\n            }\n            obj.each(source, (value, key) => {\n                if (!obj.isPlain(value)) {\n                    result[key] = value;\n                    return;\n                }\n                if (!obj.isPlain(result[key])) {\n                    result[key] = {};\n                }\n                result[key] = mergeOptions(result[key], value);\n            });\n        });\n        return result;\n    }\n    return mergeOptions;\n});\ndefine('skylark-videojs/utils/map',[], function () {\n    'use strict';\n    class MapSham {\n        constructor() {\n            this.map_ = {};\n        }\n        has(key) {\n            return key in this.map_;\n        }\n        delete(key) {\n            const has = this.has(key);\n            delete this.map_[key];\n            return has;\n        }\n        set(key, value) {\n            this.map_[key] = value;\n            return this;\n        }\n        forEach(callback, thisArg) {\n            for (const key in this.map_) {\n                callback.call(thisArg, this.map_[key], key, this);\n            }\n        }\n    }\n    return window.Map ? window.Map : MapSham;\n});\ndefine('skylark-videojs/utils/set',[], function () {\n    'use strict';\n    class SetSham {\n        constructor() {\n            this.set_ = {};\n        }\n        has(key) {\n            return key in this.set_;\n        }\n        delete(key) {\n            const has = this.has(key);\n            delete this.set_[key];\n            return has;\n        }\n        add(key) {\n            this.set_[key] = 1;\n            return this;\n        }\n        forEach(callback, thisArg) {\n            for (const key in this.set_) {\n                callback.call(thisArg, key, key, this);\n            }\n        }\n    }\n    return window.Set ? window.Set : SetSham;\n});\ndefine('skylark-videojs/component',[\n    './mixins/evented',\n    './mixins/stateful',\n    './utils/dom',\n    './utils/dom-data',\n    './utils/fn',\n    './utils/guid',\n    './utils/string-cases',\n    './utils/merge-options',\n    './utils/computed-style',\n    './utils/map',\n    './utils/set'\n], function (evented, stateful, Dom, DomData, Fn, Guid, stringCases, mergeOptions, computedStyle, Map, Set) {\n    'use strict';\n    class Component {\n        constructor(player, options, ready) {\n            if (!player && this.play) {\n                this.player_ = player = this;\n            } else {\n                this.player_ = player;\n            }\n            this.isDisposed_ = false;\n            this.parentComponent_ = null;\n            this.options_ = mergeOptions({}, this.options_);\n            options = this.options_ = mergeOptions(this.options_, options);\n            this.id_ = options.id || options.el && options.el.id;\n            if (!this.id_) {\n                const id = player && player.id && player.id() || 'no_player';\n                this.id_ = `${ id }_component_${ Guid.newGUID() }`;\n            }\n            this.name_ = options.name || null;\n            if (options.el) {\n                this.el_ = options.el;\n            } else if (options.createEl !== false) {\n                this.el_ = this.createEl();\n            }\n            if (options.evented !== false) {\n                evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n                this.handleLanguagechange = this.handleLanguagechange.bind(this);\n                this.on(this.player_, 'languagechange', this.handleLanguagechange);\n            }\n            stateful(this, this.constructor.defaultState);\n            this.children_ = [];\n            this.childIndex_ = {};\n            this.childNameIndex_ = {};\n            this.setTimeoutIds_ = new Set();\n            this.setIntervalIds_ = new Set();\n            this.rafIds_ = new Set();\n            this.namedRafs_ = new Map();\n            this.clearingTimersOnDispose_ = false;\n            if (options.initChildren !== false) {\n                this.initChildren();\n            }\n            this.ready(ready);\n            if (options.reportTouchActivity !== false) {\n                this.enableTouchActivity();\n            }\n        }\n        dispose() {\n            if (this.isDisposed_) {\n                return;\n            }\n            if (this.readyQueue_) {\n                this.readyQueue_.length = 0;\n            }\n            this.trigger({\n                type: 'dispose',\n                bubbles: false\n            });\n            this.isDisposed_ = true;\n            if (this.children_) {\n                for (let i = this.children_.length - 1; i >= 0; i--) {\n                    if (this.children_[i].dispose) {\n                        this.children_[i].dispose();\n                    }\n                }\n            }\n            this.children_ = null;\n            this.childIndex_ = null;\n            this.childNameIndex_ = null;\n            this.parentComponent_ = null;\n            if (this.el_) {\n                if (this.el_.parentNode) {\n                    this.el_.parentNode.removeChild(this.el_);\n                }\n                if (DomData.has(this.el_)) {\n                    DomData.delete(this.el_);\n                }\n                this.el_ = null;\n            }\n            this.player_ = null;\n        }\n        isDisposed() {\n            return Boolean(this.isDisposed_);\n        }\n        player() {\n            return this.player_;\n        }\n        options(obj) {\n            if (!obj) {\n                return this.options_;\n            }\n            this.options_ = mergeOptions(this.options_, obj);\n            return this.options_;\n        }\n        el() {\n            return this.el_;\n        }\n        createEl(tagName, properties, attributes) {\n            return Dom.createEl(tagName, properties, attributes);\n        }\n        localize(string, tokens, defaultValue = string) {\n            const code = this.player_.language && this.player_.language();\n            const languages = this.player_.languages && this.player_.languages();\n            const language = languages && languages[code];\n            const primaryCode = code && code.split('-')[0];\n            const primaryLang = languages && languages[primaryCode];\n            let localizedString = defaultValue;\n            if (language && language[string]) {\n                localizedString = language[string];\n            } else if (primaryLang && primaryLang[string]) {\n                localizedString = primaryLang[string];\n            }\n            if (tokens) {\n                localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n                    const value = tokens[index - 1];\n                    let ret = value;\n                    if (typeof value === 'undefined') {\n                        ret = match;\n                    }\n                    return ret;\n                });\n            }\n            return localizedString;\n        }\n        handleLanguagechange() {\n        }\n        contentEl() {\n            return this.contentEl_ || this.el_;\n        }\n        id() {\n            return this.id_;\n        }\n        name() {\n            return this.name_;\n        }\n        children() {\n            return this.children_;\n        }\n        getChildById(id) {\n            return this.childIndex_[id];\n        }\n        getChild(name) {\n            if (!name) {\n                return;\n            }\n            return this.childNameIndex_[name];\n        }\n        getDescendant(...names) {\n            names = names.reduce((acc, n) => acc.concat(n), []);\n            let currentChild = this;\n            for (let i = 0; i < names.length; i++) {\n                currentChild = currentChild.getChild(names[i]);\n                if (!currentChild || !currentChild.getChild) {\n                    return;\n                }\n            }\n            return currentChild;\n        }\n        addChild(child, options = {}, index = this.children_.length) {\n            let component;\n            let componentName;\n            if (typeof child === 'string') {\n                componentName = stringCases.toTitleCase(child);\n                const componentClassName = options.componentClass || componentName;\n                options.name = componentName;\n                const ComponentClass = Component.getComponent(componentClassName);\n                if (!ComponentClass) {\n                    throw new Error(`Component ${ componentClassName } does not exist`);\n                }\n                if (typeof ComponentClass !== 'function') {\n                    return null;\n                }\n                component = new ComponentClass(this.player_ || this, options);\n            } else {\n                component = child;\n            }\n            if (component.parentComponent_) {\n                component.parentComponent_.removeChild(component);\n            }\n            this.children_.splice(index, 0, component);\n            component.parentComponent_ = this;\n            if (typeof component.id === 'function') {\n                this.childIndex_[component.id()] = component;\n            }\n            componentName = componentName || component.name && stringCases.toTitleCase(component.name());\n            if (componentName) {\n                this.childNameIndex_[componentName] = component;\n                this.childNameIndex_[stringCases.toLowerCase(componentName)] = component;\n            }\n            if (typeof component.el === 'function' && component.el()) {\n                let refNode = null;\n                if (this.children_[index + 1]) {\n                    if (this.children_[index + 1].el_) {\n                        refNode = this.children_[index + 1].el_;\n                    } else if (Dom.isEl(this.children_[index + 1])) {\n                        refNode = this.children_[index + 1];\n                    }\n                }\n                this.contentEl().insertBefore(component.el(), refNode);\n            }\n            return component;\n        }\n        removeChild(component) {\n            if (typeof component === 'string') {\n                component = this.getChild(component);\n            }\n            if (!component || !this.children_) {\n                return;\n            }\n            let childFound = false;\n            for (let i = this.children_.length - 1; i >= 0; i--) {\n                if (this.children_[i] === component) {\n                    childFound = true;\n                    this.children_.splice(i, 1);\n                    break;\n                }\n            }\n            if (!childFound) {\n                return;\n            }\n            component.parentComponent_ = null;\n            this.childIndex_[component.id()] = null;\n            this.childNameIndex_[stringCases.toTitleCase(component.name())] = null;\n            this.childNameIndex_[stringCases.toLowerCase(component.name())] = null;\n            const compEl = component.el();\n            if (compEl && compEl.parentNode === this.contentEl()) {\n                this.contentEl().removeChild(component.el());\n            }\n        }\n        initChildren() {\n            const children = this.options_.children;\n            if (children) {\n                const parentOptions = this.options_;\n                const handleAdd = child => {\n                    const name = child.name;\n                    let opts = child.opts;\n                    if (parentOptions[name] !== undefined) {\n                        opts = parentOptions[name];\n                    }\n                    if (opts === false) {\n                        return;\n                    }\n                    if (opts === true) {\n                        opts = {};\n                    }\n                    opts.playerOptions = this.options_.playerOptions;\n                    const newChild = this.addChild(name, opts);\n                    if (newChild) {\n                        this[name] = newChild;\n                    }\n                };\n                let workingChildren;\n                const Tech = Component.getComponent('Tech');\n                if (Array.isArray(children)) {\n                    workingChildren = children;\n                } else {\n                    workingChildren = Object.keys(children);\n                }\n                workingChildren.concat(Object.keys(this.options_).filter(function (child) {\n                    return !workingChildren.some(function (wchild) {\n                        if (typeof wchild === 'string') {\n                            return child === wchild;\n                        }\n                        return child === wchild.name;\n                    });\n                })).map(child => {\n                    let name;\n                    let opts;\n                    if (typeof child === 'string') {\n                        name = child;\n                        opts = children[name] || this.options_[name] || {};\n                    } else {\n                        name = child.name;\n                        opts = child;\n                    }\n                    return {\n                        name,\n                        opts\n                    };\n                }).filter(child => {\n                    const c = Component.getComponent(child.opts.componentClass || stringCases.toTitleCase(child.name));\n                    return c && !Tech.isTech(c);\n                }).forEach(handleAdd);\n            }\n        }\n        buildCSSClass() {\n            return '';\n        }\n        ready(fn, sync = false) {\n            if (!fn) {\n                return;\n            }\n            if (!this.isReady_) {\n                this.readyQueue_ = this.readyQueue_ || [];\n                this.readyQueue_.push(fn);\n                return;\n            }\n            if (sync) {\n                fn.call(this);\n            } else {\n                this.setTimeout(fn, 1);\n            }\n        }\n        triggerReady() {\n            this.isReady_ = true;\n            this.setTimeout(function () {\n                const readyQueue = this.readyQueue_;\n                this.readyQueue_ = [];\n                if (readyQueue && readyQueue.length > 0) {\n                    readyQueue.forEach(function (fn) {\n                        fn.call(this);\n                    }, this);\n                }\n                this.trigger('ready');\n            }, 1);\n        }\n        $(selector, context) {\n            return Dom.$(selector, context || this.contentEl());\n        }\n        $$(selector, context) {\n            return Dom.$$(selector, context || this.contentEl());\n        }\n        hasClass(classToCheck) {\n            return Dom.hasClass(this.el_, classToCheck);\n        }\n        addClass(classToAdd) {\n            Dom.addClass(this.el_, classToAdd);\n        }\n        removeClass(classToRemove) {\n            Dom.removeClass(this.el_, classToRemove);\n        }\n        toggleClass(classToToggle, predicate) {\n            Dom.toggleClass(this.el_, classToToggle, predicate);\n        }\n        show() {\n            this.removeClass('vjs-hidden');\n        }\n        hide() {\n            this.addClass('vjs-hidden');\n        }\n        lockShowing() {\n            this.addClass('vjs-lock-showing');\n        }\n        unlockShowing() {\n            this.removeClass('vjs-lock-showing');\n        }\n        getAttribute(attribute) {\n            return Dom.getAttribute(this.el_, attribute);\n        }\n        setAttribute(attribute, value) {\n            Dom.setAttribute(this.el_, attribute, value);\n        }\n        removeAttribute(attribute) {\n            Dom.removeAttribute(this.el_, attribute);\n        }\n        width(num, skipListeners) {\n            return this.dimension('width', num, skipListeners);\n        }\n        height(num, skipListeners) {\n            return this.dimension('height', num, skipListeners);\n        }\n        dimensions(width, height) {\n            this.width(width, true);\n            this.height(height);\n        }\n        dimension(widthOrHeight, num, skipListeners) {\n            if (num !== undefined) {\n                if (num === null || num !== num) {\n                    num = 0;\n                }\n                if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n                    this.el_.style[widthOrHeight] = num;\n                } else if (num === 'auto') {\n                    this.el_.style[widthOrHeight] = '';\n                } else {\n                    this.el_.style[widthOrHeight] = num + 'px';\n                }\n                if (!skipListeners) {\n                    this.trigger('componentresize');\n                }\n                return;\n            }\n            if (!this.el_) {\n                return 0;\n            }\n            const val = this.el_.style[widthOrHeight];\n            const pxIndex = val.indexOf('px');\n            if (pxIndex !== -1) {\n                return parseInt(val.slice(0, pxIndex), 10);\n            }\n            return parseInt(this.el_['offset' + stringCases.toTitleCase(widthOrHeight)], 10);\n        }\n        currentDimension(widthOrHeight) {\n            let computedWidthOrHeight = 0;\n            if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n                throw new Error('currentDimension only accepts width or height value');\n            }\n            computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n            computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n            if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n                const rule = `offset${ stringCases.toTitleCase(widthOrHeight) }`;\n                computedWidthOrHeight = this.el_[rule];\n            }\n            return computedWidthOrHeight;\n        }\n        currentDimensions() {\n            return {\n                width: this.currentDimension('width'),\n                height: this.currentDimension('height')\n            };\n        }\n        currentWidth() {\n            return this.currentDimension('width');\n        }\n        currentHeight() {\n            return this.currentDimension('height');\n        }\n        focus() {\n            this.el_.focus();\n        }\n        blur() {\n            this.el_.blur();\n        }\n        handleKeyDown(event) {\n            if (this.player_) {\n                event.stopPropagation();\n                this.player_.handleKeyDown(event);\n            }\n        }\n        handleKeyPress(event) {\n            this.handleKeyDown(event);\n        }\n        emitTapEvents() {\n            let touchStart = 0;\n            let firstTouch = null;\n            const tapMovementThreshold = 10;\n            const touchTimeThreshold = 200;\n            let couldBeTap;\n            this.on('touchstart', function (event) {\n                if (event.touches.length === 1) {\n                    firstTouch = {\n                        pageX: event.touches[0].pageX,\n                        pageY: event.touches[0].pageY\n                    };\n                    touchStart = window.performance.now();\n                    couldBeTap = true;\n                }\n            });\n            this.on('touchmove', function (event) {\n                if (event.touches.length > 1) {\n                    couldBeTap = false;\n                } else if (firstTouch) {\n                    const xdiff = event.touches[0].pageX - firstTouch.pageX;\n                    const ydiff = event.touches[0].pageY - firstTouch.pageY;\n                    const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n                    if (touchDistance > tapMovementThreshold) {\n                        couldBeTap = false;\n                    }\n                }\n            });\n            const noTap = function () {\n                couldBeTap = false;\n            };\n            this.on('touchleave', noTap);\n            this.on('touchcancel', noTap);\n            this.on('touchend', function (event) {\n                firstTouch = null;\n                if (couldBeTap === true) {\n                    const touchTime = window.performance.now() - touchStart;\n                    if (touchTime < touchTimeThreshold) {\n                        event.preventDefault();\n                        this.trigger('tap');\n                    }\n                }\n            });\n        }\n        enableTouchActivity() {\n            if (!this.player() || !this.player().reportUserActivity) {\n                return;\n            }\n            const report = Fn.bind(this.player(), this.player().reportUserActivity);\n            let touchHolding;\n            this.on('touchstart', function () {\n                report();\n                this.clearInterval(touchHolding);\n                touchHolding = this.setInterval(report, 250);\n            });\n            const touchEnd = function (event) {\n                report();\n                this.clearInterval(touchHolding);\n            };\n            this.on('touchmove', report);\n            this.on('touchend', touchEnd);\n            this.on('touchcancel', touchEnd);\n        }\n        setTimeout(fn, timeout) {\n            var timeoutId, disposeFn;\n            fn = Fn.bind(this, fn);\n            this.clearTimersOnDispose_();\n            timeoutId = window.setTimeout(() => {\n                if (this.setTimeoutIds_.has(timeoutId)) {\n                    this.setTimeoutIds_.delete(timeoutId);\n                }\n                fn();\n            }, timeout);\n            this.setTimeoutIds_.add(timeoutId);\n            return timeoutId;\n        }\n        clearTimeout(timeoutId) {\n            if (this.setTimeoutIds_.has(timeoutId)) {\n                this.setTimeoutIds_.delete(timeoutId);\n                window.clearTimeout(timeoutId);\n            }\n            return timeoutId;\n        }\n        setInterval(fn, interval) {\n            fn = Fn.bind(this, fn);\n            this.clearTimersOnDispose_();\n            const intervalId = window.setInterval(fn, interval);\n            this.setIntervalIds_.add(intervalId);\n            return intervalId;\n        }\n        clearInterval(intervalId) {\n            if (this.setIntervalIds_.has(intervalId)) {\n                this.setIntervalIds_.delete(intervalId);\n                window.clearInterval(intervalId);\n            }\n            return intervalId;\n        }\n        requestAnimationFrame(fn) {\n            if (!this.supportsRaf_) {\n                return this.setTimeout(fn, 1000 / 60);\n            }\n            this.clearTimersOnDispose_();\n            var id;\n            fn = Fn.bind(this, fn);\n            id = window.requestAnimationFrame(() => {\n                if (this.rafIds_.has(id)) {\n                    this.rafIds_.delete(id);\n                }\n                fn();\n            });\n            this.rafIds_.add(id);\n            return id;\n        }\n        requestNamedAnimationFrame(name, fn) {\n            if (this.namedRafs_.has(name)) {\n                return;\n            }\n            this.clearTimersOnDispose_();\n            fn = Fn.bind(this, fn);\n            const id = this.requestAnimationFrame(() => {\n                fn();\n                if (this.namedRafs_.has(name)) {\n                    this.namedRafs_.delete(name);\n                }\n            });\n            this.namedRafs_.set(name, id);\n            return name;\n        }\n        cancelNamedAnimationFrame(name) {\n            if (!this.namedRafs_.has(name)) {\n                return;\n            }\n            this.cancelAnimationFrame(this.namedRafs_.get(name));\n            this.namedRafs_.delete(name);\n        }\n        cancelAnimationFrame(id) {\n            if (!this.supportsRaf_) {\n                return this.clearTimeout(id);\n            }\n            if (this.rafIds_.has(id)) {\n                this.rafIds_.delete(id);\n                window.cancelAnimationFrame(id);\n            }\n            return id;\n        }\n        clearTimersOnDispose_() {\n            if (this.clearingTimersOnDispose_) {\n                return;\n            }\n            this.clearingTimersOnDispose_ = true;\n            this.one('dispose', () => {\n                [\n                    [\n                        'namedRafs_',\n                        'cancelNamedAnimationFrame'\n                    ],\n                    [\n                        'rafIds_',\n                        'cancelAnimationFrame'\n                    ],\n                    [\n                        'setTimeoutIds_',\n                        'clearTimeout'\n                    ],\n                    [\n                        'setIntervalIds_',\n                        'clearInterval'\n                    ]\n                ].forEach(([idName, cancelName]) => {\n                    this[idName].forEach((val, key) => this[cancelName](key));\n                });\n                this.clearingTimersOnDispose_ = false;\n            });\n        }\n        static registerComponent(name, ComponentToRegister) {\n            if (typeof name !== 'string' || !name) {\n                throw new Error(`Illegal component name, \"${ name }\"; must be a non-empty string.`);\n            }\n            const Tech = Component.getComponent('Tech');\n            const isTech = Tech && Tech.isTech(ComponentToRegister);\n            const isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n            if (isTech || !isComp) {\n                let reason;\n                if (isTech) {\n                    reason = 'techs must be registered using Tech.registerTech()';\n                } else {\n                    reason = 'must be a Component subclass';\n                }\n                throw new Error(`Illegal component, \"${ name }\"; ${ reason }.`);\n            }\n            name = stringCases.toTitleCase(name);\n            if (!Component.components_) {\n                Component.components_ = {};\n            }\n            const Player = Component.getComponent('Player');\n            if (name === 'Player' && Player && Player.players) {\n                const players = Player.players;\n                const playerNames = Object.keys(players);\n                if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n                    throw new Error('Can not register Player component after player has been created.');\n                }\n            }\n            Component.components_[name] = ComponentToRegister;\n            Component.components_[stringCases.toLowerCase(name)] = ComponentToRegister;\n            return ComponentToRegister;\n        }\n        static getComponent(name) {\n            if (!name || !Component.components_) {\n                return;\n            }\n            return Component.components_[name];\n        }\n    }\n    Component.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n    Component.registerComponent('Component', Component);\n    return Component;\n});\ndefine('skylark-videojs/utils/time-ranges',[],function () {\n    'use strict';\n    function rangeCheck(fnName, index, maxIndex) {\n        if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n            throw new Error(`Failed to execute '${ fnName }' on 'TimeRanges': The index provided (${ index }) is non-numeric or out of bounds (0-${ maxIndex }).`);\n        }\n    }\n    function getRange(fnName, valueIndex, ranges, rangeIndex) {\n        rangeCheck(fnName, rangeIndex, ranges.length - 1);\n        return ranges[rangeIndex][valueIndex];\n    }\n    function createTimeRangesObj(ranges) {\n        if (ranges === undefined || ranges.length === 0) {\n            return {\n                length: 0,\n                start() {\n                    throw new Error('This TimeRanges object is empty');\n                },\n                end() {\n                    throw new Error('This TimeRanges object is empty');\n                }\n            };\n        }\n        return {\n            length: ranges.length,\n            start: getRange.bind(null, 'start', 0, ranges),\n            end: getRange.bind(null, 'end', 1, ranges)\n        };\n    }\n    function createTimeRanges(start, end) {\n        if (Array.isArray(start)) {\n            return createTimeRangesObj(start);\n        } else if (start === undefined || end === undefined) {\n            return createTimeRangesObj();\n        }\n        return createTimeRangesObj([[\n                start,\n                end\n            ]]);\n    }\n    return {\n        createTimeRanges: createTimeRanges,\n        createTimeRanges\n    };\n});\ndefine('skylark-videojs/utils/buffer',['./time-ranges'], function (timeRages) {\n    'use strict';\n    function bufferedPercent(buffered, duration) {\n        let bufferedDuration = 0;\n        let start;\n        let end;\n        if (!duration) {\n            return 0;\n        }\n        if (!buffered || !buffered.length) {\n            buffered = timeRages.createTimeRange(0, 0);\n        }\n        for (let i = 0; i < buffered.length; i++) {\n            start = buffered.start(i);\n            end = buffered.end(i);\n            if (end > duration) {\n                end = duration;\n            }\n            bufferedDuration += end - start;\n        }\n        return bufferedDuration / duration;\n    }\n    return { bufferedPercent: bufferedPercent };\n});\ndefine('skylark-videojs/media-error',['./utils/obj'], function (obj) {\n    'use strict';\n    function MediaError(value) {\n        if (value instanceof MediaError) {\n            return value;\n        }\n        if (typeof value === 'number') {\n            this.code = value;\n        } else if (typeof value === 'string') {\n            this.message = value;\n        } else if (obj.isObject(value)) {\n            if (typeof value.code === 'number') {\n                this.code = value.code;\n            }\n            obj.assign(this, value);\n        }\n        if (!this.message) {\n            this.message = MediaError.defaultMessages[this.code] || '';\n        }\n    }\n    MediaError.prototype.code = 0;\n    MediaError.prototype.message = '';\n    MediaError.prototype.status = null;\n    MediaError.errorTypes = [\n        'MEDIA_ERR_CUSTOM',\n        'MEDIA_ERR_ABORTED',\n        'MEDIA_ERR_NETWORK',\n        'MEDIA_ERR_DECODE',\n        'MEDIA_ERR_SRC_NOT_SUPPORTED',\n        'MEDIA_ERR_ENCRYPTED'\n    ];\n    MediaError.defaultMessages = {\n        1: 'You aborted the media playback',\n        2: 'A network error caused the media download to fail part-way.',\n        3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n        4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n        5: 'The media is encrypted and we do not have the keys to decrypt it.'\n    };\n    for (let errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n        MediaError[MediaError.errorTypes[errNum]] = errNum;\n        MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n    }\n    return MediaError;\n});\ndefine('skylark-videojs/utils/safeParseTuple',[],function(){\r\n\tfunction safeParseTuple(obj, reviver) {\r\n\t    var json\r\n\t    var error = null\r\n\r\n\t    try {\r\n\t        json = JSON.parse(obj, reviver)\r\n\t    } catch (err) {\r\n\t        error = err\r\n\t    }\r\n\r\n\t    return [error, json]\r\n\t}\r\n\r\n\treturn \tsafeParseTuple;\r\n});\r\n\r\n\ndefine('skylark-videojs/utils/promise',[],function () {\n    'use strict';\n    function isPromise(value) {\n        return value !== undefined && value !== null && typeof value.then === 'function';\n    }\n    function silencePromise(value) {\n        if (isPromise(value)) {\n            value.then(null, e => {\n            });\n        }\n    }\n    return {\n        isPromise: isPromise,\n        silencePromise: silencePromise\n    };\n});\ndefine('skylark-videojs/tracks/text-track-list-converter',[],function () {\n    'use strict';\n    const trackToJson_ = function (track) {\n        const ret = [\n            'kind',\n            'label',\n            'language',\n            'id',\n            'inBandMetadataTrackDispatchType',\n            'mode',\n            'src'\n        ].reduce((acc, prop, i) => {\n            if (track[prop]) {\n                acc[prop] = track[prop];\n            }\n            return acc;\n        }, {\n            cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n                return {\n                    startTime: cue.startTime,\n                    endTime: cue.endTime,\n                    text: cue.text,\n                    id: cue.id\n                };\n            })\n        });\n        return ret;\n    };\n    const textTracksToJson = function (tech) {\n        const trackEls = tech.$$('track');\n        const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n        const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n            const json = trackToJson_(trackEl.track);\n            if (trackEl.src) {\n                json.src = trackEl.src;\n            }\n            return json;\n        });\n        return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n            return trackObjs.indexOf(track) === -1;\n        }).map(trackToJson_));\n    };\n    const jsonToTextTracks = function (json, tech) {\n        json.forEach(function (track) {\n            const addedTrack = tech.addRemoteTextTrack(track).track;\n            if (!track.src && track.cues) {\n                track.cues.forEach(cue => addedTrack.addCue(cue));\n            }\n        });\n        return tech.textTracks();\n    };\n    return {\n        textTracksToJson,\n        jsonToTextTracks,\n        trackToJson_\n    };\n});\ndefine('skylark-videojs/utils/keycode',[],function(){\r\n  // Source: http://jsfiddle.net/vWx8V/\r\n  // http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\r\n\r\n  /**\r\n   * Conenience method returns corresponding value for given keyName or keyCode.\r\n   *\r\n   * @param {Mixed} keyCode {Number} or keyName {String}\r\n   * @return {Mixed}\r\n   * @api public\r\n   */\r\n\r\n  function keyCode(searchInput) {\r\n    // Keyboard Events\r\n    if (searchInput && 'object' === typeof searchInput) {\r\n      var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\r\n      if (hasKeyCode) searchInput = hasKeyCode\r\n    }\r\n\r\n    // Numbers\r\n    if ('number' === typeof searchInput) return names[searchInput]\r\n\r\n    // Everything else (cast to string)\r\n    var search = String(searchInput)\r\n\r\n    // check codes\r\n    var foundNamedKey = codes[search.toLowerCase()]\r\n    if (foundNamedKey) return foundNamedKey\r\n\r\n    // check aliases\r\n    var foundNamedKey = aliases[search.toLowerCase()]\r\n    if (foundNamedKey) return foundNamedKey\r\n\r\n    // weird character?\r\n    if (search.length === 1) return search.charCodeAt(0)\r\n\r\n    return undefined\r\n  }\r\n\r\n  /**\r\n   * Compares a keyboard event with a given keyCode or keyName.\r\n   *\r\n   * @param {Event} event Keyboard event that should be tested\r\n   * @param {Mixed} keyCode {Number} or keyName {String}\r\n   * @return {Boolean}\r\n   * @api public\r\n   */\r\n  keyCode.isEventKey = function isEventKey(event, nameOrCode) {\r\n    if (event && 'object' === typeof event) {\r\n      var keyCode = event.which || event.keyCode || event.charCode\r\n      if (keyCode === null || keyCode === undefined) { return false; }\r\n      if (typeof nameOrCode === 'string') {\r\n        // check codes\r\n        var foundNamedKey = codes[nameOrCode.toLowerCase()]\r\n        if (foundNamedKey) { return foundNamedKey === keyCode; }\r\n      \r\n        // check aliases\r\n        var foundNamedKey = aliases[nameOrCode.toLowerCase()]\r\n        if (foundNamedKey) { return foundNamedKey === keyCode; }\r\n      } else if (typeof nameOrCode === 'number') {\r\n        return nameOrCode === keyCode;\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  var exports = keyCode;\r\n\r\n  /**\r\n   * Get by name\r\n   *\r\n   *   exports.code['enter'] // => 13\r\n   */\r\n\r\n  var codes = exports.code = exports.codes = {\r\n    'backspace': 8,\r\n    'tab': 9,\r\n    'enter': 13,\r\n    'shift': 16,\r\n    'ctrl': 17,\r\n    'alt': 18,\r\n    'pause/break': 19,\r\n    'caps lock': 20,\r\n    'esc': 27,\r\n    'space': 32,\r\n    'page up': 33,\r\n    'page down': 34,\r\n    'end': 35,\r\n    'home': 36,\r\n    'left': 37,\r\n    'up': 38,\r\n    'right': 39,\r\n    'down': 40,\r\n    'insert': 45,\r\n    'delete': 46,\r\n    'command': 91,\r\n    'left command': 91,\r\n    'right command': 93,\r\n    'numpad *': 106,\r\n    'numpad +': 107,\r\n    'numpad -': 109,\r\n    'numpad .': 110,\r\n    'numpad /': 111,\r\n    'num lock': 144,\r\n    'scroll lock': 145,\r\n    'my computer': 182,\r\n    'my calculator': 183,\r\n    ';': 186,\r\n    '=': 187,\r\n    ',': 188,\r\n    '-': 189,\r\n    '.': 190,\r\n    '/': 191,\r\n    '`': 192,\r\n    '[': 219,\r\n    '\\\\': 220,\r\n    ']': 221,\r\n    \"'\": 222\r\n  }\r\n\r\n  // Helper aliases\r\n\r\n  var aliases = exports.aliases = {\r\n    'windows': 91,\r\n    '⇧': 16,\r\n    '⌥': 18,\r\n    '⌃': 17,\r\n    '⌘': 91,\r\n    'ctl': 17,\r\n    'control': 17,\r\n    'option': 18,\r\n    'pause': 19,\r\n    'break': 19,\r\n    'caps': 20,\r\n    'return': 13,\r\n    'escape': 27,\r\n    'spc': 32,\r\n    'spacebar': 32,\r\n    'pgup': 33,\r\n    'pgdn': 34,\r\n    'ins': 45,\r\n    'del': 46,\r\n    'cmd': 91\r\n  }\r\n\r\n  /*!\r\n   * Programatically add the following\r\n   */\r\n\r\n  // lower case chars\r\n  for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\r\n\r\n  // numbers\r\n  for (var i = 48; i < 58; i++) codes[i - 48] = i\r\n\r\n  // function keys\r\n  for (i = 1; i < 13; i++) codes['f'+i] = i + 111\r\n\r\n  // numpad keys\r\n  for (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\r\n\r\n  /**\r\n   * Get by code\r\n   *\r\n   *   exports.name[13] // => 'Enter'\r\n   */\r\n\r\n  var names = exports.names = exports.title = {} // title for backward compat\r\n\r\n  // Create reverse mapping\r\n  for (i in codes) names[codes[i]] = i\r\n\r\n  // Add aliases\r\n  for (var alias in aliases) {\r\n    codes[alias] = aliases[alias]\r\n  }\r\n\r\n  return exports;\r\n\r\n});\ndefine('skylark-videojs/modal-dialog',[\n    'skylark-langx-globals/document',\n    './utils/dom',\n    './component',\n    './utils/keycode'\n], function (document,Dom, Component, keycode) {\n    'use strict';\n    const MODAL_CLASS_NAME = 'vjs-modal-dialog';\n    class ModalDialog extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n            this.closeable(!this.options_.uncloseable);\n            this.content(this.options_.content);\n            this.contentEl_ = Dom.createEl('div', { className: `${ MODAL_CLASS_NAME }-content` }, { role: 'document' });\n            this.descEl_ = Dom.createEl('p', {\n                className: `${ MODAL_CLASS_NAME }-description vjs-control-text`,\n                id: this.el().getAttribute('aria-describedby')\n            });\n            Dom.textContent(this.descEl_, this.description());\n            this.el_.appendChild(this.descEl_);\n            this.el_.appendChild(this.contentEl_);\n        }\n        createEl() {\n            return super.createEl('div', {\n                className: this.buildCSSClass(),\n                tabIndex: -1\n            }, {\n                'aria-describedby': `${ this.id() }_description`,\n                'aria-hidden': 'true',\n                'aria-label': this.label(),\n                'role': 'dialog'\n            });\n        }\n        dispose() {\n            this.contentEl_ = null;\n            this.descEl_ = null;\n            this.previouslyActiveEl_ = null;\n            super.dispose();\n        }\n        buildCSSClass() {\n            return `${ MODAL_CLASS_NAME } vjs-hidden ${ super.buildCSSClass() }`;\n        }\n        label() {\n            return this.localize(this.options_.label || 'Modal Window');\n        }\n        description() {\n            let desc = this.options_.description || this.localize('This is a modal window.');\n            if (this.closeable()) {\n                desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n            }\n            return desc;\n        }\n        open() {\n            if (!this.opened_) {\n                const player = this.player();\n                this.trigger('beforemodalopen');\n                this.opened_ = true;\n                if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n                    this.fill();\n                }\n                this.wasPlaying_ = !player.paused();\n                if (this.options_.pauseOnOpen && this.wasPlaying_) {\n                    player.pause();\n                }\n                this.on('keydown', this.handleKeyDown);\n                this.hadControls_ = player.controls();\n                player.controls(false);\n                this.show();\n                this.conditionalFocus_();\n                this.el().setAttribute('aria-hidden', 'false');\n                this.trigger('modalopen');\n                this.hasBeenOpened_ = true;\n            }\n        }\n        opened(value) {\n            if (typeof value === 'boolean') {\n                this[value ? 'open' : 'close']();\n            }\n            return this.opened_;\n        }\n        close() {\n            if (!this.opened_) {\n                return;\n            }\n            const player = this.player();\n            this.trigger('beforemodalclose');\n            this.opened_ = false;\n            if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n                player.play();\n            }\n            this.off('keydown', this.handleKeyDown);\n            if (this.hadControls_) {\n                player.controls(true);\n            }\n            this.hide();\n            this.el().setAttribute('aria-hidden', 'true');\n            this.trigger('modalclose');\n            this.conditionalBlur_();\n            if (this.options_.temporary) {\n                this.dispose();\n            }\n        }\n        closeable(value) {\n            if (typeof value === 'boolean') {\n                const closeable = this.closeable_ = !!value;\n                let close = this.getChild('closeButton');\n                if (closeable && !close) {\n                    const temp = this.contentEl_;\n                    this.contentEl_ = this.el_;\n                    close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n                    this.contentEl_ = temp;\n                    this.on(close, 'close', this.close);\n                }\n                if (!closeable && close) {\n                    this.off(close, 'close', this.close);\n                    this.removeChild(close);\n                    close.dispose();\n                }\n            }\n            return this.closeable_;\n        }\n        fill() {\n            this.fillWith(this.content());\n        }\n        fillWith(content) {\n            const contentEl = this.contentEl();\n            const parentEl = contentEl.parentNode;\n            const nextSiblingEl = contentEl.nextSibling;\n            this.trigger('beforemodalfill');\n            this.hasBeenFilled_ = true;\n            parentEl.removeChild(contentEl);\n            this.empty();\n            Dom.insertContent(contentEl, content);\n            this.trigger('modalfill');\n            if (nextSiblingEl) {\n                parentEl.insertBefore(contentEl, nextSiblingEl);\n            } else {\n                parentEl.appendChild(contentEl);\n            }\n            const closeButton = this.getChild('closeButton');\n            if (closeButton) {\n                parentEl.appendChild(closeButton.el_);\n            }\n        }\n        empty() {\n            this.trigger('beforemodalempty');\n            Dom.emptyEl(this.contentEl());\n            this.trigger('modalempty');\n        }\n        content(value) {\n            if (typeof value !== 'undefined') {\n                this.content_ = value;\n            }\n            return this.content_;\n        }\n        conditionalFocus_() {\n            const activeEl = document.activeElement;\n            const playerEl = this.player_.el_;\n            this.previouslyActiveEl_ = null;\n            if (playerEl.contains(activeEl) || playerEl === activeEl) {\n                this.previouslyActiveEl_ = activeEl;\n                this.focus();\n            }\n        }\n        conditionalBlur_() {\n            if (this.previouslyActiveEl_) {\n                this.previouslyActiveEl_.focus();\n                this.previouslyActiveEl_ = null;\n            }\n        }\n        handleKeyDown(event) {\n            event.stopPropagation();\n            if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n                event.preventDefault();\n                this.close();\n                return;\n            }\n            if (!keycode.isEventKey(event, 'Tab')) {\n                return;\n            }\n            const focusableEls = this.focusableEls_();\n            const activeEl = this.el_.querySelector(':focus');\n            let focusIndex;\n            for (let i = 0; i < focusableEls.length; i++) {\n                if (activeEl === focusableEls[i]) {\n                    focusIndex = i;\n                    break;\n                }\n            }\n            if (document.activeElement === this.el_) {\n                focusIndex = 0;\n            }\n            if (event.shiftKey && focusIndex === 0) {\n                focusableEls[focusableEls.length - 1].focus();\n                event.preventDefault();\n            } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n                focusableEls[0].focus();\n                event.preventDefault();\n            }\n        }\n        focusableEls_() {\n            const allChildren = this.el_.querySelectorAll('*');\n            return Array.prototype.filter.call(allChildren, child => {\n                return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || (child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement) || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n            });\n        }\n    }\n    ModalDialog.prototype.options_ = {\n        pauseOnOpen: true,\n        temporary: true\n    };\n    Component.registerComponent('ModalDialog', ModalDialog);\n    return ModalDialog;\n});\ndefine('skylark-videojs/tracks/track-list',[\n    '../event-target',\n    '../mixins/evented'\n], function (EventTarget, evented) {\n    'use strict';\n    class TrackList extends EventTarget {\n        constructor(tracks = []) {\n            super();\n            this.tracks_ = [];\n            Object.defineProperty(this, 'length', {\n                get() {\n                    return this.tracks_.length;\n                }\n            });\n            for (let i = 0; i < tracks.length; i++) {\n                this.addTrack(tracks[i]);\n            }\n        }\n        addTrack(track) {\n            const index = this.tracks_.length;\n            if (!('' + index in this)) {\n                Object.defineProperty(this, index, {\n                    get() {\n                        return this.tracks_[index];\n                    }\n                });\n            }\n            if (this.tracks_.indexOf(track) === -1) {\n                this.tracks_.push(track);\n                this.trigger({\n                    track,\n                    type: 'addtrack',\n                    target: this\n                });\n            }\n            track.labelchange_ = () => {\n                this.trigger({\n                    track,\n                    type: 'labelchange',\n                    target: this\n                });\n            };\n            if (evented.isEvented(track)) {\n                track.addEventListener('labelchange', track.labelchange_);\n            }\n        }\n        removeTrack(rtrack) {\n            let track;\n            for (let i = 0, l = this.length; i < l; i++) {\n                if (this[i] === rtrack) {\n                    track = this[i];\n                    if (track.off) {\n                        track.off();\n                    }\n                    this.tracks_.splice(i, 1);\n                    break;\n                }\n            }\n            if (!track) {\n                return;\n            }\n            this.trigger({\n                track,\n                type: 'removetrack',\n                target: this\n            });\n        }\n        getTrackById(id) {\n            let result = null;\n            for (let i = 0, l = this.length; i < l; i++) {\n                const track = this[i];\n                if (track.id === id) {\n                    result = track;\n                    break;\n                }\n            }\n            return result;\n        }\n    }\n    TrackList.prototype.allowedEvents_ = {\n        change: 'change',\n        addtrack: 'addtrack',\n        removetrack: 'removetrack',\n        labelchange: 'labelchange'\n    };\n    for (const event in TrackList.prototype.allowedEvents_) {\n        TrackList.prototype['on' + event] = null;\n    }\n    return TrackList;\n});\ndefine('skylark-videojs/tracks/audio-track-list',[\n    './track-list'\n], function (TrackList) {\n    'use strict';\n    const disableOthers = function (list, track) {\n        for (let i = 0; i < list.length; i++) {\n            if (!Object.keys(list[i]).length || track.id === list[i].id) {\n                continue;\n            }\n            list[i].enabled = false;\n        }\n    };\n    class AudioTrackList extends TrackList {\n        constructor(tracks = []) {\n            for (let i = tracks.length - 1; i >= 0; i--) {\n                if (tracks[i].enabled) {\n                    disableOthers(tracks, tracks[i]);\n                    break;\n                }\n            }\n            super(tracks);\n            this.changing_ = false;\n        }\n        addTrack(track) {\n            if (track.enabled) {\n                disableOthers(this, track);\n            }\n            super.addTrack(track);\n            if (!track.addEventListener) {\n                return;\n            }\n            track.enabledChange_ = () => {\n                if (this.changing_) {\n                    return;\n                }\n                this.changing_ = true;\n                disableOthers(this, track);\n                this.changing_ = false;\n                this.trigger('change');\n            };\n            track.addEventListener('enabledchange', track.enabledChange_);\n        }\n        removeTrack(rtrack) {\n            super.removeTrack(rtrack);\n            if (rtrack.removeEventListener && rtrack.enabledChange_) {\n                rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n                rtrack.enabledChange_ = null;\n            }\n        }\n    }\n    return AudioTrackList;\n});\ndefine('skylark-videojs/tracks/video-track-list',['./track-list'], function (TrackList) {\n    'use strict';\n    const disableOthers = function (list, track) {\n        for (let i = 0; i < list.length; i++) {\n            if (!Object.keys(list[i]).length || track.id === list[i].id) {\n                continue;\n            }\n            list[i].selected = false;\n        }\n    };\n    class VideoTrackList extends TrackList {\n        constructor(tracks = []) {\n            for (let i = tracks.length - 1; i >= 0; i--) {\n                if (tracks[i].selected) {\n                    disableOthers(tracks, tracks[i]);\n                    break;\n                }\n            }\n            super(tracks);\n            this.changing_ = false;\n            Object.defineProperty(this, 'selectedIndex', {\n                get() {\n                    for (let i = 0; i < this.length; i++) {\n                        if (this[i].selected) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                },\n                set() {\n                }\n            });\n        }\n        addTrack(track) {\n            if (track.selected) {\n                disableOthers(this, track);\n            }\n            super.addTrack(track);\n            if (!track.addEventListener) {\n                return;\n            }\n            track.selectedChange_ = () => {\n                if (this.changing_) {\n                    return;\n                }\n                this.changing_ = true;\n                disableOthers(this, track);\n                this.changing_ = false;\n                this.trigger('change');\n            };\n            track.addEventListener('selectedchange', track.selectedChange_);\n        }\n        removeTrack(rtrack) {\n            super.removeTrack(rtrack);\n            if (rtrack.removeEventListener && rtrack.selectedChange_) {\n                rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n                rtrack.selectedChange_ = null;\n            }\n        }\n    }\n    return VideoTrackList;\n});\ndefine('skylark-videojs/tracks/text-track-list',[\n    './track-list'\n], function (TrackList) {\n\n    'use strict';\n    \n    class TextTrackList extends TrackList {\n        addTrack(track) {\n            super.addTrack(track);\n            if (!this.queueChange_) {\n                this.queueChange_ = () => this.queueTrigger('change');\n            }\n            if (!this.triggerSelectedlanguagechange) {\n                this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n            }\n            track.addEventListener('modechange', this.queueChange_);\n            const nonLanguageTextTrackKind = [\n                'metadata',\n                'chapters'\n            ];\n            if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n                track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n            }\n        }\n        removeTrack(rtrack) {\n            super.removeTrack(rtrack);\n            if (rtrack.removeEventListener) {\n                if (this.queueChange_) {\n                    rtrack.removeEventListener('modechange', this.queueChange_);\n                }\n                if (this.selectedlanguagechange_) {\n                    rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n                }\n            }\n        }\n    }\n\n    return TextTrackList;\n});\ndefine('skylark-videojs/tracks/html-track-element-list',[],function () {\n    'use strict';\n    class HtmlTrackElementList {\n        constructor(trackElements = []) {\n            this.trackElements_ = [];\n            Object.defineProperty(this, 'length', {\n                get() {\n                    return this.trackElements_.length;\n                }\n            });\n            for (let i = 0, length = trackElements.length; i < length; i++) {\n                this.addTrackElement_(trackElements[i]);\n            }\n        }\n        addTrackElement_(trackElement) {\n            const index = this.trackElements_.length;\n            if (!('' + index in this)) {\n                Object.defineProperty(this, index, {\n                    get() {\n                        return this.trackElements_[index];\n                    }\n                });\n            }\n            if (this.trackElements_.indexOf(trackElement) === -1) {\n                this.trackElements_.push(trackElement);\n            }\n        }\n        getTrackElementByTrack_(track) {\n            let trackElement_;\n            for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n                if (track === this.trackElements_[i].track) {\n                    trackElement_ = this.trackElements_[i];\n                    break;\n                }\n            }\n            return trackElement_;\n        }\n        removeTrackElement_(trackElement) {\n            for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n                if (trackElement === this.trackElements_[i]) {\n                    if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n                        this.trackElements_[i].track.off();\n                    }\n                    if (typeof this.trackElements_[i].off === 'function') {\n                        this.trackElements_[i].off();\n                    }\n                    this.trackElements_.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n    return HtmlTrackElementList;\n});\ndefine('skylark-videojs/tracks/text-track-cue-list',[],function () {\n    'use strict';\n    class TextTrackCueList {\n        constructor(cues) {\n            TextTrackCueList.prototype.setCues_.call(this, cues);\n            Object.defineProperty(this, 'length', {\n                get() {\n                    return this.length_;\n                }\n            });\n        }\n        setCues_(cues) {\n            const oldLength = this.length || 0;\n            let i = 0;\n            const l = cues.length;\n            this.cues_ = cues;\n            this.length_ = cues.length;\n            const defineProp = function (index) {\n                if (!('' + index in this)) {\n                    Object.defineProperty(this, '' + index, {\n                        get() {\n                            return this.cues_[index];\n                        }\n                    });\n                }\n            };\n            if (oldLength < l) {\n                i = oldLength;\n                for (; i < l; i++) {\n                    defineProp.call(this, i);\n                }\n            }\n        }\n        getCueById(id) {\n            let result = null;\n            for (let i = 0, l = this.length; i < l; i++) {\n                const cue = this[i];\n                if (cue.id === id) {\n                    result = cue;\n                    break;\n                }\n            }\n            return result;\n        }\n    }\n    return TextTrackCueList;\n});\ndefine('skylark-videojs/tracks/track-enums',[],function () {\n    'use strict';\n    const VideoTrackKind = {\n        alternative: 'alternative',\n        captions: 'captions',\n        main: 'main',\n        sign: 'sign',\n        subtitles: 'subtitles',\n        commentary: 'commentary'\n    };\n    const AudioTrackKind = {\n        'alternative': 'alternative',\n        'descriptions': 'descriptions',\n        'main': 'main',\n        'main-desc': 'main-desc',\n        'translation': 'translation',\n        'commentary': 'commentary'\n    };\n    const TextTrackKind = {\n        subtitles: 'subtitles',\n        captions: 'captions',\n        descriptions: 'descriptions',\n        chapters: 'chapters',\n        metadata: 'metadata'\n    };\n    const TextTrackMode = {\n        disabled: 'disabled',\n        hidden: 'hidden',\n        showing: 'showing'\n    };\n    return {\n        VideoTrackKind: VideoTrackKind,\n        AudioTrackKind: AudioTrackKind,\n        TextTrackKind: TextTrackKind,\n        TextTrackMode: TextTrackMode\n    };\n});\ndefine('skylark-videojs/tracks/track',[\n    '../utils/guid',\n    '../event-target'\n], function (Guid, EventTarget) {\n    'use strict';\n    class Track extends EventTarget {\n        constructor(options = {}) {\n            super();\n            const trackProps = {\n                id: options.id || 'vjs_track_' + Guid.newGUID(),\n                kind: options.kind || '',\n                language: options.language || ''\n            };\n            let label = options.label || '';\n            for (const key in trackProps) {\n                Object.defineProperty(this, key, {\n                    get() {\n                        return trackProps[key];\n                    },\n                    set() {\n                    }\n                });\n            }\n            Object.defineProperty(this, 'label', {\n                get() {\n                    return label;\n                },\n                set(newLabel) {\n                    if (newLabel !== label) {\n                        label = newLabel;\n                        this.trigger('labelchange');\n                    }\n                }\n            });\n        }\n    }\n    return Track;\n});\ndefine('skylark-videojs/utils/url',[\n    'skylark-langx-globals/document'\n], function (document) {\n    'use strict';\n    const parseUrl = function (url) {\n        const props = [\n            'protocol',\n            'hostname',\n            'port',\n            'pathname',\n            'search',\n            'hash',\n            'host'\n        ];\n        let a = document.createElement('a');\n        a.href = url;\n        const addToBody = a.host === '' && a.protocol !== 'file:';\n        let div;\n        if (addToBody) {\n            div = document.createElement('div');\n            div.innerHTML = `<a href=\"${ url }\"></a>`;\n            a = div.firstChild;\n            div.setAttribute('style', 'display:none; position:absolute;');\n            document.body.appendChild(div);\n        }\n        const details = {};\n        for (let i = 0; i < props.length; i++) {\n            details[props[i]] = a[props[i]];\n        }\n        if (details.protocol === 'http:') {\n            details.host = details.host.replace(/:80$/, '');\n        }\n        if (details.protocol === 'https:') {\n            details.host = details.host.replace(/:443$/, '');\n        }\n        if (!details.protocol) {\n            details.protocol = window.location.protocol;\n        }\n        if (addToBody) {\n            document.body.removeChild(div);\n        }\n        return details;\n    };\n    const getAbsoluteURL = function (url) {\n        if (!url.match(/^https?:\\/\\//)) {\n            const div = document.createElement('div');\n            div.innerHTML = `<a href=\"${ url }\">x</a>`;\n            url = div.firstChild.href;\n        }\n        return url;\n    };\n    const getFileExtension = function (path) {\n        if (typeof path === 'string') {\n            const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n            const pathParts = splitPathRe.exec(path);\n            if (pathParts) {\n                return pathParts.pop().toLowerCase();\n            }\n        }\n        return '';\n    };\n    const isCrossOrigin = function (url, winLoc = window.location) {\n        const urlInfo = parseUrl(url);\n        const srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n        const crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n        return crossOrigin;\n    };\n    return {\n        parseUrl: parseUrl,\n        getAbsoluteURL: getAbsoluteURL,\n        getFileExtension: getFileExtension,\n        isCrossOrigin: isCrossOrigin\n    };\n});\ndefine('skylark-videojs/utils/xhr',[\r\n\t\"skylark-langx-globals/window\",\r\n\t\"skylark-langx-objects\",\r\n\t\"skylark-langx-types\",\r\n\t\"skylark-net-http/xhr\"\r\n],function(window,objects,types,_xhr){\r\n\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * @license\r\n\t * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\r\n\t * Copyright (c) 2014 David Björklund\r\n\t * Available under the MIT license\r\n\t * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\r\n\t */\r\n\r\n\tvar parseHeaders = function(headers) {\r\n\t    var result = {};\r\n\r\n\t    if (!headers) {\r\n\t        return result;\r\n\t    }\r\n\r\n\t    headers.trim().split('\\n').forEach(function(row) {\r\n\t        var index = row.indexOf(':');\r\n\t        var key = row.slice(0, index).trim().toLowerCase();\r\n\t        var value = row.slice(index + 1).trim();\r\n\r\n\t        if (typeof(result[key]) === 'undefined') {\r\n\t          result[key] = value\r\n\t        } else if (Array.isArray(result[key])) {\r\n\t          result[key].push(value)\r\n\t        } else {\r\n\t          result[key] = [ result[key], value ]\r\n\t        }\r\n\t    });\r\n\r\n\t    return result;\r\n\t};\r\n\r\n\r\n\tcreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\r\n\tcreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\r\n\r\n\tforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\r\n\t    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\r\n\t        options = initParams(uri, options, callback)\r\n\t        options.method = method.toUpperCase()\r\n\t        return _createXHR(options)\r\n\t    }\r\n\t})\r\n\r\n\tfunction forEachArray(array, iterator) {\r\n\t    for (var i = 0; i < array.length; i++) {\r\n\t        iterator(array[i])\r\n\t    }\r\n\t}\r\n\r\n\tfunction isEmpty(obj){\r\n\t    for(var i in obj){\r\n\t        if(obj.hasOwnProperty(i)) return false\r\n\t    }\r\n\t    return true\r\n\t}\r\n\r\n\tfunction initParams(uri, options, callback) {\r\n\t    var params = uri\r\n\r\n\t    if (types.isFunction(options)) {\r\n\t        callback = options\r\n\t        if (typeof uri === \"string\") {\r\n\t            params = {uri:uri}\r\n\t        }\r\n\t    } else {\r\n\t        params = objects.mixin({}, options, {uri: uri})\r\n\t    }\r\n\r\n\t    params.callback = callback\r\n\t    return params\r\n\t}\r\n\r\n\tfunction createXHR(uri, options, callback) {\r\n\t    options = initParams(uri, options, callback)\r\n\t    return _createXHR(options)\r\n\t}\r\n\r\n\tfunction _createXHR(options) {\r\n\t    if(typeof options.callback === \"undefined\"){\r\n\t        throw new Error(\"callback argument missing\")\r\n\t    }\r\n\r\n\t    var called = false\r\n\t    var callback = function cbOnce(err, response, body){\r\n\t        if(!called){\r\n\t            called = true\r\n\t            options.callback(err, response, body)\r\n\t        }\r\n\t    }\r\n\r\n\t    function readystatechange() {\r\n\t        if (xhr.readyState === 4) {\r\n\t            setTimeout(loadFunc, 0)\r\n\t        }\r\n\t    }\r\n\r\n\t    function getBody() {\r\n\t        // Chrome with requestType=blob throws errors arround when even testing access to responseText\r\n\t        var body = undefined\r\n\r\n\t        if (xhr.response) {\r\n\t            body = xhr.response\r\n\t        } else {\r\n\t            body = xhr.responseText || getXml(xhr)\r\n\t        }\r\n\r\n\t        if (isJson) {\r\n\t            try {\r\n\t                body = JSON.parse(body)\r\n\t            } catch (e) {}\r\n\t        }\r\n\r\n\t        return body\r\n\t    }\r\n\r\n\t    function errorFunc(evt) {\r\n\t        clearTimeout(timeoutTimer)\r\n\t        if(!(evt instanceof Error)){\r\n\t            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\r\n\t        }\r\n\t        evt.statusCode = 0\r\n\t        return callback(evt, failureResponse)\r\n\t    }\r\n\r\n\t    // will load the data & process the response in a special response object\r\n\t    function loadFunc() {\r\n\t        if (aborted) return\r\n\t        var status\r\n\t        clearTimeout(timeoutTimer)\r\n\t        if(options.useXDR && xhr.status===undefined) {\r\n\t            //IE8 CORS GET successful response doesn't have a status field, but body is fine\r\n\t            status = 200\r\n\t        } else {\r\n\t            status = (xhr.status === 1223 ? 204 : xhr.status)\r\n\t        }\r\n\t        var response = failureResponse\r\n\t        var err = null\r\n\r\n\t        if (status !== 0){\r\n\t            response = {\r\n\t                body: getBody(),\r\n\t                statusCode: status,\r\n\t                method: method,\r\n\t                headers: {},\r\n\t                url: uri,\r\n\t                rawRequest: xhr\r\n\t            }\r\n\t            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\r\n\t                response.headers = parseHeaders(xhr.getAllResponseHeaders())\r\n\t            }\r\n\t        } else {\r\n\t            err = new Error(\"Internal XMLHttpRequest Error\")\r\n\t        }\r\n\t        return callback(err, response, response.body)\r\n\t    }\r\n\r\n\t    var xhr = options.xhr || null\r\n\r\n\t    if (!xhr) {\r\n\t        if (options.cors || options.useXDR) {\r\n\t            xhr = new createXHR.XDomainRequest()\r\n\t        }else{\r\n\t            xhr = new createXHR.XMLHttpRequest()\r\n\t        }\r\n\t    }\r\n\r\n\t    var key\r\n\t    var aborted\r\n\t    var uri = xhr.url = options.uri || options.url\r\n\t    var method = xhr.method = options.method || \"GET\"\r\n\t    var body = options.body || options.data\r\n\t    var headers = xhr.headers = options.headers || {}\r\n\t    var sync = !!options.sync\r\n\t    var isJson = false\r\n\t    var timeoutTimer\r\n\t    var failureResponse = {\r\n\t        body: undefined,\r\n\t        headers: {},\r\n\t        statusCode: 0,\r\n\t        method: method,\r\n\t        url: uri,\r\n\t        rawRequest: xhr\r\n\t    }\r\n\r\n\t    if (\"json\" in options && options.json !== false) {\r\n\t        isJson = true\r\n\t        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\r\n\t        if (method !== \"GET\" && method !== \"HEAD\") {\r\n\t            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\r\n\t            body = JSON.stringify(options.json === true ? body : options.json)\r\n\t        }\r\n\t    }\r\n\r\n\t    xhr.onreadystatechange = readystatechange\r\n\t    xhr.onload = loadFunc\r\n\t    xhr.onerror = errorFunc\r\n\t    // IE9 must have onprogress be set to a unique function.\r\n\t    xhr.onprogress = function () {\r\n\t        // IE must die\r\n\t    }\r\n\t    xhr.onabort = function(){\r\n\t        aborted = true;\r\n\t    }\r\n\t    xhr.ontimeout = errorFunc\r\n\t    xhr.open(method, uri, !sync, options.username, options.password)\r\n\t    //has to be after open\r\n\t    if(!sync) {\r\n\t        xhr.withCredentials = !!options.withCredentials\r\n\t    }\r\n\t    // Cannot set timeout with sync request\r\n\t    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\r\n\t    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\r\n\t    if (!sync && options.timeout > 0 ) {\r\n\t        timeoutTimer = setTimeout(function(){\r\n\t            if (aborted) return\r\n\t            aborted = true//IE9 may still call readystatechange\r\n\t            xhr.abort(\"timeout\")\r\n\t            var e = new Error(\"XMLHttpRequest timeout\")\r\n\t            e.code = \"ETIMEDOUT\"\r\n\t            errorFunc(e)\r\n\t        }, options.timeout )\r\n\t    }\r\n\r\n\t    if (xhr.setRequestHeader) {\r\n\t        for(key in headers){\r\n\t            if(headers.hasOwnProperty(key)){\r\n\t                xhr.setRequestHeader(key, headers[key])\r\n\t            }\r\n\t        }\r\n\t    } else if (options.headers && !isEmpty(options.headers)) {\r\n\t        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\r\n\t    }\r\n\r\n\t    if (\"responseType\" in options) {\r\n\t        xhr.responseType = options.responseType\r\n\t    }\r\n\r\n\t    if (\"beforeSend\" in options &&\r\n\t        typeof options.beforeSend === \"function\"\r\n\t    ) {\r\n\t        options.beforeSend(xhr)\r\n\t    }\r\n\r\n\t    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\r\n\t    // XMLHttpRequest spec says to pass null as body to indicate no body\r\n\t    // See https://github.com/naugtur/xhr/issues/100.\r\n\t    xhr.send(body || null)\r\n\r\n\t    return xhr\r\n\r\n\r\n\t}\r\n\r\n\tfunction getXml(xhr) {\r\n\t    // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\r\n\t    // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\r\n\t    try {\r\n\t        if (xhr.responseType === \"document\") {\r\n\t            return xhr.responseXML\r\n\t        }\r\n\t        var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\r\n\t        if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\r\n\t            return xhr.responseXML\r\n\t        }\r\n\t    } catch (e) {}\r\n\r\n\t    return null\r\n\t}\r\n\r\n\tfunction noop() {}\r\n\r\n\treturn createXHR;\r\n\r\n\r\n});\ndefine('skylark-videojs/tracks/text-track',[\n    'skylark-videojs-vtt',\n    './text-track-cue-list',\n    '../utils/fn',\n    './track-enums',\n    '../utils/log',\n    './track',\n    '../utils/url',\n    '../utils/xhr',\n    '../utils/merge-options'\n], function (vtt,TextTrackCueList, Fn, TrackEnums, log, Track, url, XHR, merge) {\n    'use strict';\n    const parseCues = function (srcContent, track) {\n        const parser = new vtt.WebVTT.Parser(window, vtt, vtt.WebVTT.StringDecoder());\n        const errors = [];\n        parser.oncue = function (cue) {\n            track.addCue(cue);\n        };\n        parser.onparsingerror = function (error) {\n            errors.push(error);\n        };\n        parser.onflush = function () {\n            track.trigger({\n                type: 'loadeddata',\n                target: track\n            });\n        };\n        parser.parse(srcContent);\n        if (errors.length > 0) {\n            if (window.console && window.console.groupCollapsed) {\n                window.console.groupCollapsed(`Text Track parsing errors for ${ track.src }`);\n            }\n            errors.forEach(error => log.error(error));\n            if (window.console && window.console.groupEnd) {\n                window.console.groupEnd();\n            }\n        }\n        parser.flush();\n    };\n    const loadTrack = function (src, track) {\n        const opts = { uri: src };\n        const crossOrigin = url.isCrossOrigin(src);\n        if (crossOrigin) {\n            opts.cors = crossOrigin;\n        }\n        const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n        if (withCredentials) {\n            opts.withCredentials = withCredentials;\n        }\n        XHR(opts, Fn.bind(this, function (err, response, responseBody) {\n            if (err) {\n                return log.error(err, response);\n            }\n            track.loaded_ = true;\n            if (typeof vtt.WebVTT !== 'function') {\n                if (track.tech_) {\n                    track.tech_.any([\n                        'vttjsloaded',\n                        'vttjserror'\n                    ], event => {\n                        if (event.type === 'vttjserror') {\n                            log.error(`vttjs failed to load, stopping trying to process ${ track.src }`);\n                            return;\n                        }\n                        return parseCues(responseBody, track);\n                    });\n                }\n            } else {\n                parseCues(responseBody, track);\n            }\n        }));\n    };\n    class TextTrack extends Track {\n        constructor(options = {}) {\n            if (!options.tech) {\n                throw new Error('A tech was not provided.');\n            }\n            const settings = merge(options, {\n                kind: TrackEnums.TextTrackKind[options.kind] || 'subtitles',\n                language: options.language || options.srclang || ''\n            });\n            let mode = TrackEnums.TextTrackMode[settings.mode] || 'disabled';\n            const default_ = settings.default;\n            if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n                mode = 'hidden';\n            }\n            super(settings);\n            this.tech_ = settings.tech;\n            this.cues_ = [];\n            this.activeCues_ = [];\n            this.preload_ = this.tech_.preloadTextTracks !== false;\n            const cues = new TextTrackCueList(this.cues_);\n            const activeCues = new TextTrackCueList(this.activeCues_);\n            let changed = false;\n            const timeupdateHandler = Fn.bind(this, function () {\n                if (!this.tech_.isReady_ || this.tech_.isDisposed()) {\n                    return;\n                }\n                this.activeCues = this.activeCues;\n                if (changed) {\n                    this.trigger('cuechange');\n                    changed = false;\n                }\n            });\n            const disposeHandler = () => {\n                this.tech_.off('timeupdate', timeupdateHandler);\n            };\n            this.tech_.one('dispose', disposeHandler);\n            if (mode !== 'disabled') {\n                this.tech_.on('timeupdate', timeupdateHandler);\n            }\n            Object.defineProperties(this, {\n                default: {\n                    get() {\n                        return default_;\n                    },\n                    set() {\n                    }\n                },\n                mode: {\n                    get() {\n                        return mode;\n                    },\n                    set(newMode) {\n                        if (!TrackEnums.TextTrackMode[newMode]) {\n                            return;\n                        }\n                        if (mode === newMode) {\n                            return;\n                        }\n                        mode = newMode;\n                        if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n                            loadTrack(this.src, this);\n                        }\n                        this.tech_.off('timeupdate', timeupdateHandler);\n                        if (mode !== 'disabled') {\n                            this.tech_.on('timeupdate', timeupdateHandler);\n                        }\n                        this.trigger('modechange');\n                    }\n                },\n                cues: {\n                    get() {\n                        if (!this.loaded_) {\n                            return null;\n                        }\n                        return cues;\n                    },\n                    set() {\n                    }\n                },\n                activeCues: {\n                    get() {\n                        if (!this.loaded_) {\n                            return null;\n                        }\n                        if (this.cues.length === 0) {\n                            return activeCues;\n                        }\n                        const ct = this.tech_.currentTime();\n                        const active = [];\n                        for (let i = 0, l = this.cues.length; i < l; i++) {\n                            const cue = this.cues[i];\n                            if (cue.startTime <= ct && cue.endTime >= ct) {\n                                active.push(cue);\n                            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n                                active.push(cue);\n                            }\n                        }\n                        changed = false;\n                        if (active.length !== this.activeCues_.length) {\n                            changed = true;\n                        } else {\n                            for (let i = 0; i < active.length; i++) {\n                                if (this.activeCues_.indexOf(active[i]) === -1) {\n                                    changed = true;\n                                }\n                            }\n                        }\n                        this.activeCues_ = active;\n                        activeCues.setCues_(this.activeCues_);\n                        return activeCues;\n                    },\n                    set() {\n                    }\n                }\n            });\n            if (settings.src) {\n                this.src = settings.src;\n                if (!this.preload_) {\n                    this.loaded_ = true;\n                }\n                if (this.preload_ || default_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n                    loadTrack(this.src, this);\n                }\n            } else {\n                this.loaded_ = true;\n            }\n        }\n        addCue(originalCue) {\n            let cue = originalCue;\n            if (vtt && !(originalCue instanceof vtt.VTTCue)) {\n                cue = new vtt.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n                for (const prop in originalCue) {\n                    if (!(prop in cue)) {\n                        cue[prop] = originalCue[prop];\n                    }\n                }\n                cue.id = originalCue.id;\n                cue.originalCue_ = originalCue;\n            }\n            const tracks = this.tech_.textTracks();\n            for (let i = 0; i < tracks.length; i++) {\n                if (tracks[i] !== this) {\n                    tracks[i].removeCue(cue);\n                }\n            }\n            this.cues_.push(cue);\n            this.cues.setCues_(this.cues_);\n        }\n        removeCue(removeCue) {\n            let i = this.cues_.length;\n            while (i--) {\n                const cue = this.cues_[i];\n                if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n                    this.cues_.splice(i, 1);\n                    this.cues.setCues_(this.cues_);\n                    break;\n                }\n            }\n        }\n    }\n    TextTrack.prototype.allowedEvents_ = { cuechange: 'cuechange' };\n    return TextTrack;\n});\ndefine('skylark-videojs/tracks/audio-track',[\n    './track-enums',\n    './track',\n    '../utils/merge-options'\n], function (TrackEnums, Track, merge) {\n    'use strict';\n    class AudioTrack extends Track {\n        constructor(options = {}) {\n            const settings = merge(options, { kind: TrackEnums.AudioTrackKind[options.kind] || '' });\n            super(settings);\n            let enabled = false;\n            Object.defineProperty(this, 'enabled', {\n                get() {\n                    return enabled;\n                },\n                set(newEnabled) {\n                    if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n                        return;\n                    }\n                    enabled = newEnabled;\n                    this.trigger('enabledchange');\n                }\n            });\n            if (settings.enabled) {\n                this.enabled = settings.enabled;\n            }\n            this.loaded_ = true;\n        }\n    }\n    return AudioTrack;\n});\ndefine('skylark-videojs/tracks/video-track',[\n    './track-enums',\n    './track',\n    '../utils/merge-options'\n], function (TrackEnums, Track, merge) {\n    'use strict';\n    class VideoTrack extends Track {\n        constructor(options = {}) {\n            const settings = merge(options, { kind: TrackEnums.VideoTrackKind[options.kind] || '' });\n            super(settings);\n            let selected = false;\n            Object.defineProperty(this, 'selected', {\n                get() {\n                    return selected;\n                },\n                set(newSelected) {\n                    if (typeof newSelected !== 'boolean' || newSelected === selected) {\n                        return;\n                    }\n                    selected = newSelected;\n                    this.trigger('selectedchange');\n                }\n            });\n            if (settings.selected) {\n                this.selected = settings.selected;\n            }\n        }\n    }\n    return VideoTrack;\n});\ndefine('skylark-videojs/tracks/html-track-element',[\n    '../event-target',\n    '../tracks/text-track'\n], function (EventTarget, TextTrack) {\n    'use strict';\n    const NONE = 0;\n    const LOADING = 1;\n    const LOADED = 2;\n    const ERROR = 3;\n    class HTMLTrackElement extends EventTarget {\n        constructor(options = {}) {\n            super();\n            let readyState;\n            const track = new TextTrack(options);\n            this.kind = track.kind;\n            this.src = track.src;\n            this.srclang = track.language;\n            this.label = track.label;\n            this.default = track.default;\n            Object.defineProperties(this, {\n                readyState: {\n                    get() {\n                        return readyState;\n                    }\n                },\n                track: {\n                    get() {\n                        return track;\n                    }\n                }\n            });\n            readyState = NONE;\n            track.addEventListener('loadeddata', () => {\n                readyState = LOADED;\n                this.trigger({\n                    type: 'load',\n                    target: this\n                });\n            });\n        }\n    }\n    HTMLTrackElement.prototype.allowedEvents_ = { load: 'load' };\n    HTMLTrackElement.NONE = NONE;\n    HTMLTrackElement.LOADING = LOADING;\n    HTMLTrackElement.LOADED = LOADED;\n    HTMLTrackElement.ERROR = ERROR;\n    return HTMLTrackElement;\n});\ndefine('skylark-videojs/tracks/track-types',[\n    './audio-track-list',\n    './video-track-list',\n    './text-track-list',\n    './html-track-element-list',\n    './text-track',\n    './audio-track',\n    './video-track',\n    './html-track-element'\n], function (AudioTrackList, VideoTrackList, TextTrackList, HtmlTrackElementList, TextTrack, AudioTrack, VideoTrack, HTMLTrackElement) {\n    'use strict';\n    const NORMAL = {\n        audio: {\n            ListClass: AudioTrackList,\n            TrackClass: AudioTrack,\n            capitalName: 'Audio'\n        },\n        video: {\n            ListClass: VideoTrackList,\n            TrackClass: VideoTrack,\n            capitalName: 'Video'\n        },\n        text: {\n            ListClass: TextTrackList,\n            TrackClass: TextTrack,\n            capitalName: 'Text'\n        }\n    };\n    Object.keys(NORMAL).forEach(function (type) {\n        NORMAL[type].getterName = `${ type }Tracks`;\n        NORMAL[type].privateName = `${ type }Tracks_`;\n    });\n    const REMOTE = {\n        remoteText: {\n            ListClass: TextTrackList,\n            TrackClass: TextTrack,\n            capitalName: 'RemoteText',\n            getterName: 'remoteTextTracks',\n            privateName: 'remoteTextTracks_'\n        },\n        remoteTextEl: {\n            ListClass: HtmlTrackElementList,\n            TrackClass: HTMLTrackElement,\n            capitalName: 'RemoteTextTrackEls',\n            getterName: 'remoteTextTrackEls',\n            privateName: 'remoteTextTrackEls_'\n        }\n    };\n    const ALL = Object.assign({}, NORMAL, REMOTE);\n    REMOTE.names = Object.keys(REMOTE);\n    NORMAL.names = Object.keys(NORMAL);\n    ALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n    return {\n        NORMAL,\n        REMOTE,\n        ALL\n    };\n});\ndefine('skylark-videojs/tech/tech',[\n    'skylark-langx-globals/window',\n    'skylark-langx-globals/document',\n    '../component',\n    '../utils/merge-options',\n    '../utils/fn',\n    '../utils/log',\n    '../utils/time-ranges',\n    '../utils/buffer',\n    '../media-error',\n    '../utils/obj',\n    '../tracks/track-types',\n    '../utils/string-cases',\n    'skylark-videojs-vtt'\n], function (window, document, Component, mergeOptions, Fn, log, timeRages, buffer, MediaError, obj, TRACK_TYPES, stringCases, vtt) {\n    'use strict';\n    function createTrackHelper(self, kind, label, language, options = {}) {\n        const tracks = self.textTracks();\n        options.kind = kind;\n        if (label) {\n            options.label = label;\n        }\n        if (language) {\n            options.language = language;\n        }\n        options.tech = self;\n        const track = new TRACK_TYPES.ALL.text.TrackClass(options);\n        tracks.addTrack(track);\n        return track;\n    }\n    class Tech extends Component {\n        constructor(options = {}, ready = function () {\n        }) {\n            options.reportTouchActivity = false;\n            super(null, options, ready);\n            this.hasStarted_ = false;\n            this.on('playing', function () {\n                this.hasStarted_ = true;\n            });\n            this.on('loadstart', function () {\n                this.hasStarted_ = false;\n            });\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                if (options && options[props.getterName]) {\n                    this[props.privateName] = options[props.getterName];\n                }\n            });\n            if (!this.featuresProgressEvents) {\n                this.manualProgressOn();\n            }\n            if (!this.featuresTimeupdateEvents) {\n                this.manualTimeUpdatesOn();\n            }\n            [\n                'Text',\n                'Audio',\n                'Video'\n            ].forEach(track => {\n                if (options[`native${ track }Tracks`] === false) {\n                    this[`featuresNative${ track }Tracks`] = false;\n                }\n            });\n            if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n                this.featuresNativeTextTracks = false;\n            } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n                this.featuresNativeTextTracks = true;\n            }\n            if (!this.featuresNativeTextTracks) {\n                this.emulateTextTracks();\n            }\n            this.preloadTextTracks = options.preloadTextTracks !== false;\n            this.autoRemoteTextTracks_ = new TRACK_TYPES.ALL.text.ListClass();\n            this.initTrackListeners();\n            if (!options.nativeControlsForTouch) {\n                this.emitTapEvents();\n            }\n            if (this.constructor) {\n                this.name_ = this.constructor.name || 'Unknown Tech';\n            }\n        }\n        triggerSourceset(src) {\n            if (!this.isReady_) {\n                this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n            }\n            this.trigger({\n                src,\n                type: 'sourceset'\n            });\n        }\n        manualProgressOn() {\n            this.on('durationchange', this.onDurationChange);\n            this.manualProgress = true;\n            this.one('ready', this.trackProgress);\n        }\n        manualProgressOff() {\n            this.manualProgress = false;\n            this.stopTrackingProgress();\n            this.off('durationchange', this.onDurationChange);\n        }\n        trackProgress(event) {\n            this.stopTrackingProgress();\n            this.progressInterval = this.setInterval(Fn.bind(this, function () {\n                const numBufferedPercent = this.undefined();\n                if (this.bufferedPercent_ !== numBufferedPercent) {\n                    this.trigger('progress');\n                }\n                this.bufferedPercent_ = numBufferedPercent;\n                if (numBufferedPercent === 1) {\n                    this.stopTrackingProgress();\n                }\n            }), 500);\n        }\n        onDurationChange(event) {\n            this.duration_ = this.duration();\n        }\n        buffered() {\n            return timeRages.createTimeRange(0, 0);\n        }\n        bufferedPercent() {\n            return buffer.bufferedPercent(this.buffered(), this.duration_);\n        }\n        stopTrackingProgress() {\n            this.clearInterval(this.progressInterval);\n        }\n        manualTimeUpdatesOn() {\n            this.manualTimeUpdates = true;\n            this.on('play', this.trackCurrentTime);\n            this.on('pause', this.stopTrackingCurrentTime);\n        }\n        manualTimeUpdatesOff() {\n            this.manualTimeUpdates = false;\n            this.stopTrackingCurrentTime();\n            this.off('play', this.trackCurrentTime);\n            this.off('pause', this.stopTrackingCurrentTime);\n        }\n        trackCurrentTime() {\n            if (this.currentTimeInterval) {\n                this.stopTrackingCurrentTime();\n            }\n            this.currentTimeInterval = this.setInterval(function () {\n                this.trigger({\n                    type: 'timeupdate',\n                    target: this,\n                    manuallyTriggered: true\n                });\n            }, 250);\n        }\n        stopTrackingCurrentTime() {\n            this.clearInterval(this.currentTimeInterval);\n            this.trigger({\n                type: 'timeupdate',\n                target: this,\n                manuallyTriggered: true\n            });\n        }\n        dispose() {\n            this.clearTracks(TRACK_TYPES.NORMAL.names);\n            if (this.manualProgress) {\n                this.manualProgressOff();\n            }\n            if (this.manualTimeUpdates) {\n                this.manualTimeUpdatesOff();\n            }\n            super.dispose();\n        }\n        clearTracks(types) {\n            types = [].concat(types);\n            types.forEach(type => {\n                const list = this[`${ type }Tracks`]() || [];\n                let i = list.length;\n                while (i--) {\n                    const track = list[i];\n                    if (type === 'text') {\n                        this.removeRemoteTextTrack(track);\n                    }\n                    list.removeTrack(track);\n                }\n            });\n        }\n        cleanupAutoTextTracks() {\n            const list = this.autoRemoteTextTracks_ || [];\n            let i = list.length;\n            while (i--) {\n                const track = list[i];\n                this.removeRemoteTextTrack(track);\n            }\n        }\n        reset() {\n        }\n        crossOrigin() {\n        }\n        setCrossOrigin() {\n        }\n        error(err) {\n            if (err !== undefined) {\n                this.error_ = new MediaError(err);\n                this.trigger('error');\n            }\n            return this.error_;\n        }\n        played() {\n            if (this.hasStarted_) {\n                return timeRages.createTimeRange(0, 0);\n            }\n            return timeRages.createTimeRange();\n        }\n        play() {\n        }\n        setScrubbing() {\n        }\n        scrubbing() {\n        }\n        setCurrentTime() {\n            if (this.manualTimeUpdates) {\n                this.trigger({\n                    type: 'timeupdate',\n                    target: this,\n                    manuallyTriggered: true\n                });\n            }\n        }\n        initTrackListeners() {\n            TRACK_TYPES.NORMAL.names.forEach(name => {\n                const props = TRACK_TYPES.NORMAL[name];\n                const trackListChanges = () => {\n                    this.trigger(`${ name }trackchange`);\n                };\n                const tracks = this[props.getterName]();\n                tracks.addEventListener('removetrack', trackListChanges);\n                tracks.addEventListener('addtrack', trackListChanges);\n                this.on('dispose', () => {\n                    tracks.removeEventListener('removetrack', trackListChanges);\n                    tracks.removeEventListener('addtrack', trackListChanges);\n                });\n            });\n        }\n        addWebVttScript_() {\n            if (window.WebVTT) {\n                return;\n            }\n            if (document.body.contains(this.el())) {\n                if (!this.options_['vtt.js'] && obj.isPlain(vtt) && Object.keys(vtt).length > 0) {\n                    this.trigger('vttjsloaded');\n                    return;\n                }\n                const script = document.createElement('script');\n                script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n                script.onload = () => {\n                    this.trigger('vttjsloaded');\n                };\n                script.onerror = () => {\n                    this.trigger('vttjserror');\n                };\n                this.on('dispose', () => {\n                    script.onload = null;\n                    script.onerror = null;\n                });\n                window.WebVTT = true;\n                this.el().parentNode.appendChild(script);\n            } else {\n                this.ready(this.addWebVttScript_);\n            }\n        }\n        emulateTextTracks() {\n            const tracks = this.textTracks();\n            const remoteTracks = this.remoteTextTracks();\n            const handleAddTrack = e => tracks.addTrack(e.track);\n            const handleRemoveTrack = e => tracks.removeTrack(e.track);\n            remoteTracks.on('addtrack', handleAddTrack);\n            remoteTracks.on('removetrack', handleRemoveTrack);\n            this.addWebVttScript_();\n            const updateDisplay = () => this.trigger('texttrackchange');\n            const textTracksChanges = () => {\n                updateDisplay();\n                for (let i = 0; i < tracks.length; i++) {\n                    const track = tracks[i];\n                    track.removeEventListener('cuechange', updateDisplay);\n                    if (track.mode === 'showing') {\n                        track.addEventListener('cuechange', updateDisplay);\n                    }\n                }\n            };\n            textTracksChanges();\n            tracks.addEventListener('change', textTracksChanges);\n            tracks.addEventListener('addtrack', textTracksChanges);\n            tracks.addEventListener('removetrack', textTracksChanges);\n            this.on('dispose', function () {\n                remoteTracks.off('addtrack', handleAddTrack);\n                remoteTracks.off('removetrack', handleRemoveTrack);\n                tracks.removeEventListener('change', textTracksChanges);\n                tracks.removeEventListener('addtrack', textTracksChanges);\n                tracks.removeEventListener('removetrack', textTracksChanges);\n                for (let i = 0; i < tracks.length; i++) {\n                    const track = tracks[i];\n                    track.removeEventListener('cuechange', updateDisplay);\n                }\n            });\n        }\n        addTextTrack(kind, label, language) {\n            if (!kind) {\n                throw new Error('TextTrack kind is required but was not provided');\n            }\n            return createTrackHelper(this, kind, label, language);\n        }\n        createRemoteTextTrack(options) {\n            const track = mergeOptions(options, { tech: this });\n            return new TRACK_TYPES.REMOTE.remoteTextEl.TrackClass(track);\n        }\n        addRemoteTextTrack(options = {}, manualCleanup) {\n            const htmlTrackElement = this.createRemoteTextTrack(options);\n            if (manualCleanup !== true && manualCleanup !== false) {\n                log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n                manualCleanup = true;\n            }\n            this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n            this.remoteTextTracks().addTrack(htmlTrackElement.track);\n            if (manualCleanup !== true) {\n                this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n            }\n            return htmlTrackElement;\n        }\n        removeRemoteTextTrack(track) {\n            const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n            this.remoteTextTrackEls().removeTrackElement_(trackElement);\n            this.remoteTextTracks().removeTrack(track);\n            this.autoRemoteTextTracks_.removeTrack(track);\n        }\n        getVideoPlaybackQuality() {\n            return {};\n        }\n        requestPictureInPicture() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                return PromiseClass.reject();\n            }\n        }\n        disablePictureInPicture() {\n            return true;\n        }\n        setDisablePictureInPicture() {\n        }\n        setPoster() {\n        }\n        playsinline() {\n        }\n        setPlaysinline() {\n        }\n        overrideNativeAudioTracks() {\n        }\n        overrideNativeVideoTracks() {\n        }\n        canPlayType() {\n            return '';\n        }\n        static canPlayType() {\n            return '';\n        }\n        static canPlaySource(srcObj, options) {\n            return Tech.canPlayType(srcObj.type);\n        }\n        static isTech(component) {\n            return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n        }\n        static registerTech(name, tech) {\n            if (!Tech.techs_) {\n                Tech.techs_ = {};\n            }\n            if (!Tech.isTech(tech)) {\n                throw new Error(`Tech ${ name } must be a Tech`);\n            }\n            if (!Tech.canPlayType) {\n                throw new Error('Techs must have a static canPlayType method on them');\n            }\n            if (!Tech.canPlaySource) {\n                throw new Error('Techs must have a static canPlaySource method on them');\n            }\n            name = stringCases.toTitleCase(name);\n            Tech.techs_[name] = tech;\n            Tech.techs_[stringCases.toLowerCase(name)] = tech;\n            if (name !== 'Tech') {\n                Tech.defaultTechOrder_.push(name);\n            }\n            return tech;\n        }\n        static getTech(name) {\n            if (!name) {\n                return;\n            }\n            if (Tech.techs_ && Tech.techs_[name]) {\n                return Tech.techs_[name];\n            }\n            name = stringCases.toTitleCase(name);\n            if (window && window.videojs && window.videojs[name]) {\n                log.warn(`The ${ name } tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n                return window.videojs[name];\n            }\n        }\n    }\n    TRACK_TYPES.ALL.names.forEach(function (name) {\n        const props = TRACK_TYPES.ALL[name];\n        Tech.prototype[props.getterName] = function () {\n            this[props.privateName] = this[props.privateName] || new props.ListClass();\n            return this[props.privateName];\n        };\n    });\n    Tech.prototype.featuresVolumeControl = true;\n    Tech.prototype.featuresMuteControl = true;\n    Tech.prototype.featuresFullscreenResize = false;\n    Tech.prototype.featuresPlaybackRate = false;\n    Tech.prototype.featuresProgressEvents = false;\n    Tech.prototype.featuresSourceset = false;\n    Tech.prototype.featuresTimeupdateEvents = false;\n    Tech.prototype.featuresNativeTextTracks = false;\n    Tech.withSourceHandlers = function (_Tech) {\n        _Tech.registerSourceHandler = function (handler, index) {\n            let handlers = _Tech.sourceHandlers;\n            if (!handlers) {\n                handlers = _Tech.sourceHandlers = [];\n            }\n            if (index === undefined) {\n                index = handlers.length;\n            }\n            handlers.splice(index, 0, handler);\n        };\n        _Tech.canPlayType = function (type) {\n            const handlers = _Tech.sourceHandlers || [];\n            let can;\n            for (let i = 0; i < handlers.length; i++) {\n                can = handlers[i].canPlayType(type);\n                if (can) {\n                    return can;\n                }\n            }\n            return '';\n        };\n        _Tech.selectSourceHandler = function (source, options) {\n            const handlers = _Tech.sourceHandlers || [];\n            let can;\n            for (let i = 0; i < handlers.length; i++) {\n                can = handlers[i].canHandleSource(source, options);\n                if (can) {\n                    return handlers[i];\n                }\n            }\n            return null;\n        };\n        _Tech.canPlaySource = function (srcObj, options) {\n            const sh = _Tech.selectSourceHandler(srcObj, options);\n            if (sh) {\n                return sh.canHandleSource(srcObj, options);\n            }\n            return '';\n        };\n        const deferrable = [\n            'seekable',\n            'seeking',\n            'duration'\n        ];\n        deferrable.forEach(function (fnName) {\n            const originalFn = this[fnName];\n            if (typeof originalFn !== 'function') {\n                return;\n            }\n            this[fnName] = function () {\n                if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n                    return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n                }\n                return originalFn.apply(this, arguments);\n            };\n        }, _Tech.prototype);\n        _Tech.prototype.setSource = function (source) {\n            let sh = _Tech.selectSourceHandler(source, this.options_);\n            if (!sh) {\n                if (_Tech.nativeSourceHandler) {\n                    sh = _Tech.nativeSourceHandler;\n                } else {\n                    log.error('No source handler found for the current source.');\n                }\n            }\n            this.disposeSourceHandler();\n            this.off('dispose', this.disposeSourceHandler);\n            if (sh !== _Tech.nativeSourceHandler) {\n                this.currentSource_ = source;\n            }\n            this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n            this.one('dispose', this.disposeSourceHandler);\n        };\n        _Tech.prototype.disposeSourceHandler = function () {\n            if (this.currentSource_) {\n                this.clearTracks([\n                    'audio',\n                    'video'\n                ]);\n                this.currentSource_ = null;\n            }\n            this.cleanupAutoTextTracks();\n            if (this.sourceHandler_) {\n                if (this.sourceHandler_.dispose) {\n                    this.sourceHandler_.dispose();\n                }\n                this.sourceHandler_ = null;\n            }\n        };\n    };\n    Component.registerComponent('Tech', Tech);\n    Tech.registerTech('Tech', Tech);\n    Tech.defaultTechOrder_ = [];\n    return Tech;\n});\ndefine('skylark-videojs/tech/middleware',[\n    '../utils/obj',\n    '../utils/string-cases'\n], function (obj, stringCases) {\n    'use strict';\n    const middlewares = {};\n    const middlewareInstances = {};\n    const TERMINATOR = {};\n    function use(type, middleware) {\n        middlewares[type] = middlewares[type] || [];\n        middlewares[type].push(middleware);\n    }\n    function getMiddleware(type) {\n        if (type) {\n            return middlewares[type];\n        }\n        return middlewares;\n    }\n    function setSource(player, src, next) {\n        player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n    }\n    function setTech(middleware, tech) {\n        middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n    }\n    function get(middleware, tech, method) {\n        return middleware.reduceRight(middlewareIterator(method), tech[method]());\n    }\n    function set(middleware, tech, method, arg) {\n        return tech[method](middleware.reduce(middlewareIterator(method), arg));\n    }\n    function mediate(middleware, tech, method, arg = null) {\n        const callMethod = 'call' + stringCases.toTitleCase(method);\n        const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n        const terminated = middlewareValue === TERMINATOR;\n        const returnValue = terminated ? null : tech[method](middlewareValue);\n        executeRight(middleware, method, returnValue, terminated);\n        return returnValue;\n    }\n    const allowedGetters = {\n        buffered: 1,\n        currentTime: 1,\n        duration: 1,\n        muted: 1,\n        played: 1,\n        paused: 1,\n        seekable: 1,\n        volume: 1\n    };\n    const allowedSetters = {\n        setCurrentTime: 1,\n        setMuted: 1,\n        setVolume: 1\n    };\n    const allowedMediators = {\n        play: 1,\n        pause: 1\n    };\n    function middlewareIterator(method) {\n        return (value, mw) => {\n            if (value === TERMINATOR) {\n                return TERMINATOR;\n            }\n            if (mw[method]) {\n                return mw[method](value);\n            }\n            return value;\n        };\n    }\n    function executeRight(mws, method, value, terminated) {\n        for (let i = mws.length - 1; i >= 0; i--) {\n            const mw = mws[i];\n            if (mw[method]) {\n                mw[method](terminated, value);\n            }\n        }\n    }\n    function clearCacheForPlayer(player) {\n        middlewareInstances[player.id()] = null;\n    }\n    function getOrCreateFactory(player, mwFactory) {\n        const mws = middlewareInstances[player.id()];\n        let mw = null;\n        if (mws === undefined || mws === null) {\n            mw = mwFactory(player);\n            middlewareInstances[player.id()] = [[\n                    mwFactory,\n                    mw\n                ]];\n            return mw;\n        }\n        for (let i = 0; i < mws.length; i++) {\n            const [mwf, mwi] = mws[i];\n            if (mwf !== mwFactory) {\n                continue;\n            }\n            mw = mwi;\n        }\n        if (mw === null) {\n            mw = mwFactory(player);\n            mws.push([\n                mwFactory,\n                mw\n            ]);\n        }\n        return mw;\n    }\n    function setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n        const [mwFactory, ...mwrest] = middleware;\n        if (typeof mwFactory === 'string') {\n            setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n        } else if (mwFactory) {\n            const mw = getOrCreateFactory(player, mwFactory);\n            if (!mw.setSource) {\n                acc.push(mw);\n                return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n            }\n            mw.setSource(obj.assign({}, src), function (err, _src) {\n                if (err) {\n                    return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n                }\n                acc.push(mw);\n                setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n            });\n        } else if (mwrest.length) {\n            setSourceHelper(src, mwrest, next, player, acc, lastRun);\n        } else if (lastRun) {\n            next(src, acc);\n        } else {\n            setSourceHelper(src, middlewares['*'], next, player, acc, true);\n        }\n    }\n    return {\n        TERMINATOR: TERMINATOR,\n        use: use,\n        getMiddleware: getMiddleware,\n        setSource: setSource,\n        setTech: setTech,\n        get: get,\n        set: set,\n        mediate: mediate,\n        allowedGetters: allowedGetters,\n        allowedSetters: allowedSetters,\n        allowedMediators: allowedMediators,\n        clearCacheForPlayer: clearCacheForPlayer\n    };\n});\ndefine('skylark-videojs/utils/mimetypes',['./url'], function (Url) {\n    'use strict';\n    const MimetypesKind = {\n        opus: 'video/ogg',\n        ogv: 'video/ogg',\n        mp4: 'video/mp4',\n        mov: 'video/mp4',\n        m4v: 'video/mp4',\n        mkv: 'video/x-matroska',\n        m4a: 'audio/mp4',\n        mp3: 'audio/mpeg',\n        aac: 'audio/aac',\n        caf: 'audio/x-caf',\n        flac: 'audio/flac',\n        oga: 'audio/ogg',\n        wav: 'audio/wav',\n        m3u8: 'application/x-mpegURL',\n        jpg: 'image/jpeg',\n        jpeg: 'image/jpeg',\n        gif: 'image/gif',\n        png: 'image/png',\n        svg: 'image/svg+xml',\n        webp: 'image/webp'\n    };\n    const getMimetype = function (src = '') {\n        const ext = Url.getFileExtension(src);\n        const mimetype = MimetypesKind[ext.toLowerCase()];\n        return mimetype || '';\n    };\n    const findMimetype = (player, src) => {\n        if (!src) {\n            return '';\n        }\n        if (player.cache_.source.src === src && player.cache_.source.type) {\n            return player.cache_.source.type;\n        }\n        const matchingSources = player.cache_.sources.filter(s => s.src === src);\n        if (matchingSources.length) {\n            return matchingSources[0].type;\n        }\n        const sources = player.$$('source');\n        for (let i = 0; i < sources.length; i++) {\n            const s = sources[i];\n            if (s.type && s.src && s.src === src) {\n                return s.type;\n            }\n        }\n        return getMimetype(src);\n    };\n    return {\n        MimetypesKind: MimetypesKind,\n        getMimetype: getMimetype,\n        findMimetype: findMimetype\n    };\n});\ndefine('skylark-videojs/utils/filter-source',[\n    './obj',\n    './mimetypes'\n], function (obj, mimetypes) {\n    'use strict';\n    const filterSource = function (src) {\n        if (Array.isArray(src)) {\n            let newsrc = [];\n            src.forEach(function (srcobj) {\n                srcobj = filterSource(srcobj);\n                if (Array.isArray(srcobj)) {\n                    newsrc = newsrc.concat(srcobj);\n                } else if (obj.isObject(srcobj)) {\n                    newsrc.push(srcobj);\n                }\n            });\n            src = newsrc;\n        } else if (typeof src === 'string' && src.trim()) {\n            src = [fixSource({ src })];\n        } else if (obj.isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n            src = [fixSource(src)];\n        } else {\n            src = [];\n        }\n        return src;\n    };\n    function fixSource(src) {\n        if (!src.type) {\n            const mimetype = mimetypes.getMimetype(src.src);\n            if (mimetype) {\n                src.type = mimetype;\n            }\n        }\n        return src;\n    }\n    return filterSource;\n});\ndefine('skylark-videojs/tech/loader',[\n    '../component',\n    './tech',\n    '../utils/string-cases',\n    '../utils/merge-options'\n], function (Component, Tech, stringCases, mergeOptions) {\n    'use strict';\n    class MediaLoader extends Component {\n        constructor(player, options, ready) {\n            const options_ = mergeOptions({ createEl: false }, options);\n            super(player, options_, ready);\n            if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n                for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n                    const techName = stringCases.toTitleCase(j[i]);\n                    let tech = Tech.getTech(techName);\n                    if (!techName) {\n                        tech = Component.getComponent(techName);\n                    }\n                    if (tech && tech.isSupported()) {\n                        player.loadTech_(techName);\n                        break;\n                    }\n                }\n            } else {\n                player.src(options.playerOptions.sources);\n            }\n        }\n    }\n    Component.registerComponent('MediaLoader', MediaLoader);\n    return MediaLoader;\n});\ndefine('skylark-videojs/clickable-component',[\n    './component',\n    './utils/dom',\n    './utils/log',\n    './utils/obj',\n    './utils/keycode'\n], function (Component, Dom, log, obj, keycode) {\n    'use strict';\n    class ClickableComponent extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.emitTapEvents();\n            this.enable();\n        }\n        createEl(tag = 'div', props = {}, attributes = {}) {\n            props = obj.assign({\n                innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n                className: this.buildCSSClass(),\n                tabIndex: 0\n            }, props);\n            if (tag === 'button') {\n                log.error(`Creating a ClickableComponent with an HTML element of ${ tag } is not supported; use a Button instead.`);\n            }\n            attributes = obj.assign({ role: 'button' }, attributes);\n            this.tabIndex_ = props.tabIndex;\n            const el = super.createEl(tag, props, attributes);\n            this.createControlTextEl(el);\n            return el;\n        }\n        dispose() {\n            this.controlTextEl_ = null;\n            super.dispose();\n        }\n        createControlTextEl(el) {\n            this.controlTextEl_ = Dom.createEl('span', { className: 'vjs-control-text' }, { 'aria-live': 'polite' });\n            if (el) {\n                el.appendChild(this.controlTextEl_);\n            }\n            this.controlText(this.controlText_, el);\n            return this.controlTextEl_;\n        }\n        controlText(text, el = this.el()) {\n            if (text === undefined) {\n                return this.controlText_ || 'Need Text';\n            }\n            const localizedText = this.localize(text);\n            this.controlText_ = text;\n            Dom.textContent(this.controlTextEl_, localizedText);\n            if (!this.nonIconControl) {\n                el.setAttribute('title', localizedText);\n            }\n        }\n        buildCSSClass() {\n            return `vjs-control vjs-button ${ super.buildCSSClass() }`;\n        }\n        enable() {\n            if (!this.enabled_) {\n                this.enabled_ = true;\n                this.removeClass('vjs-disabled');\n                this.el_.setAttribute('aria-disabled', 'false');\n                if (typeof this.tabIndex_ !== 'undefined') {\n                    this.el_.setAttribute('tabIndex', this.tabIndex_);\n                }\n                this.on([\n                    'tap',\n                    'click'\n                ], this.handleClick);\n                this.on('keydown', this.handleKeyDown);\n            }\n        }\n        disable() {\n            this.enabled_ = false;\n            this.addClass('vjs-disabled');\n            this.el_.setAttribute('aria-disabled', 'true');\n            if (typeof this.tabIndex_ !== 'undefined') {\n                this.el_.removeAttribute('tabIndex');\n            }\n            this.off('mouseover', this.handleMouseOver);\n            this.off('mouseout', this.handleMouseOut);\n            this.off([\n                'tap',\n                'click'\n            ], this.handleClick);\n            this.off('keydown', this.handleKeyDown);\n        }\n        handleLanguagechange() {\n            this.controlText(this.controlText_);\n        }\n        handleClick(event) {\n            if (this.options_.clickHandler) {\n                this.options_.clickHandler.call(this, arguments);\n            }\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.trigger('click');\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n    }\n    Component.registerComponent('ClickableComponent', ClickableComponent);\n    return ClickableComponent;\n});\ndefine('skylark-videojs/poster-image',[\n    './clickable-component',\n    './component',\n    './utils/fn',\n    './utils/dom',\n    './utils/promise',\n    './utils/browser'\n], function (ClickableComponent, Component, Fn, Dom, promise, browser) {\n    'use strict';\n    class PosterImage extends ClickableComponent {\n        constructor(player, options) {\n            super(player, options);\n            this.update();\n            player.on('posterchange', Fn.bind(this, this.update));\n        }\n        dispose() {\n            this.player().off('posterchange', this.update);\n            super.dispose();\n        }\n        createEl() {\n            const el = Dom.createEl('div', {\n                className: 'vjs-poster',\n                tabIndex: -1\n            });\n            return el;\n        }\n        update(event) {\n            const url = this.player().poster();\n            this.setSrc(url);\n            if (url) {\n                this.show();\n            } else {\n                this.hide();\n            }\n        }\n        setSrc(url) {\n            let backgroundImage = '';\n            if (url) {\n                backgroundImage = `url(\"${ url }\")`;\n            }\n            this.el_.style.backgroundImage = backgroundImage;\n        }\n        handleClick(event) {\n            if (!this.player_.controls()) {\n                return;\n            }\n            const sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n            if (this.player_.tech(true) && !((browser.IE_VERSION || browser.IS_EDGE) && sourceIsEncrypted)) {\n                this.player_.tech(true).focus();\n            }\n            if (this.player_.paused()) {\n                promise.silencePromise(this.player_.play());\n            } else {\n                this.player_.pause();\n            }\n        }\n    }\n    Component.registerComponent('PosterImage', PosterImage);\n    return PosterImage;\n});\ndefine('skylark-videojs/tracks/text-track-display',[\n    '../component',\n    '../utils/fn',\n    '../utils/dom'\n], function (Component, Fn, Dom) {\n    'use strict';\n    const darkGray = '#222';\n    const lightGray = '#ccc';\n    const fontMap = {\n        monospace: 'monospace',\n        sansSerif: 'sans-serif',\n        serif: 'serif',\n        monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n        monospaceSerif: '\"Courier New\", monospace',\n        proportionalSansSerif: 'sans-serif',\n        proportionalSerif: 'serif',\n        casual: '\"Comic Sans MS\", Impact, fantasy',\n        script: '\"Monotype Corsiva\", cursive',\n        smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n    };\n    function constructColor(color, opacity) {\n        let hex;\n        if (color.length === 4) {\n            hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n        } else if (color.length === 7) {\n            hex = color.slice(1);\n        } else {\n            throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n        }\n        return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n    }\n    function tryUpdateStyle(el, style, rule) {\n        try {\n            el.style[style] = rule;\n        } catch (e) {\n            return;\n        }\n    }\n    class TextTrackDisplay extends Component {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n            const updateDisplayHandler = Fn.bind(this, this.updateDisplay);\n            player.on('loadstart', Fn.bind(this, this.toggleDisplay));\n            player.on('texttrackchange', updateDisplayHandler);\n            player.on('loadedmetadata', Fn.bind(this, this.preselectTrack));\n            player.ready(Fn.bind(this, function () {\n                if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n                    this.hide();\n                    return;\n                }\n                player.on('fullscreenchange', updateDisplayHandler);\n                player.on('playerresize', updateDisplayHandler);\n                window.addEventListener('orientationchange', updateDisplayHandler);\n                player.on('dispose', () => window.removeEventListener('orientationchange', updateDisplayHandler));\n                const tracks = this.options_.playerOptions.tracks || [];\n                for (let i = 0; i < tracks.length; i++) {\n                    this.player_.addRemoteTextTrack(tracks[i], true);\n                }\n                this.preselectTrack();\n            }));\n        }\n        preselectTrack() {\n            const modes = {\n                captions: 1,\n                subtitles: 1\n            };\n            const trackList = this.player_.textTracks();\n            const userPref = this.player_.cache_.selectedLanguage;\n            let firstDesc;\n            let firstCaptions;\n            let preferredTrack;\n            for (let i = 0; i < trackList.length; i++) {\n                const track = trackList[i];\n                if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n                    if (track.kind === userPref.kind) {\n                        preferredTrack = track;\n                    } else if (!preferredTrack) {\n                        preferredTrack = track;\n                    }\n                } else if (userPref && !userPref.enabled) {\n                    preferredTrack = null;\n                    firstDesc = null;\n                    firstCaptions = null;\n                } else if (track.default) {\n                    if (track.kind === 'descriptions' && !firstDesc) {\n                        firstDesc = track;\n                    } else if (track.kind in modes && !firstCaptions) {\n                        firstCaptions = track;\n                    }\n                }\n            }\n            if (preferredTrack) {\n                preferredTrack.mode = 'showing';\n            } else if (firstCaptions) {\n                firstCaptions.mode = 'showing';\n            } else if (firstDesc) {\n                firstDesc.mode = 'showing';\n            }\n        }\n        toggleDisplay() {\n            if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n                this.hide();\n            } else {\n                this.show();\n            }\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-text-track-display' }, {\n                'aria-live': 'off',\n                'aria-atomic': 'true'\n            });\n        }\n        clearDisplay() {\n            if (typeof window.WebVTT === 'function') {\n                window.WebVTT.processCues(window, [], this.el_);\n            }\n        }\n        updateDisplay() {\n            const tracks = this.player_.textTracks();\n            const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n            this.clearDisplay();\n            if (allowMultipleShowingTracks) {\n                const showingTracks = [];\n                for (let i = 0; i < tracks.length; ++i) {\n                    const track = tracks[i];\n                    if (track.mode !== 'showing') {\n                        continue;\n                    }\n                    showingTracks.push(track);\n                }\n                this.updateForTrack(showingTracks);\n                return;\n            }\n            let descriptionsTrack = null;\n            let captionsSubtitlesTrack = null;\n            let i = tracks.length;\n            while (i--) {\n                const track = tracks[i];\n                if (track.mode === 'showing') {\n                    if (track.kind === 'descriptions') {\n                        descriptionsTrack = track;\n                    } else {\n                        captionsSubtitlesTrack = track;\n                    }\n                }\n            }\n            if (captionsSubtitlesTrack) {\n                if (this.getAttribute('aria-live') !== 'off') {\n                    this.setAttribute('aria-live', 'off');\n                }\n                this.updateForTrack(captionsSubtitlesTrack);\n            } else if (descriptionsTrack) {\n                if (this.getAttribute('aria-live') !== 'assertive') {\n                    this.setAttribute('aria-live', 'assertive');\n                }\n                this.updateForTrack(descriptionsTrack);\n            }\n        }\n        updateDisplayState(track) {\n            const overrides = this.player_.textTrackSettings.getValues();\n            const cues = track.activeCues;\n            let i = cues.length;\n            while (i--) {\n                const cue = cues[i];\n                if (!cue) {\n                    continue;\n                }\n                const cueDiv = cue.displayState;\n                if (overrides.color) {\n                    cueDiv.firstChild.style.color = overrides.color;\n                }\n                if (overrides.textOpacity) {\n                    tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n                }\n                if (overrides.backgroundColor) {\n                    cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n                }\n                if (overrides.backgroundOpacity) {\n                    tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n                }\n                if (overrides.windowColor) {\n                    if (overrides.windowOpacity) {\n                        tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n                    } else {\n                        cueDiv.style.backgroundColor = overrides.windowColor;\n                    }\n                }\n                if (overrides.edgeStyle) {\n                    if (overrides.edgeStyle === 'dropshadow') {\n                        cueDiv.firstChild.style.textShadow = `2px 2px 3px ${ darkGray }, 2px 2px 4px ${ darkGray }, 2px 2px 5px ${ darkGray }`;\n                    } else if (overrides.edgeStyle === 'raised') {\n                        cueDiv.firstChild.style.textShadow = `1px 1px ${ darkGray }, 2px 2px ${ darkGray }, 3px 3px ${ darkGray }`;\n                    } else if (overrides.edgeStyle === 'depressed') {\n                        cueDiv.firstChild.style.textShadow = `1px 1px ${ lightGray }, 0 1px ${ lightGray }, -1px -1px ${ darkGray }, 0 -1px ${ darkGray }`;\n                    } else if (overrides.edgeStyle === 'uniform') {\n                        cueDiv.firstChild.style.textShadow = `0 0 4px ${ darkGray }, 0 0 4px ${ darkGray }, 0 0 4px ${ darkGray }, 0 0 4px ${ darkGray }`;\n                    }\n                }\n                if (overrides.fontPercent && overrides.fontPercent !== 1) {\n                    const fontSize = window.parseFloat(cueDiv.style.fontSize);\n                    cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n                    cueDiv.style.height = 'auto';\n                    cueDiv.style.top = 'auto';\n                }\n                if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n                    if (overrides.fontFamily === 'small-caps') {\n                        cueDiv.firstChild.style.fontVariant = 'small-caps';\n                    } else {\n                        cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n                    }\n                }\n            }\n        }\n        updateForTrack(tracks) {\n            if (!Array.isArray(tracks)) {\n                tracks = [tracks];\n            }\n            if (typeof window.WebVTT !== 'function' || tracks.every(track => {\n                    return !track.activeCues;\n                })) {\n                return;\n            }\n            const cues = [];\n            for (let i = 0; i < tracks.length; ++i) {\n                const track = tracks[i];\n                for (let j = 0; j < track.activeCues.length; ++j) {\n                    cues.push(track.activeCues[j]);\n                }\n            }\n            window.WebVTT.processCues(window, cues, this.el_);\n            for (let i = 0; i < tracks.length; ++i) {\n                const track = tracks[i];\n                for (let j = 0; j < track.activeCues.length; ++j) {\n                    const cueEl = track.activeCues[j].displayState;\n                    Dom.addClass(cueEl, 'vjs-text-track-cue');\n                    Dom.addClass(cueEl, 'vjs-text-track-cue-' + (track.language ? track.language : i));\n                }\n                if (this.player_.textTrackSettings) {\n                    this.updateDisplayState(track);\n                }\n            }\n        }\n    }\n    \n    Component.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n\n    TextTrackDisplay.constructColor = constructColor;\n\n    return TextTrackDisplay;\n});\ndefine('skylark-videojs/loading-spinner',[\n    './component',\n    './utils/dom'\n], function (Component, dom) {\n    'use strict';\n    class LoadingSpinner extends Component {\n        createEl() {\n            const isAudio = this.player_.isAudio();\n            const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n            const controlText = dom.createEl('span', {\n                className: 'vjs-control-text',\n                innerHTML: this.localize('{1} is loading.', [playerType])\n            });\n            const el = super.createEl('div', {\n                className: 'vjs-loading-spinner',\n                dir: 'ltr'\n            });\n            el.appendChild(controlText);\n            return el;\n        }\n    }\n    Component.registerComponent('LoadingSpinner', LoadingSpinner);\n    return LoadingSpinner;\n});\ndefine('skylark-videojs/button',[\n    './clickable-component',\n    './component',\n    './utils/log',\n    './utils/obj',\n    './utils/keycode'\n], function (ClickableComponent, Component, log, obj, keycode) {\n    'use strict';\n    class Button extends ClickableComponent {\n        createEl(tag, props = {}, attributes = {}) {\n            tag = 'button';\n            props = obj.assign({\n                innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n                className: this.buildCSSClass()\n            }, props);\n            attributes = obj.assign({ type: 'button' }, attributes);\n            const el = Component.prototype.createEl.call(this, tag, props, attributes);\n            this.createControlTextEl(el);\n            return el;\n        }\n        addChild(child, options = {}) {\n            const className = this.constructor.name;\n            log.warn(`Adding an actionable (user controllable) child to a Button (${ className }) is not supported; use a ClickableComponent instead.`);\n            return Component.prototype.addChild.call(this, child, options);\n        }\n        enable() {\n            super.enable();\n            this.el_.removeAttribute('disabled');\n        }\n        disable() {\n            super.disable();\n            this.el_.setAttribute('disabled', 'disabled');\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n                event.stopPropagation();\n                return;\n            }\n            super.handleKeyDown(event);\n        }\n    }\n    Component.registerComponent('Button', Button);\n    return Button;\n});\ndefine('skylark-videojs/big-play-button',[\n    './button',\n    './component',\n    './utils/promise',\n    './utils/browser'\n], function (Button, Component, promise, browser) {\n    'use strict';\n    class BigPlayButton extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.mouseused_ = false;\n            this.on('mousedown', this.handleMouseDown);\n        }\n        buildCSSClass() {\n            return 'vjs-big-play-button';\n        }\n        handleClick(event) {\n            const playPromise = this.player_.play();\n            if (this.mouseused_ && event.clientX && event.clientY) {\n                const sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n                promise.silencePromise(playPromise);\n                if (this.player_.tech(true) && !((browser.IE_VERSION || browser.IS_EDGE) && sourceIsEncrypted)) {\n                    this.player_.tech(true).focus();\n                }\n                return;\n            }\n            const cb = this.player_.getChild('controlBar');\n            const playToggle = cb && cb.getChild('playToggle');\n            if (!playToggle) {\n                this.player_.tech(true).focus();\n                return;\n            }\n            const playFocus = () => playToggle.focus();\n            if (promise.isPromise(playPromise)) {\n                playPromise.then(playFocus, () => {\n                });\n            } else {\n                this.setTimeout(playFocus, 1);\n            }\n        }\n        handleKeyDown(event) {\n            this.mouseused_ = false;\n            super.handleKeyDown(event);\n        }\n        handleMouseDown(event) {\n            this.mouseused_ = true;\n        }\n    }\n    BigPlayButton.prototype.controlText_ = 'Play Video';\n    Component.registerComponent('BigPlayButton', BigPlayButton);\n    return BigPlayButton;\n});\ndefine('skylark-videojs/close-button',[\n    './button',\n    './component',\n    './utils/keycode'\n], function (Button, Component, keycode) {\n    'use strict';\n    class CloseButton extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.controlText(options && options.controlText || this.localize('Close'));\n        }\n        buildCSSClass() {\n            return `vjs-close-button ${ super.buildCSSClass() }`;\n        }\n        handleClick(event) {\n            this.trigger({\n                type: 'close',\n                bubbles: false\n            });\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.trigger('click');\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n    }\n    Component.registerComponent('CloseButton', CloseButton);\n    return CloseButton;\n});\ndefine('skylark-videojs/control-bar/play-toggle',[\n    '../button',\n    '../component'\n], function (Button, Component) {\n    'use strict';\n    class PlayToggle extends Button {\n        constructor(player, options = {}) {\n            super(player, options);\n            options.replay = options.replay === undefined || options.replay;\n            this.on(player, 'play', this.handlePlay);\n            this.on(player, 'pause', this.handlePause);\n            if (options.replay) {\n                this.on(player, 'ended', this.handleEnded);\n            }\n        }\n        buildCSSClass() {\n            return `vjs-play-control ${ super.buildCSSClass() }`;\n        }\n        handleClick(event) {\n            if (this.player_.paused()) {\n                this.player_.play();\n            } else {\n                this.player_.pause();\n            }\n        }\n        handleSeeked(event) {\n            this.removeClass('vjs-ended');\n            if (this.player_.paused()) {\n                this.handlePause(event);\n            } else {\n                this.handlePlay(event);\n            }\n        }\n        handlePlay(event) {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-paused');\n            this.addClass('vjs-playing');\n            this.controlText('Pause');\n        }\n        handlePause(event) {\n            this.removeClass('vjs-playing');\n            this.addClass('vjs-paused');\n            this.controlText('Play');\n        }\n        handleEnded(event) {\n            this.removeClass('vjs-playing');\n            this.addClass('vjs-ended');\n            this.controlText('Replay');\n            this.one(this.player_, 'seeked', this.handleSeeked);\n        }\n    }\n    PlayToggle.prototype.controlText_ = 'Play';\n    Component.registerComponent('PlayToggle', PlayToggle);\n    return PlayToggle;\n});\ndefine('skylark-videojs/utils/format-time',[],function () {\n    'use strict';\n    const defaultImplementation = function (seconds, guide) {\n        seconds = seconds < 0 ? 0 : seconds;\n        let s = Math.floor(seconds % 60);\n        let m = Math.floor(seconds / 60 % 60);\n        let h = Math.floor(seconds / 3600);\n        const gm = Math.floor(guide / 60 % 60);\n        const gh = Math.floor(guide / 3600);\n        if (isNaN(seconds) || seconds === Infinity) {\n            h = m = s = '-';\n        }\n        h = h > 0 || gh > 0 ? h + ':' : '';\n        m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n        s = s < 10 ? '0' + s : s;\n        return h + m + s;\n    };\n    let implementation = defaultImplementation;\n    function setFormatTime(customImplementation) {\n        implementation = customImplementation;\n    }\n    function resetFormatTime() {\n        implementation = defaultImplementation;\n    }\n    function formatTime(seconds, guide = seconds) {\n        return implementation(seconds, guide);\n    }\n\n    formatTime.setFormatTime = setFormatTime;\n    formatTime.resetFormatTime = resetFormatTime;\n\n    return   formatTime;\n});\ndefine('skylark-videojs/control-bar/time-controls/time-display',[\n    'skylark-langx-globals/document',\n    '../../component',\n    '../../utils/dom',\n    '../../utils/format-time',\n    '../../utils/log'\n], function (document, Component, Dom, formatTime, log) {\n    'use strict';\n    class TimeDisplay extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.on(player, [\n                'timeupdate',\n                'ended'\n            ], this.updateContent);\n            this.updateTextNode_();\n        }\n        createEl() {\n            const className = this.buildCSSClass();\n            const el = super.createEl('div', {\n                className: `${ className } vjs-time-control vjs-control`,\n                innerHTML: `<span class=\"vjs-control-text\" role=\"presentation\">${ this.localize(this.labelText_) }\\u00a0</span>`\n            });\n            this.contentEl_ = Dom.createEl('span', { className: `${ className }-display` }, {\n                'aria-live': 'off',\n                'role': 'presentation'\n            });\n            el.appendChild(this.contentEl_);\n            return el;\n        }\n        dispose() {\n            this.contentEl_ = null;\n            this.textNode_ = null;\n            super.dispose();\n        }\n        updateTextNode_(time = 0) {\n            time = formatTime(time);\n            if (this.formattedTime_ === time) {\n                return;\n            }\n            this.formattedTime_ = time;\n            this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n                if (!this.contentEl_) {\n                    return;\n                }\n                let oldNode = this.textNode_;\n                if (oldNode && this.contentEl_.firstChild !== oldNode) {\n                    oldNode = null;\n                    log.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n                }\n                this.textNode_ = document.createTextNode(this.formattedTime_);\n                if (!this.textNode_) {\n                    return;\n                }\n                if (oldNode) {\n                    this.contentEl_.replaceChild(this.textNode_, oldNode);\n                } else {\n                    this.contentEl_.appendChild(this.textNode_);\n                }\n            });\n        }\n        updateContent(event) {\n        }\n    }\n    TimeDisplay.prototype.labelText_ = 'Time';\n    TimeDisplay.prototype.controlText_ = 'Time';\n    Component.registerComponent('TimeDisplay', TimeDisplay);\n    return TimeDisplay;\n});\ndefine('skylark-videojs/control-bar/time-controls/current-time-display',[\n    './time-display',\n    '../../component'\n], function (TimeDisplay, Component) {\n    'use strict';\n    class CurrentTimeDisplay extends TimeDisplay {\n        buildCSSClass() {\n            return 'vjs-current-time';\n        }\n        updateContent(event) {\n            let time;\n            if (this.player_.ended()) {\n                time = this.player_.duration();\n            } else {\n                time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n            }\n            this.updateTextNode_(time);\n        }\n    }\n    CurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n    CurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n    Component.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n    return CurrentTimeDisplay;\n});\ndefine('skylark-videojs/control-bar/time-controls/duration-display',[\n    './time-display',\n    '../../component'\n], function (TimeDisplay, Component) {\n    'use strict';\n    class DurationDisplay extends TimeDisplay {\n        constructor(player, options) {\n            super(player, options);\n            this.on(player, 'durationchange', this.updateContent);\n            this.on(player, 'loadstart', this.updateContent);\n            this.on(player, 'loadedmetadata', this.updateContent);\n        }\n        buildCSSClass() {\n            return 'vjs-duration';\n        }\n        updateContent(event) {\n            const duration = this.player_.duration();\n            this.updateTextNode_(duration);\n        }\n    }\n    DurationDisplay.prototype.labelText_ = 'Duration';\n    DurationDisplay.prototype.controlText_ = 'Duration';\n    Component.registerComponent('DurationDisplay', DurationDisplay);\n    return DurationDisplay;\n});\ndefine('skylark-videojs/control-bar/time-controls/time-divider',[\n    '../../component'\n], function (Component) {\n    'use strict';\n    class TimeDivider extends Component {\n        createEl() {\n            return super.createEl('div', {\n                className: 'vjs-time-control vjs-time-divider',\n                innerHTML: '<div><span>/</span></div>'\n            }, { 'aria-hidden': true });\n        }\n    }\n    Component.registerComponent('TimeDivider', TimeDivider);\n    return TimeDivider;\n});\ndefine('skylark-videojs/control-bar/time-controls/remaining-time-display',[\n    './time-display',\n    '../../component',\n    '../../utils/dom'\n], function (TimeDisplay, Component, Dom) {\n    'use strict';\n    class RemainingTimeDisplay extends TimeDisplay {\n        constructor(player, options) {\n            super(player, options);\n            this.on(player, 'durationchange', this.updateContent);\n        }\n        buildCSSClass() {\n            return 'vjs-remaining-time';\n        }\n        createEl() {\n            const el = super.createEl();\n            el.insertBefore(Dom.createEl('span', {}, { 'aria-hidden': true }, '-'), this.contentEl_);\n            return el;\n        }\n        updateContent(event) {\n            if (typeof this.player_.duration() !== 'number') {\n                return;\n            }\n            let time;\n            if (this.player_.ended()) {\n                time = 0;\n            } else if (this.player_.remainingTimeDisplay) {\n                time = this.player_.remainingTimeDisplay();\n            } else {\n                time = this.player_.remainingTime();\n            }\n            this.updateTextNode_(time);\n        }\n    }\n    RemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n    RemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n    Component.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n    return RemainingTimeDisplay;\n});\ndefine('skylark-videojs/control-bar/live-display',[\n    '../component',\n    '../utils/dom'\n], function (Component, Dom) {\n    'use strict';\n    class LiveDisplay extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.updateShowing();\n            this.on(this.player(), 'durationchange', this.updateShowing);\n        }\n        createEl() {\n            const el = super.createEl('div', { className: 'vjs-live-control vjs-control' });\n            this.contentEl_ = Dom.createEl('div', {\n                className: 'vjs-live-display',\n                innerHTML: `<span class=\"vjs-control-text\">${ this.localize('Stream Type') }\\u00a0</span>${ this.localize('LIVE') }`\n            }, { 'aria-live': 'off' });\n            el.appendChild(this.contentEl_);\n            return el;\n        }\n        dispose() {\n            this.contentEl_ = null;\n            super.dispose();\n        }\n        updateShowing(event) {\n            if (this.player().duration() === Infinity) {\n                this.show();\n            } else {\n                this.hide();\n            }\n        }\n    }\n    Component.registerComponent('LiveDisplay', LiveDisplay);\n    return LiveDisplay;\n});\ndefine('skylark-videojs/control-bar/seek-to-live',[\n    '../button',\n    '../component',\n    '../utils/dom'\n], function (Button, Component, Dom) {\n    'use strict';\n    class SeekToLive extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.updateLiveEdgeStatus();\n            if (this.player_.liveTracker) {\n                this.on(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n            }\n        }\n        createEl() {\n            const el = super.createEl('button', { className: 'vjs-seek-to-live-control vjs-control' });\n            this.textEl_ = Dom.createEl('span', {\n                className: 'vjs-seek-to-live-text',\n                innerHTML: this.localize('LIVE')\n            }, { 'aria-hidden': 'true' });\n            el.appendChild(this.textEl_);\n            return el;\n        }\n        updateLiveEdgeStatus() {\n            if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n                this.setAttribute('aria-disabled', true);\n                this.addClass('vjs-at-live-edge');\n                this.controlText('Seek to live, currently playing live');\n            } else {\n                this.setAttribute('aria-disabled', false);\n                this.removeClass('vjs-at-live-edge');\n                this.controlText('Seek to live, currently behind live');\n            }\n        }\n        handleClick() {\n            this.player_.liveTracker.seekToLiveEdge();\n        }\n        dispose() {\n            if (this.player_.liveTracker) {\n                this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n            }\n            this.textEl_ = null;\n            super.dispose();\n        }\n    }\n    SeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\n    Component.registerComponent('SeekToLive', SeekToLive);\n    return SeekToLive;\n});\ndefine('skylark-videojs/utils/clamp',[],function () {\n    'use strict';\n    const clamp = function (number, min, max) {\n        number = Number(number);\n        return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n    };\n    return clamp;\n});\ndefine('skylark-videojs/slider/slider',[\n    '../component',\n    '../utils/dom',\n    '../utils/obj',\n    '../utils/browser',\n    '../utils/clamp',\n    '../utils/keycode'\n], function (Component, Dom, obj, browser, clamp, keycode) {\n    'use strict';\n    class Slider extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.bar = this.getChild(this.options_.barName);\n            this.vertical(!!this.options_.vertical);\n            this.enable();\n        }\n        enabled() {\n            return this.enabled_;\n        }\n        enable() {\n            if (this.enabled()) {\n                return;\n            }\n            this.on('mousedown', this.handleMouseDown);\n            this.on('touchstart', this.handleMouseDown);\n            this.on('keydown', this.handleKeyDown);\n            this.on('click', this.handleClick);\n            this.on(this.player_, 'controlsvisible', this.update);\n            if (this.playerEvent) {\n                this.on(this.player_, this.playerEvent, this.update);\n            }\n            this.removeClass('disabled');\n            this.setAttribute('tabindex', 0);\n            this.enabled_ = true;\n        }\n        disable() {\n            if (!this.enabled()) {\n                return;\n            }\n            const doc = this.bar.el_.ownerDocument;\n            this.off('mousedown', this.handleMouseDown);\n            this.off('touchstart', this.handleMouseDown);\n            this.off('keydown', this.handleKeyDown);\n            this.off('click', this.handleClick);\n            this.off(this.player_, 'controlsvisible', this.update);\n            this.off(doc, 'mousemove', this.handleMouseMove);\n            this.off(doc, 'mouseup', this.handleMouseUp);\n            this.off(doc, 'touchmove', this.handleMouseMove);\n            this.off(doc, 'touchend', this.handleMouseUp);\n            this.removeAttribute('tabindex');\n            this.addClass('disabled');\n            if (this.playerEvent) {\n                this.off(this.player_, this.playerEvent, this.update);\n            }\n            this.enabled_ = false;\n        }\n        createEl(type, props = {}, attributes = {}) {\n            props.className = props.className + ' vjs-slider';\n            props = obj.assign({ tabIndex: 0 }, props);\n            attributes = obj.assign({\n                'role': 'slider',\n                'aria-valuenow': 0,\n                'aria-valuemin': 0,\n                'aria-valuemax': 100,\n                'tabIndex': 0\n            }, attributes);\n            return super.createEl(type, props, attributes);\n        }\n        handleMouseDown(event) {\n            const doc = this.bar.el_.ownerDocument;\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n            }\n            if (event.type === 'touchstart' && !browser.IS_CHROME) {\n                event.preventDefault();\n            }\n            Dom.blockTextSelection();\n            this.addClass('vjs-sliding');\n            this.trigger('slideractive');\n            this.on(doc, 'mousemove', this.handleMouseMove);\n            this.on(doc, 'mouseup', this.handleMouseUp);\n            this.on(doc, 'touchmove', this.handleMouseMove);\n            this.on(doc, 'touchend', this.handleMouseUp);\n            this.handleMouseMove(event);\n        }\n        handleMouseMove(event) {\n        }\n        handleMouseUp() {\n            const doc = this.bar.el_.ownerDocument;\n            Dom.unblockTextSelection();\n            this.removeClass('vjs-sliding');\n            this.trigger('sliderinactive');\n            this.off(doc, 'mousemove', this.handleMouseMove);\n            this.off(doc, 'mouseup', this.handleMouseUp);\n            this.off(doc, 'touchmove', this.handleMouseMove);\n            this.off(doc, 'touchend', this.handleMouseUp);\n            this.update();\n        }\n        update() {\n            if (!this.el_ || !this.bar) {\n                return;\n            }\n            const progress = this.getProgress();\n            if (progress === this.progress_) {\n                return progress;\n            }\n            this.progress_ = progress;\n            this.requestNamedAnimationFrame('Slider#update', () => {\n                const sizeKey = this.vertical() ? 'height' : 'width';\n                this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n            });\n            return progress;\n        }\n        getProgress() {\n            return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n        }\n        calculateDistance(event) {\n            const position = Dom.getPointerPosition(this.el_, event);\n            if (this.vertical()) {\n                return position.y;\n            }\n            return position.x;\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepBack();\n            } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepForward();\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n        handleClick(event) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n        vertical(bool) {\n            if (bool === undefined) {\n                return this.vertical_ || false;\n            }\n            this.vertical_ = !!bool;\n            if (this.vertical_) {\n                this.addClass('vjs-slider-vertical');\n            } else {\n                this.addClass('vjs-slider-horizontal');\n            }\n        }\n    }\n    Component.registerComponent('Slider', Slider);\n    return Slider;\n});\ndefine('skylark-videojs/control-bar/progress-control/load-progress-bar',[\n    'skylark-langx-globals/document',\n    '../../component',\n    '../../utils/dom',\n    '../../utils/clamp'\n], function (document,Component, Dom, clamp) {\n    'use strict';\n    const percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n    class LoadProgressBar extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.partEls_ = [];\n            this.on(player, 'progress', this.update);\n        }\n        createEl() {\n            const el = super.createEl('div', { className: 'vjs-load-progress' });\n            const wrapper = Dom.createEl('span', { className: 'vjs-control-text' });\n            const loadedText = Dom.createEl('span', { textContent: this.localize('Loaded') });\n            const separator = document.createTextNode(': ');\n            this.percentageEl_ = Dom.createEl('span', {\n                className: 'vjs-control-text-loaded-percentage',\n                textContent: '0%'\n            });\n            el.appendChild(wrapper);\n            wrapper.appendChild(loadedText);\n            wrapper.appendChild(separator);\n            wrapper.appendChild(this.percentageEl_);\n            return el;\n        }\n        dispose() {\n            this.partEls_ = null;\n            this.percentageEl_ = null;\n            super.dispose();\n        }\n        update(event) {\n            this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n                const liveTracker = this.player_.liveTracker;\n                const buffered = this.player_.buffered();\n                const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n                const bufferedEnd = this.player_.bufferedEnd();\n                const children = this.partEls_;\n                const percent = percentify(bufferedEnd, duration);\n                if (this.percent_ !== percent) {\n                    this.el_.style.width = percent;\n                    Dom.textContent(this.percentageEl_, percent);\n                    this.percent_ = percent;\n                }\n                for (let i = 0; i < buffered.length; i++) {\n                    const start = buffered.start(i);\n                    const end = buffered.end(i);\n                    let part = children[i];\n                    if (!part) {\n                        part = this.el_.appendChild(Dom.createEl());\n                        children[i] = part;\n                    }\n                    if (part.dataset.start === start && part.dataset.end === end) {\n                        continue;\n                    }\n                    part.dataset.start = start;\n                    part.dataset.end = end;\n                    part.style.left = percentify(start, bufferedEnd);\n                    part.style.width = percentify(end - start, bufferedEnd);\n                }\n                for (let i = children.length; i > buffered.length; i--) {\n                    this.el_.removeChild(children[i - 1]);\n                }\n                children.length = buffered.length;\n            });\n        }\n    }\n    Component.registerComponent('LoadProgressBar', LoadProgressBar);\n    return LoadProgressBar;\n});\ndefine('skylark-videojs/control-bar/progress-control/time-tooltip',[\n    '../../component',\n    '../../utils/dom',\n    '../../utils/format-time',\n    '../../utils/fn'\n], function (Component, Dom, formatTime, Fn) {\n    'use strict';\n    class TimeTooltip extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.update = Fn.throttle(Fn.bind(this, this.update), Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-time-tooltip' }, { 'aria-hidden': 'true' });\n        }\n        update(seekBarRect, seekBarPoint, content) {\n            const tooltipRect = Dom.findPosition(this.el_);\n            const playerRect = Dom.getBoundingClientRect(this.player_.el());\n            const seekBarPointPx = seekBarRect.width * seekBarPoint;\n            if (!playerRect || !tooltipRect) {\n                return;\n            }\n            const spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n            const spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n            let pullTooltipBy = tooltipRect.width / 2;\n            if (spaceLeftOfPoint < pullTooltipBy) {\n                pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n            } else if (spaceRightOfPoint < pullTooltipBy) {\n                pullTooltipBy = spaceRightOfPoint;\n            }\n            if (pullTooltipBy < 0) {\n                pullTooltipBy = 0;\n            } else if (pullTooltipBy > tooltipRect.width) {\n                pullTooltipBy = tooltipRect.width;\n            }\n            pullTooltipBy = Math.round(pullTooltipBy);\n            this.el_.style.right = `-${ pullTooltipBy }px`;\n            this.write(content);\n        }\n        write(content) {\n            Dom.textContent(this.el_, content);\n        }\n        updateTime(seekBarRect, seekBarPoint, time, cb) {\n            this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n                let content;\n                const duration = this.player_.duration();\n                if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n                    const liveWindow = this.player_.liveTracker.liveWindow();\n                    const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n                    content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n                } else {\n                    content = formatTime(time, duration);\n                }\n                this.update(seekBarRect, seekBarPoint, content);\n                if (cb) {\n                    cb();\n                }\n            });\n        }\n    }\n    Component.registerComponent('TimeTooltip', TimeTooltip);\n    return TimeTooltip;\n});\ndefine('skylark-videojs/control-bar/progress-control/play-progress-bar',[\n    '../../component',\n    '../../utils/browser',\n    '../../utils/fn',\n    './time-tooltip'\n], function (Component, browser, Fn) {\n    'use strict';\n    class PlayProgressBar extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.update = Fn.throttle(Fn.bind(this, this.update), Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-play-progress vjs-slider-bar' }, { 'aria-hidden': 'true' });\n        }\n        update(seekBarRect, seekBarPoint) {\n            const timeTooltip = this.getChild('timeTooltip');\n            if (!timeTooltip) {\n                return;\n            }\n            const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n            timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n        }\n    }\n    PlayProgressBar.prototype.options_ = { children: [] };\n    if (!browser.IS_IOS && !browser.IS_ANDROID) {\n        PlayProgressBar.prototype.options_.children.push('timeTooltip');\n    }\n    Component.registerComponent('PlayProgressBar', PlayProgressBar);\n    return PlayProgressBar;\n});\ndefine('skylark-videojs/control-bar/progress-control/mouse-time-display',[\n    '../../component',\n    '../../utils/fn',\n    './time-tooltip'\n], function (Component, Fn) {\n    'use strict';\n    class MouseTimeDisplay extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.update = Fn.throttle(Fn.bind(this, this.update), Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-mouse-display' });\n        }\n        update(seekBarRect, seekBarPoint) {\n            const time = seekBarPoint * this.player_.duration();\n            this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n                this.el_.style.left = `${ seekBarRect.width * seekBarPoint }px`;\n            });\n        }\n    }\n    MouseTimeDisplay.prototype.options_ = { children: ['timeTooltip'] };\n    Component.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n    return MouseTimeDisplay;\n});\ndefine('skylark-videojs/control-bar/progress-control/seek-bar',[\n    'skylark-langx-globals/document',\n    '../../slider/slider',\n    '../../component',\n    '../../utils/browser',\n    '../../utils/dom',\n    '../../utils/fn',\n    '../../utils/format-time',\n    '../../utils/promise',\n    '../../utils/keycode',\n    './load-progress-bar',\n    './play-progress-bar',\n    './mouse-time-display'\n], function (document,Slider, Component, browser, Dom, Fn, formatTime, promise, keycode) {\n    'use strict';\n    const STEP_SECONDS = 5;\n    const PAGE_KEY_MULTIPLIER = 12;\n    class SeekBar extends Slider {\n        constructor(player, options) {\n            super(player, options);\n            this.setEventHandlers_();\n        }\n        setEventHandlers_() {\n            this.update_ = Fn.bind(this, this.update);\n            this.update = Fn.throttle(this.update_, Fn.UPDATE_REFRESH_INTERVAL);\n            this.on(this.player_, [\n                'ended',\n                'durationchange',\n                'timeupdate'\n            ], this.update);\n            if (this.player_.liveTracker) {\n                this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n            }\n            this.updateInterval = null;\n            this.on(this.player_, ['playing'], this.enableInterval_);\n            this.on(this.player_, [\n                'ended',\n                'pause',\n                'waiting'\n            ], this.disableInterval_);\n            if ('hidden' in document && 'visibilityState' in document) {\n                this.on(document, 'visibilitychange', this.toggleVisibility_);\n            }\n        }\n        toggleVisibility_(e) {\n            if (document.hidden) {\n                this.disableInterval_(e);\n            } else {\n                this.enableInterval_();\n                this.update();\n            }\n        }\n        enableInterval_() {\n            if (this.updateInterval) {\n                return;\n            }\n            this.updateInterval = this.setInterval(this.update, Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        disableInterval_(e) {\n            if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n                return;\n            }\n            if (!this.updateInterval) {\n                return;\n            }\n            this.clearInterval(this.updateInterval);\n            this.updateInterval = null;\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-progress-holder' }, { 'aria-label': this.localize('Progress Bar') });\n        }\n        update(event) {\n            const percent = super.update();\n            this.requestNamedAnimationFrame('SeekBar#update', () => {\n                const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n                const liveTracker = this.player_.liveTracker;\n                let duration = this.player_.duration();\n                if (liveTracker && liveTracker.isLive()) {\n                    duration = this.player_.liveTracker.liveCurrentTime();\n                }\n                if (this.percent_ !== percent) {\n                    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n                    this.percent_ = percent;\n                }\n                if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n                    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [\n                        formatTime(currentTime, duration),\n                        formatTime(duration, duration)\n                    ], '{1} of {2}'));\n                    this.currentTime_ = currentTime;\n                    this.duration_ = duration;\n                }\n                if (this.bar) {\n                    this.bar.update(Dom.getBoundingClientRect(this.el()), this.getProgress());\n                }\n            });\n            return percent;\n        }\n        getCurrentTime_() {\n            return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n        }\n        getPercent() {\n            const currentTime = this.getCurrentTime_();\n            let percent;\n            const liveTracker = this.player_.liveTracker;\n            if (liveTracker && liveTracker.isLive()) {\n                percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n                if (liveTracker.atLiveEdge()) {\n                    percent = 1;\n                }\n            } else {\n                percent = currentTime / this.player_.duration();\n            }\n            return percent;\n        }\n        handleMouseDown(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            event.stopPropagation();\n            this.player_.scrubbing(true);\n            this.videoWasPlaying = !this.player_.paused();\n            this.player_.pause();\n            super.handleMouseDown(event);\n        }\n        handleMouseMove(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            let newTime;\n            const distance = this.calculateDistance(event);\n            const liveTracker = this.player_.liveTracker;\n            if (!liveTracker || !liveTracker.isLive()) {\n                newTime = distance * this.player_.duration();\n                if (newTime === this.player_.duration()) {\n                    newTime = newTime - 0.1;\n                }\n            } else {\n                if (distance >= 0.99) {\n                    liveTracker.seekToLiveEdge();\n                    return;\n                }\n                const seekableStart = liveTracker.seekableStart();\n                const seekableEnd = liveTracker.liveCurrentTime();\n                newTime = seekableStart + distance * liveTracker.liveWindow();\n                if (newTime >= seekableEnd) {\n                    newTime = seekableEnd;\n                }\n                if (newTime <= seekableStart) {\n                    newTime = seekableStart + 0.1;\n                }\n                if (newTime === Infinity) {\n                    return;\n                }\n            }\n            this.player_.currentTime(newTime);\n        }\n        enable() {\n            super.enable();\n            const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n            if (!mouseTimeDisplay) {\n                return;\n            }\n            mouseTimeDisplay.show();\n        }\n        disable() {\n            super.disable();\n            const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n            if (!mouseTimeDisplay) {\n                return;\n            }\n            mouseTimeDisplay.hide();\n        }\n        handleMouseUp(event) {\n            super.handleMouseUp(event);\n            if (event) {\n                event.stopPropagation();\n            }\n            this.player_.scrubbing(false);\n            this.player_.trigger({\n                type: 'timeupdate',\n                target: this,\n                manuallyTriggered: true\n            });\n            if (this.videoWasPlaying) {\n                promise.silencePromise(this.player_.play());\n            } else {\n                this.update_();\n            }\n        }\n        stepForward() {\n            this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n        }\n        stepBack() {\n            this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n        }\n        handleAction(event) {\n            if (this.player_.paused()) {\n                this.player_.play();\n            } else {\n                this.player_.pause();\n            }\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.handleAction(event);\n            } else if (keycode.isEventKey(event, 'Home')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(0);\n            } else if (keycode.isEventKey(event, 'End')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(this.player_.duration());\n            } else if (/^[0-9]$/.test(keycode(event))) {\n                event.preventDefault();\n                event.stopPropagation();\n                const gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10 / 100;\n                this.player_.currentTime(this.player_.duration() * gotoFraction);\n            } else if (keycode.isEventKey(event, 'PgDn')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n            } else if (keycode.isEventKey(event, 'PgUp')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n        dispose() {\n            this.disableInterval_();\n            this.off(this.player_, [\n                'ended',\n                'durationchange',\n                'timeupdate'\n            ], this.update);\n            if (this.player_.liveTracker) {\n                this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n            }\n            this.off(this.player_, ['playing'], this.enableInterval_);\n            this.off(this.player_, [\n                'ended',\n                'pause',\n                'waiting'\n            ], this.disableInterval_);\n            if ('hidden' in document && 'visibilityState' in document) {\n                this.off(document, 'visibilitychange', this.toggleVisibility_);\n            }\n            super.dispose();\n        }\n    }\n    SeekBar.prototype.options_ = {\n        children: [\n            'loadProgressBar',\n            'playProgressBar'\n        ],\n        barName: 'playProgressBar'\n    };\n    if (!browser.IS_IOS && !browser.IS_ANDROID) {\n        SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n    }\n    Component.registerComponent('SeekBar', SeekBar);\n    return SeekBar;\n});\ndefine('skylark-videojs/control-bar/progress-control/progress-control',[\n    '../../component',\n    '../../utils/dom',\n    '../../utils/clamp',\n    '../../utils/fn',\n    './seek-bar'\n], function (Component, Dom, clamp, Fn) {\n    'use strict';\n    class ProgressControl extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.handleMouseMove = Fn.throttle(Fn.bind(this, this.handleMouseMove), Fn.UPDATE_REFRESH_INTERVAL);\n            this.throttledHandleMouseSeek = Fn.throttle(Fn.bind(this, this.handleMouseSeek), Fn.UPDATE_REFRESH_INTERVAL);\n            this.enable();\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-progress-control vjs-control' });\n        }\n        handleMouseMove(event) {\n            const seekBar = this.getChild('seekBar');\n            if (!seekBar) {\n                return;\n            }\n            const playProgressBar = seekBar.getChild('playProgressBar');\n            const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n            if (!playProgressBar && !mouseTimeDisplay) {\n                return;\n            }\n            const seekBarEl = seekBar.el();\n            const seekBarRect = Dom.findPosition(seekBarEl);\n            let seekBarPoint = Dom.getPointerPosition(seekBarEl, event).x;\n            seekBarPoint = clamp(seekBarPoint, 0, 1);\n            if (mouseTimeDisplay) {\n                mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n            }\n            if (playProgressBar) {\n                playProgressBar.update(seekBarRect, seekBar.getProgress());\n            }\n        }\n        handleMouseSeek(event) {\n            const seekBar = this.getChild('seekBar');\n            if (seekBar) {\n                seekBar.handleMouseMove(event);\n            }\n        }\n        enabled() {\n            return this.enabled_;\n        }\n        disable() {\n            this.children().forEach(child => child.disable && child.disable());\n            if (!this.enabled()) {\n                return;\n            }\n            this.off([\n                'mousedown',\n                'touchstart'\n            ], this.handleMouseDown);\n            this.off(this.el_, 'mousemove', this.handleMouseMove);\n            this.handleMouseUp();\n            this.addClass('disabled');\n            this.enabled_ = false;\n        }\n        enable() {\n            this.children().forEach(child => child.enable && child.enable());\n            if (this.enabled()) {\n                return;\n            }\n            this.on([\n                'mousedown',\n                'touchstart'\n            ], this.handleMouseDown);\n            this.on(this.el_, 'mousemove', this.handleMouseMove);\n            this.removeClass('disabled');\n            this.enabled_ = true;\n        }\n        handleMouseDown(event) {\n            const doc = this.el_.ownerDocument;\n            const seekBar = this.getChild('seekBar');\n            if (seekBar) {\n                seekBar.handleMouseDown(event);\n            }\n            this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n            this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n            this.on(doc, 'mouseup', this.handleMouseUp);\n            this.on(doc, 'touchend', this.handleMouseUp);\n        }\n        handleMouseUp(event) {\n            const doc = this.el_.ownerDocument;\n            const seekBar = this.getChild('seekBar');\n            if (seekBar) {\n                seekBar.handleMouseUp(event);\n            }\n            this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n            this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n            this.off(doc, 'mouseup', this.handleMouseUp);\n            this.off(doc, 'touchend', this.handleMouseUp);\n        }\n    }\n    ProgressControl.prototype.options_ = { children: ['seekBar'] };\n    Component.registerComponent('ProgressControl', ProgressControl);\n    return ProgressControl;\n});\ndefine('skylark-videojs/control-bar/picture-in-picture-toggle',[\n    'skylark-langx-globals/document',\n    '../button',\n    '../component'\n], function (document,Button, Component) {\n    'use strict';\n    class PictureInPictureToggle extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.on(player, [\n                'enterpictureinpicture',\n                'leavepictureinpicture'\n            ], this.handlePictureInPictureChange);\n            this.on(player, [\n                'disablepictureinpicturechanged',\n                'loadedmetadata'\n            ], this.handlePictureInPictureEnabledChange);\n            this.disable();\n        }\n        buildCSSClass() {\n            return `vjs-picture-in-picture-control ${ super.buildCSSClass() }`;\n        }\n        handlePictureInPictureEnabledChange() {\n            if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n                this.enable();\n            } else {\n                this.disable();\n            }\n        }\n        handlePictureInPictureChange(event) {\n            if (this.player_.isInPictureInPicture()) {\n                this.controlText('Exit Picture-in-Picture');\n            } else {\n                this.controlText('Picture-in-Picture');\n            }\n            this.handlePictureInPictureEnabledChange();\n        }\n        handleClick(event) {\n            if (!this.player_.isInPictureInPicture()) {\n                this.player_.requestPictureInPicture();\n            } else {\n                this.player_.exitPictureInPicture();\n            }\n        }\n    }\n    PictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\n    Component.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n    return PictureInPictureToggle;\n});\ndefine('skylark-videojs/control-bar/fullscreen-toggle',[\n    'skylark-langx-globals/document',\n    '../button',\n    '../component',\n], function (document,Button, Component) {\n    'use strict';\n    class FullscreenToggle extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.on(player, 'fullscreenchange', this.handleFullscreenChange);\n            if (document[player.fsApi_.fullscreenEnabled] === false) {\n                this.disable();\n            }\n        }\n        buildCSSClass() {\n            return `vjs-fullscreen-control ${ super.buildCSSClass() }`;\n        }\n        handleFullscreenChange(event) {\n            if (this.player_.isFullscreen()) {\n                this.controlText('Non-Fullscreen');\n            } else {\n                this.controlText('Fullscreen');\n            }\n        }\n        handleClick(event) {\n            if (!this.player_.isFullscreen()) {\n                this.player_.requestFullscreen();\n            } else {\n                this.player_.exitFullscreen();\n            }\n        }\n    }\n    FullscreenToggle.prototype.controlText_ = 'Fullscreen';\n    Component.registerComponent('FullscreenToggle', FullscreenToggle);\n    return FullscreenToggle;\n});\ndefine('skylark-videojs/control-bar/volume-control/check-volume-support',[],function () {\n    'use strict';\n    const checkVolumeSupport = function (self, player) {\n        if (player.tech_ && !player.tech_.featuresVolumeControl) {\n            self.addClass('vjs-hidden');\n        }\n        self.on(player, 'loadstart', function () {\n            if (!player.tech_.featuresVolumeControl) {\n                self.addClass('vjs-hidden');\n            } else {\n                self.removeClass('vjs-hidden');\n            }\n        });\n    };\n    return checkVolumeSupport;\n});\ndefine('skylark-videojs/control-bar/volume-control/volume-level',[\n    '../../component'\n], function (Component) {\n    'use strict';\n    class VolumeLevel extends Component {\n        createEl() {\n            return super.createEl('div', {\n                className: 'vjs-volume-level',\n                innerHTML: '<span class=\"vjs-control-text\"></span>'\n            });\n        }\n    }\n    Component.registerComponent('VolumeLevel', VolumeLevel);\n    return VolumeLevel;\n});\ndefine('skylark-videojs/control-bar/volume-control/volume-bar',[\n    '../../slider/slider',\n    '../../component',\n    '../../utils/dom',\n    './volume-level'\n], function (Slider, Component, Dom) {\n    'use strict';\n    class VolumeBar extends Slider {\n        constructor(player, options) {\n            super(player, options);\n            this.on('slideractive', this.updateLastVolume_);\n            this.on(player, 'volumechange', this.updateARIAAttributes);\n            player.ready(() => this.updateARIAAttributes());\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-volume-bar vjs-slider-bar' }, {\n                'aria-label': this.localize('Volume Level'),\n                'aria-live': 'polite'\n            });\n        }\n        handleMouseDown(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            super.handleMouseDown(event);\n        }\n        handleMouseMove(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            this.checkMuted();\n            this.player_.volume(this.calculateDistance(event));\n        }\n        checkMuted() {\n            if (this.player_.muted()) {\n                this.player_.muted(false);\n            }\n        }\n        getPercent() {\n            if (this.player_.muted()) {\n                return 0;\n            }\n            return this.player_.volume();\n        }\n        stepForward() {\n            this.checkMuted();\n            this.player_.volume(this.player_.volume() + 0.1);\n        }\n        stepBack() {\n            this.checkMuted();\n            this.player_.volume(this.player_.volume() - 0.1);\n        }\n        updateARIAAttributes(event) {\n            const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n            this.el_.setAttribute('aria-valuenow', ariaValue);\n            this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n        }\n        volumeAsPercentage_() {\n            return Math.round(this.player_.volume() * 100);\n        }\n        updateLastVolume_() {\n            const volumeBeforeDrag = this.player_.volume();\n            this.one('sliderinactive', () => {\n                if (this.player_.volume() === 0) {\n                    this.player_.lastVolume_(volumeBeforeDrag);\n                }\n            });\n        }\n    }\n    VolumeBar.prototype.options_ = {\n        children: ['volumeLevel'],\n        barName: 'volumeLevel'\n    };\n    VolumeBar.prototype.playerEvent = 'volumechange';\n    Component.registerComponent('VolumeBar', VolumeBar);\n    return VolumeBar;\n});\ndefine('skylark-videojs/control-bar/volume-control/volume-control',[\n    '../../component',\n    './check-volume-support',\n    '../../utils/obj',\n    '../../utils/fn',\n    './volume-bar'\n], function (Component, checkVolumeSupport, obj, Fn) {\n    'use strict';\n    class VolumeControl extends Component {\n        constructor(player, options = {}) {\n            options.vertical = options.vertical || false;\n            if (typeof options.volumeBar === 'undefined' || obj.isPlain(options.volumeBar)) {\n                options.volumeBar = options.volumeBar || {};\n                options.volumeBar.vertical = options.vertical;\n            }\n            super(player, options);\n            checkVolumeSupport(this, player);\n            this.throttledHandleMouseMove = Fn.throttle(Fn.bind(this, this.handleMouseMove), Fn.UPDATE_REFRESH_INTERVAL);\n            this.on('mousedown', this.handleMouseDown);\n            this.on('touchstart', this.handleMouseDown);\n            this.on(this.volumeBar, [\n                'focus',\n                'slideractive'\n            ], () => {\n                this.volumeBar.addClass('vjs-slider-active');\n                this.addClass('vjs-slider-active');\n                this.trigger('slideractive');\n            });\n            this.on(this.volumeBar, [\n                'blur',\n                'sliderinactive'\n            ], () => {\n                this.volumeBar.removeClass('vjs-slider-active');\n                this.removeClass('vjs-slider-active');\n                this.trigger('sliderinactive');\n            });\n        }\n        createEl() {\n            let orientationClass = 'vjs-volume-horizontal';\n            if (this.options_.vertical) {\n                orientationClass = 'vjs-volume-vertical';\n            }\n            return super.createEl('div', { className: `vjs-volume-control vjs-control ${ orientationClass }` });\n        }\n        handleMouseDown(event) {\n            const doc = this.el_.ownerDocument;\n            this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n            this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n            this.on(doc, 'mouseup', this.handleMouseUp);\n            this.on(doc, 'touchend', this.handleMouseUp);\n        }\n        handleMouseUp(event) {\n            const doc = this.el_.ownerDocument;\n            this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n            this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n            this.off(doc, 'mouseup', this.handleMouseUp);\n            this.off(doc, 'touchend', this.handleMouseUp);\n        }\n        handleMouseMove(event) {\n            this.volumeBar.handleMouseMove(event);\n        }\n    }\n    VolumeControl.prototype.options_ = { children: ['volumeBar'] };\n    Component.registerComponent('VolumeControl', VolumeControl);\n    return VolumeControl;\n});\ndefine('skylark-videojs/control-bar/volume-control/check-mute-support',[],function () {\n    'use strict';\n    const checkMuteSupport = function (self, player) {\n        if (player.tech_ && !player.tech_.featuresMuteControl) {\n            self.addClass('vjs-hidden');\n        }\n        self.on(player, 'loadstart', function () {\n            if (!player.tech_.featuresMuteControl) {\n                self.addClass('vjs-hidden');\n            } else {\n                self.removeClass('vjs-hidden');\n            }\n        });\n    };\n    return checkMuteSupport;\n});\ndefine('skylark-videojs/control-bar/mute-toggle',[\n    '../button',\n    '../component',\n    '../utils/dom',\n    './volume-control/check-mute-support',\n    '../utils/browser'\n], function (Button, Component, Dom, checkMuteSupport, browser) {\n    'use strict';\n    class MuteToggle extends Button {\n        constructor(player, options) {\n            super(player, options);\n            checkMuteSupport(this, player);\n            this.on(player, [\n                'loadstart',\n                'volumechange'\n            ], this.update);\n        }\n        buildCSSClass() {\n            return `vjs-mute-control ${ super.buildCSSClass() }`;\n        }\n        handleClick(event) {\n            const vol = this.player_.volume();\n            const lastVolume = this.player_.lastVolume_();\n            if (vol === 0) {\n                const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n                this.player_.volume(volumeToSet);\n                this.player_.muted(false);\n            } else {\n                this.player_.muted(this.player_.muted() ? false : true);\n            }\n        }\n        update(event) {\n            this.updateIcon_();\n            this.updateControlText_();\n        }\n        updateIcon_() {\n            const vol = this.player_.volume();\n            let level = 3;\n            if (browser.IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n                this.player_.muted(this.player_.tech_.el_.muted);\n            }\n            if (vol === 0 || this.player_.muted()) {\n                level = 0;\n            } else if (vol < 0.33) {\n                level = 1;\n            } else if (vol < 0.67) {\n                level = 2;\n            }\n            for (let i = 0; i < 4; i++) {\n                Dom.removeClass(this.el_, `vjs-vol-${ i }`);\n            }\n            Dom.addClass(this.el_, `vjs-vol-${ level }`);\n        }\n        updateControlText_() {\n            const soundOff = this.player_.muted() || this.player_.volume() === 0;\n            const text = soundOff ? 'Unmute' : 'Mute';\n            if (this.controlText() !== text) {\n                this.controlText(text);\n            }\n        }\n    }\n    MuteToggle.prototype.controlText_ = 'Mute';\n    Component.registerComponent('MuteToggle', MuteToggle);\n    return MuteToggle;\n});\ndefine('skylark-videojs/control-bar/volume-panel',[\n    'skylark-langx-globals/document',\n    '../component',\n    '../utils/obj',\n    '../utils/events',\n    '../utils/fn',\n    '../utils/keycode',\n    './volume-control/volume-control',\n    './mute-toggle'\n], function (document, Component, obj, Events, Fn, keycode) {\n    'use strict';\n    class VolumePanel extends Component {\n        constructor(player, options = {}) {\n            if (typeof options.inline !== 'undefined') {\n                options.inline = options.inline;\n            } else {\n                options.inline = true;\n            }\n            if (typeof options.volumeControl === 'undefined' || obj.isPlain(options.volumeControl)) {\n                options.volumeControl = options.volumeControl || {};\n                options.volumeControl.vertical = !options.inline;\n            }\n            super(player, options);\n            this.on(player, ['loadstart'], this.volumePanelState_);\n            this.on(this.muteToggle, 'keyup', this.handleKeyPress);\n            this.on(this.volumeControl, 'keyup', this.handleVolumeControlKeyUp);\n            this.on('keydown', this.handleKeyPress);\n            this.on('mouseover', this.handleMouseOver);\n            this.on('mouseout', this.handleMouseOut);\n            this.on(this.volumeControl, ['slideractive'], this.sliderActive_);\n            this.on(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n        }\n        sliderActive_() {\n            this.addClass('vjs-slider-active');\n        }\n        sliderInactive_() {\n            this.removeClass('vjs-slider-active');\n        }\n        volumePanelState_() {\n            if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n                this.addClass('vjs-hidden');\n            }\n            if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n                this.addClass('vjs-mute-toggle-only');\n            }\n        }\n        createEl() {\n            let orientationClass = 'vjs-volume-panel-horizontal';\n            if (!this.options_.inline) {\n                orientationClass = 'vjs-volume-panel-vertical';\n            }\n            return super.createEl('div', { className: `vjs-volume-panel vjs-control ${ orientationClass }` });\n        }\n        dispose() {\n            this.handleMouseOut();\n            super.dispose();\n        }\n        handleVolumeControlKeyUp(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                this.muteToggle.focus();\n            }\n        }\n        handleMouseOver(event) {\n            this.addClass('vjs-hover');\n            Events.on(document, 'keyup', Fn.bind(this, this.handleKeyPress));\n        }\n        handleMouseOut(event) {\n            this.removeClass('vjs-hover');\n            Events.off(document, 'keyup', Fn.bind(this, this.handleKeyPress));\n        }\n        handleKeyPress(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                this.handleMouseOut();\n            }\n        }\n    }\n    VolumePanel.prototype.options_ = {\n        children: [\n            'muteToggle',\n            'volumeControl'\n        ]\n    };\n    Component.registerComponent('VolumePanel', VolumePanel);\n    return VolumePanel;\n});\ndefine('skylark-videojs/menu/menu',[\n    'skylark-langx-globals/document',\n    '../component',\n    '../utils/dom',\n    '../utils/fn',\n    '../utils/events',\n    '../utils/keycode'\n], function (document,Component, Dom, Fn, Events, keycode) {\n    'use strict';\n    class Menu extends Component {\n        constructor(player, options) {\n            super(player, options);\n            if (options) {\n                this.menuButton_ = options.menuButton;\n            }\n            this.focusedChild_ = -1;\n            this.on('keydown', this.handleKeyDown);\n            this.boundHandleBlur_ = Fn.bind(this, this.handleBlur);\n            this.boundHandleTapClick_ = Fn.bind(this, this.handleTapClick);\n        }\n        addEventListenerForItem(component) {\n            if (!(component instanceof Component)) {\n                return;\n            }\n            this.on(component, 'blur', this.boundHandleBlur_);\n            this.on(component, [\n                'tap',\n                'click'\n            ], this.boundHandleTapClick_);\n        }\n        removeEventListenerForItem(component) {\n            if (!(component instanceof Component)) {\n                return;\n            }\n            this.off(component, 'blur', this.boundHandleBlur_);\n            this.off(component, [\n                'tap',\n                'click'\n            ], this.boundHandleTapClick_);\n        }\n        removeChild(component) {\n            if (typeof component === 'string') {\n                component = this.getChild(component);\n            }\n            this.removeEventListenerForItem(component);\n            super.removeChild(component);\n        }\n        addItem(component) {\n            const childComponent = this.addChild(component);\n            if (childComponent) {\n                this.addEventListenerForItem(childComponent);\n            }\n        }\n        createEl() {\n            const contentElType = this.options_.contentElType || 'ul';\n            this.contentEl_ = Dom.createEl(contentElType, { className: 'vjs-menu-content' });\n            this.contentEl_.setAttribute('role', 'menu');\n            const el = super.createEl('div', {\n                append: this.contentEl_,\n                className: 'vjs-menu'\n            });\n            el.appendChild(this.contentEl_);\n            Events.on(el, 'click', function (event) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            });\n            return el;\n        }\n        dispose() {\n            this.contentEl_ = null;\n            this.boundHandleBlur_ = null;\n            this.boundHandleTapClick_ = null;\n            super.dispose();\n        }\n        handleBlur(event) {\n            const relatedTarget = event.relatedTarget || document.activeElement;\n            if (!this.children().some(element => {\n                    return element.el() === relatedTarget;\n                })) {\n                const btn = this.menuButton_;\n                if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n                    btn.unpressButton();\n                }\n            }\n        }\n        handleTapClick(event) {\n            if (this.menuButton_) {\n                this.menuButton_.unpressButton();\n                const childComponents = this.children();\n                if (!Array.isArray(childComponents)) {\n                    return;\n                }\n                const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n                if (!foundComponent) {\n                    return;\n                }\n                if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n                    this.menuButton_.focus();\n                }\n            }\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepForward();\n            } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepBack();\n            }\n        }\n        stepForward() {\n            let stepChild = 0;\n            if (this.focusedChild_ !== undefined) {\n                stepChild = this.focusedChild_ + 1;\n            }\n            this.focus(stepChild);\n        }\n        stepBack() {\n            let stepChild = 0;\n            if (this.focusedChild_ !== undefined) {\n                stepChild = this.focusedChild_ - 1;\n            }\n            this.focus(stepChild);\n        }\n        focus(item = 0) {\n            const children = this.children().slice();\n            const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n            if (haveTitle) {\n                children.shift();\n            }\n            if (children.length > 0) {\n                if (item < 0) {\n                    item = 0;\n                } else if (item >= children.length) {\n                    item = children.length - 1;\n                }\n                this.focusedChild_ = item;\n                children[item].el_.focus();\n            }\n        }\n    }\n    Component.registerComponent('Menu', Menu);\n    return Menu;\n});\ndefine('skylark-videojs/menu/menu-button',[\n    '../button',\n    '../component',\n    './menu',\n    '../utils/dom',\n    '../utils/fn',\n    '../utils/events',\n    '../utils/string-cases',\n    '../utils/browser',\n    '../utils/keycode'\n], function (Button, Component, Menu, Dom, Fn, Events, stringCases, browser, keycode) {\n    'use strict';\n    class MenuButton extends Component {\n        constructor(player, options = {}) {\n            super(player, options);\n            this.menuButton_ = new Button(player, options);\n            this.menuButton_.controlText(this.controlText_);\n            this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n            const buttonClass = Button.prototype.buildCSSClass();\n            this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n            this.menuButton_.removeClass('vjs-control');\n            this.addChild(this.menuButton_);\n            this.update();\n            this.enabled_ = true;\n            this.on(this.menuButton_, 'tap', this.handleClick);\n            this.on(this.menuButton_, 'click', this.handleClick);\n            this.on(this.menuButton_, 'keydown', this.handleKeyDown);\n            this.on(this.menuButton_, 'mouseenter', () => {\n                this.addClass('vjs-hover');\n                this.menu.show();\n                Events.on(document, 'keyup', Fn.bind(this, this.handleMenuKeyUp));\n            });\n            this.on('mouseleave', this.handleMouseLeave);\n            this.on('keydown', this.handleSubmenuKeyDown);\n        }\n        update() {\n            const menu = this.createMenu();\n            if (this.menu) {\n                this.menu.dispose();\n                this.removeChild(this.menu);\n            }\n            this.menu = menu;\n            this.addChild(menu);\n            this.buttonPressed_ = false;\n            this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n            if (this.items && this.items.length <= this.hideThreshold_) {\n                this.hide();\n            } else {\n                this.show();\n            }\n        }\n        createMenu() {\n            const menu = new Menu(this.player_, { menuButton: this });\n            this.hideThreshold_ = 0;\n            if (this.options_.title) {\n                const titleEl = Dom.createEl('li', {\n                    className: 'vjs-menu-title',\n                    innerHTML: stringCases.toTitleCase(this.options_.title),\n                    tabIndex: -1\n                });\n                this.hideThreshold_ += 1;\n                const titleComponent = new Component(this.player_, { el: titleEl });\n                menu.addItem(titleComponent);\n            }\n            this.items = this.createItems();\n            if (this.items) {\n                for (let i = 0; i < this.items.length; i++) {\n                    menu.addItem(this.items[i]);\n                }\n            }\n            return menu;\n        }\n        createItems() {\n        }\n        createEl() {\n            return super.createEl('div', { className: this.buildWrapperCSSClass() }, {});\n        }\n        buildWrapperCSSClass() {\n            let menuButtonClass = 'vjs-menu-button';\n            if (this.options_.inline === true) {\n                menuButtonClass += '-inline';\n            } else {\n                menuButtonClass += '-popup';\n            }\n            const buttonClass = Button.prototype.buildCSSClass();\n            return `vjs-menu-button ${ menuButtonClass } ${ buttonClass } ${ super.buildCSSClass() }`;\n        }\n        buildCSSClass() {\n            let menuButtonClass = 'vjs-menu-button';\n            if (this.options_.inline === true) {\n                menuButtonClass += '-inline';\n            } else {\n                menuButtonClass += '-popup';\n            }\n            return `vjs-menu-button ${ menuButtonClass } ${ super.buildCSSClass() }`;\n        }\n        controlText(text, el = this.menuButton_.el()) {\n            return this.menuButton_.controlText(text, el);\n        }\n        dispose() {\n            this.handleMouseLeave();\n            super.dispose();\n        }\n        handleClick(event) {\n            if (this.buttonPressed_) {\n                this.unpressButton();\n            } else {\n                this.pressButton();\n            }\n        }\n        handleMouseLeave(event) {\n            this.removeClass('vjs-hover');\n            Events.off(document, 'keyup', Fn.bind(this, this.handleMenuKeyUp));\n        }\n        focus() {\n            this.menuButton_.focus();\n        }\n        blur() {\n            this.menuButton_.blur();\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n                if (this.buttonPressed_) {\n                    this.unpressButton();\n                }\n                if (!keycode.isEventKey(event, 'Tab')) {\n                    event.preventDefault();\n                    this.menuButton_.focus();\n                }\n            } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n                if (!this.buttonPressed_) {\n                    event.preventDefault();\n                    this.pressButton();\n                }\n            }\n        }\n        handleMenuKeyUp(event) {\n            if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n                this.removeClass('vjs-hover');\n            }\n        }\n        handleSubmenuKeyPress(event) {\n            this.handleSubmenuKeyDown(event);\n        }\n        handleSubmenuKeyDown(event) {\n            if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n                if (this.buttonPressed_) {\n                    this.unpressButton();\n                }\n                if (!keycode.isEventKey(event, 'Tab')) {\n                    event.preventDefault();\n                    this.menuButton_.focus();\n                }\n            } else {\n            }\n        }\n        pressButton() {\n            if (this.enabled_) {\n                this.buttonPressed_ = true;\n                this.menu.show();\n                this.menu.lockShowing();\n                this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n                if (browser.IS_IOS && Dom.isInFrame()) {\n                    return;\n                }\n                this.menu.focus();\n            }\n        }\n        unpressButton() {\n            if (this.enabled_) {\n                this.buttonPressed_ = false;\n                this.menu.unlockShowing();\n                this.menu.hide();\n                this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n            }\n        }\n        disable() {\n            this.unpressButton();\n            this.enabled_ = false;\n            this.addClass('vjs-disabled');\n            this.menuButton_.disable();\n        }\n        enable() {\n            this.enabled_ = true;\n            this.removeClass('vjs-disabled');\n            this.menuButton_.enable();\n        }\n    }\n    Component.registerComponent('MenuButton', MenuButton);\n    return MenuButton;\n});\ndefine('skylark-videojs/control-bar/track-button',[\n    '../menu/menu-button',\n    '../component',\n    '../utils/fn'\n], function (MenuButton, Component, Fn) {\n    'use strict';\n    class TrackButton extends MenuButton {\n        constructor(player, options) {\n            const tracks = options.tracks;\n            super(player, options);\n            if (this.items.length <= 1) {\n                this.hide();\n            }\n            if (!tracks) {\n                return;\n            }\n            const updateHandler = Fn.bind(this, this.update);\n            tracks.addEventListener('removetrack', updateHandler);\n            tracks.addEventListener('addtrack', updateHandler);\n            tracks.addEventListener('labelchange', updateHandler);\n            this.player_.on('ready', updateHandler);\n            this.player_.on('dispose', function () {\n                tracks.removeEventListener('removetrack', updateHandler);\n                tracks.removeEventListener('addtrack', updateHandler);\n                tracks.removeEventListener('labelchange', updateHandler);\n            });\n        }\n    }\n    Component.registerComponent('TrackButton', TrackButton);\n    return TrackButton;\n});\ndefine('skylark-videojs/menu/menu-keys',[],function () {\n    'use strict';\n    const MenuKeys = [\n        'Tab',\n        'Esc',\n        'Up',\n        'Down',\n        'Right',\n        'Left'\n    ];\n    return MenuKeys;\n});\ndefine('skylark-videojs/menu/menu-item',[\n    '../clickable-component',\n    '../component',\n    '../utils/obj',\n    './menu-keys',\n    '../utils/keycode'\n], function (ClickableComponent, Component, obj, MenuKeys, keycode) {\n    'use strict';\n    class MenuItem extends ClickableComponent {\n        constructor(player, options) {\n            super(player, options);\n            this.selectable = options.selectable;\n            this.isSelected_ = options.selected || false;\n            this.multiSelectable = options.multiSelectable;\n            this.selected(this.isSelected_);\n            if (this.selectable) {\n                if (this.multiSelectable) {\n                    this.el_.setAttribute('role', 'menuitemcheckbox');\n                } else {\n                    this.el_.setAttribute('role', 'menuitemradio');\n                }\n            } else {\n                this.el_.setAttribute('role', 'menuitem');\n            }\n        }\n        createEl(type, props, attrs) {\n            this.nonIconControl = true;\n            return super.createEl('li', obj.assign({\n                className: 'vjs-menu-item',\n                innerHTML: `<span class=\"vjs-menu-item-text\">${ this.localize(this.options_.label) }</span>`,\n                tabIndex: -1\n            }, props), attrs);\n        }\n        handleKeyDown(event) {\n            if (!MenuKeys.some(key => keycode.isEventKey(event, key))) {\n                super.handleKeyDown(event);\n            }\n        }\n        handleClick(event) {\n            this.selected(true);\n        }\n        selected(selected) {\n            if (this.selectable) {\n                if (selected) {\n                    this.addClass('vjs-selected');\n                    this.el_.setAttribute('aria-checked', 'true');\n                    this.controlText(', selected');\n                    this.isSelected_ = true;\n                } else {\n                    this.removeClass('vjs-selected');\n                    this.el_.setAttribute('aria-checked', 'false');\n                    this.controlText('');\n                    this.isSelected_ = false;\n                }\n            }\n        }\n    }\n    Component.registerComponent('MenuItem', MenuItem);\n    return MenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/text-track-menu-item',[\n    'skylark-langx-globals/document',\n    '../../menu/menu-item',\n    '../../component'\n], function (document,MenuItem, Component) {\n    'use strict';\n    class TextTrackMenuItem extends MenuItem {\n        constructor(player, options) {\n            const track = options.track;\n            const tracks = player.textTracks();\n            options.label = track.label || track.language || 'Unknown';\n            options.selected = track.mode === 'showing';\n            super(player, options);\n            this.track = track;\n            this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n            const changeHandler = (...args) => {\n                this.handleTracksChange.apply(this, args);\n            };\n            const selectedLanguageChangeHandler = (...args) => {\n                this.handleSelectedLanguageChange.apply(this, args);\n            };\n            player.on([\n                'loadstart',\n                'texttrackchange'\n            ], changeHandler);\n            tracks.addEventListener('change', changeHandler);\n            tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n            this.on('dispose', function () {\n                player.off([\n                    'loadstart',\n                    'texttrackchange'\n                ], changeHandler);\n                tracks.removeEventListener('change', changeHandler);\n                tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n            });\n            if (tracks.onchange === undefined) {\n                let event;\n                this.on([\n                    'tap',\n                    'click'\n                ], function () {\n                    if (typeof window.Event !== 'object') {\n                        try {\n                            event = new window.Event('change');\n                        } catch (err) {\n                        }\n                    }\n                    if (!event) {\n                        event = document.createEvent('Event');\n                        event.initEvent('change', true, true);\n                    }\n                    tracks.dispatchEvent(event);\n                });\n            }\n            this.handleTracksChange();\n        }\n        handleClick(event) {\n            const referenceTrack = this.track;\n            const tracks = this.player_.textTracks();\n            super.handleClick(event);\n            if (!tracks) {\n                return;\n            }\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                if (this.kinds.indexOf(track.kind) === -1) {\n                    continue;\n                }\n                if (track === referenceTrack) {\n                    if (track.mode !== 'showing') {\n                        track.mode = 'showing';\n                    }\n                } else if (track.mode !== 'disabled') {\n                    track.mode = 'disabled';\n                }\n            }\n        }\n        handleTracksChange(event) {\n            const shouldBeSelected = this.track.mode === 'showing';\n            if (shouldBeSelected !== this.isSelected_) {\n                this.selected(shouldBeSelected);\n            }\n        }\n        handleSelectedLanguageChange(event) {\n            if (this.track.mode === 'showing') {\n                const selectedLanguage = this.player_.cache_.selectedLanguage;\n                if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n                    return;\n                }\n                this.player_.cache_.selectedLanguage = {\n                    enabled: true,\n                    language: this.track.language,\n                    kind: this.track.kind\n                };\n            }\n        }\n        dispose() {\n            this.track = null;\n            super.dispose();\n        }\n    }\n    Component.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n    return TextTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/off-text-track-menu-item',[\n    './text-track-menu-item',\n    '../../component'\n], function (TextTrackMenuItem, Component) {\n    'use strict';\n    class OffTextTrackMenuItem extends TextTrackMenuItem {\n        constructor(player, options) {\n            options.track = {\n                player,\n                kind: options.kind,\n                kinds: options.kinds,\n                default: false,\n                mode: 'disabled'\n            };\n            if (!options.kinds) {\n                options.kinds = [options.kind];\n            }\n            if (options.label) {\n                options.track.label = options.label;\n            } else {\n                options.track.label = options.kinds.join(' and ') + ' off';\n            }\n            options.selectable = true;\n            options.multiSelectable = false;\n            super(player, options);\n        }\n        handleTracksChange(event) {\n            const tracks = this.player().textTracks();\n            let shouldBeSelected = true;\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                const track = tracks[i];\n                if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n                    shouldBeSelected = false;\n                    break;\n                }\n            }\n            if (shouldBeSelected !== this.isSelected_) {\n                this.selected(shouldBeSelected);\n            }\n        }\n        handleSelectedLanguageChange(event) {\n            const tracks = this.player().textTracks();\n            let allHidden = true;\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                const track = tracks[i];\n                if ([\n                        'captions',\n                        'descriptions',\n                        'subtitles'\n                    ].indexOf(track.kind) > -1 && track.mode === 'showing') {\n                    allHidden = false;\n                    break;\n                }\n            }\n            if (allHidden) {\n                this.player_.cache_.selectedLanguage = { enabled: false };\n            }\n        }\n    }\n    Component.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n    return OffTextTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/text-track-button',[\n    '../track-button',\n    '../../component',\n    './text-track-menu-item',\n    './off-text-track-menu-item'\n], function (TrackButton, Component, TextTrackMenuItem, OffTextTrackMenuItem) {\n    'use strict';\n    class TextTrackButton extends TrackButton {\n        constructor(player, options = {}) {\n            options.tracks = player.textTracks();\n            super(player, options);\n        }\n        createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n            let label;\n            if (this.label_) {\n                label = `${ this.label_ } off`;\n            }\n            items.push(new OffTextTrackMenuItem(this.player_, {\n                kinds: this.kinds_,\n                kind: this.kind_,\n                label\n            }));\n            this.hideThreshold_ += 1;\n            const tracks = this.player_.textTracks();\n            if (!Array.isArray(this.kinds_)) {\n                this.kinds_ = [this.kind_];\n            }\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                if (this.kinds_.indexOf(track.kind) > -1) {\n                    const item = new TrackMenuItem(this.player_, {\n                        track,\n                        kinds: this.kinds_,\n                        kind: this.kind_,\n                        selectable: true,\n                        multiSelectable: false\n                    });\n                    item.addClass(`vjs-${ track.kind }-menu-item`);\n                    items.push(item);\n                }\n            }\n            return items;\n        }\n    }\n    Component.registerComponent('TextTrackButton', TextTrackButton);\n    return TextTrackButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/chapters-track-menu-item',[\n    '../../menu/menu-item',\n    '../../component',\n    '../../utils/fn'\n], function (MenuItem, Component, Fn) {\n    'use strict';\n    class ChaptersTrackMenuItem extends MenuItem {\n        constructor(player, options) {\n            const track = options.track;\n            const cue = options.cue;\n            const currentTime = player.currentTime();\n            options.selectable = true;\n            options.multiSelectable = false;\n            options.label = cue.text;\n            options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n            super(player, options);\n            this.track = track;\n            this.cue = cue;\n            track.addEventListener('cuechange', Fn.bind(this, this.update));\n        }\n        handleClick(event) {\n            super.handleClick();\n            this.player_.currentTime(this.cue.startTime);\n            this.update(this.cue.startTime);\n        }\n        update(event) {\n            const cue = this.cue;\n            const currentTime = this.player_.currentTime();\n            this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n        }\n    }\n    Component.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n    return ChaptersTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/chapters-button',[\n    './text-track-button',\n    '../../component',\n    './chapters-track-menu-item',\n    '../../utils/string-cases'\n], function (TextTrackButton, Component, ChaptersTrackMenuItem, stringCases) {\n    'use strict';\n    class ChaptersButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n        }\n        buildCSSClass() {\n            return `vjs-chapters-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-chapters-button ${ super.buildWrapperCSSClass() }`;\n        }\n        update(event) {\n            if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n                this.setTrack(this.findChaptersTrack());\n            }\n            super.update();\n        }\n        setTrack(track) {\n            if (this.track_ === track) {\n                return;\n            }\n            if (!this.updateHandler_) {\n                this.updateHandler_ = this.update.bind(this);\n            }\n            if (this.track_) {\n                const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n                if (remoteTextTrackEl) {\n                    remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n                }\n                this.track_ = null;\n            }\n            this.track_ = track;\n            if (this.track_) {\n                this.track_.mode = 'hidden';\n                const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n                if (remoteTextTrackEl) {\n                    remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n                }\n            }\n        }\n        findChaptersTrack() {\n            const tracks = this.player_.textTracks() || [];\n            for (let i = tracks.length - 1; i >= 0; i--) {\n                const track = tracks[i];\n                if (track.kind === this.kind_) {\n                    return track;\n                }\n            }\n        }\n        getMenuCaption() {\n            if (this.track_ && this.track_.label) {\n                return this.track_.label;\n            }\n            return this.localize(stringCases.toTitleCase(this.kind_));\n        }\n        createMenu() {\n            this.options_.title = this.getMenuCaption();\n            return super.createMenu();\n        }\n        createItems() {\n            const items = [];\n            if (!this.track_) {\n                return items;\n            }\n            const cues = this.track_.cues;\n            if (!cues) {\n                return items;\n            }\n            for (let i = 0, l = cues.length; i < l; i++) {\n                const cue = cues[i];\n                const mi = new ChaptersTrackMenuItem(this.player_, {\n                    track: this.track_,\n                    cue\n                });\n                items.push(mi);\n            }\n            return items;\n        }\n    }\n    ChaptersButton.prototype.kind_ = 'chapters';\n    ChaptersButton.prototype.controlText_ = 'Chapters';\n    Component.registerComponent('ChaptersButton', ChaptersButton);\n    return ChaptersButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/descriptions-button',[\n    './text-track-button',\n    '../../component',\n    '../../utils/fn'\n], function (TextTrackButton, Component, Fn) {\n    'use strict';\n    class DescriptionsButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n            const tracks = player.textTracks();\n            const changeHandler = Fn.bind(this, this.handleTracksChange);\n            tracks.addEventListener('change', changeHandler);\n            this.on('dispose', function () {\n                tracks.removeEventListener('change', changeHandler);\n            });\n        }\n        handleTracksChange(event) {\n            const tracks = this.player().textTracks();\n            let disabled = false;\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                const track = tracks[i];\n                if (track.kind !== this.kind_ && track.mode === 'showing') {\n                    disabled = true;\n                    break;\n                }\n            }\n            if (disabled) {\n                this.disable();\n            } else {\n                this.enable();\n            }\n        }\n        buildCSSClass() {\n            return `vjs-descriptions-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-descriptions-button ${ super.buildWrapperCSSClass() }`;\n        }\n    }\n    DescriptionsButton.prototype.kind_ = 'descriptions';\n    DescriptionsButton.prototype.controlText_ = 'Descriptions';\n    Component.registerComponent('DescriptionsButton', DescriptionsButton);\n    return DescriptionsButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/subtitles-button',[\n    './text-track-button',\n    '../../component'\n], function (TextTrackButton, Component) {\n    'use strict';\n    class SubtitlesButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n        }\n        buildCSSClass() {\n            return `vjs-subtitles-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-subtitles-button ${ super.buildWrapperCSSClass() }`;\n        }\n    }\n    SubtitlesButton.prototype.kind_ = 'subtitles';\n    SubtitlesButton.prototype.controlText_ = 'Subtitles';\n    Component.registerComponent('SubtitlesButton', SubtitlesButton);\n    return SubtitlesButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/caption-settings-menu-item',[\n    './text-track-menu-item',\n    '../../component'\n], function (TextTrackMenuItem, Component) {\n    'use strict';\n    class CaptionSettingsMenuItem extends TextTrackMenuItem {\n        constructor(player, options) {\n            options.track = {\n                player,\n                kind: options.kind,\n                label: options.kind + ' settings',\n                selectable: false,\n                default: false,\n                mode: 'disabled'\n            };\n            options.selectable = false;\n            options.name = 'CaptionSettingsMenuItem';\n            super(player, options);\n            this.addClass('vjs-texttrack-settings');\n            this.controlText(', opens ' + options.kind + ' settings dialog');\n        }\n        handleClick(event) {\n            this.player().getChild('textTrackSettings').open();\n        }\n    }\n    Component.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n    return CaptionSettingsMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/captions-button',[\n    './text-track-button',\n    '../../component',\n    './caption-settings-menu-item'\n], function (TextTrackButton, Component, CaptionSettingsMenuItem) {\n    'use strict';\n    class CaptionsButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n        }\n        buildCSSClass() {\n            return `vjs-captions-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-captions-button ${ super.buildWrapperCSSClass() }`;\n        }\n        createItems() {\n            const items = [];\n            if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n                items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n                this.hideThreshold_ += 1;\n            }\n            return super.createItems(items);\n        }\n    }\n    CaptionsButton.prototype.kind_ = 'captions';\n    CaptionsButton.prototype.controlText_ = 'Captions';\n    Component.registerComponent('CaptionsButton', CaptionsButton);\n    return CaptionsButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/subs-caps-menu-item',[\n    './text-track-menu-item',\n    '../../component',\n    '../../utils/obj'\n], function (TextTrackMenuItem, Component, obj) {\n    'use strict';\n    class SubsCapsMenuItem extends TextTrackMenuItem {\n        createEl(type, props, attrs) {\n            let innerHTML = `<span class=\"vjs-menu-item-text\">${ this.localize(this.options_.label) }`;\n            if (this.options_.track.kind === 'captions') {\n                innerHTML += `\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\n        <span class=\"vjs-control-text\"> ${ this.localize('Captions') }</span>\n      `;\n            }\n            innerHTML += '</span>';\n            const el = super.createEl(type, obj.assign({ innerHTML }, props), attrs);\n            return el;\n        }\n    }\n    Component.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n    return SubsCapsMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/subs-caps-button',[\n    './text-track-button',\n    '../../component',\n    './caption-settings-menu-item',\n    './subs-caps-menu-item',\n    '../../utils/string-cases'\n], function (TextTrackButton, Component, CaptionSettingsMenuItem, SubsCapsMenuItem, stringCases) {\n    'use strict';\n    class SubsCapsButton extends TextTrackButton {\n        constructor(player, options = {}) {\n            super(player, options);\n            this.label_ = 'subtitles';\n            if ([\n                    'en',\n                    'en-us',\n                    'en-ca',\n                    'fr-ca'\n                ].indexOf(this.player_.language_) > -1) {\n                this.label_ = 'captions';\n            }\n            this.menuButton_.controlText(stringCases.toTitleCase(this.label_));\n        }\n        buildCSSClass() {\n            return `vjs-subs-caps-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-subs-caps-button ${ super.buildWrapperCSSClass() }`;\n        }\n        createItems() {\n            let items = [];\n            if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n                items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n                this.hideThreshold_ += 1;\n            }\n            items = super.createItems(items, SubsCapsMenuItem);\n            return items;\n        }\n    }\n    SubsCapsButton.prototype.kinds_ = [\n        'captions',\n        'subtitles'\n    ];\n    SubsCapsButton.prototype.controlText_ = 'Subtitles';\n    Component.registerComponent('SubsCapsButton', SubsCapsButton);\n    return SubsCapsButton;\n});\ndefine('skylark-videojs/control-bar/audio-track-controls/audio-track-menu-item',[\n    '../../menu/menu-item',\n    '../../component',\n    '../../utils/obj'\n], function (MenuItem, Component, obj) {\n    'use strict';\n    class AudioTrackMenuItem extends MenuItem {\n        constructor(player, options) {\n            const track = options.track;\n            const tracks = player.audioTracks();\n            options.label = track.label || track.language || 'Unknown';\n            options.selected = track.enabled;\n            super(player, options);\n            this.track = track;\n            this.addClass(`vjs-${ track.kind }-menu-item`);\n            const changeHandler = (...args) => {\n                this.handleTracksChange.apply(this, args);\n            };\n            tracks.addEventListener('change', changeHandler);\n            this.on('dispose', () => {\n                tracks.removeEventListener('change', changeHandler);\n            });\n        }\n        createEl(type, props, attrs) {\n            let innerHTML = `<span class=\"vjs-menu-item-text\">${ this.localize(this.options_.label) }`;\n            if (this.options_.track.kind === 'main-desc') {\n                innerHTML += `\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\n        <span class=\"vjs-control-text\"> ${ this.localize('Descriptions') }</span>\n      `;\n            }\n            innerHTML += '</span>';\n            const el = super.createEl(type, obj.assign({ innerHTML }, props), attrs);\n            return el;\n        }\n        handleClick(event) {\n            const tracks = this.player_.audioTracks();\n            super.handleClick(event);\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                track.enabled = track === this.track;\n            }\n        }\n        handleTracksChange(event) {\n            this.selected(this.track.enabled);\n        }\n    }\n    Component.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n    return AudioTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/audio-track-controls/audio-track-button',[\n    '../track-button',\n    '../../component',\n    './audio-track-menu-item'\n], function (TrackButton, Component, AudioTrackMenuItem) {\n    'use strict';\n    class AudioTrackButton extends TrackButton {\n        constructor(player, options = {}) {\n            options.tracks = player.audioTracks();\n            super(player, options);\n        }\n        buildCSSClass() {\n            return `vjs-audio-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-audio-button ${ super.buildWrapperCSSClass() }`;\n        }\n        createItems(items = []) {\n            this.hideThreshold_ = 1;\n            const tracks = this.player_.audioTracks();\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                items.push(new AudioTrackMenuItem(this.player_, {\n                    track,\n                    selectable: true,\n                    multiSelectable: false\n                }));\n            }\n            return items;\n        }\n    }\n    AudioTrackButton.prototype.controlText_ = 'Audio Track';\n    Component.registerComponent('AudioTrackButton', AudioTrackButton);\n    return AudioTrackButton;\n});\ndefine('skylark-videojs/control-bar/playback-rate-menu/playback-rate-menu-item',[\n    '../../menu/menu-item',\n    '../../component'\n], function (MenuItem, Component) {\n    'use strict';\n    class PlaybackRateMenuItem extends MenuItem {\n        constructor(player, options) {\n            const label = options.rate;\n            const rate = parseFloat(label, 10);\n            options.label = label;\n            options.selected = rate === 1;\n            options.selectable = true;\n            options.multiSelectable = false;\n            super(player, options);\n            this.label = label;\n            this.rate = rate;\n            this.on(player, 'ratechange', this.update);\n        }\n        handleClick(event) {\n            super.handleClick();\n            this.player().playbackRate(this.rate);\n        }\n        update(event) {\n            this.selected(this.player().playbackRate() === this.rate);\n        }\n    }\n    PlaybackRateMenuItem.prototype.contentElType = 'button';\n    Component.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n    return PlaybackRateMenuItem;\n});\ndefine('skylark-videojs/control-bar/playback-rate-menu/playback-rate-menu-button',[\n    '../../menu/menu-button',\n    '../../menu/menu',\n    './playback-rate-menu-item',\n    '../../component',\n    '../../utils/dom'\n], function (MenuButton, Menu, PlaybackRateMenuItem, Component, Dom) {\n    'use strict';\n    class PlaybackRateMenuButton extends MenuButton {\n        constructor(player, options) {\n            super(player, options);\n            this.updateVisibility();\n            this.updateLabel();\n            this.on(player, 'loadstart', this.updateVisibility);\n            this.on(player, 'ratechange', this.updateLabel);\n        }\n        createEl() {\n            const el = super.createEl();\n            this.labelEl_ = Dom.createEl('div', {\n                className: 'vjs-playback-rate-value',\n                innerHTML: '1x'\n            });\n            el.appendChild(this.labelEl_);\n            return el;\n        }\n        dispose() {\n            this.labelEl_ = null;\n            super.dispose();\n        }\n        buildCSSClass() {\n            return `vjs-playback-rate ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-playback-rate ${ super.buildWrapperCSSClass() }`;\n        }\n        createMenu() {\n            const menu = new Menu(this.player());\n            const rates = this.playbackRates();\n            if (rates) {\n                for (let i = rates.length - 1; i >= 0; i--) {\n                    menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n                }\n            }\n            return menu;\n        }\n        updateARIAAttributes() {\n            this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n        }\n        handleClick(event) {\n            const currentRate = this.player().playbackRate();\n            const rates = this.playbackRates();\n            let newRate = rates[0];\n            for (let i = 0; i < rates.length; i++) {\n                if (rates[i] > currentRate) {\n                    newRate = rates[i];\n                    break;\n                }\n            }\n            this.player().playbackRate(newRate);\n        }\n        playbackRates() {\n            return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n        }\n        playbackRateSupported() {\n            return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n        }\n        updateVisibility(event) {\n            if (this.playbackRateSupported()) {\n                this.removeClass('vjs-hidden');\n            } else {\n                this.addClass('vjs-hidden');\n            }\n        }\n        updateLabel(event) {\n            if (this.playbackRateSupported()) {\n                this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n            }\n        }\n    }\n    PlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n    Component.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n    return PlaybackRateMenuButton;\n});\ndefine('skylark-videojs/control-bar/spacer-controls/spacer',[\n    '../../component'\n], function (Component) {\n    'use strict';\n    class Spacer extends Component {\n        buildCSSClass() {\n            return `vjs-spacer ${ super.buildCSSClass() }`;\n        }\n        createEl() {\n            return super.createEl('div', { className: this.buildCSSClass() });\n        }\n    }\n    Component.registerComponent('Spacer', Spacer);\n    return Spacer;\n});\ndefine('skylark-videojs/control-bar/spacer-controls/custom-control-spacer',[\n    './spacer',\n    '../../component'\n], function (Spacer, Component) {\n    'use strict';\n    class CustomControlSpacer extends Spacer {\n        buildCSSClass() {\n            return `vjs-custom-control-spacer ${ super.buildCSSClass() }`;\n        }\n        createEl() {\n            const el = super.createEl({ className: this.buildCSSClass() });\n            el.innerHTML = '\\xA0';\n            return el;\n        }\n    }\n    Component.registerComponent('CustomControlSpacer', CustomControlSpacer);\n    return CustomControlSpacer;\n});\ndefine('skylark-videojs/control-bar/control-bar',[\n    'skylark-langx-globals/document',\n    '../component',\n    './play-toggle',\n    './time-controls/current-time-display',\n    './time-controls/duration-display',\n    './time-controls/time-divider',\n    './time-controls/remaining-time-display',\n    './live-display',\n    './seek-to-live',\n    './progress-control/progress-control',\n    './picture-in-picture-toggle',\n    './fullscreen-toggle',\n    './volume-panel',\n    './text-track-controls/chapters-button',\n    './text-track-controls/descriptions-button',\n    './text-track-controls/subtitles-button',\n    './text-track-controls/captions-button',\n    './text-track-controls/subs-caps-button',\n    './audio-track-controls/audio-track-button',\n    './playback-rate-menu/playback-rate-menu-button',\n    './spacer-controls/custom-control-spacer'\n], function (document,Component) {\n    'use strict';\n    class ControlBar extends Component {\n        createEl() {\n            return super.createEl('div', {\n                className: 'vjs-control-bar',\n                dir: 'ltr'\n            });\n        }\n    }\n    ControlBar.prototype.options_ = {\n        children: [\n            'playToggle',\n            'volumePanel',\n            'currentTimeDisplay',\n            'timeDivider',\n            'durationDisplay',\n            'progressControl',\n            'liveDisplay',\n            'seekToLive',\n            'remainingTimeDisplay',\n            'customControlSpacer',\n            'playbackRateMenuButton',\n            'chaptersButton',\n            'descriptionsButton',\n            'subsCapsButton',\n            'audioTrackButton',\n            'fullscreenToggle'\n        ]\n    };\n    if ('exitPictureInPicture' in document) {\n        ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n    }\n    Component.registerComponent('ControlBar', ControlBar);\n    return ControlBar;\n});\ndefine('skylark-videojs/error-display',[\n    './component',\n    './modal-dialog'\n], function (Component, ModalDialog) {\n    'use strict';\n    class ErrorDisplay extends ModalDialog {\n        constructor(player, options) {\n            super(player, options);\n            this.on(player, 'error', this.open);\n        }\n        buildCSSClass() {\n            return `vjs-error-display ${ super.buildCSSClass() }`;\n        }\n        content() {\n            const error = this.player().error();\n            return error ? this.localize(error.message) : '';\n        }\n    }\n    ErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n        pauseOnOpen: false,\n        fillAlways: true,\n        temporary: false,\n        uncloseable: true\n    });\n    Component.registerComponent('ErrorDisplay', ErrorDisplay);\n    return ErrorDisplay;\n});\ndefine('skylark-videojs/tracks/text-track-settings',[\n    '../component',\n    '../modal-dialog',\n    '../utils/dom',\n    '../utils/fn',\n    '../utils/obj',\n    '../utils/log'\n], function (Component, ModalDialog, Dom, Fn, Obj, log) {\n    'use strict';\n    const LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n    const COLOR_BLACK = [\n        '#000',\n        'Black'\n    ];\n    const COLOR_BLUE = [\n        '#00F',\n        'Blue'\n    ];\n    const COLOR_CYAN = [\n        '#0FF',\n        'Cyan'\n    ];\n    const COLOR_GREEN = [\n        '#0F0',\n        'Green'\n    ];\n    const COLOR_MAGENTA = [\n        '#F0F',\n        'Magenta'\n    ];\n    const COLOR_RED = [\n        '#F00',\n        'Red'\n    ];\n    const COLOR_WHITE = [\n        '#FFF',\n        'White'\n    ];\n    const COLOR_YELLOW = [\n        '#FF0',\n        'Yellow'\n    ];\n    const OPACITY_OPAQUE = [\n        '1',\n        'Opaque'\n    ];\n    const OPACITY_SEMI = [\n        '0.5',\n        'Semi-Transparent'\n    ];\n    const OPACITY_TRANS = [\n        '0',\n        'Transparent'\n    ];\n    const selectConfigs = {\n        backgroundColor: {\n            selector: '.vjs-bg-color > select',\n            id: 'captions-background-color-%s',\n            label: 'Color',\n            options: [\n                COLOR_BLACK,\n                COLOR_WHITE,\n                COLOR_RED,\n                COLOR_GREEN,\n                COLOR_BLUE,\n                COLOR_YELLOW,\n                COLOR_MAGENTA,\n                COLOR_CYAN\n            ]\n        },\n        backgroundOpacity: {\n            selector: '.vjs-bg-opacity > select',\n            id: 'captions-background-opacity-%s',\n            label: 'Transparency',\n            options: [\n                OPACITY_OPAQUE,\n                OPACITY_SEMI,\n                OPACITY_TRANS\n            ]\n        },\n        color: {\n            selector: '.vjs-fg-color > select',\n            id: 'captions-foreground-color-%s',\n            label: 'Color',\n            options: [\n                COLOR_WHITE,\n                COLOR_BLACK,\n                COLOR_RED,\n                COLOR_GREEN,\n                COLOR_BLUE,\n                COLOR_YELLOW,\n                COLOR_MAGENTA,\n                COLOR_CYAN\n            ]\n        },\n        edgeStyle: {\n            selector: '.vjs-edge-style > select',\n            id: '%s',\n            label: 'Text Edge Style',\n            options: [\n                [\n                    'none',\n                    'None'\n                ],\n                [\n                    'raised',\n                    'Raised'\n                ],\n                [\n                    'depressed',\n                    'Depressed'\n                ],\n                [\n                    'uniform',\n                    'Uniform'\n                ],\n                [\n                    'dropshadow',\n                    'Dropshadow'\n                ]\n            ]\n        },\n        fontFamily: {\n            selector: '.vjs-font-family > select',\n            id: 'captions-font-family-%s',\n            label: 'Font Family',\n            options: [\n                [\n                    'proportionalSansSerif',\n                    'Proportional Sans-Serif'\n                ],\n                [\n                    'monospaceSansSerif',\n                    'Monospace Sans-Serif'\n                ],\n                [\n                    'proportionalSerif',\n                    'Proportional Serif'\n                ],\n                [\n                    'monospaceSerif',\n                    'Monospace Serif'\n                ],\n                [\n                    'casual',\n                    'Casual'\n                ],\n                [\n                    'script',\n                    'Script'\n                ],\n                [\n                    'small-caps',\n                    'Small Caps'\n                ]\n            ]\n        },\n        fontPercent: {\n            selector: '.vjs-font-percent > select',\n            id: 'captions-font-size-%s',\n            label: 'Font Size',\n            options: [\n                [\n                    '0.50',\n                    '50%'\n                ],\n                [\n                    '0.75',\n                    '75%'\n                ],\n                [\n                    '1.00',\n                    '100%'\n                ],\n                [\n                    '1.25',\n                    '125%'\n                ],\n                [\n                    '1.50',\n                    '150%'\n                ],\n                [\n                    '1.75',\n                    '175%'\n                ],\n                [\n                    '2.00',\n                    '200%'\n                ],\n                [\n                    '3.00',\n                    '300%'\n                ],\n                [\n                    '4.00',\n                    '400%'\n                ]\n            ],\n            default: 2,\n            parser: v => v === '1.00' ? null : Number(v)\n        },\n        textOpacity: {\n            selector: '.vjs-text-opacity > select',\n            id: 'captions-foreground-opacity-%s',\n            label: 'Transparency',\n            options: [\n                OPACITY_OPAQUE,\n                OPACITY_SEMI\n            ]\n        },\n        windowColor: {\n            selector: '.vjs-window-color > select',\n            id: 'captions-window-color-%s',\n            label: 'Color'\n        },\n        windowOpacity: {\n            selector: '.vjs-window-opacity > select',\n            id: 'captions-window-opacity-%s',\n            label: 'Transparency',\n            options: [\n                OPACITY_TRANS,\n                OPACITY_SEMI,\n                OPACITY_OPAQUE\n            ]\n        }\n    };\n    selectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n    function parseOptionValue(value, parser) {\n        if (parser) {\n            value = parser(value);\n        }\n        if (value && value !== 'none') {\n            return value;\n        }\n    }\n    function getSelectedOptionValue(el, parser) {\n        const value = el.options[el.options.selectedIndex].value;\n        return parseOptionValue(value, parser);\n    }\n    function setSelectedOption(el, value, parser) {\n        if (!value) {\n            return;\n        }\n        for (let i = 0; i < el.options.length; i++) {\n            if (parseOptionValue(el.options[i].value, parser) === value) {\n                el.selectedIndex = i;\n                break;\n            }\n        }\n    }\n    class TextTrackSettings extends ModalDialog {\n        constructor(player, options) {\n            options.temporary = false;\n            super(player, options);\n            this.updateDisplay = Fn.bind(this, this.updateDisplay);\n            this.fill();\n            this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n            this.endDialog = Dom.createEl('p', {\n                className: 'vjs-control-text',\n                textContent: this.localize('End of dialog window.')\n            });\n            this.el().appendChild(this.endDialog);\n            this.setDefaults();\n            if (options.persistTextTrackSettings === undefined) {\n                this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n            }\n            this.on(this.$('.vjs-done-button'), 'click', () => {\n                this.saveSettings();\n                this.close();\n            });\n            this.on(this.$('.vjs-default-button'), 'click', () => {\n                this.setDefaults();\n                this.updateDisplay();\n            });\n            Obj.each(selectConfigs, config => {\n                this.on(this.$(config.selector), 'change', this.updateDisplay);\n            });\n            if (this.options_.persistTextTrackSettings) {\n                this.restoreSettings();\n            }\n        }\n        dispose() {\n            this.endDialog = null;\n            super.dispose();\n        }\n        createElSelect_(key, legendId = '', type = 'label') {\n            const config = selectConfigs[key];\n            const id = config.id.replace('%s', this.id_);\n            const selectLabelledbyIds = [\n                legendId,\n                id\n            ].join(' ').trim();\n            return [\n                `<${ type } id=\"${ id }\" class=\"${ type === 'label' ? 'vjs-label' : '' }\">`,\n                this.localize(config.label),\n                `</${ type }>`,\n                `<select aria-labelledby=\"${ selectLabelledbyIds }\">`\n            ].concat(config.options.map(o => {\n                const optionId = id + '-' + o[1].replace(/\\W+/g, '');\n                return [\n                    `<option id=\"${ optionId }\" value=\"${ o[0] }\" `,\n                    `aria-labelledby=\"${ selectLabelledbyIds } ${ optionId }\">`,\n                    this.localize(o[1]),\n                    '</option>'\n                ].join('');\n            })).concat('</select>').join('');\n        }\n        createElFgColor_() {\n            const legendId = `captions-text-legend-${ this.id_ }`;\n            return [\n                '<fieldset class=\"vjs-fg-color vjs-track-setting\">',\n                `<legend id=\"${ legendId }\">`,\n                this.localize('Text'),\n                '</legend>',\n                this.createElSelect_('color', legendId),\n                '<span class=\"vjs-text-opacity vjs-opacity\">',\n                this.createElSelect_('textOpacity', legendId),\n                '</span>',\n                '</fieldset>'\n            ].join('');\n        }\n        createElBgColor_() {\n            const legendId = `captions-background-${ this.id_ }`;\n            return [\n                '<fieldset class=\"vjs-bg-color vjs-track-setting\">',\n                `<legend id=\"${ legendId }\">`,\n                this.localize('Background'),\n                '</legend>',\n                this.createElSelect_('backgroundColor', legendId),\n                '<span class=\"vjs-bg-opacity vjs-opacity\">',\n                this.createElSelect_('backgroundOpacity', legendId),\n                '</span>',\n                '</fieldset>'\n            ].join('');\n        }\n        createElWinColor_() {\n            const legendId = `captions-window-${ this.id_ }`;\n            return [\n                '<fieldset class=\"vjs-window-color vjs-track-setting\">',\n                `<legend id=\"${ legendId }\">`,\n                this.localize('Window'),\n                '</legend>',\n                this.createElSelect_('windowColor', legendId),\n                '<span class=\"vjs-window-opacity vjs-opacity\">',\n                this.createElSelect_('windowOpacity', legendId),\n                '</span>',\n                '</fieldset>'\n            ].join('');\n        }\n        createElColors_() {\n            return Dom.createEl('div', {\n                className: 'vjs-track-settings-colors',\n                innerHTML: [\n                    this.createElFgColor_(),\n                    this.createElBgColor_(),\n                    this.createElWinColor_()\n                ].join('')\n            });\n        }\n        createElFont_() {\n            return Dom.createEl('div', {\n                className: 'vjs-track-settings-font',\n                innerHTML: [\n                    '<fieldset class=\"vjs-font-percent vjs-track-setting\">',\n                    this.createElSelect_('fontPercent', '', 'legend'),\n                    '</fieldset>',\n                    '<fieldset class=\"vjs-edge-style vjs-track-setting\">',\n                    this.createElSelect_('edgeStyle', '', 'legend'),\n                    '</fieldset>',\n                    '<fieldset class=\"vjs-font-family vjs-track-setting\">',\n                    this.createElSelect_('fontFamily', '', 'legend'),\n                    '</fieldset>'\n                ].join('')\n            });\n        }\n        createElControls_() {\n            const defaultsDescription = this.localize('restore all settings to the default values');\n            return Dom.createEl('div', {\n                className: 'vjs-track-settings-controls',\n                innerHTML: [\n                    `<button type=\"button\" class=\"vjs-default-button\" title=\"${ defaultsDescription }\">`,\n                    this.localize('Reset'),\n                    `<span class=\"vjs-control-text\"> ${ defaultsDescription }</span>`,\n                    '</button>',\n                    `<button type=\"button\" class=\"vjs-done-button\">${ this.localize('Done') }</button>`\n                ].join('')\n            });\n        }\n        content() {\n            return [\n                this.createElColors_(),\n                this.createElFont_(),\n                this.createElControls_()\n            ];\n        }\n        label() {\n            return this.localize('Caption Settings Dialog');\n        }\n        description() {\n            return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n        }\n        buildCSSClass() {\n            return super.buildCSSClass() + ' vjs-text-track-settings';\n        }\n        getValues() {\n            return Obj.reduce(selectConfigs, (accum, config, key) => {\n                const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n                if (value !== undefined) {\n                    accum[key] = value;\n                }\n                return accum;\n            }, {});\n        }\n        setValues(values) {\n            Obj.each(selectConfigs, (config, key) => {\n                setSelectedOption(this.$(config.selector), values[key], config.parser);\n            });\n        }\n        setDefaults() {\n            Obj.each(selectConfigs, config => {\n                const index = config.hasOwnProperty('default') ? config.default : 0;\n                this.$(config.selector).selectedIndex = index;\n            });\n        }\n        restoreSettings() {\n            let values;\n            try {\n                values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY));\n            } catch (err) {\n                log.warn(err);\n            }\n            if (values) {\n                this.setValues(values);\n            }\n        }\n        saveSettings() {\n            if (!this.options_.persistTextTrackSettings) {\n                return;\n            }\n            const values = this.getValues();\n            try {\n                if (Object.keys(values).length) {\n                    window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n                } else {\n                    window.localStorage.removeItem(LOCAL_STORAGE_KEY);\n                }\n            } catch (err) {\n                log.warn(err);\n            }\n        }\n        updateDisplay() {\n            const ttDisplay = this.player_.getChild('textTrackDisplay');\n            if (ttDisplay) {\n                ttDisplay.updateDisplay();\n            }\n        }\n        conditionalBlur_() {\n            this.previouslyActiveEl_ = null;\n            const cb = this.player_.controlBar;\n            const subsCapsBtn = cb && cb.subsCapsButton;\n            const ccBtn = cb && cb.captionsButton;\n            if (subsCapsBtn) {\n                subsCapsBtn.focus();\n            } else if (ccBtn) {\n                ccBtn.focus();\n            }\n        }\n    }\n    Component.registerComponent('TextTrackSettings', TextTrackSettings);\n    return TextTrackSettings;\n});\ndefine('skylark-videojs/resize-manager',[\n    './utils/fn',\n    './utils/events',\n    './utils/merge-options',\n    './component'\n], function ( Fn, Events, mergeOptions, Component) {\n    'use strict';\n    class ResizeManager extends Component {\n        constructor(player, options) {\n            let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver;\n            if (options.ResizeObserver === null) {\n                RESIZE_OBSERVER_AVAILABLE = false;\n            }\n            const options_ = mergeOptions({\n                createEl: !RESIZE_OBSERVER_AVAILABLE,\n                reportTouchActivity: false\n            }, options);\n            super(player, options_);\n            this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n            this.loadListener_ = null;\n            this.resizeObserver_ = null;\n            this.debouncedHandler_ = Fn.debounce(() => {\n                this.resizeHandler();\n            }, 100, false, this);\n            if (RESIZE_OBSERVER_AVAILABLE) {\n                this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n                this.resizeObserver_.observe(player.el());\n            } else {\n                this.loadListener_ = () => {\n                    if (!this.el_ || !this.el_.contentWindow) {\n                        return;\n                    }\n                    const debouncedHandler_ = this.debouncedHandler_;\n                    let unloadListener_ = this.unloadListener_ = function () {\n                        Events.off(this, 'resize', debouncedHandler_);\n                        Events.off(this, 'unload', unloadListener_);\n                        unloadListener_ = null;\n                    };\n                    Events.on(this.el_.contentWindow, 'unload', unloadListener_);\n                    Events.on(this.el_.contentWindow, 'resize', debouncedHandler_);\n                };\n                this.one('load', this.loadListener_);\n            }\n        }\n        createEl() {\n            return super.createEl('iframe', {\n                className: 'vjs-resize-manager',\n                tabIndex: -1\n            }, { 'aria-hidden': 'true' });\n        }\n        resizeHandler() {\n            if (!this.player_ || !this.player_.trigger) {\n                return;\n            }\n            this.player_.trigger('playerresize');\n        }\n        dispose() {\n            if (this.debouncedHandler_) {\n                this.debouncedHandler_.cancel();\n            }\n            if (this.resizeObserver_) {\n                if (this.player_.el()) {\n                    this.resizeObserver_.unobserve(this.player_.el());\n                }\n                this.resizeObserver_.disconnect();\n            }\n            if (this.loadListener_) {\n                this.off('load', this.loadListener_);\n            }\n            if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n                this.unloadListener_.call(this.el_.contentWindow);\n            }\n            this.ResizeObserver = null;\n            this.resizeObserver = null;\n            this.debouncedHandler_ = null;\n            this.loadListener_ = null;\n            super.dispose();\n        }\n    }\n    Component.registerComponent('ResizeManager', ResizeManager);\n    return ResizeManager;\n});\ndefine('skylark-videojs/live-tracker',[\n    './component',\n    './utils/merge-options',\n    './utils/browser',\n    './utils/fn'\n], function (Component, mergeOptions, browser,  Fn) {\n    'use strict';\n    const defaults = {\n        trackingThreshold: 30,\n        liveTolerance: 15\n    };\n    class LiveTracker extends Component {\n        constructor(player, options) {\n            const options_ = mergeOptions(defaults, options, { createEl: false });\n            super(player, options_);\n            this.reset_();\n            this.on(this.player_, 'durationchange', this.handleDurationchange);\n            if (browser.IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n                this.on(document, 'visibilitychange', this.handleVisibilityChange);\n            }\n        }\n        handleVisibilityChange() {\n            if (this.player_.duration() !== Infinity) {\n                return;\n            }\n            if (document.hidden) {\n                this.stopTracking();\n            } else {\n                this.startTracking();\n            }\n        }\n        trackLive_() {\n            const seekable = this.player_.seekable();\n            if (!seekable || !seekable.length) {\n                return;\n            }\n            const newTime = Number(window.performance.now().toFixed(4));\n            const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n            this.lastTime_ = newTime;\n            this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n            const liveCurrentTime = this.liveCurrentTime();\n            const currentTime = this.player_.currentTime();\n            let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n            if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n                isBehind = false;\n            }\n            if (isBehind !== this.behindLiveEdge_) {\n                this.behindLiveEdge_ = isBehind;\n                this.trigger('liveedgechange');\n            }\n        }\n        handleDurationchange() {\n            if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n                if (this.player_.options_.liveui) {\n                    this.player_.addClass('vjs-liveui');\n                }\n                this.startTracking();\n            } else {\n                this.player_.removeClass('vjs-liveui');\n                this.stopTracking();\n            }\n        }\n        startTracking() {\n            if (this.isTracking()) {\n                return;\n            }\n            if (!this.timeupdateSeen_) {\n                this.timeupdateSeen_ = this.player_.hasStarted();\n            }\n            this.trackingInterval_ = this.setInterval(this.trackLive_, Fn.UPDATE_REFRESH_INTERVAL);\n            this.trackLive_();\n            this.on(this.player_, [\n                'play',\n                'pause'\n            ], this.trackLive_);\n            if (!this.timeupdateSeen_) {\n                this.one(this.player_, 'play', this.handlePlay);\n                this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n            } else {\n                this.on(this.player_, 'seeked', this.handleSeeked);\n            }\n        }\n        handleFirstTimeupdate() {\n            this.timeupdateSeen_ = true;\n            this.on(this.player_, 'seeked', this.handleSeeked);\n        }\n        handleSeeked() {\n            const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n            this.seekedBehindLive_ = this.skipNextSeeked_ ? false : timeDiff > 2;\n            this.skipNextSeeked_ = false;\n            this.trackLive_();\n        }\n        handlePlay() {\n            this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n        }\n        reset_() {\n            this.lastTime_ = -1;\n            this.pastSeekEnd_ = 0;\n            this.lastSeekEnd_ = -1;\n            this.behindLiveEdge_ = true;\n            this.timeupdateSeen_ = false;\n            this.seekedBehindLive_ = false;\n            this.skipNextSeeked_ = false;\n            this.clearInterval(this.trackingInterval_);\n            this.trackingInterval_ = null;\n            this.off(this.player_, [\n                'play',\n                'pause'\n            ], this.trackLive_);\n            this.off(this.player_, 'seeked', this.handleSeeked);\n            this.off(this.player_, 'play', this.handlePlay);\n            this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n            this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n        }\n        stopTracking() {\n            if (!this.isTracking()) {\n                return;\n            }\n            this.reset_();\n            this.trigger('liveedgechange');\n        }\n        seekableEnd() {\n            const seekable = this.player_.seekable();\n            const seekableEnds = [];\n            let i = seekable ? seekable.length : 0;\n            while (i--) {\n                seekableEnds.push(seekable.end(i));\n            }\n            return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n        }\n        seekableStart() {\n            const seekable = this.player_.seekable();\n            const seekableStarts = [];\n            let i = seekable ? seekable.length : 0;\n            while (i--) {\n                seekableStarts.push(seekable.start(i));\n            }\n            return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n        }\n        liveWindow() {\n            const liveCurrentTime = this.liveCurrentTime();\n            if (liveCurrentTime === Infinity) {\n                return 0;\n            }\n            return liveCurrentTime - this.seekableStart();\n        }\n        isLive() {\n            return this.isTracking();\n        }\n        atLiveEdge() {\n            return !this.behindLiveEdge();\n        }\n        liveCurrentTime() {\n            return this.pastSeekEnd() + this.seekableEnd();\n        }\n        pastSeekEnd() {\n            const seekableEnd = this.seekableEnd();\n            if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n                this.pastSeekEnd_ = 0;\n            }\n            this.lastSeekEnd_ = seekableEnd;\n            return this.pastSeekEnd_;\n        }\n        behindLiveEdge() {\n            return this.behindLiveEdge_;\n        }\n        isTracking() {\n            return typeof this.trackingInterval_ === 'number';\n        }\n        seekToLiveEdge() {\n            this.seekedBehindLive_ = false;\n            if (this.atLiveEdge()) {\n                return;\n            }\n            this.skipNextSeeked_ = true;\n            this.player_.currentTime(this.liveCurrentTime());\n        }\n        dispose() {\n            this.off(document, 'visibilitychange', this.handleVisibilityChange);\n            this.stopTracking();\n            super.dispose();\n        }\n    }\n    Component.registerComponent('LiveTracker', LiveTracker);\n    return LiveTracker;\n});\ndefine('skylark-videojs/tech/setup-sourceset',[\n    'skylark-langx-globals/document',\n    '../utils/merge-options',\n    '../utils/url'\n], function (document,mergeOptions, url) {\n    'use strict';\n    const sourcesetLoad = tech => {\n        const el = tech.el();\n        if (el.hasAttribute('src')) {\n            tech.triggerSourceset(el.src);\n            return true;\n        }\n        const sources = tech.$$('source');\n        const srcUrls = [];\n        let src = '';\n        if (!sources.length) {\n            return false;\n        }\n        for (let i = 0; i < sources.length; i++) {\n            const url = sources[i].src;\n            if (url && srcUrls.indexOf(url) === -1) {\n                srcUrls.push(url);\n            }\n        }\n        if (!srcUrls.length) {\n            return false;\n        }\n        if (srcUrls.length === 1) {\n            src = srcUrls[0];\n        }\n        tech.triggerSourceset(src);\n        return true;\n    };\n    const innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n        get() {\n            return this.cloneNode(true).innerHTML;\n        },\n        set(v) {\n            const dummy = document.createElement(this.nodeName.toLowerCase());\n            dummy.innerHTML = v;\n            const docFrag = document.createDocumentFragment();\n            while (dummy.childNodes.length) {\n                docFrag.appendChild(dummy.childNodes[0]);\n            }\n            this.innerText = '';\n            window.Element.prototype.appendChild.call(this, docFrag);\n            return this.innerHTML;\n        }\n    });\n    const getDescriptor = (priority, prop) => {\n        let descriptor = {};\n        for (let i = 0; i < priority.length; i++) {\n            descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n            if (descriptor && descriptor.set && descriptor.get) {\n                break;\n            }\n        }\n        descriptor.enumerable = true;\n        descriptor.configurable = true;\n        return descriptor;\n    };\n    const getInnerHTMLDescriptor = tech => getDescriptor([\n        tech.el(),\n        window.HTMLMediaElement.prototype,\n        window.Element.prototype,\n        innerHTMLDescriptorPolyfill\n    ], 'innerHTML');\n    const firstSourceWatch = function (tech) {\n        const el = tech.el();\n        if (el.resetSourceWatch_) {\n            return;\n        }\n        const old = {};\n        const innerDescriptor = getInnerHTMLDescriptor(tech);\n        const appendWrapper = appendFn => (...args) => {\n            const retval = appendFn.apply(el, args);\n            sourcesetLoad(tech);\n            return retval;\n        };\n        [\n            'append',\n            'appendChild',\n            'insertAdjacentHTML'\n        ].forEach(k => {\n            if (!el[k]) {\n                return;\n            }\n            old[k] = el[k];\n            el[k] = appendWrapper(old[k]);\n        });\n        Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, { set: appendWrapper(innerDescriptor.set) }));\n        el.resetSourceWatch_ = () => {\n            el.resetSourceWatch_ = null;\n            Object.keys(old).forEach(k => {\n                el[k] = old[k];\n            });\n            Object.defineProperty(el, 'innerHTML', innerDescriptor);\n        };\n        tech.one('sourceset', el.resetSourceWatch_);\n    };\n    const srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n        get() {\n            if (this.hasAttribute('src')) {\n                return url.getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n            }\n            return '';\n        },\n        set(v) {\n            window.Element.prototype.setAttribute.call(this, 'src', v);\n            return v;\n        }\n    });\n    const getSrcDescriptor = tech => getDescriptor([\n        tech.el(),\n        window.HTMLMediaElement.prototype,\n        srcDescriptorPolyfill\n    ], 'src');\n    const setupSourceset = function (tech) {\n        if (!tech.featuresSourceset) {\n            return;\n        }\n        const el = tech.el();\n        if (el.resetSourceset_) {\n            return;\n        }\n        const srcDescriptor = getSrcDescriptor(tech);\n        const oldSetAttribute = el.setAttribute;\n        const oldLoad = el.load;\n        Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n            set: v => {\n                const retval = srcDescriptor.set.call(el, v);\n                tech.triggerSourceset(el.src);\n                return retval;\n            }\n        }));\n        el.setAttribute = (n, v) => {\n            const retval = oldSetAttribute.call(el, n, v);\n            if (/src/i.test(n)) {\n                tech.triggerSourceset(el.src);\n            }\n            return retval;\n        };\n        el.load = () => {\n            const retval = oldLoad.call(el);\n            if (!sourcesetLoad(tech)) {\n                tech.triggerSourceset('');\n                firstSourceWatch(tech);\n            }\n            return retval;\n        };\n        if (el.currentSrc) {\n            tech.triggerSourceset(el.currentSrc);\n        } else if (!sourcesetLoad(tech)) {\n            firstSourceWatch(tech);\n        }\n        el.resetSourceset_ = () => {\n            el.resetSourceset_ = null;\n            el.load = oldLoad;\n            el.setAttribute = oldSetAttribute;\n            Object.defineProperty(el, 'src', srcDescriptor);\n            if (el.resetSourceWatch_) {\n                el.resetSourceWatch_();\n            }\n        };\n    };\n    return setupSourceset;\n});\ndefine('skylark-videojs/utils/define-lazy-property',[],function () {\n    'use strict';\n    const defineLazyProperty = function (obj, key, getValue, setter = true) {\n        const set = value => Object.defineProperty(obj, key, {\n            value,\n            enumerable: true,\n            writable: true\n        });\n        const options = {\n            configurable: true,\n            enumerable: true,\n            get() {\n                const value = getValue();\n                set(value);\n                return value;\n            }\n        };\n        if (setter) {\n            options.set = set;\n        }\n        return Object.defineProperty(obj, key, options);\n    };\n    return defineLazyProperty;\n});\ndefine('skylark-videojs/tech/html5',[\n    'skylark-langx-globals/document',\n    './tech',\n    '../utils/dom',\n    '../utils/url',\n    '../utils/log',\n    '../utils/browser',\n    '../utils/obj',\n    '../utils/merge-options',\n    '../utils/string-cases',\n    '../tracks/track-types',\n    '../tracks/track-types',\n    './setup-sourceset',\n    '../utils/define-lazy-property',\n    '../utils/promise'\n], function (document,Tech, Dom, Url, log, browser,  obj, mergeOptions, stringCases, TRACK_TYPES, setupSourceset, defineLazyProperty, promise) {\n    'use strict';\n    const NORMAL = TRACK_TYPES.NORMAL,\n          REMOTE = TRACK_TYPES.REMOTE;\n\n    class Html5 extends Tech {\n        constructor(options, ready) {\n            super(options, ready);\n            const source = options.source;\n            let crossoriginTracks = false;\n            if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n                this.setSource(source);\n            } else {\n                this.handleLateInit_(this.el_);\n            }\n            if (options.enableSourceset) {\n                this.setupSourcesetHandling_();\n            }\n            this.isScrubbing_ = false;\n            if (this.el_.hasChildNodes()) {\n                const nodes = this.el_.childNodes;\n                let nodesLength = nodes.length;\n                const removeNodes = [];\n                while (nodesLength--) {\n                    const node = nodes[nodesLength];\n                    const nodeName = node.nodeName.toLowerCase();\n                    if (nodeName === 'track') {\n                        if (!this.featuresNativeTextTracks) {\n                            removeNodes.push(node);\n                        } else {\n                            this.remoteTextTrackEls().addTrackElement_(node);\n                            this.remoteTextTracks().addTrack(node.track);\n                            this.textTracks().addTrack(node.track);\n                            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && Url.isCrossOrigin(node.src)) {\n                                crossoriginTracks = true;\n                            }\n                        }\n                    }\n                }\n                for (let i = 0; i < removeNodes.length; i++) {\n                    this.el_.removeChild(removeNodes[i]);\n                }\n            }\n            this.proxyNativeTracks_();\n            if (this.featuresNativeTextTracks && crossoriginTracks) {\n                log.warn(\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n\" + 'This may prevent text tracks from loading.');\n            }\n            this.restoreMetadataTracksInIOSNativePlayer_();\n            if ((browser.TOUCH_ENABLED || browser.IS_IPHONE || browser.IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n                this.setControls(true);\n            }\n            this.proxyWebkitFullscreen_();\n            this.triggerReady();\n        }\n        dispose() {\n            if (this.el_ && this.el_.resetSourceset_) {\n                this.el_.resetSourceset_();\n            }\n            Html5.disposeMediaElement(this.el_);\n            this.options_ = null;\n            super.dispose();\n        }\n        setupSourcesetHandling_() {\n            setupSourceset(this);\n        }\n        restoreMetadataTracksInIOSNativePlayer_() {\n            const textTracks = this.textTracks();\n            let metadataTracksPreFullscreenState;\n            const takeMetadataTrackSnapshot = () => {\n                metadataTracksPreFullscreenState = [];\n                for (let i = 0; i < textTracks.length; i++) {\n                    const track = textTracks[i];\n                    if (track.kind === 'metadata') {\n                        metadataTracksPreFullscreenState.push({\n                            track,\n                            storedMode: track.mode\n                        });\n                    }\n                }\n            };\n            takeMetadataTrackSnapshot();\n            textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n            this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n            const restoreTrackMode = () => {\n                for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n                    const storedTrack = metadataTracksPreFullscreenState[i];\n                    if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n                        storedTrack.track.mode = storedTrack.storedMode;\n                    }\n                }\n                textTracks.removeEventListener('change', restoreTrackMode);\n            };\n            this.on('webkitbeginfullscreen', () => {\n                textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.removeEventListener('change', restoreTrackMode);\n                textTracks.addEventListener('change', restoreTrackMode);\n            });\n            this.on('webkitendfullscreen', () => {\n                textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.removeEventListener('change', restoreTrackMode);\n            });\n        }\n        overrideNative_(type, override) {\n            if (override !== this[`featuresNative${ type }Tracks`]) {\n                return;\n            }\n            const lowerCaseType = type.toLowerCase();\n            if (this[`${ lowerCaseType }TracksListeners_`]) {\n                Object.keys(this[`${ lowerCaseType }TracksListeners_`]).forEach(eventName => {\n                    const elTracks = this.el()[`${ lowerCaseType }Tracks`];\n                    elTracks.removeEventListener(eventName, this[`${ lowerCaseType }TracksListeners_`][eventName]);\n                });\n            }\n            this[`featuresNative${ type }Tracks`] = !override;\n            this[`${ lowerCaseType }TracksListeners_`] = null;\n            this.proxyNativeTracksForType_(lowerCaseType);\n        }\n        overrideNativeAudioTracks(override) {\n            this.overrideNative_('Audio', override);\n        }\n        overrideNativeVideoTracks(override) {\n            this.overrideNative_('Video', override);\n        }\n        proxyNativeTracksForType_(name) {\n            const props = NORMAL[name];\n            const elTracks = this.el()[props.getterName];\n            const techTracks = this[props.getterName]();\n            if (!this[`featuresNative${ props.capitalName }Tracks`] || !elTracks || !elTracks.addEventListener) {\n                return;\n            }\n            const listeners = {\n                change: e => {\n                    const event = {\n                        type: 'change',\n                        target: techTracks,\n                        currentTarget: techTracks,\n                        srcElement: techTracks\n                    };\n                    techTracks.trigger(event);\n                    if (name === 'text') {\n                        this[REMOTE.remoteText.getterName]().trigger(event);\n                    }\n                },\n                addtrack(e) {\n                    techTracks.addTrack(e.track);\n                },\n                removetrack(e) {\n                    techTracks.removeTrack(e.track);\n                }\n            };\n            const removeOldTracks = function () {\n                const removeTracks = [];\n                for (let i = 0; i < techTracks.length; i++) {\n                    let found = false;\n                    for (let j = 0; j < elTracks.length; j++) {\n                        if (elTracks[j] === techTracks[i]) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        removeTracks.push(techTracks[i]);\n                    }\n                }\n                while (removeTracks.length) {\n                    techTracks.removeTrack(removeTracks.shift());\n                }\n            };\n            this[props.getterName + 'Listeners_'] = listeners;\n            Object.keys(listeners).forEach(eventName => {\n                const listener = listeners[eventName];\n                elTracks.addEventListener(eventName, listener);\n                this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n            });\n            this.on('loadstart', removeOldTracks);\n            this.on('dispose', e => this.off('loadstart', removeOldTracks));\n        }\n        proxyNativeTracks_() {\n            NORMAL.names.forEach(name => {\n                this.proxyNativeTracksForType_(name);\n            });\n        }\n        createEl() {\n            let el = this.options_.tag;\n            if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n                if (el) {\n                    const clone = el.cloneNode(true);\n                    if (el.parentNode) {\n                        el.parentNode.insertBefore(clone, el);\n                    }\n                    Html5.disposeMediaElement(el);\n                    el = clone;\n                } else {\n                    el = document.createElement('video');\n                    const tagAttributes = this.options_.tag && Dom.getAttributes(this.options_.tag);\n                    const attributes = mergeOptions({}, tagAttributes);\n                    if (!browser.TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n                        delete attributes.controls;\n                    }\n                    Dom.setAttributes(el, obj.assign(attributes, {\n                        id: this.options_.techId,\n                        class: 'vjs-tech'\n                    }));\n                }\n                el.playerId = this.options_.playerId;\n            }\n            if (typeof this.options_.preload !== 'undefined') {\n                Dom.setAttribute(el, 'preload', this.options_.preload);\n            }\n            if (this.options_.disablePictureInPicture !== undefined) {\n                el.disablePictureInPicture = this.options_.disablePictureInPicture;\n            }\n            const settingsAttrs = [\n                'loop',\n                'muted',\n                'playsinline',\n                'autoplay'\n            ];\n            for (let i = 0; i < settingsAttrs.length; i++) {\n                const attr = settingsAttrs[i];\n                const value = this.options_[attr];\n                if (typeof value !== 'undefined') {\n                    if (value) {\n                        Dom.setAttribute(el, attr, attr);\n                    } else {\n                        Dom.removeAttribute(el, attr);\n                    }\n                    el[attr] = value;\n                }\n            }\n            return el;\n        }\n        handleLateInit_(el) {\n            if (el.networkState === 0 || el.networkState === 3) {\n                return;\n            }\n            if (el.readyState === 0) {\n                let loadstartFired = false;\n                const setLoadstartFired = function () {\n                    loadstartFired = true;\n                };\n                this.on('loadstart', setLoadstartFired);\n                const triggerLoadstart = function () {\n                    if (!loadstartFired) {\n                        this.trigger('loadstart');\n                    }\n                };\n                this.on('loadedmetadata', triggerLoadstart);\n                this.ready(function () {\n                    this.off('loadstart', setLoadstartFired);\n                    this.off('loadedmetadata', triggerLoadstart);\n                    if (!loadstartFired) {\n                        this.trigger('loadstart');\n                    }\n                });\n                return;\n            }\n            const eventsToTrigger = ['loadstart'];\n            eventsToTrigger.push('loadedmetadata');\n            if (el.readyState >= 2) {\n                eventsToTrigger.push('loadeddata');\n            }\n            if (el.readyState >= 3) {\n                eventsToTrigger.push('canplay');\n            }\n            if (el.readyState >= 4) {\n                eventsToTrigger.push('canplaythrough');\n            }\n            this.ready(function () {\n                eventsToTrigger.forEach(function (type) {\n                    this.trigger(type);\n                }, this);\n            });\n        }\n        setScrubbing(isScrubbing) {\n            this.isScrubbing_ = isScrubbing;\n        }\n        scrubbing() {\n            return this.isScrubbing_;\n        }\n        setCurrentTime(seconds) {\n            try {\n                if (this.isScrubbing_ && this.el_.fastSeek && browser.IS_ANY_SAFARI) {\n                    this.el_.fastSeek(seconds);\n                } else {\n                    this.el_.currentTime = seconds;\n                }\n            } catch (e) {\n                log(e, 'Video is not ready. (Video.js)');\n            }\n        }\n        duration() {\n            if (this.el_.duration === Infinity && browser.IS_ANDROID && browser.IS_CHROME && this.el_.currentTime === 0) {\n                const checkProgress = () => {\n                    if (this.el_.currentTime > 0) {\n                        if (this.el_.duration === Infinity) {\n                            this.trigger('durationchange');\n                        }\n                        this.off('timeupdate', checkProgress);\n                    }\n                };\n                this.on('timeupdate', checkProgress);\n                return NaN;\n            }\n            return this.el_.duration || NaN;\n        }\n        width() {\n            return this.el_.offsetWidth;\n        }\n        height() {\n            return this.el_.offsetHeight;\n        }\n        proxyWebkitFullscreen_() {\n            if (!('webkitDisplayingFullscreen' in this.el_)) {\n                return;\n            }\n            const endFn = function () {\n                this.trigger('fullscreenchange', { isFullscreen: false });\n            };\n            const beginFn = function () {\n                if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n                    this.one('webkitendfullscreen', endFn);\n                    this.trigger('fullscreenchange', {\n                        isFullscreen: true,\n                        nativeIOSFullscreen: true\n                    });\n                }\n            };\n            this.on('webkitbeginfullscreen', beginFn);\n            this.on('dispose', () => {\n                this.off('webkitbeginfullscreen', beginFn);\n                this.off('webkitendfullscreen', endFn);\n            });\n        }\n        supportsFullScreen() {\n            if (typeof this.el_.webkitEnterFullScreen === 'function') {\n                const userAgent = window.navigator && window.navigator.userAgent || '';\n                if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        enterFullScreen() {\n            const video = this.el_;\n            if (video.paused && video.networkState <= video.HAVE_METADATA) {\n                promise.silencePromise(this.el_.play());\n                this.setTimeout(function () {\n                    video.pause();\n                    try {\n                        video.webkitEnterFullScreen();\n                    } catch (e) {\n                        this.trigger('fullscreenerror', e);\n                    }\n                }, 0);\n            } else {\n                try {\n                    video.webkitEnterFullScreen();\n                } catch (e) {\n                    this.trigger('fullscreenerror', e);\n                }\n            }\n        }\n        exitFullScreen() {\n            if (!this.el_.webkitDisplayingFullscreen) {\n                this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n                return;\n            }\n            this.el_.webkitExitFullScreen();\n        }\n        requestPictureInPicture() {\n            return this.el_.requestPictureInPicture();\n        }\n        src(src) {\n            if (src === undefined) {\n                return this.el_.src;\n            }\n            this.setSrc(src);\n        }\n        reset() {\n            Html5.resetMediaElement(this.el_);\n        }\n        currentSrc() {\n            if (this.currentSource_) {\n                return this.currentSource_.src;\n            }\n            return this.el_.currentSrc;\n        }\n        setControls(val) {\n            this.el_.controls = !!val;\n        }\n        addTextTrack(kind, label, language) {\n            if (!this.featuresNativeTextTracks) {\n                return super.addTextTrack(kind, label, language);\n            }\n            return this.el_.addTextTrack(kind, label, language);\n        }\n        createRemoteTextTrack(options) {\n            if (!this.featuresNativeTextTracks) {\n                return super.createRemoteTextTrack(options);\n            }\n            const htmlTrackElement = document.createElement('track');\n            if (options.kind) {\n                htmlTrackElement.kind = options.kind;\n            }\n            if (options.label) {\n                htmlTrackElement.label = options.label;\n            }\n            if (options.language || options.srclang) {\n                htmlTrackElement.srclang = options.language || options.srclang;\n            }\n            if (options.default) {\n                htmlTrackElement.default = options.default;\n            }\n            if (options.id) {\n                htmlTrackElement.id = options.id;\n            }\n            if (options.src) {\n                htmlTrackElement.src = options.src;\n            }\n            return htmlTrackElement;\n        }\n        addRemoteTextTrack(options, manualCleanup) {\n            const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n            if (this.featuresNativeTextTracks) {\n                this.el().appendChild(htmlTrackElement);\n            }\n            return htmlTrackElement;\n        }\n        removeRemoteTextTrack(track) {\n            super.removeRemoteTextTrack(track);\n            if (this.featuresNativeTextTracks) {\n                const tracks = this.$$('track');\n                let i = tracks.length;\n                while (i--) {\n                    if (track === tracks[i] || track === tracks[i].track) {\n                        this.el().removeChild(tracks[i]);\n                    }\n                }\n            }\n        }\n        getVideoPlaybackQuality() {\n            if (typeof this.el().getVideoPlaybackQuality === 'function') {\n                return this.el().getVideoPlaybackQuality();\n            }\n            const videoPlaybackQuality = {};\n            if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n                videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n                videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n            }\n            if (window.performance && typeof window.performance.now === 'function') {\n                videoPlaybackQuality.creationTime = window.performance.now();\n            } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n                videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n            }\n            return videoPlaybackQuality;\n        }\n    }\n    defineLazyProperty(Html5, 'TEST_VID', function () {\n        if (!Dom.isReal()) {\n            return;\n        }\n        const video = document.createElement('video');\n        const track = document.createElement('track');\n        track.kind = 'captions';\n        track.srclang = 'en';\n        track.label = 'English';\n        video.appendChild(track);\n        return video;\n    });\n    Html5.isSupported = function () {\n        try {\n            Html5.TEST_VID.volume = 0.5;\n        } catch (e) {\n            return false;\n        }\n        return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n    };\n    Html5.canPlayType = function (type) {\n        return Html5.TEST_VID.canPlayType(type);\n    };\n    Html5.canPlaySource = function (srcObj, options) {\n        return Html5.canPlayType(srcObj.type);\n    };\n    Html5.canControlVolume = function () {\n        try {\n            const volume = Html5.TEST_VID.volume;\n            Html5.TEST_VID.volume = volume / 2 + 0.1;\n            return volume !== Html5.TEST_VID.volume;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canMuteVolume = function () {\n        try {\n            const muted = Html5.TEST_VID.muted;\n            Html5.TEST_VID.muted = !muted;\n            if (Html5.TEST_VID.muted) {\n                Dom.setAttribute(Html5.TEST_VID, 'muted', 'muted');\n            } else {\n                Dom.removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n            }\n            return muted !== Html5.TEST_VID.muted;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canControlPlaybackRate = function () {\n        if (browser.IS_ANDROID && browser.IS_CHROME && browser.CHROME_VERSION < 58) {\n            return false;\n        }\n        try {\n            const playbackRate = Html5.TEST_VID.playbackRate;\n            Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n            return playbackRate !== Html5.TEST_VID.playbackRate;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canOverrideAttributes = function () {\n        try {\n            const noop = () => {\n            };\n            Object.defineProperty(document.createElement('video'), 'src', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('audio'), 'src', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('video'), 'innerHTML', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n                get: noop,\n                set: noop\n            });\n        } catch (e) {\n            return false;\n        }\n        return true;\n    };\n    Html5.supportsNativeTextTracks = function () {\n        return browser.IS_ANY_SAFARI || browser.IS_IOS && browser.IS_CHROME;\n    };\n    Html5.supportsNativeVideoTracks = function () {\n        return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n    };\n    Html5.supportsNativeAudioTracks = function () {\n        return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n    };\n    Html5.Events = [\n        'loadstart',\n        'suspend',\n        'abort',\n        'error',\n        'emptied',\n        'stalled',\n        'loadedmetadata',\n        'loadeddata',\n        'canplay',\n        'canplaythrough',\n        'playing',\n        'waiting',\n        'seeking',\n        'seeked',\n        'ended',\n        'durationchange',\n        'timeupdate',\n        'progress',\n        'play',\n        'pause',\n        'ratechange',\n        'resize',\n        'volumechange'\n    ];\n    [\n        [\n            'featuresVolumeControl',\n            'canControlVolume'\n        ],\n        [\n            'featuresMuteControl',\n            'canMuteVolume'\n        ],\n        [\n            'featuresPlaybackRate',\n            'canControlPlaybackRate'\n        ],\n        [\n            'featuresSourceset',\n            'canOverrideAttributes'\n        ],\n        [\n            'featuresNativeTextTracks',\n            'supportsNativeTextTracks'\n        ],\n        [\n            'featuresNativeVideoTracks',\n            'supportsNativeVideoTracks'\n        ],\n        [\n            'featuresNativeAudioTracks',\n            'supportsNativeAudioTracks'\n        ]\n    ].forEach(function ([key, fn]) {\n        defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n    });\n    Html5.prototype.movingMediaElementInDOM = !browser.IS_IOS;\n    Html5.prototype.featuresFullscreenResize = true;\n    Html5.prototype.featuresProgressEvents = true;\n    Html5.prototype.featuresTimeupdateEvents = true;\n    let canPlayType;\n    Html5.patchCanPlayType = function () {\n        if (browser.ANDROID_VERSION >= 4 && !browser.IS_FIREFOX && !browser.IS_CHROME) {\n            canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n            Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n                const mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n                if (type && mpegurlRE.test(type)) {\n                    return 'maybe';\n                }\n                return canPlayType.call(this, type);\n            };\n        }\n    };\n    Html5.unpatchCanPlayType = function () {\n        const r = Html5.TEST_VID.constructor.prototype.canPlayType;\n        if (canPlayType) {\n            Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n        }\n        return r;\n    };\n    Html5.patchCanPlayType();\n    Html5.disposeMediaElement = function (el) {\n        if (!el) {\n            return;\n        }\n        if (el.parentNode) {\n            el.parentNode.removeChild(el);\n        }\n        while (el.hasChildNodes()) {\n            el.removeChild(el.firstChild);\n        }\n        el.removeAttribute('src');\n        if (typeof el.load === 'function') {\n            (function () {\n                try {\n                    el.load();\n                } catch (e) {\n                }\n            }());\n        }\n    };\n    Html5.resetMediaElement = function (el) {\n        if (!el) {\n            return;\n        }\n        const sources = el.querySelectorAll('source');\n        let i = sources.length;\n        while (i--) {\n            el.removeChild(sources[i]);\n        }\n        el.removeAttribute('src');\n        if (typeof el.load === 'function') {\n            (function () {\n                try {\n                    el.load();\n                } catch (e) {\n                }\n            }());\n        }\n    };\n    [\n        'muted',\n        'defaultMuted',\n        'autoplay',\n        'controls',\n        'loop',\n        'playsinline'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop] || this.el_.hasAttribute(prop);\n        };\n    });\n    [\n        'muted',\n        'defaultMuted',\n        'autoplay',\n        'loop',\n        'playsinline'\n    ].forEach(function (prop) {\n        Html5.prototype['set' + stringCases.toTitleCase(prop)] = function (v) {\n            this.el_[prop] = v;\n            if (v) {\n                this.el_.setAttribute(prop, prop);\n            } else {\n                this.el_.removeAttribute(prop);\n            }\n        };\n    });\n    [\n        'paused',\n        'currentTime',\n        'buffered',\n        'volume',\n        'poster',\n        'preload',\n        'error',\n        'seeking',\n        'seekable',\n        'ended',\n        'playbackRate',\n        'defaultPlaybackRate',\n        'disablePictureInPicture',\n        'played',\n        'networkState',\n        'readyState',\n        'videoWidth',\n        'videoHeight',\n        'crossOrigin'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop];\n        };\n    });\n    [\n        'volume',\n        'src',\n        'poster',\n        'preload',\n        'playbackRate',\n        'defaultPlaybackRate',\n        'disablePictureInPicture',\n        'crossOrigin'\n    ].forEach(function (prop) {\n        Html5.prototype['set' + stringCases.toTitleCase(prop)] = function (v) {\n            this.el_[prop] = v;\n        };\n    });\n    [\n        'pause',\n        'load',\n        'play'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop]();\n        };\n    });\n    Tech.withSourceHandlers(Html5);\n    Html5.nativeSourceHandler = {};\n    Html5.nativeSourceHandler.canPlayType = function (type) {\n        try {\n            return Html5.TEST_VID.canPlayType(type);\n        } catch (e) {\n            return '';\n        }\n    };\n    Html5.nativeSourceHandler.canHandleSource = function (source, options) {\n        if (source.type) {\n            return Html5.nativeSourceHandler.canPlayType(source.type);\n        } else if (source.src) {\n            const ext = Url.getFileExtension(source.src);\n            return Html5.nativeSourceHandler.canPlayType(`video/${ ext }`);\n        }\n        return '';\n    };\n    Html5.nativeSourceHandler.handleSource = function (source, tech, options) {\n        tech.setSrc(source.src);\n    };\n    Html5.nativeSourceHandler.dispose = function () {\n    };\n    Html5.registerSourceHandler(Html5.nativeSourceHandler);\n    Tech.registerTech('Html5', Html5);\n    return Html5;\n});\ndefine('skylark-videojs/player',[\n    'skylark-langx-globals/document',\n    './component',\n    './mixins/evented',\n    './utils/events',\n    './utils/dom',\n    './utils/fn',\n    './utils/guid',\n    './utils/browser',\n    './utils/log',\n    './utils/string-cases',\n    './utils/time-ranges',\n    './utils/buffer',\n    './utils/stylesheet',\n    './fullscreen-api',\n    './media-error',\n    './utils/safeParseTuple',\n    './utils/obj',\n    './utils/merge-options',\n    './utils/promise',\n    './tracks/text-track-list-converter',\n    './modal-dialog',\n    './tech/tech',\n    './tech/middleware',\n    './tracks/track-types',\n    './utils/filter-source',\n    './utils/mimetypes',\n    './utils/keycode',\n    './tech/loader',\n    './poster-image',\n    './tracks/text-track-display',\n    './loading-spinner',\n    './big-play-button',\n    './close-button',\n    './control-bar/control-bar',\n    './error-display',\n    './tracks/text-track-settings',\n    './resize-manager',\n    './live-tracker',\n    './tech/html5'\n], function (\n    document,\n    Component,\n    evented, \n    Events, \n    Dom, \n    Fn, \n    Guid, \n    browser, \n    log, \n    stringCases, \n    timeRages, \n    buffer, \n    stylesheet, \n    FullscreenApi, \n    MediaError, \n    safeParseTuple, \n    obj, \n    mergeOptions, \n    promise, \n    textTrackConverter, \n    ModalDialog, \n    Tech, \n    middleware, \n    TRACK_TYPES, \n    filterSource, \n    mimetypes, \n    keycode\n) {\n    'use strict';\n    const TECH_EVENTS_RETRIGGER = [\n        'progress',\n        'abort',\n        'suspend',\n        'emptied',\n        'stalled',\n        'loadedmetadata',\n        'loadeddata',\n        'timeupdate',\n        'resize',\n        'volumechange',\n        'texttrackchange'\n    ];\n    const TECH_EVENTS_QUEUE = {\n        canplay: 'CanPlay',\n        canplaythrough: 'CanPlayThrough',\n        playing: 'Playing',\n        seeked: 'Seeked'\n    };\n    const BREAKPOINT_ORDER = [\n        'tiny',\n        'xsmall',\n        'small',\n        'medium',\n        'large',\n        'xlarge',\n        'huge'\n    ];\n    const BREAKPOINT_CLASSES = {};\n    BREAKPOINT_ORDER.forEach(k => {\n        const v = k.charAt(0) === 'x' ? `x-${ k.substring(1) }` : k;\n        BREAKPOINT_CLASSES[k] = `vjs-layout-${ v }`;\n    });\n    const DEFAULT_BREAKPOINTS = {\n        tiny: 210,\n        xsmall: 320,\n        small: 425,\n        medium: 768,\n        large: 1440,\n        xlarge: 2560,\n        huge: Infinity\n    };\n    class Player extends Component {\n        constructor(tag, options, ready) {\n            tag.id = tag.id || options.id || `vjs_video_${ Guid.newGUID() }`;\n            options = obj.assign(Player.getTagSettings(tag), options);\n            options.initChildren = false;\n            options.createEl = false;\n            options.evented = false;\n            options.reportTouchActivity = false;\n            if (!options.language) {\n                if (typeof tag.closest === 'function') {\n                    const closest = tag.closest('[lang]');\n                    if (closest && closest.getAttribute) {\n                        options.language = closest.getAttribute('lang');\n                    }\n                } else {\n                    let element = tag;\n                    while (element && element.nodeType === 1) {\n                        if (Dom.getAttributes(element).hasOwnProperty('lang')) {\n                            options.language = element.getAttribute('lang');\n                            break;\n                        }\n                        element = element.parentNode;\n                    }\n                }\n            }\n            super(null, options, ready);\n            this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n            this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n            this.isFullscreen_ = false;\n            this.log = log.createLogger(this.id_);\n            this.fsApi_ = FullscreenApi;\n            this.isPosterFromTech_ = false;\n            this.queuedCallbacks_ = [];\n            this.isReady_ = false;\n            this.hasStarted_ = false;\n            this.userActive_ = false;\n            this.debugEnabled_ = false;\n            if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n                throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n            }\n            this.tag = tag;\n            this.tagAttributes = tag && Dom.getAttributes(tag);\n            this.language(this.options_.language);\n            if (options.languages) {\n                const languagesToLower = {};\n                Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n                    languagesToLower[name.toLowerCase()] = options.languages[name];\n                });\n                this.languages_ = languagesToLower;\n            } else {\n                this.languages_ = Player.prototype.options_.languages;\n            }\n            this.resetCache_();\n            this.poster_ = options.poster || '';\n            this.controls_ = !!options.controls;\n            tag.controls = false;\n            tag.removeAttribute('controls');\n            this.changingSrc_ = false;\n            this.playCallbacks_ = [];\n            this.playTerminatedQueue_ = [];\n            if (tag.hasAttribute('autoplay')) {\n                this.autoplay(true);\n            } else {\n                this.autoplay(this.options_.autoplay);\n            }\n            if (options.plugins) {\n                Object.keys(options.plugins).forEach(name => {\n                    if (typeof this[name] !== 'function') {\n                        throw new Error(`plugin \"${ name }\" does not exist`);\n                    }\n                });\n            }\n            this.scrubbing_ = false;\n            this.el_ = this.createEl();\n            evented(this, { eventBusKey: 'el_' });\n            if (this.fsApi_.requestFullscreen) {\n                Events.on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n                this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n            }\n            if (this.fluid_) {\n                this.on([\n                    'playerreset',\n                    'resize'\n                ], this.updateStyleEl_);\n            }\n            const playerOptionsCopy = mergeOptions(this.options_);\n            if (options.plugins) {\n                Object.keys(options.plugins).forEach(name => {\n                    this[name](options.plugins[name]);\n                });\n            }\n            if (options.debug) {\n                this.debug(true);\n            }\n            this.options_.playerOptions = playerOptionsCopy;\n            this.middleware_ = [];\n            this.initChildren();\n            this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n            if (this.controls()) {\n                this.addClass('vjs-controls-enabled');\n            } else {\n                this.addClass('vjs-controls-disabled');\n            }\n            this.el_.setAttribute('role', 'region');\n            if (this.isAudio()) {\n                this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n            } else {\n                this.el_.setAttribute('aria-label', this.localize('Video Player'));\n            }\n            if (this.isAudio()) {\n                this.addClass('vjs-audio');\n            }\n            if (this.flexNotSupported_()) {\n                this.addClass('vjs-no-flex');\n            }\n            if (browser.TOUCH_ENABLED) {\n                this.addClass('vjs-touch-enabled');\n            }\n            if (!browser.IS_IOS) {\n                this.addClass('vjs-workinghover');\n            }\n            Player.players[this.id_] = this;\n            const majorVersion = \"7\";\n            this.addClass(`vjs-v${ majorVersion }`);\n            this.userActive(true);\n            this.reportUserActivity();\n            this.one('play', this.listenForUserActivity_);\n            this.on('stageclick', this.handleStageClick_);\n            this.on('keydown', this.handleKeyDown);\n            this.on('languagechange', this.handleLanguagechange);\n            this.breakpoints(this.options_.breakpoints);\n            this.responsive(this.options_.responsive);\n        }\n        dispose() {\n            this.trigger('dispose');\n            this.off('dispose');\n            Events.off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n            Events.off(document, 'keydown', this.boundFullWindowOnEscKey_);\n            if (this.styleEl_ && this.styleEl_.parentNode) {\n                this.styleEl_.parentNode.removeChild(this.styleEl_);\n                this.styleEl_ = null;\n            }\n            Player.players[this.id_] = null;\n            if (this.tag && this.tag.player) {\n                this.tag.player = null;\n            }\n            if (this.el_ && this.el_.player) {\n                this.el_.player = null;\n            }\n            if (this.tech_) {\n                this.tech_.dispose();\n                this.isPosterFromTech_ = false;\n                this.poster_ = '';\n            }\n            if (this.playerElIngest_) {\n                this.playerElIngest_ = null;\n            }\n            if (this.tag) {\n                this.tag = null;\n            }\n            middleware.clearCacheForPlayer(this);\n            TRACK_TYPES.names.forEach(name => {\n                const props = TRACK_TYPES[name];\n                const list = this[props.getterName]();\n                if (list && list.off) {\n                    list.off();\n                }\n            });\n            super.dispose();\n        }\n        createEl() {\n            let tag = this.tag;\n            let el;\n            let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n            const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n            if (playerElIngest) {\n                el = this.el_ = tag.parentNode;\n            } else if (!divEmbed) {\n                el = this.el_ = super.createEl('div');\n            }\n            const attrs = Dom.getAttributes(tag);\n            if (divEmbed) {\n                el = this.el_ = tag;\n                tag = this.tag = document.createElement('video');\n                while (el.children.length) {\n                    tag.appendChild(el.firstChild);\n                }\n                if (!Dom.hasClass(el, 'video-js')) {\n                    Dom.addClass(el, 'video-js');\n                }\n                el.appendChild(tag);\n                playerElIngest = this.playerElIngest_ = el;\n                Object.keys(el).forEach(k => {\n                    try {\n                        tag[k] = el[k];\n                    } catch (e) {\n                    }\n                });\n            }\n            tag.setAttribute('tabindex', '-1');\n            attrs.tabindex = '-1';\n            if (browser.IE_VERSION || browser.IS_CHROME && browser.IS_WINDOWS) {\n                tag.setAttribute('role', 'application');\n                attrs.role = 'application';\n            }\n            tag.removeAttribute('width');\n            tag.removeAttribute('height');\n            if ('width' in attrs) {\n                delete attrs.width;\n            }\n            if ('height' in attrs) {\n                delete attrs.height;\n            }\n            Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n                if (!(divEmbed && attr === 'class')) {\n                    el.setAttribute(attr, attrs[attr]);\n                }\n                if (divEmbed) {\n                    tag.setAttribute(attr, attrs[attr]);\n                }\n            });\n            tag.playerId = tag.id;\n            tag.id += '_html5_api';\n            tag.className = 'vjs-tech';\n            tag.player = el.player = this;\n            this.addClass('vjs-paused');\n            if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n                this.styleEl_ = stylesheet.createStyleElement('vjs-styles-dimensions');\n                const defaultsStyleEl = Dom.$('.vjs-styles-defaults');\n                const head = Dom.$('head');\n                head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n            }\n            this.fill_ = false;\n            this.fluid_ = false;\n            this.width(this.options_.width);\n            this.height(this.options_.height);\n            this.fill(this.options_.fill);\n            this.fluid(this.options_.fluid);\n            this.aspectRatio(this.options_.aspectRatio);\n            this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n            const links = tag.getElementsByTagName('a');\n            for (let i = 0; i < links.length; i++) {\n                const linkEl = links.item(i);\n                Dom.addClass(linkEl, 'vjs-hidden');\n                linkEl.setAttribute('hidden', 'hidden');\n            }\n            tag.initNetworkState_ = tag.networkState;\n            if (tag.parentNode && !playerElIngest) {\n                tag.parentNode.insertBefore(el, tag);\n            }\n            Dom.prependTo(tag, el);\n            this.children_.unshift(tag);\n            this.el_.setAttribute('lang', this.language_);\n            this.el_ = el;\n            return el;\n        }\n        crossOrigin(value) {\n            if (!value) {\n                return this.techGet_('crossOrigin');\n            }\n            if (value !== 'anonymous' && value !== 'use-credentials') {\n                log.warn(`crossOrigin must be \"anonymous\" or \"use-credentials\", given \"${ value }\"`);\n                return;\n            }\n            this.techCall_('setCrossOrigin', value);\n            return;\n        }\n        width(value) {\n            return this.dimension('width', value);\n        }\n        height(value) {\n            return this.dimension('height', value);\n        }\n        dimension(dimension, value) {\n            const privDimension = dimension + '_';\n            if (value === undefined) {\n                return this[privDimension] || 0;\n            }\n            if (value === '' || value === 'auto') {\n                this[privDimension] = undefined;\n                this.updateStyleEl_();\n                return;\n            }\n            const parsedVal = parseFloat(value);\n            if (isNaN(parsedVal)) {\n                log.error(`Improper value \"${ value }\" supplied for for ${ dimension }`);\n                return;\n            }\n            this[privDimension] = parsedVal;\n            this.updateStyleEl_();\n        }\n        fluid(bool) {\n            if (bool === undefined) {\n                return !!this.fluid_;\n            }\n            this.fluid_ = !!bool;\n            if (evented.isEvented(this)) {\n                this.off([\n                    'playerreset',\n                    'resize'\n                ], this.updateStyleEl_);\n            }\n            if (bool) {\n                this.addClass('vjs-fluid');\n                this.fill(false);\n                evented.addEventedCallback(this, () => {\n                    this.on([\n                        'playerreset',\n                        'resize'\n                    ], this.updateStyleEl_);\n                });\n            } else {\n                this.removeClass('vjs-fluid');\n            }\n            this.updateStyleEl_();\n        }\n        fill(bool) {\n            if (bool === undefined) {\n                return !!this.fill_;\n            }\n            this.fill_ = !!bool;\n            if (bool) {\n                this.addClass('vjs-fill');\n                this.fluid(false);\n            } else {\n                this.removeClass('vjs-fill');\n            }\n        }\n        aspectRatio(ratio) {\n            if (ratio === undefined) {\n                return this.aspectRatio_;\n            }\n            if (!/^\\d+\\:\\d+$/.test(ratio)) {\n                throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n            }\n            this.aspectRatio_ = ratio;\n            this.fluid(true);\n            this.updateStyleEl_();\n        }\n        updateStyleEl_() {\n            if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n                const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n                const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n                const techEl = this.tech_ && this.tech_.el();\n                if (techEl) {\n                    if (width >= 0) {\n                        techEl.width = width;\n                    }\n                    if (height >= 0) {\n                        techEl.height = height;\n                    }\n                }\n                return;\n            }\n            let width;\n            let height;\n            let aspectRatio;\n            let idClass;\n            if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n                aspectRatio = this.aspectRatio_;\n            } else if (this.videoWidth() > 0) {\n                aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n            } else {\n                aspectRatio = '16:9';\n            }\n            const ratioParts = aspectRatio.split(':');\n            const ratioMultiplier = ratioParts[1] / ratioParts[0];\n            if (this.width_ !== undefined) {\n                width = this.width_;\n            } else if (this.height_ !== undefined) {\n                width = this.height_ / ratioMultiplier;\n            } else {\n                width = this.videoWidth() || 300;\n            }\n            if (this.height_ !== undefined) {\n                height = this.height_;\n            } else {\n                height = width * ratioMultiplier;\n            }\n            if (/^[^a-zA-Z]/.test(this.id())) {\n                idClass = 'dimensions-' + this.id();\n            } else {\n                idClass = this.id() + '-dimensions';\n            }\n            this.addClass(idClass);\n            stylesheet.setTextContent(this.styleEl_, `\n      .${ idClass } {\n        width: ${ width }px;\n        height: ${ height }px;\n      }\n\n      .${ idClass }.vjs-fluid {\n        padding-top: ${ ratioMultiplier * 100 }%;\n      }\n    `);\n        }\n        loadTech_(techName, source) {\n            if (this.tech_) {\n                this.unloadTech_();\n            }\n            const titleTechName = stringCases.toTitleCase(techName);\n            const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n            if (titleTechName !== 'Html5' && this.tag) {\n                Tech.getTech('Html5').disposeMediaElement(this.tag);\n                this.tag.player = null;\n                this.tag = null;\n            }\n            this.techName_ = titleTechName;\n            this.isReady_ = false;\n            const autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n            const techOptions = {\n                source,\n                autoplay,\n                'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n                'playerId': this.id(),\n                'techId': `${ this.id() }_${ camelTechName }_api`,\n                'playsinline': this.options_.playsinline,\n                'preload': this.options_.preload,\n                'loop': this.options_.loop,\n                'disablePictureInPicture': this.options_.disablePictureInPicture,\n                'muted': this.options_.muted,\n                'poster': this.poster(),\n                'language': this.language(),\n                'playerElIngest': this.playerElIngest_ || false,\n                'vtt.js': this.options_['vtt.js'],\n                'canOverridePoster': !!this.options_.techCanOverridePoster,\n                'enableSourceset': this.options_.enableSourceset,\n                'Promise': this.options_.Promise\n            };\n            TRACK_TYPES.names.forEach(name => {\n                const props = TRACK_TYPES[name];\n                techOptions[props.getterName] = this[props.privateName];\n            });\n            obj.assign(techOptions, this.options_[titleTechName]);\n            obj.assign(techOptions, this.options_[camelTechName]);\n            obj.assign(techOptions, this.options_[techName.toLowerCase()]);\n            if (this.tag) {\n                techOptions.tag = this.tag;\n            }\n            if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n                techOptions.startTime = this.cache_.currentTime;\n            }\n            const TechClass = Tech.getTech(techName);\n            if (!TechClass) {\n                throw new Error(`No Tech named '${ titleTechName }' exists! '${ titleTechName }' should be registered using videojs.registerTech()'`);\n            }\n            this.tech_ = new TechClass(techOptions);\n            this.tech_.ready(Fn.bind(this, this.handleTechReady_), true);\n            textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n            TECH_EVENTS_RETRIGGER.forEach(event => {\n                this.on(this.tech_, event, this[`handleTech${ stringCases.toTitleCase(event) }_`]);\n            });\n            Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n                this.on(this.tech_, event, eventObj => {\n                    if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n                        this.queuedCallbacks_.push({\n                            callback: this[`handleTech${ TECH_EVENTS_QUEUE[event] }_`].bind(this),\n                            event: eventObj\n                        });\n                        return;\n                    }\n                    this[`handleTech${ TECH_EVENTS_QUEUE[event] }_`](eventObj);\n                });\n            });\n            this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n            this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n            this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n            this.on(this.tech_, 'ended', this.handleTechEnded_);\n            this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n            this.on(this.tech_, 'play', this.handleTechPlay_);\n            this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n            this.on(this.tech_, 'pause', this.handleTechPause_);\n            this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n            this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n            this.on(this.tech_, 'fullscreenerror', this.handleTechFullscreenError_);\n            this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n            this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n            this.on(this.tech_, 'error', this.handleTechError_);\n            this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n            this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n            this.on(this.tech_, 'textdata', this.handleTechTextData_);\n            this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n            this.usingNativeControls(this.techGet_('controls'));\n            if (this.controls() && !this.usingNativeControls()) {\n                this.addTechControlsListeners_();\n            }\n            if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n                Dom.prependTo(this.tech_.el(), this.el());\n            }\n            if (this.tag) {\n                this.tag.player = null;\n                this.tag = null;\n            }\n        }\n        unloadTech_() {\n            TRACK_TYPES.names.forEach(name => {\n                const props = TRACK_TYPES[name];\n                this[props.privateName] = this[props.getterName]();\n            });\n            this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n            this.isReady_ = false;\n            this.tech_.dispose();\n            this.tech_ = false;\n            if (this.isPosterFromTech_) {\n                this.poster_ = '';\n                this.trigger('posterchange');\n            }\n            this.isPosterFromTech_ = false;\n        }\n        tech(safety) {\n            if (safety === undefined) {\n                log.warn(\"Using the tech directly can be dangerous. I hope you know what you're doing.\\n\" + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n            }\n            return this.tech_;\n        }\n        addTechControlsListeners_() {\n            this.removeTechControlsListeners_();\n            this.on(this.tech_, 'mouseup', this.handleTechClick_);\n            this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n            this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n            this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n            this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n            this.on(this.tech_, 'tap', this.handleTechTap_);\n        }\n        removeTechControlsListeners_() {\n            this.off(this.tech_, 'tap', this.handleTechTap_);\n            this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n            this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n            this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n            this.off(this.tech_, 'mouseup', this.handleTechClick_);\n            this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n        }\n        handleTechReady_() {\n            this.triggerReady();\n            if (this.cache_.volume) {\n                this.techCall_('setVolume', this.cache_.volume);\n            }\n            this.handleTechPosterChange_();\n            this.handleTechDurationChange_();\n        }\n        handleTechLoadStart_() {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-seeking');\n            this.error(null);\n            this.handleTechDurationChange_();\n            if (!this.paused()) {\n                this.trigger('loadstart');\n                this.trigger('firstplay');\n            } else {\n                this.hasStarted(false);\n                this.trigger('loadstart');\n            }\n            this.manualAutoplay_(this.autoplay());\n        }\n        manualAutoplay_(type) {\n            if (!this.tech_ || typeof type !== 'string') {\n                return;\n            }\n            const muted = () => {\n                const previouslyMuted = this.muted();\n                this.muted(true);\n                const restoreMuted = () => {\n                    this.muted(previouslyMuted);\n                };\n                this.playTerminatedQueue_.push(restoreMuted);\n                const mutedPromise = this.play();\n                if (!promise.isPromise(mutedPromise)) {\n                    return;\n                }\n                return mutedPromise.catch(restoreMuted);\n            };\n            let promise;\n            if (type === 'any' && this.muted() !== true) {\n                promise = this.play();\n                if (promise.isPromise(promise)) {\n                    promise = promise.catch(muted);\n                }\n            } else if (type === 'muted' && this.muted() !== true) {\n                promise = muted();\n            } else {\n                promise = this.play();\n            }\n            if (!promise.isPromise(promise)) {\n                return;\n            }\n            return promise.then(() => {\n                this.trigger({\n                    type: 'autoplay-success',\n                    autoplay: type\n                });\n            }).catch(e => {\n                this.trigger({\n                    type: 'autoplay-failure',\n                    autoplay: type\n                });\n            });\n        }\n        updateSourceCaches_(srcObj = '') {\n            let src = srcObj;\n            let type = '';\n            if (typeof src !== 'string') {\n                src = srcObj.src;\n                type = srcObj.type;\n            }\n            this.cache_.source = this.cache_.source || {};\n            this.cache_.sources = this.cache_.sources || [];\n            if (src && !type) {\n                type = mimetypes.findMimetype(this, src);\n            }\n            this.cache_.source = mergeOptions({}, srcObj, {\n                src,\n                type\n            });\n            const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n            const sourceElSources = [];\n            const sourceEls = this.$$('source');\n            const matchingSourceEls = [];\n            for (let i = 0; i < sourceEls.length; i++) {\n                const sourceObj = Dom.getAttributes(sourceEls[i]);\n                sourceElSources.push(sourceObj);\n                if (sourceObj.src && sourceObj.src === src) {\n                    matchingSourceEls.push(sourceObj.src);\n                }\n            }\n            if (matchingSourceEls.length && !matchingSources.length) {\n                this.cache_.sources = sourceElSources;\n            } else if (!matchingSources.length) {\n                this.cache_.sources = [this.cache_.source];\n            }\n            this.cache_.src = src;\n        }\n        handleTechSourceset_(event) {\n            if (!this.changingSrc_) {\n                let updateSourceCaches = src => this.updateSourceCaches_(src);\n                const playerSrc = this.currentSource().src;\n                const eventSrc = event.src;\n                if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n                    if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n                        updateSourceCaches = () => {\n                        };\n                    }\n                }\n                updateSourceCaches(eventSrc);\n                if (!event.src) {\n                    this.tech_.any([\n                        'sourceset',\n                        'loadstart'\n                    ], e => {\n                        if (e.type === 'sourceset') {\n                            return;\n                        }\n                        const techSrc = this.techGet('currentSrc');\n                        this.lastSource_.tech = techSrc;\n                        this.updateSourceCaches_(techSrc);\n                    });\n                }\n            }\n            this.lastSource_ = {\n                player: this.currentSource().src,\n                tech: event.src\n            };\n            this.trigger({\n                src: event.src,\n                type: 'sourceset'\n            });\n        }\n        hasStarted(request) {\n            if (request === undefined) {\n                return this.hasStarted_;\n            }\n            if (request === this.hasStarted_) {\n                return;\n            }\n            this.hasStarted_ = request;\n            if (this.hasStarted_) {\n                this.addClass('vjs-has-started');\n                this.trigger('firstplay');\n            } else {\n                this.removeClass('vjs-has-started');\n            }\n        }\n        handleTechPlay_() {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-paused');\n            this.addClass('vjs-playing');\n            this.hasStarted(true);\n            this.trigger('play');\n        }\n        handleTechRateChange_() {\n            if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n                this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n                this.queuedCallbacks_ = [];\n            }\n            this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n            this.trigger('ratechange');\n        }\n        handleTechWaiting_() {\n            this.addClass('vjs-waiting');\n            this.trigger('waiting');\n            const timeWhenWaiting = this.currentTime();\n            const timeUpdateListener = () => {\n                if (timeWhenWaiting !== this.currentTime()) {\n                    this.removeClass('vjs-waiting');\n                    this.off('timeupdate', timeUpdateListener);\n                }\n            };\n            this.on('timeupdate', timeUpdateListener);\n        }\n        handleTechCanPlay_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('canplay');\n        }\n        handleTechCanPlayThrough_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('canplaythrough');\n        }\n        handleTechPlaying_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('playing');\n        }\n        handleTechSeeking_() {\n            this.addClass('vjs-seeking');\n            this.trigger('seeking');\n        }\n        handleTechSeeked_() {\n            this.removeClass('vjs-seeking');\n            this.removeClass('vjs-ended');\n            this.trigger('seeked');\n        }\n        handleTechFirstPlay_() {\n            if (this.options_.starttime) {\n                log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n                this.currentTime(this.options_.starttime);\n            }\n            this.addClass('vjs-has-started');\n            this.trigger('firstplay');\n        }\n        handleTechPause_() {\n            this.removeClass('vjs-playing');\n            this.addClass('vjs-paused');\n            this.trigger('pause');\n        }\n        handleTechEnded_() {\n            this.addClass('vjs-ended');\n            if (this.options_.loop) {\n                this.currentTime(0);\n                this.play();\n            } else if (!this.paused()) {\n                this.pause();\n            }\n            this.trigger('ended');\n        }\n        handleTechDurationChange_() {\n            this.duration(this.techGet_('duration'));\n        }\n        handleTechClick_(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            if (!this.controls_) {\n                return;\n            }\n            if (this.paused()) {\n                promise.silencePromise(this.play());\n            } else {\n                this.pause();\n            }\n        }\n        handleTechDoubleClick_(event) {\n            if (!this.controls_) {\n                return;\n            }\n            const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n            if (!inAllowedEls) {\n                if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n                    if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n                        this.options_.userActions.doubleClick.call(this, event);\n                    } else if (this.isFullscreen()) {\n                        this.exitFullscreen();\n                    } else {\n                        this.requestFullscreen();\n                    }\n                }\n            }\n        }\n        handleTechTap_() {\n            this.userActive(!this.userActive());\n        }\n        handleTechTouchStart_() {\n            this.userWasActive = this.userActive();\n        }\n        handleTechTouchMove_() {\n            if (this.userWasActive) {\n                this.reportUserActivity();\n            }\n        }\n        handleTechTouchEnd_(event) {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n        }\n        handleStageClick_() {\n            this.reportUserActivity();\n        }\n        toggleFullscreenClass_() {\n            if (this.isFullscreen()) {\n                this.addClass('vjs-fullscreen');\n            } else {\n                this.removeClass('vjs-fullscreen');\n            }\n        }\n        documentFullscreenChange_(e) {\n            const targetPlayer = e.target.player;\n            if (targetPlayer && targetPlayer !== this) {\n                return;\n            }\n            const el = this.el();\n            let isFs = document[this.fsApi_.fullscreenElement] === el;\n            if (!isFs && el.matches) {\n                isFs = el.matches(':' + this.fsApi_.fullscreen);\n            } else if (!isFs && el.msMatchesSelector) {\n                isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n            }\n            this.isFullscreen(isFs);\n        }\n        handleTechFullscreenChange_(event, data) {\n            if (data) {\n                if (data.nativeIOSFullscreen) {\n                    this.toggleClass('vjs-ios-native-fs');\n                }\n                this.isFullscreen(data.isFullscreen);\n            }\n        }\n        handleTechFullscreenError_(event, err) {\n            this.trigger('fullscreenerror', err);\n        }\n        togglePictureInPictureClass_() {\n            if (this.isInPictureInPicture()) {\n                this.addClass('vjs-picture-in-picture');\n            } else {\n                this.removeClass('vjs-picture-in-picture');\n            }\n        }\n        handleTechEnterPictureInPicture_(event) {\n            this.isInPictureInPicture(true);\n        }\n        handleTechLeavePictureInPicture_(event) {\n            this.isInPictureInPicture(false);\n        }\n        handleTechError_() {\n            const error = this.tech_.error();\n            this.error(error);\n        }\n        handleTechTextData_() {\n            let data = null;\n            if (arguments.length > 1) {\n                data = arguments[1];\n            }\n            this.trigger('textdata', data);\n        }\n        getCache() {\n            return this.cache_;\n        }\n        resetCache_() {\n            this.cache_ = {\n                currentTime: 0,\n                initTime: 0,\n                inactivityTimeout: this.options_.inactivityTimeout,\n                duration: NaN,\n                lastVolume: 1,\n                lastPlaybackRate: this.defaultPlaybackRate(),\n                media: null,\n                src: '',\n                source: {},\n                sources: [],\n                volume: 1\n            };\n        }\n        techCall_(method, arg) {\n            this.ready(function () {\n                if (method in middleware.allowedSetters) {\n                    return middleware.set(this.middleware_, this.tech_, method, arg);\n                } else if (method in middleware.allowedMediators) {\n                    return middleware.mediate(this.middleware_, this.tech_, method, arg);\n                }\n                try {\n                    if (this.tech_) {\n                        this.tech_[method](arg);\n                    }\n                } catch (e) {\n                    log(e);\n                    throw e;\n                }\n            }, true);\n        }\n        techGet_(method) {\n            if (!this.tech_ || !this.tech_.isReady_) {\n                return;\n            }\n            if (method in middleware.allowedGetters) {\n                return middleware.get(this.middleware_, this.tech_, method);\n            } else if (method in middleware.allowedMediators) {\n                return middleware.mediate(this.middleware_, this.tech_, method);\n            }\n            try {\n                return this.tech_[method]();\n            } catch (e) {\n                if (this.tech_[method] === undefined) {\n                    log(`Video.js: ${ method } method not defined for ${ this.techName_ } playback technology.`, e);\n                    throw e;\n                }\n                if (e.name === 'TypeError') {\n                    log(`Video.js: ${ method } unavailable on ${ this.techName_ } playback technology element.`, e);\n                    this.tech_.isReady_ = false;\n                    throw e;\n                }\n                log(e);\n                throw e;\n            }\n        }\n        play() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                return new PromiseClass(resolve => {\n                    this.play_(resolve);\n                });\n            }\n            return this.play_();\n        }\n        play_(callback = promise.silencePromise) {\n            this.playCallbacks_.push(callback);\n            const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n            if (this.waitToPlay_) {\n                this.off([\n                    'ready',\n                    'loadstart'\n                ], this.waitToPlay_);\n                this.waitToPlay_ = null;\n            }\n            if (!this.isReady_ || !isSrcReady) {\n                this.waitToPlay_ = e => {\n                    this.play_();\n                };\n                this.one([\n                    'ready',\n                    'loadstart'\n                ], this.waitToPlay_);\n                if (!isSrcReady && (browser.IS_ANY_SAFARI || browser.IS_IOS)) {\n                    this.load();\n                }\n                return;\n            }\n            const val = this.techGet_('play');\n            if (val === null) {\n                this.runPlayTerminatedQueue_();\n            } else {\n                this.runPlayCallbacks_(val);\n            }\n        }\n        runPlayTerminatedQueue_() {\n            const queue = this.playTerminatedQueue_.slice(0);\n            this.playTerminatedQueue_ = [];\n            queue.forEach(function (q) {\n                q();\n            });\n        }\n        runPlayCallbacks_(val) {\n            const callbacks = this.playCallbacks_.slice(0);\n            this.playCallbacks_ = [];\n            this.playTerminatedQueue_ = [];\n            callbacks.forEach(function (cb) {\n                cb(val);\n            });\n        }\n        pause() {\n            this.techCall_('pause');\n        }\n        paused() {\n            return this.techGet_('paused') === false ? false : true;\n        }\n        played() {\n            return this.techGet_('played') || timeRages.createTimeRange(0, 0);\n        }\n        scrubbing(isScrubbing) {\n            if (typeof isScrubbing === 'undefined') {\n                return this.scrubbing_;\n            }\n            this.scrubbing_ = !!isScrubbing;\n            this.techCall_('setScrubbing', this.scrubbing_);\n            if (isScrubbing) {\n                this.addClass('vjs-scrubbing');\n            } else {\n                this.removeClass('vjs-scrubbing');\n            }\n        }\n        currentTime(seconds) {\n            if (typeof seconds !== 'undefined') {\n                if (seconds < 0) {\n                    seconds = 0;\n                }\n                if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n                    this.cache_.initTime = seconds;\n                    this.off('canplay', this.applyInitTime_);\n                    this.one('canplay', this.applyInitTime_);\n                    return;\n                }\n                this.techCall_('setCurrentTime', seconds);\n                this.cache_.initTime = 0;\n                return;\n            }\n            this.cache_.currentTime = this.techGet_('currentTime') || 0;\n            return this.cache_.currentTime;\n        }\n        applyInitTime_() {\n            this.currentTime(this.cache_.initTime);\n        }\n        duration(seconds) {\n            if (seconds === undefined) {\n                return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n            }\n            seconds = parseFloat(seconds);\n            if (seconds < 0) {\n                seconds = Infinity;\n            }\n            if (seconds !== this.cache_.duration) {\n                this.cache_.duration = seconds;\n                if (seconds === Infinity) {\n                    this.addClass('vjs-live');\n                } else {\n                    this.removeClass('vjs-live');\n                }\n                if (!isNaN(seconds)) {\n                    this.trigger('durationchange');\n                }\n            }\n        }\n        remainingTime() {\n            return this.duration() - this.currentTime();\n        }\n        remainingTimeDisplay() {\n            return Math.floor(this.duration()) - Math.floor(this.currentTime());\n        }\n        buffered() {\n            let buffered = this.techGet_('buffered');\n            if (!buffered || !buffered.length) {\n                buffered = timeRages.createTimeRange(0, 0);\n            }\n            return buffered;\n        }\n        bufferedPercent() {\n            return buffer.bufferedPercent(this.buffered(), this.duration());\n        }\n        bufferedEnd() {\n            const buffered = this.buffered();\n            const duration = this.duration();\n            let end = buffered.end(buffered.length - 1);\n            if (end > duration) {\n                end = duration;\n            }\n            return end;\n        }\n        volume(percentAsDecimal) {\n            let vol;\n            if (percentAsDecimal !== undefined) {\n                vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n                this.cache_.volume = vol;\n                this.techCall_('setVolume', vol);\n                if (vol > 0) {\n                    this.lastVolume_(vol);\n                }\n                return;\n            }\n            vol = parseFloat(this.techGet_('volume'));\n            return isNaN(vol) ? 1 : vol;\n        }\n        muted(muted) {\n            if (muted !== undefined) {\n                this.techCall_('setMuted', muted);\n                return;\n            }\n            return this.techGet_('muted') || false;\n        }\n        defaultMuted(defaultMuted) {\n            if (defaultMuted !== undefined) {\n                return this.techCall_('setDefaultMuted', defaultMuted);\n            }\n            return this.techGet_('defaultMuted') || false;\n        }\n        lastVolume_(percentAsDecimal) {\n            if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n                this.cache_.lastVolume = percentAsDecimal;\n                return;\n            }\n            return this.cache_.lastVolume;\n        }\n        supportsFullScreen() {\n            return this.techGet_('supportsFullScreen') || false;\n        }\n        isFullscreen(isFS) {\n            if (isFS !== undefined) {\n                const oldValue = this.isFullscreen_;\n                this.isFullscreen_ = Boolean(isFS);\n                if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n                    this.trigger('fullscreenchange');\n                }\n                this.toggleFullscreenClass_();\n                return;\n            }\n            return this.isFullscreen_;\n        }\n        requestFullscreen(fullscreenOptions) {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                const self = this;\n                return new PromiseClass((resolve, reject) => {\n                    function offHandler() {\n                        self.off('fullscreenerror', errorHandler);\n                        self.off('fullscreenchange', changeHandler);\n                    }\n                    function changeHandler() {\n                        offHandler();\n                        resolve();\n                    }\n                    function errorHandler(e, err) {\n                        offHandler();\n                        reject(err);\n                    }\n                    self.one('fullscreenchange', changeHandler);\n                    self.one('fullscreenerror', errorHandler);\n                    const promise = self.requestFullscreenHelper_(fullscreenOptions);\n                    if (promise) {\n                        promise.then(offHandler, offHandler);\n                        return promise;\n                    }\n                });\n            }\n            return this.requestFullscreenHelper_();\n        }\n        requestFullscreenHelper_(fullscreenOptions) {\n            let fsOptions;\n            if (!this.fsApi_.prefixed) {\n                fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n                if (fullscreenOptions !== undefined) {\n                    fsOptions = fullscreenOptions;\n                }\n            }\n            if (this.fsApi_.requestFullscreen) {\n                const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n                if (promise) {\n                    promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n                }\n                return promise;\n            } else if (this.tech_.supportsFullScreen()) {\n                this.techCall_('enterFullScreen');\n            } else {\n                this.enterFullWindow();\n            }\n        }\n        exitFullscreen() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                const self = this;\n                return new PromiseClass((resolve, reject) => {\n                    function offHandler() {\n                        self.off('fullscreenerror', errorHandler);\n                        self.off('fullscreenchange', changeHandler);\n                    }\n                    function changeHandler() {\n                        offHandler();\n                        resolve();\n                    }\n                    function errorHandler(e, err) {\n                        offHandler();\n                        reject(err);\n                    }\n                    self.one('fullscreenchange', changeHandler);\n                    self.one('fullscreenerror', errorHandler);\n                    const promise = self.exitFullscreenHelper_();\n                    if (promise) {\n                        promise.then(offHandler, offHandler);\n                        return promise;\n                    }\n                });\n            }\n            return this.exitFullscreenHelper_();\n        }\n        exitFullscreenHelper_() {\n            if (this.fsApi_.requestFullscreen) {\n                const promise = document[this.fsApi_.exitFullscreen]();\n                if (promise) {\n                    promise.then(() => this.isFullscreen(false));\n                }\n                return promise;\n            } else if (this.tech_.supportsFullScreen()) {\n                this.techCall_('exitFullScreen');\n            } else {\n                this.exitFullWindow();\n            }\n        }\n        enterFullWindow() {\n            this.isFullscreen(true);\n            this.isFullWindow = true;\n            this.docOrigOverflow = document.documentElement.style.overflow;\n            Events.on(document, 'keydown', this.boundFullWindowOnEscKey_);\n            document.documentElement.style.overflow = 'hidden';\n            Dom.addClass(document.body, 'vjs-full-window');\n            this.trigger('enterFullWindow');\n        }\n        fullWindowOnEscKey(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                if (this.isFullscreen() === true) {\n                    this.exitFullscreen();\n                } else {\n                    this.exitFullWindow();\n                }\n            }\n        }\n        exitFullWindow() {\n            this.isFullscreen(false);\n            this.isFullWindow = false;\n            Events.off(document, 'keydown', this.boundFullWindowOnEscKey_);\n            document.documentElement.style.overflow = this.docOrigOverflow;\n            Dom.removeClass(document.body, 'vjs-full-window');\n            this.trigger('exitFullWindow');\n        }\n        disablePictureInPicture(value) {\n            if (value === undefined) {\n                return this.techGet_('disablePictureInPicture');\n            }\n            this.techCall_('setDisablePictureInPicture', value);\n            this.options_.disablePictureInPicture = value;\n            this.trigger('disablepictureinpicturechanged');\n        }\n        isInPictureInPicture(isPiP) {\n            if (isPiP !== undefined) {\n                this.isInPictureInPicture_ = !!isPiP;\n                this.togglePictureInPictureClass_();\n                return;\n            }\n            return !!this.isInPictureInPicture_;\n        }\n        requestPictureInPicture() {\n            if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n                return this.techGet_('requestPictureInPicture');\n            }\n        }\n        exitPictureInPicture() {\n            if ('pictureInPictureEnabled' in document) {\n                return document.exitPictureInPicture();\n            }\n        }\n        handleKeyDown(event) {\n            const {userActions} = this.options_;\n            if (!userActions || !userActions.hotkeys) {\n                return;\n            }\n            const excludeElement = el => {\n                const tagName = el.tagName.toLowerCase();\n                if (el.isContentEditable) {\n                    return true;\n                }\n                const allowedInputTypes = [\n                    'button',\n                    'checkbox',\n                    'hidden',\n                    'radio',\n                    'reset',\n                    'submit'\n                ];\n                if (tagName === 'input') {\n                    return allowedInputTypes.indexOf(el.type) === -1;\n                }\n                const excludedTags = ['textarea'];\n                return excludedTags.indexOf(tagName) !== -1;\n            };\n            if (excludeElement(this.el_.ownerDocument.activeElement)) {\n                return;\n            }\n            if (typeof userActions.hotkeys === 'function') {\n                userActions.hotkeys.call(this, event);\n            } else {\n                this.handleHotkeys(event);\n            }\n        }\n        handleHotkeys(event) {\n            const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n            const {fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'), muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'), playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')} = hotkeys;\n            if (fullscreenKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const FSToggle = Component.getComponent('FullscreenToggle');\n                if (document[this.fsApi_.fullscreenEnabled] !== false) {\n                    FSToggle.prototype.handleClick.call(this, event);\n                }\n            } else if (muteKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const MuteToggle = Component.getComponent('MuteToggle');\n                MuteToggle.prototype.handleClick.call(this, event);\n            } else if (playPauseKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const PlayToggle = Component.getComponent('PlayToggle');\n                PlayToggle.prototype.handleClick.call(this, event);\n            }\n        }\n        canPlayType(type) {\n            let can;\n            for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n                const techName = j[i];\n                let tech = Tech.getTech(techName);\n                if (!tech) {\n                    tech = Component.getComponent(techName);\n                }\n                if (!tech) {\n                    log.error(`The \"${ techName }\" tech is undefined. Skipped browser support check for that tech.`);\n                    continue;\n                }\n                if (tech.isSupported()) {\n                    can = tech.canPlayType(type);\n                    if (can) {\n                        return can;\n                    }\n                }\n            }\n            return '';\n        }\n        selectSource(sources) {\n            const techs = this.options_.techOrder.map(techName => {\n                return [\n                    techName,\n                    Tech.getTech(techName)\n                ];\n            }).filter(([techName, tech]) => {\n                if (tech) {\n                    return tech.isSupported();\n                }\n                log.error(`The \"${ techName }\" tech is undefined. Skipped browser support check for that tech.`);\n                return false;\n            });\n            const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n                let found;\n                outerArray.some(outerChoice => {\n                    return innerArray.some(innerChoice => {\n                        found = tester(outerChoice, innerChoice);\n                        if (found) {\n                            return true;\n                        }\n                    });\n                });\n                return found;\n            };\n            let foundSourceAndTech;\n            const flip = fn => (a, b) => fn(b, a);\n            const finder = ([techName, tech], source) => {\n                if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n                    return {\n                        source,\n                        tech: techName\n                    };\n                }\n            };\n            if (this.options_.sourceOrder) {\n                foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n            } else {\n                foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n            }\n            return foundSourceAndTech || false;\n        }\n        src(source) {\n            if (typeof source === 'undefined') {\n                return this.cache_.src || '';\n            }\n            const sources = filterSource(source);\n            if (!sources.length) {\n                this.setTimeout(function () {\n                    this.error({\n                        code: 4,\n                        message: this.localize(this.options_.notSupportedMessage)\n                    });\n                }, 0);\n                return;\n            }\n            this.changingSrc_ = true;\n            this.cache_.sources = sources;\n            this.updateSourceCaches_(sources[0]);\n            middleware.setSource(this, sources[0], (middlewareSource, mws) => {\n                this.middleware_ = mws;\n                this.cache_.sources = sources;\n                this.updateSourceCaches_(middlewareSource);\n                const err = this.src_(middlewareSource);\n                if (err) {\n                    if (sources.length > 1) {\n                        return this.src(sources.slice(1));\n                    }\n                    this.changingSrc_ = false;\n                    this.setTimeout(function () {\n                        this.error({\n                            code: 4,\n                            message: this.localize(this.options_.notSupportedMessage)\n                        });\n                    }, 0);\n                    this.triggerReady();\n                    return;\n                }\n                middleware.setTech(mws, this.tech_);\n            });\n        }\n        src_(source) {\n            const sourceTech = this.selectSource([source]);\n            if (!sourceTech) {\n                return true;\n            }\n            if (!stringCases.titleCaseEquals(sourceTech.tech, this.techName_)) {\n                this.changingSrc_ = true;\n                this.loadTech_(sourceTech.tech, sourceTech.source);\n                this.tech_.ready(() => {\n                    this.changingSrc_ = false;\n                });\n                return false;\n            }\n            this.ready(function () {\n                if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n                    this.techCall_('setSource', source);\n                } else {\n                    this.techCall_('src', source.src);\n                }\n                this.changingSrc_ = false;\n            }, true);\n            return false;\n        }\n        load() {\n            this.techCall_('load');\n        }\n        reset() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (this.paused() || !PromiseClass) {\n                this.doReset_();\n            } else {\n                const playPromise = this.play();\n                promise.silencePromise(playPromise.then(() => this.doReset_()));\n            }\n        }\n        doReset_() {\n            if (this.tech_) {\n                this.tech_.clearTracks('text');\n            }\n            this.resetCache_();\n            this.poster('');\n            this.loadTech_(this.options_.techOrder[0], null);\n            this.techCall_('reset');\n            this.resetControlBarUI_();\n            if (evented.isEvented(this)) {\n                this.trigger('playerreset');\n            }\n        }\n        resetControlBarUI_() {\n            this.resetProgressBar_();\n            this.resetPlaybackRate_();\n            this.resetVolumeBar_();\n        }\n        resetProgressBar_() {\n            this.currentTime(0);\n            const {durationDisplay, remainingTimeDisplay} = this.controlBar;\n            if (durationDisplay) {\n                durationDisplay.updateContent();\n            }\n            if (remainingTimeDisplay) {\n                remainingTimeDisplay.updateContent();\n            }\n        }\n        resetPlaybackRate_() {\n            this.playbackRate(this.defaultPlaybackRate());\n            this.handleTechRateChange_();\n        }\n        resetVolumeBar_() {\n            this.volume(1);\n            this.trigger('volumechange');\n        }\n        currentSources() {\n            const source = this.currentSource();\n            const sources = [];\n            if (Object.keys(source).length !== 0) {\n                sources.push(source);\n            }\n            return this.cache_.sources || sources;\n        }\n        currentSource() {\n            return this.cache_.source || {};\n        }\n        currentSrc() {\n            return this.currentSource() && this.currentSource().src || '';\n        }\n        currentType() {\n            return this.currentSource() && this.currentSource().type || '';\n        }\n        preload(value) {\n            if (value !== undefined) {\n                this.techCall_('setPreload', value);\n                this.options_.preload = value;\n                return;\n            }\n            return this.techGet_('preload');\n        }\n        autoplay(value) {\n            if (value === undefined) {\n                return this.options_.autoplay || false;\n            }\n            let techAutoplay;\n            if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n                this.options_.autoplay = value;\n                this.manualAutoplay_(value);\n                techAutoplay = false;\n            } else if (!value) {\n                this.options_.autoplay = false;\n            } else {\n                this.options_.autoplay = true;\n            }\n            techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n            if (this.tech_) {\n                this.techCall_('setAutoplay', techAutoplay);\n            }\n        }\n        playsinline(value) {\n            if (value !== undefined) {\n                this.techCall_('setPlaysinline', value);\n                this.options_.playsinline = value;\n                return this;\n            }\n            return this.techGet_('playsinline');\n        }\n        loop(value) {\n            if (value !== undefined) {\n                this.techCall_('setLoop', value);\n                this.options_.loop = value;\n                return;\n            }\n            return this.techGet_('loop');\n        }\n        poster(src) {\n            if (src === undefined) {\n                return this.poster_;\n            }\n            if (!src) {\n                src = '';\n            }\n            if (src === this.poster_) {\n                return;\n            }\n            this.poster_ = src;\n            this.techCall_('setPoster', src);\n            this.isPosterFromTech_ = false;\n            this.trigger('posterchange');\n        }\n        handleTechPosterChange_() {\n            if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n                const newPoster = this.tech_.poster() || '';\n                if (newPoster !== this.poster_) {\n                    this.poster_ = newPoster;\n                    this.isPosterFromTech_ = true;\n                    this.trigger('posterchange');\n                }\n            }\n        }\n        controls(bool) {\n            if (bool === undefined) {\n                return !!this.controls_;\n            }\n            bool = !!bool;\n            if (this.controls_ === bool) {\n                return;\n            }\n            this.controls_ = bool;\n            if (this.usingNativeControls()) {\n                this.techCall_('setControls', bool);\n            }\n            if (this.controls_) {\n                this.removeClass('vjs-controls-disabled');\n                this.addClass('vjs-controls-enabled');\n                this.trigger('controlsenabled');\n                if (!this.usingNativeControls()) {\n                    this.addTechControlsListeners_();\n                }\n            } else {\n                this.removeClass('vjs-controls-enabled');\n                this.addClass('vjs-controls-disabled');\n                this.trigger('controlsdisabled');\n                if (!this.usingNativeControls()) {\n                    this.removeTechControlsListeners_();\n                }\n            }\n        }\n        usingNativeControls(bool) {\n            if (bool === undefined) {\n                return !!this.usingNativeControls_;\n            }\n            bool = !!bool;\n            if (this.usingNativeControls_ === bool) {\n                return;\n            }\n            this.usingNativeControls_ = bool;\n            if (this.usingNativeControls_) {\n                this.addClass('vjs-using-native-controls');\n                this.trigger('usingnativecontrols');\n            } else {\n                this.removeClass('vjs-using-native-controls');\n                this.trigger('usingcustomcontrols');\n            }\n        }\n        error(err) {\n            if (err === undefined) {\n                return this.error_ || null;\n            }\n            if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n                const triggerSuppressedError = function () {\n                    this.error(err);\n                };\n                this.options_.suppressNotSupportedError = false;\n                this.any([\n                    'click',\n                    'touchstart'\n                ], triggerSuppressedError);\n                this.one('loadstart', function () {\n                    this.off([\n                        'click',\n                        'touchstart'\n                    ], triggerSuppressedError);\n                });\n                return;\n            }\n            if (err === null) {\n                this.error_ = err;\n                this.removeClass('vjs-error');\n                if (this.errorDisplay) {\n                    this.errorDisplay.close();\n                }\n                return;\n            }\n            this.error_ = new MediaError(err);\n            this.addClass('vjs-error');\n            log.error(`(CODE:${ this.error_.code } ${ MediaError.errorTypes[this.error_.code] })`, this.error_.message, this.error_);\n            this.trigger('error');\n            return;\n        }\n        reportUserActivity(event) {\n            this.userActivity_ = true;\n        }\n        userActive(bool) {\n            if (bool === undefined) {\n                return this.userActive_;\n            }\n            bool = !!bool;\n            if (bool === this.userActive_) {\n                return;\n            }\n            this.userActive_ = bool;\n            if (this.userActive_) {\n                this.userActivity_ = true;\n                this.removeClass('vjs-user-inactive');\n                this.addClass('vjs-user-active');\n                this.trigger('useractive');\n                return;\n            }\n            if (this.tech_) {\n                this.tech_.one('mousemove', function (e) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                });\n            }\n            this.userActivity_ = false;\n            this.removeClass('vjs-user-active');\n            this.addClass('vjs-user-inactive');\n            this.trigger('userinactive');\n        }\n        listenForUserActivity_() {\n            let mouseInProgress;\n            let lastMoveX;\n            let lastMoveY;\n            const handleActivity = Fn.bind(this, this.reportUserActivity);\n            const handleMouseMove = function (e) {\n                if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n                    lastMoveX = e.screenX;\n                    lastMoveY = e.screenY;\n                    handleActivity();\n                }\n            };\n            const handleMouseDown = function () {\n                handleActivity();\n                this.clearInterval(mouseInProgress);\n                mouseInProgress = this.setInterval(handleActivity, 250);\n            };\n            const handleMouseUpAndMouseLeave = function (event) {\n                handleActivity();\n                this.clearInterval(mouseInProgress);\n            };\n            this.on('mousedown', handleMouseDown);\n            this.on('mousemove', handleMouseMove);\n            this.on('mouseup', handleMouseUpAndMouseLeave);\n            this.on('mouseleave', handleMouseUpAndMouseLeave);\n            const controlBar = this.getChild('controlBar');\n            if (controlBar && !browser.IS_IOS && !browser.IS_ANDROID) {\n                controlBar.on('mouseenter', function (event) {\n                    this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n                    this.player().options_.inactivityTimeout = 0;\n                });\n                controlBar.on('mouseleave', function (event) {\n                    this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n                });\n            }\n            this.on('keydown', handleActivity);\n            this.on('keyup', handleActivity);\n            let inactivityTimeout;\n            this.setInterval(function () {\n                if (!this.userActivity_) {\n                    return;\n                }\n                this.userActivity_ = false;\n                this.userActive(true);\n                this.clearTimeout(inactivityTimeout);\n                const timeout = this.options_.inactivityTimeout;\n                if (timeout <= 0) {\n                    return;\n                }\n                inactivityTimeout = this.setTimeout(function () {\n                    if (!this.userActivity_) {\n                        this.userActive(false);\n                    }\n                }, timeout);\n            }, 250);\n        }\n        playbackRate(rate) {\n            if (rate !== undefined) {\n                this.techCall_('setPlaybackRate', rate);\n                return;\n            }\n            if (this.tech_ && this.tech_.featuresPlaybackRate) {\n                return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n            }\n            return 1;\n        }\n        defaultPlaybackRate(rate) {\n            if (rate !== undefined) {\n                return this.techCall_('setDefaultPlaybackRate', rate);\n            }\n            if (this.tech_ && this.tech_.featuresPlaybackRate) {\n                return this.techGet_('defaultPlaybackRate');\n            }\n            return 1;\n        }\n        isAudio(bool) {\n            if (bool !== undefined) {\n                this.isAudio_ = !!bool;\n                return;\n            }\n            return !!this.isAudio_;\n        }\n        addTextTrack(kind, label, language) {\n            if (this.tech_) {\n                return this.tech_.addTextTrack(kind, label, language);\n            }\n        }\n        addRemoteTextTrack(options, manualCleanup) {\n            if (this.tech_) {\n                return this.tech_.addRemoteTextTrack(options, manualCleanup);\n            }\n        }\n        removeRemoteTextTrack(obj = {}) {\n            let {track} = obj;\n            if (!track) {\n                track = obj;\n            }\n            if (this.tech_) {\n                return this.tech_.removeRemoteTextTrack(track);\n            }\n        }\n        getVideoPlaybackQuality() {\n            return this.techGet_('getVideoPlaybackQuality');\n        }\n        videoWidth() {\n            return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n        }\n        videoHeight() {\n            return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n        }\n        language(code) {\n            if (code === undefined) {\n                return this.language_;\n            }\n            if (this.language_ !== String(code).toLowerCase()) {\n                this.language_ = String(code).toLowerCase();\n                if (evented.isEvented(this)) {\n                    this.trigger('languagechange');\n                }\n            }\n        }\n        languages() {\n            return mergeOptions(Player.prototype.options_.languages, this.languages_);\n        }\n        toJSON() {\n            const options = mergeOptions(this.options_);\n            const tracks = options.tracks;\n            options.tracks = [];\n            for (let i = 0; i < tracks.length; i++) {\n                let track = tracks[i];\n                track = mergeOptions(track);\n                track.player = undefined;\n                options.tracks[i] = track;\n            }\n            return options;\n        }\n        createModal(content, options) {\n            options = options || {};\n            options.content = content || '';\n            const modal = new ModalDialog(this, options);\n            this.addChild(modal);\n            modal.on('dispose', () => {\n                this.removeChild(modal);\n            });\n            modal.open();\n            return modal;\n        }\n        updateCurrentBreakpoint_() {\n            if (!this.responsive()) {\n                return;\n            }\n            const currentBreakpoint = this.currentBreakpoint();\n            const currentWidth = this.currentWidth();\n            for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n                const candidateBreakpoint = BREAKPOINT_ORDER[i];\n                const maxWidth = this.breakpoints_[candidateBreakpoint];\n                if (currentWidth <= maxWidth) {\n                    if (currentBreakpoint === candidateBreakpoint) {\n                        return;\n                    }\n                    if (currentBreakpoint) {\n                        this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n                    }\n                    this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n                    this.breakpoint_ = candidateBreakpoint;\n                    break;\n                }\n            }\n        }\n        removeCurrentBreakpoint_() {\n            const className = this.currentBreakpointClass();\n            this.breakpoint_ = '';\n            if (className) {\n                this.removeClass(className);\n            }\n        }\n        breakpoints(breakpoints) {\n            if (breakpoints === undefined) {\n                return obj.assign(this.breakpoints_);\n            }\n            this.breakpoint_ = '';\n            this.breakpoints_ = obj.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n            this.updateCurrentBreakpoint_();\n            return obj.assign(this.breakpoints_);\n        }\n        responsive(value) {\n            if (value === undefined) {\n                return this.responsive_;\n            }\n            value = Boolean(value);\n            const current = this.responsive_;\n            if (value === current) {\n                return;\n            }\n            this.responsive_ = value;\n            if (value) {\n                this.on('playerresize', this.updateCurrentBreakpoint_);\n                this.updateCurrentBreakpoint_();\n            } else {\n                this.off('playerresize', this.updateCurrentBreakpoint_);\n                this.removeCurrentBreakpoint_();\n            }\n            return value;\n        }\n        currentBreakpoint() {\n            return this.breakpoint_;\n        }\n        currentBreakpointClass() {\n            return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n        }\n        loadMedia(media, ready) {\n            if (!media || typeof media !== 'object') {\n                return;\n            }\n            this.reset();\n            this.cache_.media = mergeOptions(media);\n            const {artwork, poster, src, textTracks} = this.cache_.media;\n            if (!artwork && poster) {\n                this.cache_.media.artwork = [{\n                        src: poster,\n                        type: mimetypes.getMimetype(poster)\n                    }];\n            }\n            if (src) {\n                this.src(src);\n            }\n            if (poster) {\n                this.poster(poster);\n            }\n            if (Array.isArray(textTracks)) {\n                textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n            }\n            this.ready(ready);\n        }\n        getMedia() {\n            if (!this.cache_.media) {\n                const poster = this.poster();\n                const src = this.currentSources();\n                const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n                    kind: tt.kind,\n                    label: tt.label,\n                    language: tt.language,\n                    src: tt.src\n                }));\n                const media = {\n                    src,\n                    textTracks\n                };\n                if (poster) {\n                    media.poster = poster;\n                    media.artwork = [{\n                            src: media.poster,\n                            type: mimetypes.getMimetype(media.poster)\n                        }];\n                }\n                return media;\n            }\n            return mergeOptions(this.cache_.media);\n        }\n        static getTagSettings(tag) {\n            const baseOptions = {\n                sources: [],\n                tracks: []\n            };\n            const tagOptions = Dom.getAttributes(tag);\n            const dataSetup = tagOptions['data-setup'];\n            if (Dom.hasClass(tag, 'vjs-fill')) {\n                tagOptions.fill = true;\n            }\n            if (Dom.hasClass(tag, 'vjs-fluid')) {\n                tagOptions.fluid = true;\n            }\n            if (dataSetup !== null) {\n                const [err, data] = safeParseTuple(dataSetup || '{}');\n                if (err) {\n                    log.error(err);\n                }\n                obj.assign(tagOptions, data);\n            }\n            obj.assign(baseOptions, tagOptions);\n            if (tag.hasChildNodes()) {\n                const children = tag.childNodes;\n                for (let i = 0, j = children.length; i < j; i++) {\n                    const child = children[i];\n                    const childName = child.nodeName.toLowerCase();\n                    if (childName === 'source') {\n                        baseOptions.sources.push(Dom.getAttributes(child));\n                    } else if (childName === 'track') {\n                        baseOptions.tracks.push(Dom.getAttributes(child));\n                    }\n                }\n            }\n            return baseOptions;\n        }\n        flexNotSupported_() {\n            const elem = document.createElement('i');\n            return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || 'msFlexOrder' in elem.style);\n        }\n        debug(enabled) {\n            if (enabled === undefined) {\n                return this.debugEnabled_;\n            }\n            if (enabled) {\n                this.trigger('debugon');\n                this.previousLogLevel_ = this.log.level;\n                this.log.level('debug');\n                this.debugEnabled_ = true;\n            } else {\n                this.trigger('debugoff');\n                this.log.level(this.previousLogLevel_);\n                this.previousLogLevel_ = undefined;\n                this.debugEnabled_ = false;\n            }\n        }\n    }\n    TRACK_TYPES.names.forEach(function (name) {\n        const props = TRACK_TYPES[name];\n        Player.prototype[props.getterName] = function () {\n            if (this.tech_) {\n                return this.tech_[props.getterName]();\n            }\n            this[props.privateName] = this[props.privateName] || new props.ListClass();\n            return this[props.privateName];\n        };\n    });\n    Player.prototype.crossorigin = Player.prototype.crossOrigin;\n    Player.players = {};\n    const navigator = window.navigator;\n    Player.prototype.options_ = {\n        techOrder: Tech.defaultTechOrder_,\n        html5: {},\n        inactivityTimeout: 2000,\n        playbackRates: [],\n        liveui: false,\n        children: [\n            'mediaLoader',\n            'posterImage',\n            'textTrackDisplay',\n            'loadingSpinner',\n            'bigPlayButton',\n            'liveTracker',\n            'controlBar',\n            'errorDisplay',\n            'textTrackSettings',\n            'resizeManager'\n        ],\n        language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n        languages: {},\n        notSupportedMessage: 'No compatible source was found for this media.',\n        fullscreen: { options: { navigationUI: 'hide' } },\n        breakpoints: {},\n        responsive: false\n    };\n    [\n        'ended',\n        'seeking',\n        'seekable',\n        'networkState',\n        'readyState'\n    ].forEach(function (fn) {\n        Player.prototype[fn] = function () {\n            return this.techGet_(fn);\n        };\n    });\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n        Player.prototype[`handleTech${ stringCases.toTitleCase(event) }_`] = function () {\n            return this.trigger(event);\n        };\n    });\n    Component.registerComponent('Player', Player);\n    return Player;\n});\ndefine('skylark-videojs/plugin',[\n    './mixins/evented',\n    './mixins/stateful',\n    './utils/events',\n    './utils/fn',\n    './utils/log',\n    './player'\n], function (evented, stateful, Events, Fn, log, Player) {\n    'use strict';\n    const BASE_PLUGIN_NAME = 'plugin';\n    const PLUGIN_CACHE_KEY = 'activePlugins_';\n    const pluginStorage = {};\n    const pluginExists = name => pluginStorage.hasOwnProperty(name);\n    const getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n    const markPluginAsActive = (player, name) => {\n        player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n        player[PLUGIN_CACHE_KEY][name] = true;\n    };\n    const triggerSetupEvent = (player, hash, before) => {\n        const eventName = (before ? 'before' : '') + 'pluginsetup';\n        player.trigger(eventName, hash);\n        player.trigger(eventName + ':' + hash.name, hash);\n    };\n    const createBasicPlugin = function (name, plugin) {\n        const basicPluginWrapper = function () {\n            triggerSetupEvent(this, {\n                name,\n                plugin,\n                instance: null\n            }, true);\n            const instance = plugin.apply(this, arguments);\n            markPluginAsActive(this, name);\n            triggerSetupEvent(this, {\n                name,\n                plugin,\n                instance\n            });\n            return instance;\n        };\n        Object.keys(plugin).forEach(function (prop) {\n            basicPluginWrapper[prop] = plugin[prop];\n        });\n        return basicPluginWrapper;\n    };\n    const createPluginFactory = (name, PluginSubClass) => {\n        PluginSubClass.prototype.name = name;\n        return function (...args) {\n            triggerSetupEvent(this, {\n                name,\n                plugin: PluginSubClass,\n                instance: null\n            }, true);\n            const instance = new PluginSubClass(...[\n                this,\n                ...args\n            ]);\n            this[name] = () => instance;\n            triggerSetupEvent(this, instance.getEventHash());\n            return instance;\n        };\n    };\n    class Plugin {\n        constructor(player) {\n            if (this.constructor === Plugin) {\n                throw new Error('Plugin must be sub-classed; not directly instantiated.');\n            }\n            this.player = player;\n            if (!this.log) {\n                this.log = this.player.log.createLogger(this.name);\n            }\n            evented(this);\n            delete this.trigger;\n            stateful(this, this.constructor.defaultState);\n            markPluginAsActive(player, this.name);\n            this.dispose = Fn.bind(this, this.dispose);\n            player.on('dispose', this.dispose);\n        }\n        version() {\n            return this.constructor.VERSION;\n        }\n        getEventHash(hash = {}) {\n            hash.name = this.name;\n            hash.plugin = this.constructor;\n            hash.instance = this;\n            return hash;\n        }\n        trigger(event, hash = {}) {\n            return Events.trigger(this.eventBusEl_, event, this.getEventHash(hash));\n        }\n        handleStateChanged(e) {\n        }\n        dispose() {\n            const {name, player} = this;\n            this.trigger('dispose');\n            this.off();\n            player.off('dispose', this.dispose);\n            player[PLUGIN_CACHE_KEY][name] = false;\n            this.player = this.state = null;\n            player[name] = createPluginFactory(name, pluginStorage[name]);\n        }\n        static isBasic(plugin) {\n            const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n            return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n        }\n        static registerPlugin(name, plugin) {\n            if (typeof name !== 'string') {\n                throw new Error(`Illegal plugin name, \"${ name }\", must be a string, was ${ typeof name }.`);\n            }\n            if (pluginExists(name)) {\n                log.warn(`A plugin named \"${ name }\" already exists. You may want to avoid re-registering plugins!`);\n            } else if (Player.prototype.hasOwnProperty(name)) {\n                throw new Error(`Illegal plugin name, \"${ name }\", cannot share a name with an existing player method!`);\n            }\n            if (typeof plugin !== 'function') {\n                throw new Error(`Illegal plugin for \"${ name }\", must be a function, was ${ typeof plugin }.`);\n            }\n            pluginStorage[name] = plugin;\n            if (name !== BASE_PLUGIN_NAME) {\n                if (Plugin.isBasic(plugin)) {\n                    Player.prototype[name] = createBasicPlugin(name, plugin);\n                } else {\n                    Player.prototype[name] = createPluginFactory(name, plugin);\n                }\n            }\n            return plugin;\n        }\n        static deregisterPlugin(name) {\n            if (name === BASE_PLUGIN_NAME) {\n                throw new Error('Cannot de-register base plugin.');\n            }\n            if (pluginExists(name)) {\n                delete pluginStorage[name];\n                delete Player.prototype[name];\n            }\n        }\n        static getPlugins(names = Object.keys(pluginStorage)) {\n            let result;\n            names.forEach(name => {\n                const plugin = getPlugin(name);\n                if (plugin) {\n                    result = result || {};\n                    result[name] = plugin;\n                }\n            });\n            return result;\n        }\n        static getPluginVersion(name) {\n            const plugin = getPlugin(name);\n            return plugin && plugin.VERSION || '';\n        }\n    }\n    Plugin.getPlugin = getPlugin;\n    Plugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n    Plugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n    Player.prototype.usingPlugin = function (name) {\n        return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n    };\n    Player.prototype.hasPlugin = function (name) {\n        return !!pluginExists(name);\n    };\n    return Plugin;\n});\ndefine('skylark-videojs/utils/inherits',[],function(){\r\n  function _inherits(subClass, superClass) {\r\n    if (typeof superClass !== \"function\" && superClass !== null) {\r\n      throw new TypeError(\"Super expression must either be null or a function\");\r\n    }\r\n\r\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n      constructor: {\r\n        value: subClass,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n    if (superClass) Object.setPrototypeOf(subClass, superClass);\r\n  }\r\n\r\n  return _inherits;\r\n});\r\n\ndefine('skylark-videojs/extend',[\n    './utils/inherits'\n], function (_inherits) {\n    'use strict';\n    const extend = function (superClass, subClassMethods = {}) {\n        let subClass = function () {\n            superClass.apply(this, arguments);\n        };\n        let methods = {};\n        if (typeof subClassMethods === 'object') {\n            if (subClassMethods.constructor !== Object.prototype.constructor) {\n                subClass = subClassMethods.constructor;\n            }\n            methods = subClassMethods;\n        } else if (typeof subClassMethods === 'function') {\n            subClass = subClassMethods;\n        }\n        _inherits(subClass, superClass);\n        if (superClass) {\n            subClass.super_ = superClass;\n        }\n        for (const name in methods) {\n            if (methods.hasOwnProperty(name)) {\n                subClass.prototype[name] = methods[name];\n            }\n        }\n        return subClass;\n    };\n    return extend;\n});\ndefine('skylark-videojs/video',[\n    \"skylark-langx-globals/window\",\n    'skylark-net-http/xhr',\n    './setup',\n    './utils/stylesheet',\n    './component',\n    './event-target',\n    './utils/events',\n    './player',\n    './plugin',\n    './utils/merge-options',\n    './utils/fn',\n    './tracks/text-track',\n    './tracks/audio-track',\n    './tracks/video-track',\n    './utils/time-ranges',\n    './utils/format-time',\n    './utils/log',\n    './utils/dom',\n    './utils/browser',\n    './utils/url',\n    './utils/obj',\n    './utils/computed-style',\n    './extend',\n    './tech/tech',\n    './tech/middleware',\n    './utils/define-lazy-property'\n], function (\n    window,\n    xhr,\n    setup, \n    stylesheet, \n    Component, \n    EventTarget, \n    Events, \n    Player, \n    Plugin, \n    mergeOptions, \n    Fn, \n    TextTrack, \n    AudioTrack, \n    VideoTrack, \n    timeRanges, \n    formatTime, \n    log, \n    Dom, \n    browser, \n    Url, \n    obj, \n    computedStyle, \n    extend, \n    Tech, \n    middleware, \n    defineLazyProperty\n) {\n    'use strict';\n\n    var middlewareUse = middleware.use,\n        TERMINATOR = middleware.TERMINATOR;\n\n\n    const normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n    function videojs(id, options, ready) {\n        let player = videojs.getPlayer(id);\n        if (player) {\n            if (options) {\n                log.warn(`Player \"${ id }\" is already initialised. Options will not be applied.`);\n            }\n            if (ready) {\n                player.ready(ready);\n            }\n            return player;\n        }\n        const el = typeof id === 'string' ? Dom.$('#' + normalizeId(id)) : id;\n        if (!Dom.isEl(el)) {\n            throw new TypeError('The element or ID supplied is not valid. (videojs)');\n        }\n        if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n            log.warn('The element supplied is not included in the DOM');\n        }\n        options = options || {};\n        videojs.hooks('beforesetup').forEach(hookFunction => {\n            const opts = hookFunction(el, mergeOptions(options));\n            if (!obj.isObject(opts) || Array.isArray(opts)) {\n                log.error('please return an object in beforesetup hooks');\n                return;\n            }\n            options = mergeOptions(options, opts);\n        });\n        const PlayerComponent = Component.getComponent('Player');\n        player = new PlayerComponent(el, options, ready);\n        videojs.hooks('setup').forEach(hookFunction => hookFunction(player));\n        return player;\n    }\n    videojs.hooks_ = {};\n    videojs.hooks = function (type, fn) {\n        videojs.hooks_[type] = videojs.hooks_[type] || [];\n        if (fn) {\n            videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n        }\n        return videojs.hooks_[type];\n    };\n    videojs.hook = function (type, fn) {\n        videojs.hooks(type, fn);\n    };\n    videojs.hookOnce = function (type, fn) {\n        videojs.hooks(type, [].concat(fn).map(original => {\n            const wrapper = (...args) => {\n                videojs.removeHook(type, wrapper);\n                return original(...args);\n            };\n            return wrapper;\n        }));\n    };\n    videojs.removeHook = function (type, fn) {\n        const index = videojs.hooks(type).indexOf(fn);\n        if (index <= -1) {\n            return false;\n        }\n        videojs.hooks_[type] = videojs.hooks_[type].slice();\n        videojs.hooks_[type].splice(index, 1);\n        return true;\n    };\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && Dom.isReal()) {\n        let style = Dom.$('.vjs-styles-defaults');\n        if (!style) {\n            style = stylesheet.createStyleElement('vjs-styles-defaults');\n            const head = Dom.$('head');\n            if (head) {\n                head.insertBefore(style, head.firstChild);\n            }\n            stylesheet.setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid {\n        padding-top: 56.25%\n      }\n    `);\n        }\n    }\n    setup.autoSetupTimeout(1, videojs);\n    videojs.VERSION = \"7.11.5\";\n    videojs.options = Player.prototype.options_;\n    videojs.getPlayers = () => Player.players;\n    videojs.getPlayer = id => {\n        const players = Player.players;\n        let tag;\n        if (typeof id === 'string') {\n            const nId = normalizeId(id);\n            const player = players[nId];\n            if (player) {\n                return player;\n            }\n            tag = Dom.$('#' + nId);\n        } else {\n            tag = id;\n        }\n        if (Dom.isEl(tag)) {\n            const {player, playerId} = tag;\n            if (player || players[playerId]) {\n                return player || players[playerId];\n            }\n        }\n    };\n    videojs.getAllPlayers = () => Object.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\n    videojs.players = Player.players;\n    videojs.getComponent = Component.getComponent;\n    videojs.registerComponent = (name, comp) => {\n        if (Tech.isTech(comp)) {\n            log.warn(`The ${ name } tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n        }\n        Component.registerComponent.call(Component, name, comp);\n    };\n    videojs.getTech = Tech.getTech;\n    videojs.registerTech = Tech.registerTech;\n    videojs.use = middlewareUse;\n    Object.defineProperty(videojs, 'middleware', {\n        value: {},\n        writeable: false,\n        enumerable: true\n    });\n    Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n        value: TERMINATOR,\n        writeable: false,\n        enumerable: true\n    });\n    videojs.browser = browser;\n    videojs.TOUCH_ENABLED = browser.TOUCH_ENABLED;\n    videojs.extend = extend;\n    videojs.mergeOptions = mergeOptions;\n    videojs.bind = Fn.bind;\n    videojs.registerPlugin = Plugin.registerPlugin;\n    videojs.deregisterPlugin = Plugin.deregisterPlugin;\n    videojs.plugin = (name, plugin) => {\n        log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n        return Plugin.registerPlugin(name, plugin);\n    };\n    videojs.getPlugins = Plugin.getPlugins;\n    videojs.getPlugin = Plugin.getPlugin;\n    videojs.getPluginVersion = Plugin.getPluginVersion;\n    videojs.addLanguage = function (code, data) {\n        code = ('' + code).toLowerCase();\n        videojs.options.languages = mergeOptions(videojs.options.languages, { [code]: data });\n        return videojs.options.languages[code];\n    };\n    videojs.log = log;\n    videojs.createLogger = log.createLogger;\n    videojs.createTimeRange = videojs.undefined = timeRanges.createTimeRanges;\n    videojs.formatTime = formatTime;\n    videojs.setFormatTime = formatTime.setFormatTime;\n    videojs.resetFormatTime = formatTime.resetFormatTime;\n    videojs.parseUrl = Url.parseUrl;\n    videojs.isCrossOrigin = Url.isCrossOrigin;\n    videojs.EventTarget = EventTarget;\n    videojs.on = Events.on;\n    videojs.one = Events.one;\n    videojs.off = Events.off;\n    videojs.trigger = Events.trigger;\n    videojs.xhr = xhr;\n    videojs.TextTrack = TextTrack;\n    videojs.AudioTrack = AudioTrack;\n    videojs.VideoTrack = VideoTrack;\n    [\n        'isEl',\n        'isTextNode',\n        'createEl',\n        'hasClass',\n        'addClass',\n        'removeClass',\n        'toggleClass',\n        'setAttributes',\n        'getAttributes',\n        'emptyEl',\n        'appendContent',\n        'insertContent'\n    ].forEach(k => {\n        videojs[k] = function () {\n            log.warn(`videojs.${ k }() is deprecated; use videojs.dom.${ k }() instead`);\n            return Dom[k].apply(null, arguments);\n        };\n    });\n    videojs.computedStyle = computedStyle;\n    videojs.dom = Dom;\n    videojs.url = Url;\n    videojs.defineLazyProperty = defineLazyProperty;\n    return videojs;\n});\ndefine('skylark-videojs/main',[\n\t'skylark-langx/skylark',\n    './video'\n//    '@videojs/http-streaming'\n], function (skylark,videojs) {\n    'use strict';\n\n    return skylark.attach(\"intg.videojs\",videojs);\n});\ndefine('skylark-videojs', ['skylark-videojs/main'], function (main) { return main; });\n\n"]}