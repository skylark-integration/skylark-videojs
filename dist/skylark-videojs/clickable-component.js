/**
 * skylark-videojs - A version of video.js that ported to running on skylarkjs.
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(["./component","./utils/dom","./utils/log","./utils/obj","./utils/keycode"],function(t,e,s,i,n){"use strict";class l extends t{constructor(t,e){super(t,e),this.emitTapEvents(),this.enable()}createEl(t="div",e={},n={}){e=i.assign({innerHTML:'<span aria-hidden="true" class="vjs-icon-placeholder"></span>',className:this.buildCSSClass(),tabIndex:0},e),"button"===t&&s.error(`Creating a ClickableComponent with an HTML element of ${t} is not supported; use a Button instead.`),n=i.assign({role:"button"},n),this.tabIndex_=e.tabIndex;const l=super.createEl(t,e,n);return this.createControlTextEl(l),l}dispose(){this.controlTextEl_=null,super.dispose()}createControlTextEl(t){return this.controlTextEl_=e.createEl("span",{className:"vjs-control-text"},{"aria-live":"polite"}),t&&t.appendChild(this.controlTextEl_),this.controlText(this.controlText_,t),this.controlTextEl_}controlText(t,s=this.el()){if(void 0===t)return this.controlText_||"Need Text";const i=this.localize(t);this.controlText_=t,e.textContent(this.controlTextEl_,i),this.nonIconControl||s.setAttribute("title",i)}buildCSSClass(){return`vjs-control vjs-button ${super.buildCSSClass()}`}enable(){this.enabled_||(this.enabled_=!0,this.removeClass("vjs-disabled"),this.el_.setAttribute("aria-disabled","false"),void 0!==this.tabIndex_&&this.el_.setAttribute("tabIndex",this.tabIndex_),this.listenTo(["tap","click"],this.handleClick),this.listenTo("keydown",this.handleKeyDown))}disable(){this.enabled_=!1,this.addClass("vjs-disabled"),this.el_.setAttribute("aria-disabled","true"),void 0!==this.tabIndex_&&this.el_.removeAttribute("tabIndex"),this.unlistenTo("mouseover",this.handleMouseOver),this.unlistenTo("mouseout",this.handleMouseOut),this.unlistenTo(["tap","click"],this.handleClick),this.unlistenTo("keydown",this.handleKeyDown)}handleLanguagechange(){this.controlText(this.controlText_)}handleClick(t){this.options_.clickHandler&&this.options_.clickHandler.call(this,arguments)}handleKeyDown(t){n.isEventKey(t,"Space")||n.isEventKey(t,"Enter")?(t.preventDefault(),t.stopPropagation(),this.trigger("click")):super.handleKeyDown(t)}}return t.registerComponent("ClickableComponent",l),l});
//# sourceMappingURL=sourcemaps/clickable-component.js.map
