{"version":3,"sources":["control-bar/progress-control/seek-bar.js"],"names":["define","document","Slider","Component","browser","Dom","Fn","formatTime","promise","keycode","STEP_SECONDS","PAGE_KEY_MULTIPLIER","SeekBar","[object Object]","player","options","super","this","setEventHandlers_","update_","bind","update","throttle","UPDATE_REFRESH_INTERVAL","listenTo","player_","liveTracker","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","e","hidden","setInterval","isLive","type","clearInterval","createEl","className","aria-label","localize","event","percent","requestNamedAnimationFrame","currentTime","ended","duration","getCurrentTime_","liveCurrentTime","percent_","el_","setAttribute","toFixed","currentTime_","duration_","bar","getBoundingClientRect","el","getProgress","scrubbing","getCache","seekableStart","liveWindow","atLiveEdge","isSingleLeftClick","stopPropagation","videoWasPlaying","paused","pause","handleMouseDown","newTime","distance","calculateDistance","seekToLiveEdge","seekableEnd","Infinity","enable","mouseTimeDisplay","getChild","show","disable","hide","handleMouseUp","trigger","target","manuallyTriggered","silencePromise","play","isEventKey","preventDefault","handleAction","test","gotoFraction","codes","handleKeyDown","thisunlistenTo","unlistenTo","dispose","prototype","options_","children","barName","IS_IOS","IS_ANDROID","splice","registerComponent"],"mappings":"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","file":"../../../control-bar/progress-control/seek-bar.js","sourcesContent":["define([\n    'skylark-langx-globals/document',\n    '../../slider/slider',\n    '../../component',\n    '../../utils/browser',\n    '../../utils/dom',\n    '../../utils/fn',\n    '../../utils/format-time',\n    '../../utils/promise',\n    '../../utils/keycode',\n    './load-progress-bar',\n    './play-progress-bar',\n    './mouse-time-display'\n], function (document,Slider, Component, browser, Dom, Fn, formatTime, promise, keycode) {\n    'use strict';\n    const STEP_SECONDS = 5;\n    const PAGE_KEY_MULTIPLIER = 12;\n    class SeekBar extends Slider {\n        constructor(player, options) {\n            super(player, options);\n            this.setEventHandlers_();\n        }\n        setEventHandlers_() {\n            this.update_ = Fn.bind(this, this.update);\n            this.update = Fn.throttle(this.update_, Fn.UPDATE_REFRESH_INTERVAL);\n            this.listenTo(this.player_, [\n                'ended',\n                'durationchange',\n                'timeupdate'\n            ], this.update);\n            if (this.player_.liveTracker) {\n                this.listenTo(this.player_.liveTracker, 'liveedgechange', this.update);\n            }\n            this.updateInterval = null;\n            this.listenTo(this.player_, ['playing'], this.enableInterval_);\n            this.listenTo(this.player_, [\n                'ended',\n                'pause',\n                'waiting'\n            ], this.disableInterval_);\n            if ('hidden' in document && 'visibilityState' in document) {\n                this.listenTo(document, 'visibilitychange', this.toggleVisibility_);\n            }\n        }\n        toggleVisibility_(e) {\n            if (document.hidden) {\n                this.disableInterval_(e);\n            } else {\n                this.enableInterval_();\n                this.update();\n            }\n        }\n        enableInterval_() {\n            if (this.updateInterval) {\n                return;\n            }\n            this.updateInterval = this.setInterval(this.update, Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        disableInterval_(e) {\n            if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n                return;\n            }\n            if (!this.updateInterval) {\n                return;\n            }\n            this.clearInterval(this.updateInterval);\n            this.updateInterval = null;\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-progress-holder' }, { 'aria-label': this.localize('Progress Bar') });\n        }\n        update(event) {\n            const percent = super.update();\n            this.requestNamedAnimationFrame('SeekBar#update', () => {\n                const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n                const liveTracker = this.player_.liveTracker;\n                let duration = this.player_.duration();\n                if (liveTracker && liveTracker.isLive()) {\n                    duration = this.player_.liveTracker.liveCurrentTime();\n                }\n                if (this.percent_ !== percent) {\n                    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n                    this.percent_ = percent;\n                }\n                if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n                    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [\n                        formatTime(currentTime, duration),\n                        formatTime(duration, duration)\n                    ], '{1} of {2}'));\n                    this.currentTime_ = currentTime;\n                    this.duration_ = duration;\n                }\n                if (this.bar) {\n                    this.bar.update(Dom.getBoundingClientRect(this.el()), this.getProgress());\n                }\n            });\n            return percent;\n        }\n        getCurrentTime_() {\n            return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n        }\n        getPercent() {\n            const currentTime = this.getCurrentTime_();\n            let percent;\n            const liveTracker = this.player_.liveTracker;\n            if (liveTracker && liveTracker.isLive()) {\n                percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n                if (liveTracker.atLiveEdge()) {\n                    percent = 1;\n                }\n            } else {\n                percent = currentTime / this.player_.duration();\n            }\n            return percent;\n        }\n        handleMouseDown(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            event.stopPropagation();\n            this.player_.scrubbing(true);\n            this.videoWasPlaying = !this.player_.paused();\n            this.player_.pause();\n            super.handleMouseDown(event);\n        }\n        handleMouseMove(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            let newTime;\n            const distance = this.calculateDistance(event);\n            const liveTracker = this.player_.liveTracker;\n            if (!liveTracker || !liveTracker.isLive()) {\n                newTime = distance * this.player_.duration();\n                if (newTime === this.player_.duration()) {\n                    newTime = newTime - 0.1;\n                }\n            } else {\n                if (distance >= 0.99) {\n                    liveTracker.seekToLiveEdge();\n                    return;\n                }\n                const seekableStart = liveTracker.seekableStart();\n                const seekableEnd = liveTracker.liveCurrentTime();\n                newTime = seekableStart + distance * liveTracker.liveWindow();\n                if (newTime >= seekableEnd) {\n                    newTime = seekableEnd;\n                }\n                if (newTime <= seekableStart) {\n                    newTime = seekableStart + 0.1;\n                }\n                if (newTime === Infinity) {\n                    return;\n                }\n            }\n            this.player_.currentTime(newTime);\n        }\n        enable() {\n            super.enable();\n            const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n            if (!mouseTimeDisplay) {\n                return;\n            }\n            mouseTimeDisplay.show();\n        }\n        disable() {\n            super.disable();\n            const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n            if (!mouseTimeDisplay) {\n                return;\n            }\n            mouseTimeDisplay.hide();\n        }\n        handleMouseUp(event) {\n            super.handleMouseUp(event);\n            if (event) {\n                event.stopPropagation();\n            }\n            this.player_.scrubbing(false);\n            this.player_.trigger({\n                type: 'timeupdate',\n                target: this,\n                manuallyTriggered: true\n            });\n            if (this.videoWasPlaying) {\n                promise.silencePromise(this.player_.play());\n            } else {\n                this.update_();\n            }\n        }\n        stepForward() {\n            this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n        }\n        stepBack() {\n            this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n        }\n        handleAction(event) {\n            if (this.player_.paused()) {\n                this.player_.play();\n            } else {\n                this.player_.pause();\n            }\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.handleAction(event);\n            } else if (keycode.isEventKey(event, 'Home')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(0);\n            } else if (keycode.isEventKey(event, 'End')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(this.player_.duration());\n            } else if (/^[0-9]$/.test(keycode(event))) {\n                event.preventDefault();\n                event.stopPropagation();\n                const gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10 / 100;\n                this.player_.currentTime(this.player_.duration() * gotoFraction);\n            } else if (keycode.isEventKey(event, 'PgDn')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n            } else if (keycode.isEventKey(event, 'PgUp')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n        dispose() {\n            this.disableInterval_();\n            thisunlistenTo(this.player_, [\n                'ended',\n                'durationchange',\n                'timeupdate'\n            ], this.update);\n            if (this.player_.liveTracker) {\n                this.listenTo(this.player_.liveTracker, 'liveedgechange', this.update);\n            }\n            this.unlistenTo(this.player_, ['playing'], this.enableInterval_);\n            this.unlistenTo(this.player_, [\n                'ended',\n                'pause',\n                'waiting'\n            ], this.disableInterval_);\n            if ('hidden' in document && 'visibilityState' in document) {\n                this.unlistenTo(document, 'visibilitychange', this.toggleVisibility_);\n            }\n            super.dispose();\n        }\n    }\n    SeekBar.prototype.options_ = {\n        children: [\n            'loadProgressBar',\n            'playProgressBar'\n        ],\n        barName: 'playProgressBar'\n    };\n    if (!browser.IS_IOS && !browser.IS_ANDROID) {\n        SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n    }\n    Component.registerComponent('SeekBar', SeekBar);\n    return SeekBar;\n});"]}