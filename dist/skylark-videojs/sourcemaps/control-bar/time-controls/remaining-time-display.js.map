{"version":3,"sources":["control-bar/time-controls/remaining-time-display.js"],"names":["define","TimeDisplay","Component","Dom","RemainingTimeDisplay","[object Object]","player","options","super","this","listenTo","updateContent","el","createEl","insertBefore","aria-hidden","contentEl_","event","player_","duration","time","ended","remainingTimeDisplay","remainingTime","updateTextNode_","prototype","labelText_","controlText_","registerComponent"],"mappings":";;;;;;;AAAAA,QACI,iBACA,kBACA,mBACD,SAAUC,EAAaC,EAAWC,GACjC,mBACMC,UAA6BH,EAC/BI,YAAYC,EAAQC,GAChBC,MAAMF,EAAQC,GACdE,KAAKC,SAASJ,EAAQ,iBAAkBG,KAAKE,eAEjDN,gBACI,MAAO,qBAEXA,WACI,MAAMO,EAAKJ,MAAMK,WAEjB,OADAD,EAAGE,aAAaX,EAAIU,SAAS,WAAcE,eAAe,GAAQ,KAAMN,KAAKO,YACtEJ,EAEXP,cAAcY,GACV,GAAuC,iBAA5BR,KAAKS,QAAQC,WACpB,OAEJ,IAAIC,EAEAA,EADAX,KAAKS,QAAQG,QACN,EACAZ,KAAKS,QAAQI,qBACbb,KAAKS,QAAQI,uBAEbb,KAAKS,QAAQK,gBAExBd,KAAKe,gBAAgBJ,IAM7B,OAHAhB,EAAqBqB,UAAUC,WAAa,iBAC5CtB,EAAqBqB,UAAUE,aAAe,iBAC9CzB,EAAU0B,kBAAkB,uBAAwBxB,GAC7CA","file":"../../../control-bar/time-controls/remaining-time-display.js","sourcesContent":["define([\n    './time-display',\n    '../../component',\n    '../../utils/dom'\n], function (TimeDisplay, Component, Dom) {\n    'use strict';\n    class RemainingTimeDisplay extends TimeDisplay {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, 'durationchange', this.updateContent);\n        }\n        buildCSSClass() {\n            return 'vjs-remaining-time';\n        }\n        createEl() {\n            const el = super.createEl();\n            el.insertBefore(Dom.createEl('span', {}, { 'aria-hidden': true }, '-'), this.contentEl_);\n            return el;\n        }\n        updateContent(event) {\n            if (typeof this.player_.duration() !== 'number') {\n                return;\n            }\n            let time;\n            if (this.player_.ended()) {\n                time = 0;\n            } else if (this.player_.remainingTimeDisplay) {\n                time = this.player_.remainingTimeDisplay();\n            } else {\n                time = this.player_.remainingTime();\n            }\n            this.updateTextNode_(time);\n        }\n    }\n    RemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n    RemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n    Component.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n    return RemainingTimeDisplay;\n});"]}