{"version":3,"sources":["control-bar/text-track-controls/descriptions-button.js"],"names":["define","TextTrackButton","Component","Fn","DescriptionsButton","[object Object]","player","options","ready","super","tracks","textTracks","changeHandler","bind","this","handleTracksChange","addEventListener","listenTo","removeEventListener","event","disabled","i","l","length","track","kind","kind_","mode","disable","enable","buildCSSClass","buildWrapperCSSClass","prototype","controlText_","registerComponent"],"mappings":";;;;;;;AAAAA,QACI,sBACA,kBACA,kBACD,SAAUC,EAAiBC,EAAWC,GACrC,mBACMC,UAA2BH,EAC7BI,YAAYC,EAAQC,EAASC,GACzBC,MAAMH,EAAQC,EAASC,GACvB,MAAME,EAASJ,EAAOK,aAChBC,EAAgBT,EAAGU,KAAKC,KAAMA,KAAKC,oBACzCL,EAAOM,iBAAiB,SAAUJ,GAClCE,KAAKG,SAAS,UAAW,WACrBP,EAAOQ,oBAAoB,SAAUN,KAG7CP,mBAAmBc,GACf,MAAMT,EAASI,KAAKR,SAASK,aAC7B,IAAIS,GAAW,EACf,IAAK,IAAIC,EAAI,EAAGC,EAAIZ,EAAOa,OAAQF,EAAIC,EAAGD,IAAK,CAC3C,MAAMG,EAAQd,EAAOW,GACrB,GAAIG,EAAMC,OAASX,KAAKY,OAAwB,YAAfF,EAAMG,KAAoB,CACvDP,GAAW,EACX,OAGJA,EACAN,KAAKc,UAELd,KAAKe,SAGbxB,gBACI,iCAAmCI,MAAMqB,kBAE7CzB,uBACI,iCAAmCI,MAAMsB,0BAMjD,OAHA3B,EAAmB4B,UAAUN,MAAQ,eACrCtB,EAAmB4B,UAAUC,aAAe,eAC5C/B,EAAUgC,kBAAkB,qBAAsB9B,GAC3CA","file":"../../../control-bar/text-track-controls/descriptions-button.js","sourcesContent":["define([\n    './text-track-button',\n    '../../component',\n    '../../utils/fn'\n], function (TextTrackButton, Component, Fn) {\n    'use strict';\n    class DescriptionsButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n            const tracks = player.textTracks();\n            const changeHandler = Fn.bind(this, this.handleTracksChange);\n            tracks.addEventListener('change', changeHandler);\n            this.listenTo('dispose', function () {\n                tracks.removeEventListener('change', changeHandler);\n            });\n        }\n        handleTracksChange(event) {\n            const tracks = this.player().textTracks();\n            let disabled = false;\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                const track = tracks[i];\n                if (track.kind !== this.kind_ && track.mode === 'showing') {\n                    disabled = true;\n                    break;\n                }\n            }\n            if (disabled) {\n                this.disable();\n            } else {\n                this.enable();\n            }\n        }\n        buildCSSClass() {\n            return `vjs-descriptions-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-descriptions-button ${ super.buildWrapperCSSClass() }`;\n        }\n    }\n    DescriptionsButton.prototype.kind_ = 'descriptions';\n    DescriptionsButton.prototype.controlText_ = 'Descriptions';\n    Component.registerComponent('DescriptionsButton', DescriptionsButton);\n    return DescriptionsButton;\n});"]}