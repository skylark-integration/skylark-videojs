{"version":3,"sources":["control-bar/volume-control/volume-control.js"],"names":["define","Component","checkVolumeSupport","obj","Fn","VolumeControl","[object Object]","player","options","vertical","volumeBar","isPlain","super","this","throttledHandleMouseMove","throttle","bind","handleMouseMove","UPDATE_REFRESH_INTERVAL","listenTo","handleMouseDown","addClass","trigger","removeClass","orientationClass","options_","createEl","className","event","doc","el_","ownerDocument","handleMouseUp","unlistenTo","prototype","children","registerComponent"],"mappings":";;;;;;;AAAAA,QACI,kBACA,yBACA,kBACA,iBACA,gBACD,SAAUC,EAAWC,EAAoBC,EAAKC,GAC7C,mBACMC,UAAsBJ,EACxBK,YAAYC,EAAQC,MAChBA,EAAQC,SAAWD,EAAQC,WAAY,QACN,IAAtBD,EAAQE,WAA6BP,EAAIQ,QAAQH,EAAQE,cAChEF,EAAQE,UAAYF,EAAQE,cAC5BF,EAAQE,UAAUD,SAAWD,EAAQC,UAEzCG,MAAML,EAAQC,GACdN,EAAmBW,KAAMN,GACzBM,KAAKC,yBAA2BV,EAAGW,SAASX,EAAGY,KAAKH,KAAMA,KAAKI,iBAAkBb,EAAGc,yBACpFL,KAAKM,SAAS,YAAaN,KAAKO,iBAChCP,KAAKM,SAAS,aAAcN,KAAKO,iBACjCP,KAAKM,SAASN,KAAKH,WACf,QACA,gBACD,KACCG,KAAKH,UAAUW,SAAS,qBACxBR,KAAKQ,SAAS,qBACdR,KAAKS,QAAQ,kBAEjBT,KAAKM,SAASN,KAAKH,WACf,OACA,kBACD,KACCG,KAAKH,UAAUa,YAAY,qBAC3BV,KAAKU,YAAY,qBACjBV,KAAKS,QAAQ,oBAGrBhB,WACI,IAAIkB,EAAmB,wBAIvB,OAHIX,KAAKY,SAAShB,WACde,EAAmB,uBAEhBZ,MAAMc,SAAS,OAASC,4CAA8CH,MAEjFlB,gBAAgBsB,GACZ,MAAMC,EAAMhB,KAAKiB,IAAIC,cACrBlB,KAAKM,SAASU,EAAK,YAAahB,KAAKC,0BACrCD,KAAKM,SAASU,EAAK,YAAahB,KAAKC,0BACrCD,KAAKM,SAASU,EAAK,UAAWhB,KAAKmB,eACnCnB,KAAKM,SAASU,EAAK,WAAYhB,KAAKmB,eAExC1B,cAAcsB,GACV,MAAMC,EAAMhB,KAAKiB,IAAIC,cACrBlB,KAAKoB,WAAWJ,EAAK,YAAahB,KAAKC,0BACvCD,KAAKoB,WAAWJ,EAAK,YAAahB,KAAKC,0BACvCD,KAAKoB,WAAWJ,EAAK,UAAWhB,KAAKmB,eACrCnB,KAAKoB,WAAWJ,EAAK,WAAYhB,KAAKmB,eAE1C1B,gBAAgBsB,GACZf,KAAKH,UAAUO,gBAAgBW,IAKvC,OAFAvB,EAAc6B,UAAUT,UAAaU,UAAW,cAChDlC,EAAUmC,kBAAkB,gBAAiB/B,GACtCA","file":"../../../control-bar/volume-control/volume-control.js","sourcesContent":["define([\n    '../../component',\n    './check-volume-support',\n    '../../utils/obj',\n    '../../utils/fn',\n    './volume-bar'\n], function (Component, checkVolumeSupport, obj, Fn) {\n    'use strict';\n    class VolumeControl extends Component {\n        constructor(player, options = {}) {\n            options.vertical = options.vertical || false;\n            if (typeof options.volumeBar === 'undefined' || obj.isPlain(options.volumeBar)) {\n                options.volumeBar = options.volumeBar || {};\n                options.volumeBar.vertical = options.vertical;\n            }\n            super(player, options);\n            checkVolumeSupport(this, player);\n            this.throttledHandleMouseMove = Fn.throttle(Fn.bind(this, this.handleMouseMove), Fn.UPDATE_REFRESH_INTERVAL);\n            this.listenTo('mousedown', this.handleMouseDown);\n            this.listenTo('touchstart', this.handleMouseDown);\n            this.listenTo(this.volumeBar, [\n                'focus',\n                'slideractive'\n            ], () => {\n                this.volumeBar.addClass('vjs-slider-active');\n                this.addClass('vjs-slider-active');\n                this.trigger('slideractive');\n            });\n            this.listenTo(this.volumeBar, [\n                'blur',\n                'sliderinactive'\n            ], () => {\n                this.volumeBar.removeClass('vjs-slider-active');\n                this.removeClass('vjs-slider-active');\n                this.trigger('sliderinactive');\n            });\n        }\n        createEl() {\n            let orientationClass = 'vjs-volume-horizontal';\n            if (this.options_.vertical) {\n                orientationClass = 'vjs-volume-vertical';\n            }\n            return super.createEl('div', { className: `vjs-volume-control vjs-control ${ orientationClass }` });\n        }\n        handleMouseDown(event) {\n            const doc = this.el_.ownerDocument;\n            this.listenTo(doc, 'mousemove', this.throttledHandleMouseMove);\n            this.listenTo(doc, 'touchmove', this.throttledHandleMouseMove);\n            this.listenTo(doc, 'mouseup', this.handleMouseUp);\n            this.listenTo(doc, 'touchend', this.handleMouseUp);\n        }\n        handleMouseUp(event) {\n            const doc = this.el_.ownerDocument;\n            this.unlistenTo(doc, 'mousemove', this.throttledHandleMouseMove);\n            this.unlistenTo(doc, 'touchmove', this.throttledHandleMouseMove);\n            this.unlistenTo(doc, 'mouseup', this.handleMouseUp);\n            this.unlistenTo(doc, 'touchend', this.handleMouseUp);\n        }\n        handleMouseMove(event) {\n            this.volumeBar.handleMouseMove(event);\n        }\n    }\n    VolumeControl.prototype.options_ = { children: ['volumeBar'] };\n    Component.registerComponent('VolumeControl', VolumeControl);\n    return VolumeControl;\n});"]}