{"version":3,"sources":["control-bar/picture-in-picture-toggle.js"],"names":["define","document","Button","Component","PictureInPictureToggle","[object Object]","player","options","super","this","on","handlePictureInPictureChange","handlePictureInPictureEnabledChange","disable","buildCSSClass","pictureInPictureEnabled","player_","disablePictureInPicture","enable","event","isInPictureInPicture","controlText","exitPictureInPicture","requestPictureInPicture","prototype","controlText_","registerComponent"],"mappings":";;;;;;;AAAAA,QACI,iCACA,YACA,gBACD,SAAUC,EAASC,EAAQC,GAC1B,mBACMC,UAA+BF,EACjCG,YAAYC,EAAQC,GAChBC,MAAMF,EAAQC,GACdE,KAAKC,GAAGJ,GACJ,wBACA,yBACDG,KAAKE,8BACRF,KAAKC,GAAGJ,GACJ,iCACA,kBACDG,KAAKG,qCACRH,KAAKI,UAETR,gBACI,wCAA0CG,MAAMM,kBAEpDT,sCACQJ,EAASc,0BAAsE,IAA3CN,KAAKO,QAAQC,0BACjDR,KAAKS,SAELT,KAAKI,UAGbR,6BAA6Bc,GACrBV,KAAKO,QAAQI,uBACbX,KAAKY,YAAY,2BAEjBZ,KAAKY,YAAY,sBAErBZ,KAAKG,sCAETP,YAAYc,GACHV,KAAKO,QAAQI,uBAGdX,KAAKO,QAAQM,uBAFbb,KAAKO,QAAQO,2BAQzB,OAFAnB,EAAuBoB,UAAUC,aAAe,qBAChDtB,EAAUuB,kBAAkB,yBAA0BtB,GAC/CA","file":"../../control-bar/picture-in-picture-toggle.js","sourcesContent":["define([\n    'skylark-langx-globals/document',\n    '../button',\n    '../component'\n], function (document,Button, Component) {\n    'use strict';\n    class PictureInPictureToggle extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.on(player, [\n                'enterpictureinpicture',\n                'leavepictureinpicture'\n            ], this.handlePictureInPictureChange);\n            this.on(player, [\n                'disablepictureinpicturechanged',\n                'loadedmetadata'\n            ], this.handlePictureInPictureEnabledChange);\n            this.disable();\n        }\n        buildCSSClass() {\n            return `vjs-picture-in-picture-control ${ super.buildCSSClass() }`;\n        }\n        handlePictureInPictureEnabledChange() {\n            if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n                this.enable();\n            } else {\n                this.disable();\n            }\n        }\n        handlePictureInPictureChange(event) {\n            if (this.player_.isInPictureInPicture()) {\n                this.controlText('Exit Picture-in-Picture');\n            } else {\n                this.controlText('Picture-in-Picture');\n            }\n            this.handlePictureInPictureEnabledChange();\n        }\n        handleClick(event) {\n            if (!this.player_.isInPictureInPicture()) {\n                this.player_.requestPictureInPicture();\n            } else {\n                this.player_.exitPictureInPicture();\n            }\n        }\n    }\n    PictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\n    Component.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n    return PictureInPictureToggle;\n});"]}