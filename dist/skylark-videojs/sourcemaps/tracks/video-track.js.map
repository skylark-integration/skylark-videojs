{"version":3,"sources":["tracks/video-track.js"],"names":["define","TrackEnums","Track","merge","[object Object]","options","settings","kind","VideoTrackKind","super","selected","Object","defineProperty","this","get","newSelected","trigger"],"mappings":";;;;;;;AAAAA,QACI,gBACA,UACA,0BACD,SAAUC,EAAYC,EAAOC,GAC5B,aAuBA,qBAtByBD,EACrBE,YAAYC,MACR,MAAMC,EAAWH,EAAME,GAAWE,KAAMN,EAAWO,eAAeH,EAAQE,OAAS,KACnFE,MAAMH,GACN,IAAII,GAAW,EACfC,OAAOC,eAAeC,KAAM,YACxBC,IAAG,IACQJ,EAEXN,IAAIW,GAC2B,kBAAhBA,GAA6BA,IAAgBL,IAGxDA,EAAWK,EACXF,KAAKG,QAAQ,sBAGjBV,EAASI,WACTG,KAAKH,SAAWJ,EAASI","file":"../../tracks/video-track.js","sourcesContent":["define([\n    './track-enums',\n    './track',\n    '../utils/merge-options'\n], function (TrackEnums, Track, merge) {\n    'use strict';\n    class VideoTrack extends Track {\n        constructor(options = {}) {\n            const settings = merge(options, { kind: TrackEnums.VideoTrackKind[options.kind] || '' });\n            super(settings);\n            let selected = false;\n            Object.defineProperty(this, 'selected', {\n                get() {\n                    return selected;\n                },\n                set(newSelected) {\n                    if (typeof newSelected !== 'boolean' || newSelected === selected) {\n                        return;\n                    }\n                    selected = newSelected;\n                    this.trigger('selectedchange');\n                }\n            });\n            if (settings.selected) {\n                this.selected = settings.selected;\n            }\n        }\n    }\n    return VideoTrack;\n});"]}