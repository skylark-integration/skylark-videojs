{"version":3,"sources":["button.js"],"names":["define","ClickableComponent","Component","log","obj","keycode","Button","[object Object]","tag","props","attributes","assign","innerHTML","className","this","buildCSSClass","type","el","prototype","createEl","call","createControlTextEl","child","options","constructor","name","warn","addChild","super","enable","el_","removeAttribute","disable","setAttribute","event","isEventKey","stopPropagation","handleKeyDown","registerComponent"],"mappings":";;;;;;;AAAAA,QACI,wBACA,cACA,cACA,cACA,mBACD,SAAUC,EAAoBC,EAAWC,EAAKC,EAAKC,GAClD,mBACMC,UAAeL,EACjBM,SAASC,EAAKC,KAAYC,MAEtBD,EAAQL,EAAIO,QACRC,UAAW,gEACXC,UAAWC,KAAKC,iBACjBN,GACHC,EAAaN,EAAIO,QAASK,KAAM,UAAYN,GAC5C,MAAMO,EAAKf,EAAUgB,UAAUC,SAASC,KAAKN,KANvC,SAMkDL,EAAOC,GAE/D,OADAI,KAAKO,oBAAoBJ,GAClBA,EAEXV,SAASe,EAAOC,MACZ,MAAMV,EAAYC,KAAKU,YAAYC,KAEnC,OADAtB,EAAIuB,oEAAqEb,0DAClEX,EAAUgB,UAAUS,SAASP,KAAKN,KAAMQ,EAAOC,GAE1DhB,SACIqB,MAAMC,SACNf,KAAKgB,IAAIC,gBAAgB,YAE7BxB,UACIqB,MAAMI,UACNlB,KAAKgB,IAAIG,aAAa,WAAY,YAEtC1B,cAAc2B,GACN7B,EAAQ8B,WAAWD,EAAO,UAAY7B,EAAQ8B,WAAWD,EAAO,SAChEA,EAAME,kBAGVR,MAAMS,cAAcH,IAI5B,OADAhC,EAAUoC,kBAAkB,SAAUhC,GAC/BA","file":"../button.js","sourcesContent":["define([\n    './clickable-component',\n    './component',\n    './utils/log',\n    './utils/obj',\n    './utils/keycode'\n], function (ClickableComponent, Component, log, obj, keycode) {\n    'use strict';\n    class Button extends ClickableComponent {\n        createEl(tag, props = {}, attributes = {}) {\n            tag = 'button';\n            props = obj.assign({\n                innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n                className: this.buildCSSClass()\n            }, props);\n            attributes = obj.assign({ type: 'button' }, attributes);\n            const el = Component.prototype.createEl.call(this, tag, props, attributes);\n            this.createControlTextEl(el);\n            return el;\n        }\n        addChild(child, options = {}) {\n            const className = this.constructor.name;\n            log.warn(`Adding an actionable (user controllable) child to a Button (${ className }) is not supported; use a ClickableComponent instead.`);\n            return Component.prototype.addChild.call(this, child, options);\n        }\n        enable() {\n            super.enable();\n            this.el_.removeAttribute('disabled');\n        }\n        disable() {\n            super.disable();\n            this.el_.setAttribute('disabled', 'disabled');\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n                event.stopPropagation();\n                return;\n            }\n            super.handleKeyDown(event);\n        }\n    }\n    Component.registerComponent('Button', Button);\n    return Button;\n});"]}