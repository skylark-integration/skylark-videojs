{"version":3,"sources":["tech/html5.js"],"names":["define","document","Tech","Dom","Url","log","browser","obj","mergeOptions","stringCases","TRACK_TYPES","setupSourceset","defineLazyProperty","promise","NORMAL","REMOTE","Html5","[object Object]","options","ready","super","source","crossoriginTracks","this","el_","currentSrc","src","tag","initNetworkState_","setSource","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","childNodes","nodesLength","length","removeNodes","node","nodeName","toLowerCase","featuresNativeTextTracks","remoteTextTrackEls","addTrackElement_","remoteTextTracks","addTrack","track","textTracks","hasAttribute","isCrossOrigin","push","i","removeChild","proxyNativeTracks_","warn","restoreMetadataTracksInIOSNativePlayer_","TOUCH_ENABLED","IS_IPHONE","IS_NATIVE_ANDROID","nativeControlsForTouch","setControls","proxyWebkitFullscreen_","triggerReady","resetSourceset_","disposeMediaElement","options_","dispose","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","kind","storedMode","mode","addEventListener","on","removeEventListener","restoreTrackMode","storedTrack","type","override","lowerCaseType","Object","keys","forEach","eventName","el","proxyNativeTracksForType_","overrideNative_","name","props","elTracks","getterName","techTracks","capitalName","listeners","change","e","event","target","currentTarget","srcElement","trigger","remoteText","removeTrack","removeOldTracks","removeTracks","found","j","shift","listener","off","names","playerElIngest","movingMediaElementInDOM","clone","cloneNode","parentNode","insertBefore","createElement","tagAttributes","getAttributes","attributes","controls","setAttributes","assign","id","techId","class","playerId","preload","setAttribute","undefined","disablePictureInPicture","settingsAttrs","attr","value","removeAttribute","networkState","readyState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","seconds","fastSeek","IS_ANY_SAFARI","currentTime","duration","Infinity","IS_ANDROID","IS_CHROME","checkProgress","NaN","offsetWidth","offsetHeight","endFn","isFullscreen","beginFn","webkitPresentationMode","one","nativeIOSFullscreen","webkitEnterFullScreen","userAgent","window","navigator","test","video","paused","HAVE_METADATA","silencePromise","play","setTimeout","pause","webkitDisplayingFullscreen","webkitExitFullScreen","Error","requestPictureInPicture","setSrc","resetMediaElement","currentSource_","val","label","language","addTextTrack","createRemoteTextTrack","htmlTrackElement","srclang","default","manualCleanup","addRemoteTextTrack","appendChild","removeRemoteTextTrack","tracks","$$","getVideoPlaybackQuality","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","now","creationTime","timing","navigationStart","Date","canPlayType","isReal","isSupported","TEST_VID","volume","canPlaySource","srcObj","canControlVolume","canMuteVolume","muted","canControlPlaybackRate","CHROME_VERSION","playbackRate","canOverrideAttributes","noop","defineProperty","get","set","supportsNativeTextTracks","IS_IOS","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","audioTracks","Events","key","fn","prototype","featuresFullscreenResize","featuresProgressEvents","featuresTimeupdateEvents","patchCanPlayType","ANDROID_VERSION","IS_FIREFOX","constructor","call","unpatchCanPlayType","r","firstChild","load","sources","querySelectorAll","prop","toTitleCase","v","withSourceHandlers","nativeSourceHandler","canHandleSource","ext","getFileExtension","handleSource","tech","registerSourceHandler","registerTech"],"mappings":"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","file":"../../tech/html5.js","sourcesContent":["define([\n    'skylark-langx-globals/document',\n    './tech',\n    '../utils/dom',\n    '../utils/url',\n    '../utils/log',\n    '../utils/browser',\n    '../utils/obj',\n    '../utils/merge-options',\n    '../utils/string-cases',\n    '../tracks/track-types',\n    './setup-sourceset',\n    '../utils/define-lazy-property',\n    '../utils/promise'\n], function (\n    document,\n    Tech, \n    Dom, \n    Url, \n    log, \n    browser,  \n    obj, \n    mergeOptions, \n    stringCases, \n    TRACK_TYPES, \n    setupSourceset, \n    defineLazyProperty, \n    promise\n) {\n    'use strict';\n    const NORMAL = TRACK_TYPES.NORMAL,\n          REMOTE = TRACK_TYPES.REMOTE;\n\n    class Html5 extends Tech {\n        constructor(options, ready) {\n            super(options, ready);\n            const source = options.source;\n            let crossoriginTracks = false;\n            if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n                this.setSource(source);\n            } else {\n                this.handleLateInit_(this.el_);\n            }\n            if (options.enableSourceset) {\n                this.setupSourcesetHandling_();\n            }\n            this.isScrubbing_ = false;\n            if (this.el_.hasChildNodes()) {\n                const nodes = this.el_.childNodes;\n                let nodesLength = nodes.length;\n                const removeNodes = [];\n                while (nodesLength--) {\n                    const node = nodes[nodesLength];\n                    const nodeName = node.nodeName.toLowerCase();\n                    if (nodeName === 'track') {\n                        if (!this.featuresNativeTextTracks) {\n                            removeNodes.push(node);\n                        } else {\n                            this.remoteTextTrackEls().addTrackElement_(node);\n                            this.remoteTextTracks().addTrack(node.track);\n                            this.textTracks().addTrack(node.track);\n                            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && Url.isCrossOrigin(node.src)) {\n                                crossoriginTracks = true;\n                            }\n                        }\n                    }\n                }\n                for (let i = 0; i < removeNodes.length; i++) {\n                    this.el_.removeChild(removeNodes[i]);\n                }\n            }\n            this.proxyNativeTracks_();\n            if (this.featuresNativeTextTracks && crossoriginTracks) {\n                log.warn(\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n\" + 'This may prevent text tracks from loading.');\n            }\n            this.restoreMetadataTracksInIOSNativePlayer_();\n            if ((browser.TOUCH_ENABLED || browser.IS_IPHONE || browser.IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n                this.setControls(true);\n            }\n            this.proxyWebkitFullscreen_();\n            this.triggerReady();\n        }\n        dispose() {\n            if (this.el_ && this.el_.resetSourceset_) {\n                this.el_.resetSourceset_();\n            }\n            Html5.disposeMediaElement(this.el_);\n            this.options_ = null;\n            super.dispose();\n        }\n        setupSourcesetHandling_() {\n            setupSourceset(this);\n        }\n        restoreMetadataTracksInIOSNativePlayer_() {\n            const textTracks = this.textTracks();\n            let metadataTracksPreFullscreenState;\n            const takeMetadataTrackSnapshot = () => {\n                metadataTracksPreFullscreenState = [];\n                for (let i = 0; i < textTracks.length; i++) {\n                    const track = textTracks[i];\n                    if (track.kind === 'metadata') {\n                        metadataTracksPreFullscreenState.push({\n                            track,\n                            storedMode: track.mode\n                        });\n                    }\n                }\n            };\n            takeMetadataTrackSnapshot();\n            textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n            this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n            const restoreTrackMode = () => {\n                for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n                    const storedTrack = metadataTracksPreFullscreenState[i];\n                    if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n                        storedTrack.track.mode = storedTrack.storedMode;\n                    }\n                }\n                textTracks.removeEventListener('change', restoreTrackMode);\n            };\n            this.on('webkitbeginfullscreen', () => {\n                textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.removeEventListener('change', restoreTrackMode);\n                textTracks.addEventListener('change', restoreTrackMode);\n            });\n            this.on('webkitendfullscreen', () => {\n                textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.removeEventListener('change', restoreTrackMode);\n            });\n        }\n        overrideNative_(type, override) {\n            if (override !== this[`featuresNative${ type }Tracks`]) {\n                return;\n            }\n            const lowerCaseType = type.toLowerCase();\n            if (this[`${ lowerCaseType }TracksListeners_`]) {\n                Object.keys(this[`${ lowerCaseType }TracksListeners_`]).forEach(eventName => {\n                    const elTracks = this.el()[`${ lowerCaseType }Tracks`];\n                    elTracks.removeEventListener(eventName, this[`${ lowerCaseType }TracksListeners_`][eventName]);\n                });\n            }\n            this[`featuresNative${ type }Tracks`] = !override;\n            this[`${ lowerCaseType }TracksListeners_`] = null;\n            this.proxyNativeTracksForType_(lowerCaseType);\n        }\n        overrideNativeAudioTracks(override) {\n            this.overrideNative_('Audio', override);\n        }\n        overrideNativeVideoTracks(override) {\n            this.overrideNative_('Video', override);\n        }\n        proxyNativeTracksForType_(name) {\n            const props = NORMAL[name];\n            const elTracks = this.el()[props.getterName];\n            const techTracks = this[props.getterName]();\n            if (!this[`featuresNative${ props.capitalName }Tracks`] || !elTracks || !elTracks.addEventListener) {\n                return;\n            }\n            const listeners = {\n                change: e => {\n                    const event = {\n                        type: 'change',\n                        target: techTracks,\n                        currentTarget: techTracks,\n                        srcElement: techTracks\n                    };\n                    techTracks.trigger(event);\n                    if (name === 'text') {\n                        this[REMOTE.remoteText.getterName]().trigger(event);\n                    }\n                },\n                addtrack(e) {\n                    techTracks.addTrack(e.track);\n                },\n                removetrack(e) {\n                    techTracks.removeTrack(e.track);\n                }\n            };\n            const removeOldTracks = function () {\n                const removeTracks = [];\n                for (let i = 0; i < techTracks.length; i++) {\n                    let found = false;\n                    for (let j = 0; j < elTracks.length; j++) {\n                        if (elTracks[j] === techTracks[i]) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        removeTracks.push(techTracks[i]);\n                    }\n                }\n                while (removeTracks.length) {\n                    techTracks.removeTrack(removeTracks.shift());\n                }\n            };\n            this[props.getterName + 'Listeners_'] = listeners;\n            Object.keys(listeners).forEach(eventName => {\n                const listener = listeners[eventName];\n                elTracks.addEventListener(eventName, listener);\n                this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n            });\n            this.on('loadstart', removeOldTracks);\n            this.on('dispose', e => this.off('loadstart', removeOldTracks));\n        }\n        proxyNativeTracks_() {\n            NORMAL.names.forEach(name => {\n                this.proxyNativeTracksForType_(name);\n            });\n        }\n        createEl() {\n            let el = this.options_.tag;\n            if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n                if (el) {\n                    const clone = el.cloneNode(true);\n                    if (el.parentNode) {\n                        el.parentNode.insertBefore(clone, el);\n                    }\n                    Html5.disposeMediaElement(el);\n                    el = clone;\n                } else {\n                    el = document.createElement('video');\n                    const tagAttributes = this.options_.tag && Dom.getAttributes(this.options_.tag);\n                    const attributes = mergeOptions({}, tagAttributes);\n                    if (!browser.TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n                        delete attributes.controls;\n                    }\n                    Dom.setAttributes(el, obj.assign(attributes, {\n                        id: this.options_.techId,\n                        class: 'vjs-tech'\n                    }));\n                }\n                el.playerId = this.options_.playerId;\n            }\n            if (typeof this.options_.preload !== 'undefined') {\n                Dom.setAttribute(el, 'preload', this.options_.preload);\n            }\n            if (this.options_.disablePictureInPicture !== undefined) {\n                el.disablePictureInPicture = this.options_.disablePictureInPicture;\n            }\n            const settingsAttrs = [\n                'loop',\n                'muted',\n                'playsinline',\n                'autoplay'\n            ];\n            for (let i = 0; i < settingsAttrs.length; i++) {\n                const attr = settingsAttrs[i];\n                const value = this.options_[attr];\n                if (typeof value !== 'undefined') {\n                    if (value) {\n                        Dom.setAttribute(el, attr, attr);\n                    } else {\n                        Dom.removeAttribute(el, attr);\n                    }\n                    el[attr] = value;\n                }\n            }\n            return el;\n        }\n        handleLateInit_(el) {\n            if (el.networkState === 0 || el.networkState === 3) {\n                return;\n            }\n            if (el.readyState === 0) {\n                let loadstartFired = false;\n                const setLoadstartFired = function () {\n                    loadstartFired = true;\n                };\n                this.on('loadstart', setLoadstartFired);\n                const triggerLoadstart = function () {\n                    if (!loadstartFired) {\n                        this.trigger('loadstart');\n                    }\n                };\n                this.on('loadedmetadata', triggerLoadstart);\n                this.ready(function () {\n                    this.off('loadstart', setLoadstartFired);\n                    this.off('loadedmetadata', triggerLoadstart);\n                    if (!loadstartFired) {\n                        this.trigger('loadstart');\n                    }\n                });\n                return;\n            }\n            const eventsToTrigger = ['loadstart'];\n            eventsToTrigger.push('loadedmetadata');\n            if (el.readyState >= 2) {\n                eventsToTrigger.push('loadeddata');\n            }\n            if (el.readyState >= 3) {\n                eventsToTrigger.push('canplay');\n            }\n            if (el.readyState >= 4) {\n                eventsToTrigger.push('canplaythrough');\n            }\n            this.ready(function () {\n                eventsToTrigger.forEach(function (type) {\n                    this.trigger(type);\n                }, this);\n            });\n        }\n        setScrubbing(isScrubbing) {\n            this.isScrubbing_ = isScrubbing;\n        }\n        scrubbing() {\n            return this.isScrubbing_;\n        }\n        setCurrentTime(seconds) {\n            try {\n                if (this.isScrubbing_ && this.el_.fastSeek && browser.IS_ANY_SAFARI) {\n                    this.el_.fastSeek(seconds);\n                } else {\n                    this.el_.currentTime = seconds;\n                }\n            } catch (e) {\n                log(e, 'Video is not ready. (Video.js)');\n            }\n        }\n        duration() {\n            if (this.el_.duration === Infinity && browser.IS_ANDROID && browser.IS_CHROME && this.el_.currentTime === 0) {\n                const checkProgress = () => {\n                    if (this.el_.currentTime > 0) {\n                        if (this.el_.duration === Infinity) {\n                            this.trigger('durationchange');\n                        }\n                        this.off('timeupdate', checkProgress);\n                    }\n                };\n                this.on('timeupdate', checkProgress);\n                return NaN;\n            }\n            return this.el_.duration || NaN;\n        }\n        width() {\n            return this.el_.offsetWidth;\n        }\n        height() {\n            return this.el_.offsetHeight;\n        }\n        proxyWebkitFullscreen_() {\n            if (!('webkitDisplayingFullscreen' in this.el_)) {\n                return;\n            }\n            const endFn = function () {\n                this.trigger('fullscreenchange', { isFullscreen: false });\n            };\n            const beginFn = function () {\n                if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n                    this.one('webkitendfullscreen', endFn);\n                    this.trigger('fullscreenchange', {\n                        isFullscreen: true,\n                        nativeIOSFullscreen: true\n                    });\n                }\n            };\n            this.on('webkitbeginfullscreen', beginFn);\n            this.on('dispose', () => {\n                this.off('webkitbeginfullscreen', beginFn);\n                this.off('webkitendfullscreen', endFn);\n            });\n        }\n        supportsFullScreen() {\n            if (typeof this.el_.webkitEnterFullScreen === 'function') {\n                const userAgent = window.navigator && window.navigator.userAgent || '';\n                if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        enterFullScreen() {\n            const video = this.el_;\n            if (video.paused && video.networkState <= video.HAVE_METADATA) {\n                promise.silencePromise(this.el_.play());\n                this.setTimeout(function () {\n                    video.pause();\n                    try {\n                        video.webkitEnterFullScreen();\n                    } catch (e) {\n                        this.trigger('fullscreenerror', e);\n                    }\n                }, 0);\n            } else {\n                try {\n                    video.webkitEnterFullScreen();\n                } catch (e) {\n                    this.trigger('fullscreenerror', e);\n                }\n            }\n        }\n        exitFullScreen() {\n            if (!this.el_.webkitDisplayingFullscreen) {\n                this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n                return;\n            }\n            this.el_.webkitExitFullScreen();\n        }\n        requestPictureInPicture() {\n            return this.el_.requestPictureInPicture();\n        }\n        src(src) {\n            if (src === undefined) {\n                return this.el_.src;\n            }\n            this.setSrc(src);\n        }\n        reset() {\n            Html5.resetMediaElement(this.el_);\n        }\n        currentSrc() {\n            if (this.currentSource_) {\n                return this.currentSource_.src;\n            }\n            return this.el_.currentSrc;\n        }\n        setControls(val) {\n            this.el_.controls = !!val;\n        }\n        addTextTrack(kind, label, language) {\n            if (!this.featuresNativeTextTracks) {\n                return super.addTextTrack(kind, label, language);\n            }\n            return this.el_.addTextTrack(kind, label, language);\n        }\n        createRemoteTextTrack(options) {\n            if (!this.featuresNativeTextTracks) {\n                return super.createRemoteTextTrack(options);\n            }\n            const htmlTrackElement = document.createElement('track');\n            if (options.kind) {\n                htmlTrackElement.kind = options.kind;\n            }\n            if (options.label) {\n                htmlTrackElement.label = options.label;\n            }\n            if (options.language || options.srclang) {\n                htmlTrackElement.srclang = options.language || options.srclang;\n            }\n            if (options.default) {\n                htmlTrackElement.default = options.default;\n            }\n            if (options.id) {\n                htmlTrackElement.id = options.id;\n            }\n            if (options.src) {\n                htmlTrackElement.src = options.src;\n            }\n            return htmlTrackElement;\n        }\n        addRemoteTextTrack(options, manualCleanup) {\n            const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n            if (this.featuresNativeTextTracks) {\n                this.el().appendChild(htmlTrackElement);\n            }\n            return htmlTrackElement;\n        }\n        removeRemoteTextTrack(track) {\n            super.removeRemoteTextTrack(track);\n            if (this.featuresNativeTextTracks) {\n                const tracks = this.$$('track');\n                let i = tracks.length;\n                while (i--) {\n                    if (track === tracks[i] || track === tracks[i].track) {\n                        this.el().removeChild(tracks[i]);\n                    }\n                }\n            }\n        }\n        getVideoPlaybackQuality() {\n            if (typeof this.el().getVideoPlaybackQuality === 'function') {\n                return this.el().getVideoPlaybackQuality();\n            }\n            const videoPlaybackQuality = {};\n            if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n                videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n                videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n            }\n            if (window.performance && typeof window.performance.now === 'function') {\n                videoPlaybackQuality.creationTime = window.performance.now();\n            } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n                videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n            }\n            return videoPlaybackQuality;\n        }\n    }\n    defineLazyProperty(Html5, 'TEST_VID', function () {\n        if (!Dom.isReal()) {\n            return;\n        }\n        const video = document.createElement('video');\n        const track = document.createElement('track');\n        track.kind = 'captions';\n        track.srclang = 'en';\n        track.label = 'English';\n        video.appendChild(track);\n        return video;\n    });\n    Html5.isSupported = function () {\n        try {\n            Html5.TEST_VID.volume = 0.5;\n        } catch (e) {\n            return false;\n        }\n        return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n    };\n    Html5.canPlayType = function (type) {\n        return Html5.TEST_VID.canPlayType(type);\n    };\n    Html5.canPlaySource = function (srcObj, options) {\n        return Html5.canPlayType(srcObj.type);\n    };\n    Html5.canControlVolume = function () {\n        try {\n            const volume = Html5.TEST_VID.volume;\n            Html5.TEST_VID.volume = volume / 2 + 0.1;\n            return volume !== Html5.TEST_VID.volume;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canMuteVolume = function () {\n        try {\n            const muted = Html5.TEST_VID.muted;\n            Html5.TEST_VID.muted = !muted;\n            if (Html5.TEST_VID.muted) {\n                Dom.setAttribute(Html5.TEST_VID, 'muted', 'muted');\n            } else {\n                Dom.removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n            }\n            return muted !== Html5.TEST_VID.muted;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canControlPlaybackRate = function () {\n        if (browser.IS_ANDROID && browser.IS_CHROME && browser.CHROME_VERSION < 58) {\n            return false;\n        }\n        try {\n            const playbackRate = Html5.TEST_VID.playbackRate;\n            Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n            return playbackRate !== Html5.TEST_VID.playbackRate;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canOverrideAttributes = function () {\n        try {\n            const noop = () => {\n            };\n            Object.defineProperty(document.createElement('video'), 'src', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('audio'), 'src', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('video'), 'innerHTML', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n                get: noop,\n                set: noop\n            });\n        } catch (e) {\n            return false;\n        }\n        return true;\n    };\n    Html5.supportsNativeTextTracks = function () {\n        return browser.IS_ANY_SAFARI || browser.IS_IOS && browser.IS_CHROME;\n    };\n    Html5.supportsNativeVideoTracks = function () {\n        return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n    };\n    Html5.supportsNativeAudioTracks = function () {\n        return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n    };\n    Html5.Events = [\n        'loadstart',\n        'suspend',\n        'abort',\n        'error',\n        'emptied',\n        'stalled',\n        'loadedmetadata',\n        'loadeddata',\n        'canplay',\n        'canplaythrough',\n        'playing',\n        'waiting',\n        'seeking',\n        'seeked',\n        'ended',\n        'durationchange',\n        'timeupdate',\n        'progress',\n        'play',\n        'pause',\n        'ratechange',\n        'resize',\n        'volumechange'\n    ];\n    [\n        [\n            'featuresVolumeControl',\n            'canControlVolume'\n        ],\n        [\n            'featuresMuteControl',\n            'canMuteVolume'\n        ],\n        [\n            'featuresPlaybackRate',\n            'canControlPlaybackRate'\n        ],\n        [\n            'featuresSourceset',\n            'canOverrideAttributes'\n        ],\n        [\n            'featuresNativeTextTracks',\n            'supportsNativeTextTracks'\n        ],\n        [\n            'featuresNativeVideoTracks',\n            'supportsNativeVideoTracks'\n        ],\n        [\n            'featuresNativeAudioTracks',\n            'supportsNativeAudioTracks'\n        ]\n    ].forEach(function ([key, fn]) {\n        defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n    });\n    Html5.prototype.movingMediaElementInDOM = !browser.IS_IOS;\n    Html5.prototype.featuresFullscreenResize = true;\n    Html5.prototype.featuresProgressEvents = true;\n    Html5.prototype.featuresTimeupdateEvents = true;\n    let canPlayType;\n    Html5.patchCanPlayType = function () {\n        if (browser.ANDROID_VERSION >= 4 && !browser.IS_FIREFOX && !browser.IS_CHROME) {\n            canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n            Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n                const mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n                if (type && mpegurlRE.test(type)) {\n                    return 'maybe';\n                }\n                return canPlayType.call(this, type);\n            };\n        }\n    };\n    Html5.unpatchCanPlayType = function () {\n        const r = Html5.TEST_VID.constructor.prototype.canPlayType;\n        if (canPlayType) {\n            Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n        }\n        return r;\n    };\n    Html5.patchCanPlayType();\n    Html5.disposeMediaElement = function (el) {\n        if (!el) {\n            return;\n        }\n        if (el.parentNode) {\n            el.parentNode.removeChild(el);\n        }\n        while (el.hasChildNodes()) {\n            el.removeChild(el.firstChild);\n        }\n        el.removeAttribute('src');\n        if (typeof el.load === 'function') {\n            (function () {\n                try {\n                    el.load();\n                } catch (e) {\n                }\n            }());\n        }\n    };\n    Html5.resetMediaElement = function (el) {\n        if (!el) {\n            return;\n        }\n        const sources = el.querySelectorAll('source');\n        let i = sources.length;\n        while (i--) {\n            el.removeChild(sources[i]);\n        }\n        el.removeAttribute('src');\n        if (typeof el.load === 'function') {\n            (function () {\n                try {\n                    el.load();\n                } catch (e) {\n                }\n            }());\n        }\n    };\n    [\n        'muted',\n        'defaultMuted',\n        'autoplay',\n        'controls',\n        'loop',\n        'playsinline'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop] || this.el_.hasAttribute(prop);\n        };\n    });\n    [\n        'muted',\n        'defaultMuted',\n        'autoplay',\n        'loop',\n        'playsinline'\n    ].forEach(function (prop) {\n        Html5.prototype['set' + stringCases.toTitleCase(prop)] = function (v) {\n            this.el_[prop] = v;\n            if (v) {\n                this.el_.setAttribute(prop, prop);\n            } else {\n                this.el_.removeAttribute(prop);\n            }\n        };\n    });\n    [\n        'paused',\n        'currentTime',\n        'buffered',\n        'volume',\n        'poster',\n        'preload',\n        'error',\n        'seeking',\n        'seekable',\n        'ended',\n        'playbackRate',\n        'defaultPlaybackRate',\n        'disablePictureInPicture',\n        'played',\n        'networkState',\n        'readyState',\n        'videoWidth',\n        'videoHeight',\n        'crossOrigin'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop];\n        };\n    });\n    [\n        'volume',\n        'src',\n        'poster',\n        'preload',\n        'playbackRate',\n        'defaultPlaybackRate',\n        'disablePictureInPicture',\n        'crossOrigin'\n    ].forEach(function (prop) {\n        Html5.prototype['set' + stringCases.toTitleCase(prop)] = function (v) {\n            this.el_[prop] = v;\n        };\n    });\n    [\n        'pause',\n        'load',\n        'play'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop]();\n        };\n    });\n    Tech.withSourceHandlers(Html5);\n    Html5.nativeSourceHandler = {};\n    Html5.nativeSourceHandler.canPlayType = function (type) {\n        try {\n            return Html5.TEST_VID.canPlayType(type);\n        } catch (e) {\n            return '';\n        }\n    };\n    Html5.nativeSourceHandler.canHandleSource = function (source, options) {\n        if (source.type) {\n            return Html5.nativeSourceHandler.canPlayType(source.type);\n        } else if (source.src) {\n            const ext = Url.getFileExtension(source.src);\n            return Html5.nativeSourceHandler.canPlayType(`video/${ ext }`);\n        }\n        return '';\n    };\n    Html5.nativeSourceHandler.handleSource = function (source, tech, options) {\n        tech.setSrc(source.src);\n    };\n    Html5.nativeSourceHandler.dispose = function () {\n    };\n    Html5.registerSourceHandler(Html5.nativeSourceHandler);\n    Tech.registerTech('Html5', Html5);\n    return Html5;\n});"]}