{"version":3,"sources":["tech/html5.js"],"names":["define","langx","document","noder","Tech","Dom","Url","log","browser","obj","mergeOptions","stringCases","TRACK_TYPES","setupSourceset","defineLazyProperty","promise","NORMAL","REMOTE","NativeEvents","abort","canplay","canplaythrough","disablepictureinpicturechanged","durationchange","emptied","ended","enterpictureinpicture","error","leavepictureinpicture","loadeddata","loadstart","loadedmetadata","pause","play","playing","posterchange","progress","ratechange","seeking","seeked","sourceset","stalled","suspend","textdata","texttrackchange","timeupdate","volumechange","waiting","Html5","[object Object]","events","super","isNativeEvent","isString","isArray","i","length","options","ready","source","crossoriginTracks","this","el_","currentSrc","src","tag","initNetworkState_","setSource","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","childNodes","nodesLength","removeNodes","node","nodeName","toLowerCase","featuresNativeTextTracks","remoteTextTrackEls","addTrackElement_","remoteTextTracks","addTrack","track","textTracks","hasAttribute","isCrossOrigin","push","removeChild","proxyNativeTracks_","warn","restoreMetadataTracksInIOSNativePlayer_","TOUCH_ENABLED","IS_IPHONE","IS_NATIVE_ANDROID","nativeControlsForTouch","setControls","proxyWebkitFullscreen_","triggerReady","resetSourceset_","disposeMediaElement","options_","dispose","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","kind","storedMode","mode","addEventListener","listenTo","removeEventListener","restoreTrackMode","storedTrack","type","override","lowerCaseType","Object","keys","forEach","eventName","el","proxyNativeTracksForType_","overrideNative_","name","props","elTracks","getterName","techTracks","capitalName","listeners","change","e","event","target","currentTarget","srcElement","trigger","remoteText","removeTrack","removeOldTracks","removeTracks","found","j","shift","listener","unlistenTo","names","playerElIngest","movingMediaElementInDOM","clone","cloneNode","parentNode","insertBefore","createElement","tagAttributes","getAttributes","attributes","controls","setAttributes","assign","id","techId","class","playerId","preload","setAttribute","undefined","disablePictureInPicture","settingsAttrs","attr","value","removeAttribute","networkState","readyState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","seconds","fastSeek","IS_ANY_SAFARI","currentTime","duration","Infinity","IS_ANDROID","IS_CHROME","checkProgress","NaN","offsetWidth","offsetHeight","endFn","isFullscreen","beginFn","webkitPresentationMode","listenToOnce","nativeIOSFullscreen","webkitEnterFullScreen","userAgent","window","navigator","test","video","paused","HAVE_METADATA","silencePromise","setTimeout","webkitDisplayingFullscreen","fullscreen","Error","requestPictureInPicture","setSrc","resetMediaElement","currentSource_","val","label","language","addTextTrack","createRemoteTextTrack","htmlTrackElement","srclang","default","manualCleanup","addRemoteTextTrack","appendChild","removeRemoteTextTrack","tracks","$$","getVideoPlaybackQuality","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","now","creationTime","timing","navigationStart","Date","canPlayType","isReal","isSupported","TEST_VID","volume","canPlaySource","srcObj","canControlVolume","canMuteVolume","muted","canControlPlaybackRate","CHROME_VERSION","playbackRate","canOverrideAttributes","noop","defineProperty","get","set","supportsNativeTextTracks","IS_IOS","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","audioTracks","Events","key","fn","prototype","featuresFullscreenResize","featuresProgressEvents","featuresTimeupdateEvents","patchCanPlayType","ANDROID_VERSION","IS_FIREFOX","constructor","call","unpatchCanPlayType","r","firstChild","load","sources","querySelectorAll","prop","toTitleCase","v","withSourceHandlers","nativeSourceHandler","canHandleSource","ext","getFileExtension","handleSource","tech","registerSourceHandler","registerTech"],"mappings":"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","file":"../../tech/html5.js","sourcesContent":["define([\n    \"skylark-langx\",\n    'skylark-langx-globals/document',\n    \"skylark-domx-noder\",\n    './tech',\n    '../utils/dom',\n    '../utils/url',\n    '../utils/log',\n    '../utils/browser',\n    '../utils/obj',\n    '../utils/merge-options',\n    '../utils/string-cases',\n    '../tracks/track-types',\n    './setup-sourceset',\n    '../utils/define-lazy-property',\n    '../utils/promise'\n], function (\n    langx,\n    document,\n    noder,\n    Tech, \n    Dom, \n    Url, \n    log, \n    browser,  \n    obj, \n    mergeOptions, \n    stringCases, \n    TRACK_TYPES, \n    setupSourceset, \n    defineLazyProperty, \n    promise\n) {\n    'use strict';\n    const NORMAL = TRACK_TYPES.NORMAL,\n          REMOTE = TRACK_TYPES.REMOTE;\n\n    const NativeEvents = {\n            'abort' : 3,\n            'canplay' : 3,\n            'canplaythrough' : 3,\n            'disablepictureinpicturechanged':3,\n            'durationchange':3,\n            'emptied' : 3,\n            'ended':3,\n            'enterpictureinpicture':3,\n            'error' : 3,\n            'leavepictureinpicture':3,\n            'loadeddata' : 3,\n            'loadstart' : 3,\n            'loadedmetadata':3,\n            'pause' : 3,\n            'play':3,\n            'playing' : 3,\n            'posterchange':3,\n            'progress' : 3,\n            'ratechange':3,\n            'seeking' : 3,\n            'seeked' : 3,\n            'sourceset':3,\n            'stalled' : 3,\n            'suspend':3,\n            'textdata':3,\n            'texttrackchange':3,\n            'timeupdate':3,\n            'volumechange':3,\n            'waiting' : 3,\n\n    };\n    class Html5 extends Tech {\n\n        isNativeEvent(events) {\n            var ret  = super.isNativeEvent(events);\n            if (ret) {\n                return true;\n            }\n            if (langx.isString(events)) {\n                return !!NativeEvents[events];\n            } else if (langx.isArray(events)) {\n                for (var i=0; i<events.length; i++) {\n                    if (NativeEvents[events[i]]) {\n                        return true;\n                    }\n                }\n                return false;\n            }            \n\n        } \n\n        constructor(options, ready) {\n            super(options, ready);\n            const source = options.source;\n            let crossoriginTracks = false;\n            if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n                this.setSource(source);\n            } else {\n                this.handleLateInit_(this.el_);\n            }\n            if (options.enableSourceset) {\n                this.setupSourcesetHandling_();\n            }\n            this.isScrubbing_ = false;\n            if (this.el_.hasChildNodes()) {\n                const nodes = this.el_.childNodes;\n                let nodesLength = nodes.length;\n                const removeNodes = [];\n                while (nodesLength--) {\n                    const node = nodes[nodesLength];\n                    const nodeName = node.nodeName.toLowerCase();\n                    if (nodeName === 'track') {\n                        if (!this.featuresNativeTextTracks) {\n                            removeNodes.push(node);\n                        } else {\n                            this.remoteTextTrackEls().addTrackElement_(node);\n                            this.remoteTextTracks().addTrack(node.track);\n                            this.textTracks().addTrack(node.track);\n                            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && Url.isCrossOrigin(node.src)) {\n                                crossoriginTracks = true;\n                            }\n                        }\n                    }\n                }\n                for (let i = 0; i < removeNodes.length; i++) {\n                    this.el_.removeChild(removeNodes[i]);\n                }\n            }\n            this.proxyNativeTracks_();\n            if (this.featuresNativeTextTracks && crossoriginTracks) {\n                log.warn(\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n\" + 'This may prevent text tracks from loading.');\n            }\n            this.restoreMetadataTracksInIOSNativePlayer_();\n            if ((browser.TOUCH_ENABLED || browser.IS_IPHONE || browser.IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n                this.setControls(true);\n            }\n            this.proxyWebkitFullscreen_();\n            this.triggerReady();\n        }\n        dispose() {\n            if (this.el_ && this.el_.resetSourceset_) {\n                this.el_.resetSourceset_();\n            }\n            Html5.disposeMediaElement(this.el_);\n            this.options_ = null;\n            super.dispose();\n        }\n        setupSourcesetHandling_() {\n            setupSourceset(this);\n        }\n        restoreMetadataTracksInIOSNativePlayer_() {\n            const textTracks = this.textTracks();\n            let metadataTracksPreFullscreenState;\n            const takeMetadataTrackSnapshot = () => {\n                metadataTracksPreFullscreenState = [];\n                for (let i = 0; i < textTracks.length; i++) {\n                    const track = textTracks[i];\n                    if (track.kind === 'metadata') {\n                        metadataTracksPreFullscreenState.push({\n                            track,\n                            storedMode: track.mode\n                        });\n                    }\n                }\n            };\n            takeMetadataTrackSnapshot();\n            textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n            this.listenTo('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n            const restoreTrackMode = () => {\n                for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n                    const storedTrack = metadataTracksPreFullscreenState[i];\n                    if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n                        storedTrack.track.mode = storedTrack.storedMode;\n                    }\n                }\n                textTracks.removeEventListener('change', restoreTrackMode);\n            };\n            this.listenTo('webkitbeginfullscreen', () => {\n                textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.removeEventListener('change', restoreTrackMode);\n                textTracks.addEventListener('change', restoreTrackMode);\n            });\n            this.listenTo('webkitendfullscreen', () => {\n                textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.removeEventListener('change', restoreTrackMode);\n            });\n        }\n        overrideNative_(type, override) {\n            if (override !== this[`featuresNative${ type }Tracks`]) {\n                return;\n            }\n            const lowerCaseType = type.toLowerCase();\n            if (this[`${ lowerCaseType }TracksListeners_`]) {\n                Object.keys(this[`${ lowerCaseType }TracksListeners_`]).forEach(eventName => {\n                    const elTracks = this.el()[`${ lowerCaseType }Tracks`];\n                    elTracks.removeEventListener(eventName, this[`${ lowerCaseType }TracksListeners_`][eventName]);\n                });\n            }\n            this[`featuresNative${ type }Tracks`] = !override;\n            this[`${ lowerCaseType }TracksListeners_`] = null;\n            this.proxyNativeTracksForType_(lowerCaseType);\n        }\n        overrideNativeAudioTracks(override) {\n            this.overrideNative_('Audio', override);\n        }\n        overrideNativeVideoTracks(override) {\n            this.overrideNative_('Video', override);\n        }\n        proxyNativeTracksForType_(name) {\n            const props = NORMAL[name];\n            const elTracks = this.el()[props.getterName];\n            const techTracks = this[props.getterName]();\n            if (!this[`featuresNative${ props.capitalName }Tracks`] || !elTracks || !elTracks.addEventListener) {\n                return;\n            }\n            const listeners = {\n                change: e => {\n                    const event = {\n                        type: 'change',\n                        target: techTracks,\n                        currentTarget: techTracks,\n                        srcElement: techTracks\n                    };\n                    techTracks.trigger(event);\n                    if (name === 'text') {\n                        this[REMOTE.remoteText.getterName]().trigger(event);\n                    }\n                },\n                addtrack(e) {\n                    techTracks.addTrack(e.track);\n                },\n                removetrack(e) {\n                    techTracks.removeTrack(e.track);\n                }\n            };\n            const removeOldTracks = function () {\n                const removeTracks = [];\n                for (let i = 0; i < techTracks.length; i++) {\n                    let found = false;\n                    for (let j = 0; j < elTracks.length; j++) {\n                        if (elTracks[j] === techTracks[i]) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        removeTracks.push(techTracks[i]);\n                    }\n                }\n                while (removeTracks.length) {\n                    techTracks.removeTrack(removeTracks.shift());\n                }\n            };\n            this[props.getterName + 'Listeners_'] = listeners;\n            Object.keys(listeners).forEach(eventName => {\n                const listener = listeners[eventName];\n                elTracks.addEventListener(eventName, listener);\n                this.listenTo('dispose', e => elTracks.removeEventListener(eventName, listener));\n            });\n            this.listenTo('loadstart', removeOldTracks);\n            this.listenTo('dispose', e => this.unlistenTo('loadstart', removeOldTracks));\n        }\n        proxyNativeTracks_() {\n            NORMAL.names.forEach(name => {\n                this.proxyNativeTracksForType_(name);\n            });\n        }\n        createEl() {\n            let el = this.options_.tag;\n            if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n                if (el) {\n                    const clone = el.cloneNode(true);\n                    if (el.parentNode) {\n                        el.parentNode.insertBefore(clone, el);\n                    }\n                    Html5.disposeMediaElement(el);\n                    el = clone;\n                } else {\n                    el = document.createElement('video');\n                    const tagAttributes = this.options_.tag && Dom.getAttributes(this.options_.tag);\n                    const attributes = mergeOptions({}, tagAttributes);\n                    if (!browser.TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n                        delete attributes.controls;\n                    }\n                    Dom.setAttributes(el, obj.assign(attributes, {\n                        id: this.options_.techId,\n                        class: 'vjs-tech'\n                    }));\n                }\n                el.playerId = this.options_.playerId;\n            }\n            if (typeof this.options_.preload !== 'undefined') {\n                Dom.setAttribute(el, 'preload', this.options_.preload);\n            }\n            if (this.options_.disablePictureInPicture !== undefined) {\n                el.disablePictureInPicture = this.options_.disablePictureInPicture;\n            }\n            const settingsAttrs = [\n                'loop',\n                'muted',\n                'playsinline',\n                'autoplay'\n            ];\n            for (let i = 0; i < settingsAttrs.length; i++) {\n                const attr = settingsAttrs[i];\n                const value = this.options_[attr];\n                if (typeof value !== 'undefined') {\n                    if (value) {\n                        Dom.setAttribute(el, attr, attr);\n                    } else {\n                        Dom.removeAttribute(el, attr);\n                    }\n                    el[attr] = value;\n                }\n            }\n            return el;\n        }\n        handleLateInit_(el) {\n            if (el.networkState === 0 || el.networkState === 3) {\n                return;\n            }\n            if (el.readyState === 0) {\n                let loadstartFired = false;\n                const setLoadstartFired = function () {\n                    loadstartFired = true;\n                };\n                this.listenTo('loadstart', setLoadstartFired);\n                const triggerLoadstart = function () {\n                    if (!loadstartFired) {\n                        this.trigger('loadstart');\n                    }\n                };\n                this.listenTo('loadedmetadata', triggerLoadstart);\n                this.ready(function () {\n                    this.unlistenTo('loadstart', setLoadstartFired);\n                    this.unlistenTo('loadedmetadata', triggerLoadstart);\n                    if (!loadstartFired) {\n                        this.trigger('loadstart');\n                    }\n                });\n                return;\n            }\n            const eventsToTrigger = ['loadstart'];\n            eventsToTrigger.push('loadedmetadata');\n            if (el.readyState >= 2) {\n                eventsToTrigger.push('loadeddata');\n            }\n            if (el.readyState >= 3) {\n                eventsToTrigger.push('canplay');\n            }\n            if (el.readyState >= 4) {\n                eventsToTrigger.push('canplaythrough');\n            }\n            this.ready(function () {\n                eventsToTrigger.forEach(function (type) {\n                    this.trigger(type);\n                }, this);\n            });\n        }\n        setScrubbing(isScrubbing) {\n            this.isScrubbing_ = isScrubbing;\n        }\n        scrubbing() {\n            return this.isScrubbing_;\n        }\n        setCurrentTime(seconds) {\n            try {\n                if (this.isScrubbing_ && this.el_.fastSeek && browser.IS_ANY_SAFARI) {\n                    this.el_.fastSeek(seconds);\n                } else {\n                    this.el_.currentTime = seconds;\n                }\n            } catch (e) {\n                log(e, 'Video is not ready. (Video.js)');\n            }\n        }\n        duration() {\n            if (this.el_.duration === Infinity && browser.IS_ANDROID && browser.IS_CHROME && this.el_.currentTime === 0) {\n                const checkProgress = () => {\n                    if (this.el_.currentTime > 0) {\n                        if (this.el_.duration === Infinity) {\n                            this.trigger('durationchange');\n                        }\n                        this.unlistenTo('timeupdate', checkProgress);\n                    }\n                };\n                this.listenTo('timeupdate', checkProgress);\n                return NaN;\n            }\n            return this.el_.duration || NaN;\n        }\n        width() {\n            return this.el_.offsetWidth;\n        }\n        height() {\n            return this.el_.offsetHeight;\n        }\n        proxyWebkitFullscreen_() {\n            if (!('webkitDisplayingFullscreen' in this.el_)) {\n                return;\n            }\n            const endFn = function () {\n                this.trigger('fullscreenchange', { isFullscreen: false });\n            };\n            const beginFn = function () {\n                if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n                    this.listenToOnce('webkitendfullscreen', endFn);\n                    this.trigger('fullscreenchange', {\n                        isFullscreen: true,\n                        nativeIOSFullscreen: true\n                    });\n                }\n            };\n            this.listenTo('webkitbeginfullscreen', beginFn);\n            this.listenTo('dispose', () => {\n                this.unlistenTo('webkitbeginfullscreen', beginFn);\n                this.unlistenTo('webkitendfullscreen', endFn);\n            });\n        }\n        supportsFullScreen() {\n            if (typeof this.el_.webkitEnterFullScreen === 'function') {\n                const userAgent = window.navigator && window.navigator.userAgent || '';\n                if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        enterFullScreen() {\n            const video = this.el_;\n            if (video.paused && video.networkState <= video.HAVE_METADATA) {\n                promise.silencePromise(this.el_.play());\n                this.setTimeout(function () {\n                    video.pause();\n                    try {\n                        video.webkitEnterFullScreen();\n                    } catch (e) {\n                        this.trigger('fullscreenerror', e);\n                    }\n                }, 0);\n            } else {\n                try {\n                    video.webkitEnterFullScreen();\n                } catch (e) {\n                    this.trigger('fullscreenerror', e);\n                }\n            }\n        }\n        exitFullScreen() {\n            if (!this.el_.webkitDisplayingFullscreen) {\n                this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n                return;\n            }\n            //this.el_.webkitExitFullScreen();\n            noder.fullscreen(false);\n        }\n        requestPictureInPicture() {\n            return this.el_.requestPictureInPicture();\n        }\n        src(src) {\n            if (src === undefined) {\n                return this.el_.src;\n            }\n            this.setSrc(src);\n        }\n        reset() {\n            Html5.resetMediaElement(this.el_);\n        }\n        currentSrc() {\n            if (this.currentSource_) {\n                return this.currentSource_.src;\n            }\n            return this.el_.currentSrc;\n        }\n        setControls(val) {\n            this.el_.controls = !!val;\n        }\n        addTextTrack(kind, label, language) {\n            if (!this.featuresNativeTextTracks) {\n                return super.addTextTrack(kind, label, language);\n            }\n            return this.el_.addTextTrack(kind, label, language);\n        }\n        createRemoteTextTrack(options) {\n            if (!this.featuresNativeTextTracks) {\n                return super.createRemoteTextTrack(options);\n            }\n            const htmlTrackElement = document.createElement('track');\n            if (options.kind) {\n                htmlTrackElement.kind = options.kind;\n            }\n            if (options.label) {\n                htmlTrackElement.label = options.label;\n            }\n            if (options.language || options.srclang) {\n                htmlTrackElement.srclang = options.language || options.srclang;\n            }\n            if (options.default) {\n                htmlTrackElement.default = options.default;\n            }\n            if (options.id) {\n                htmlTrackElement.id = options.id;\n            }\n            if (options.src) {\n                htmlTrackElement.src = options.src;\n            }\n            return htmlTrackElement;\n        }\n        addRemoteTextTrack(options, manualCleanup) {\n            const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n            if (this.featuresNativeTextTracks) {\n                this.el().appendChild(htmlTrackElement);\n            }\n            return htmlTrackElement;\n        }\n        removeRemoteTextTrack(track) {\n            super.removeRemoteTextTrack(track);\n            if (this.featuresNativeTextTracks) {\n                const tracks = this.$$('track');\n                let i = tracks.length;\n                while (i--) {\n                    if (track === tracks[i] || track === tracks[i].track) {\n                        this.el().removeChild(tracks[i]);\n                    }\n                }\n            }\n        }\n        getVideoPlaybackQuality() {\n            if (typeof this.el().getVideoPlaybackQuality === 'function') {\n                return this.el().getVideoPlaybackQuality();\n            }\n            const videoPlaybackQuality = {};\n            if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n                videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n                videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n            }\n            if (window.performance && typeof window.performance.now === 'function') {\n                videoPlaybackQuality.creationTime = window.performance.now();\n            } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n                videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n            }\n            return videoPlaybackQuality;\n        }\n    }\n    defineLazyProperty(Html5, 'TEST_VID', function () {\n        if (!Dom.isReal()) {\n            return;\n        }\n        const video = document.createElement('video');\n        const track = document.createElement('track');\n        track.kind = 'captions';\n        track.srclang = 'en';\n        track.label = 'English';\n        video.appendChild(track);\n        return video;\n    });\n    Html5.isSupported = function () {\n        try {\n            Html5.TEST_VID.volume = 0.5;\n        } catch (e) {\n            return false;\n        }\n        return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n    };\n    Html5.canPlayType = function (type) {\n        return Html5.TEST_VID.canPlayType(type);\n    };\n    Html5.canPlaySource = function (srcObj, options) {\n        return Html5.canPlayType(srcObj.type);\n    };\n    Html5.canControlVolume = function () {\n        try {\n            const volume = Html5.TEST_VID.volume;\n            Html5.TEST_VID.volume = volume / 2 + 0.1;\n            return volume !== Html5.TEST_VID.volume;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canMuteVolume = function () {\n        try {\n            const muted = Html5.TEST_VID.muted;\n            Html5.TEST_VID.muted = !muted;\n            if (Html5.TEST_VID.muted) {\n                Dom.setAttribute(Html5.TEST_VID, 'muted', 'muted');\n            } else {\n                Dom.removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n            }\n            return muted !== Html5.TEST_VID.muted;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canControlPlaybackRate = function () {\n        if (browser.IS_ANDROID && browser.IS_CHROME && browser.CHROME_VERSION < 58) {\n            return false;\n        }\n        try {\n            const playbackRate = Html5.TEST_VID.playbackRate;\n            Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n            return playbackRate !== Html5.TEST_VID.playbackRate;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canOverrideAttributes = function () {\n        try {\n            const noop = () => {\n            };\n            Object.defineProperty(document.createElement('video'), 'src', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('audio'), 'src', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('video'), 'innerHTML', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n                get: noop,\n                set: noop\n            });\n        } catch (e) {\n            return false;\n        }\n        return true;\n    };\n    Html5.supportsNativeTextTracks = function () {\n        return browser.IS_ANY_SAFARI || browser.IS_IOS && browser.IS_CHROME;\n    };\n    Html5.supportsNativeVideoTracks = function () {\n        return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n    };\n    Html5.supportsNativeAudioTracks = function () {\n        return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n    };\n    Html5.Events = [\n        'loadstart',\n        'suspend',\n        'abort',\n        'error',\n        'emptied',\n        'stalled',\n        'loadedmetadata',\n        'loadeddata',\n        'canplay',\n        'canplaythrough',\n        'playing',\n        'waiting',\n        'seeking',\n        'seeked',\n        'ended',\n        'durationchange',\n        'timeupdate',\n        'progress',\n        'play',\n        'pause',\n        'ratechange',\n        'resize',\n        'volumechange'\n    ];\n    [\n        [\n            'featuresVolumeControl',\n            'canControlVolume'\n        ],\n        [\n            'featuresMuteControl',\n            'canMuteVolume'\n        ],\n        [\n            'featuresPlaybackRate',\n            'canControlPlaybackRate'\n        ],\n        [\n            'featuresSourceset',\n            'canOverrideAttributes'\n        ],\n        [\n            'featuresNativeTextTracks',\n            'supportsNativeTextTracks'\n        ],\n        [\n            'featuresNativeVideoTracks',\n            'supportsNativeVideoTracks'\n        ],\n        [\n            'featuresNativeAudioTracks',\n            'supportsNativeAudioTracks'\n        ]\n    ].forEach(function ([key, fn]) {\n        defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n    });\n    Html5.prototype.movingMediaElementInDOM = !browser.IS_IOS;\n    Html5.prototype.featuresFullscreenResize = true;\n    Html5.prototype.featuresProgressEvents = true;\n    Html5.prototype.featuresTimeupdateEvents = true;\n    let canPlayType;\n    Html5.patchCanPlayType = function () {\n        if (browser.ANDROID_VERSION >= 4 && !browser.IS_FIREFOX && !browser.IS_CHROME) {\n            canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n            Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n                const mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n                if (type && mpegurlRE.test(type)) {\n                    return 'maybe';\n                }\n                return canPlayType.call(this, type);\n            };\n        }\n    };\n    Html5.unpatchCanPlayType = function () {\n        const r = Html5.TEST_VID.constructor.prototype.canPlayType;\n        if (canPlayType) {\n            Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n        }\n        return r;\n    };\n    Html5.patchCanPlayType();\n    Html5.disposeMediaElement = function (el) {\n        if (!el) {\n            return;\n        }\n        if (el.parentNode) {\n            el.parentNode.removeChild(el);\n        }\n        while (el.hasChildNodes()) {\n            el.removeChild(el.firstChild);\n        }\n        el.removeAttribute('src');\n        if (typeof el.load === 'function') {\n            (function () {\n                try {\n                    el.load();\n                } catch (e) {\n                }\n            }());\n        }\n    };\n    Html5.resetMediaElement = function (el) {\n        if (!el) {\n            return;\n        }\n        const sources = el.querySelectorAll('source');\n        let i = sources.length;\n        while (i--) {\n            el.removeChild(sources[i]);\n        }\n        el.removeAttribute('src');\n        if (typeof el.load === 'function') {\n            (function () {\n                try {\n                    el.load();\n                } catch (e) {\n                }\n            }());\n        }\n    };\n    [\n        'muted',\n        'defaultMuted',\n        'autoplay',\n        'controls',\n        'loop',\n        'playsinline'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop] || this.el_.hasAttribute(prop);\n        };\n    });\n    [\n        'muted',\n        'defaultMuted',\n        'autoplay',\n        'loop',\n        'playsinline'\n    ].forEach(function (prop) {\n        Html5.prototype['set' + stringCases.toTitleCase(prop)] = function (v) {\n            this.el_[prop] = v;\n            if (v) {\n                this.el_.setAttribute(prop, prop);\n            } else {\n                this.el_.removeAttribute(prop);\n            }\n        };\n    });\n    [\n        'paused',\n        'currentTime',\n        'buffered',\n        'volume',\n        'poster',\n        'preload',\n        'error',\n        'seeking',\n        'seekable',\n        'ended',\n        'playbackRate',\n        'defaultPlaybackRate',\n        'disablePictureInPicture',\n        'played',\n        'networkState',\n        'readyState',\n        'videoWidth',\n        'videoHeight',\n        'crossOrigin'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop];\n        };\n    });\n    [\n        'volume',\n        'src',\n        'poster',\n        'preload',\n        'playbackRate',\n        'defaultPlaybackRate',\n        'disablePictureInPicture',\n        'crossOrigin'\n    ].forEach(function (prop) {\n        Html5.prototype['set' + stringCases.toTitleCase(prop)] = function (v) {\n            this.el_[prop] = v;\n        };\n    });\n    [\n        'pause',\n        'load',\n        'play'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop]();\n        };\n    });\n    Tech.withSourceHandlers(Html5);\n    Html5.nativeSourceHandler = {};\n    Html5.nativeSourceHandler.canPlayType = function (type) {\n        try {\n            return Html5.TEST_VID.canPlayType(type);\n        } catch (e) {\n            return '';\n        }\n    };\n    Html5.nativeSourceHandler.canHandleSource = function (source, options) {\n        if (source.type) {\n            return Html5.nativeSourceHandler.canPlayType(source.type);\n        } else if (source.src) {\n            const ext = Url.getFileExtension(source.src);\n            return Html5.nativeSourceHandler.canPlayType(`video/${ ext }`);\n        }\n        return '';\n    };\n    Html5.nativeSourceHandler.handleSource = function (source, tech, options) {\n        tech.setSrc(source.src);\n    };\n    Html5.nativeSourceHandler.dispose = function () {\n    };\n    Html5.registerSourceHandler(Html5.nativeSourceHandler);\n    Tech.registerTech('Html5', Html5);\n    return Html5;\n});"]}