{"version":3,"sources":["utils/keycode.js"],"names":["define","keyCode","searchInput","hasKeyCode","which","charCode","names","foundNamedKey","search","String","codes","toLowerCase","aliases","length","charCodeAt","isEventKey","event","nameOrCode","undefined","exports","code","backspace","tab","enter","shift","ctrl","alt","pause/break","caps lock","esc","space","page up","page down","end","home","left","up","right","down","insert","delete","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","option","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","del","cmd","i","fromCharCode","title","alias"],"mappings":";;;;;;;AAAAA,UAAU,WAYR,SAASC,EAAQC,GAEf,GAAIA,GAAe,iBAAoBA,EAAa,CAClD,IAAIC,EAAaD,EAAYE,OAASF,EAAYD,SAAWC,EAAYG,SACrEF,IAAYD,EAAcC,GAIhC,GAAI,iBAAoBD,EAAa,OAAOI,EAAMJ,GAGlD,IAOIK,EAPAC,EAASC,OAAOP,GAIpB,OADIK,EAAgBG,EAAMF,EAAOG,gBACPJ,GAGtBA,EAAgBK,EAAQJ,EAAOG,kBAIb,IAAlBH,EAAOK,OAAqBL,EAAOM,WAAW,QAAlD,GAaFb,EAAQc,WAAa,SAAoBC,EAAOC,GAC9C,GAAID,GAAS,iBAAoBA,EAAO,CACtC,IAAIf,EAAUe,EAAMZ,OAASY,EAAMf,SAAWe,EAAMX,SACpD,GAAgB,OAAZJ,QAAgCiB,IAAZjB,EAAyB,OAAO,EACxD,GAA0B,iBAAfgB,EAAyB,CAElC,IAIIV,EAHJ,GADIA,EAAgBG,EAAMO,EAAWN,eAChB,OAAOJ,IAAkBN,EAI9C,GADIM,EAAgBK,EAAQK,EAAWN,eAClB,OAAOJ,IAAkBN,OACzC,GAA0B,iBAAfgB,EAChB,OAAOA,IAAehB,EAExB,OAAO,IAIX,IAAIkB,QAAUlB,EAQVS,EAAQS,QAAQC,KAAOD,QAAQT,OACjCW,UAAa,EACbC,IAAO,EACPC,MAAS,GACTC,MAAS,GACTC,KAAQ,GACRC,IAAO,GACPC,cAAe,GACfC,YAAa,GACbC,IAAO,GACPC,MAAS,GACTC,UAAW,GACXC,YAAa,GACbC,IAAO,GACPC,KAAQ,GACRC,KAAQ,GACRC,GAAM,GACNC,MAAS,GACTC,KAAQ,GACRC,OAAU,GACVC,OAAU,GACVC,QAAW,GACXC,eAAgB,GAChBC,gBAAiB,GACjBC,WAAY,IACZC,WAAY,IACZC,WAAY,IACZC,WAAY,IACZC,WAAY,IACZC,WAAY,IACZC,cAAe,IACfC,cAAe,IACfC,gBAAiB,IACjBC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,KAAM,IACNC,IAAK,IACLC,IAAK,KAKHnD,EAAUO,QAAQP,SACpBoD,QAAW,GACXC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,IAAO,GACPC,QAAW,GACXC,OAAU,GACVC,MAAS,GACTC,MAAS,GACTC,KAAQ,GACRC,OAAU,GACVC,OAAU,GACVC,IAAO,GACPC,SAAY,GACZC,KAAQ,GACRC,KAAQ,GACRC,IAAO,GACPC,IAAO,GACPC,IAAO,IAQT,IAAKC,EAAI,GAAIA,EAAI,IAAKA,IAAK1E,EAAMD,OAAO4E,aAAaD,IAAMA,EAAI,GAG/D,IAAK,IAAIA,EAAI,GAAIA,EAAI,GAAIA,IAAK1E,EAAM0E,EAAI,IAAMA,EAG9C,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAK1E,EAAM,IAAI0E,GAAKA,EAAI,IAG5C,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAAK1E,EAAM,UAAU0E,GAAKA,EAAI,GAQlD,IAAI9E,EAAQa,QAAQb,MAAQa,QAAQmE,SAGpC,IAAKF,KAAK1E,EAAOJ,EAAMI,EAAM0E,IAAMA,EAGnC,IAAK,IAAIG,KAAS3E,EAChBF,EAAM6E,GAAS3E,EAAQ2E,GAGzB,OAAOpE","file":"../../utils/keycode.js","sourcesContent":["define([],function(){\r\n  // Source: http://jsfiddle.net/vWx8V/\r\n  // http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\r\n\r\n  /**\r\n   * Conenience method returns corresponding value for given keyName or keyCode.\r\n   *\r\n   * @param {Mixed} keyCode {Number} or keyName {String}\r\n   * @return {Mixed}\r\n   * @api public\r\n   */\r\n\r\n  function keyCode(searchInput) {\r\n    // Keyboard Events\r\n    if (searchInput && 'object' === typeof searchInput) {\r\n      var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\r\n      if (hasKeyCode) searchInput = hasKeyCode\r\n    }\r\n\r\n    // Numbers\r\n    if ('number' === typeof searchInput) return names[searchInput]\r\n\r\n    // Everything else (cast to string)\r\n    var search = String(searchInput)\r\n\r\n    // check codes\r\n    var foundNamedKey = codes[search.toLowerCase()]\r\n    if (foundNamedKey) return foundNamedKey\r\n\r\n    // check aliases\r\n    var foundNamedKey = aliases[search.toLowerCase()]\r\n    if (foundNamedKey) return foundNamedKey\r\n\r\n    // weird character?\r\n    if (search.length === 1) return search.charCodeAt(0)\r\n\r\n    return undefined\r\n  }\r\n\r\n  /**\r\n   * Compares a keyboard event with a given keyCode or keyName.\r\n   *\r\n   * @param {Event} event Keyboard event that should be tested\r\n   * @param {Mixed} keyCode {Number} or keyName {String}\r\n   * @return {Boolean}\r\n   * @api public\r\n   */\r\n  keyCode.isEventKey = function isEventKey(event, nameOrCode) {\r\n    if (event && 'object' === typeof event) {\r\n      var keyCode = event.which || event.keyCode || event.charCode\r\n      if (keyCode === null || keyCode === undefined) { return false; }\r\n      if (typeof nameOrCode === 'string') {\r\n        // check codes\r\n        var foundNamedKey = codes[nameOrCode.toLowerCase()]\r\n        if (foundNamedKey) { return foundNamedKey === keyCode; }\r\n      \r\n        // check aliases\r\n        var foundNamedKey = aliases[nameOrCode.toLowerCase()]\r\n        if (foundNamedKey) { return foundNamedKey === keyCode; }\r\n      } else if (typeof nameOrCode === 'number') {\r\n        return nameOrCode === keyCode;\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  var exports = keyCode;\r\n\r\n  /**\r\n   * Get by name\r\n   *\r\n   *   exports.code['enter'] // => 13\r\n   */\r\n\r\n  var codes = exports.code = exports.codes = {\r\n    'backspace': 8,\r\n    'tab': 9,\r\n    'enter': 13,\r\n    'shift': 16,\r\n    'ctrl': 17,\r\n    'alt': 18,\r\n    'pause/break': 19,\r\n    'caps lock': 20,\r\n    'esc': 27,\r\n    'space': 32,\r\n    'page up': 33,\r\n    'page down': 34,\r\n    'end': 35,\r\n    'home': 36,\r\n    'left': 37,\r\n    'up': 38,\r\n    'right': 39,\r\n    'down': 40,\r\n    'insert': 45,\r\n    'delete': 46,\r\n    'command': 91,\r\n    'left command': 91,\r\n    'right command': 93,\r\n    'numpad *': 106,\r\n    'numpad +': 107,\r\n    'numpad -': 109,\r\n    'numpad .': 110,\r\n    'numpad /': 111,\r\n    'num lock': 144,\r\n    'scroll lock': 145,\r\n    'my computer': 182,\r\n    'my calculator': 183,\r\n    ';': 186,\r\n    '=': 187,\r\n    ',': 188,\r\n    '-': 189,\r\n    '.': 190,\r\n    '/': 191,\r\n    '`': 192,\r\n    '[': 219,\r\n    '\\\\': 220,\r\n    ']': 221,\r\n    \"'\": 222\r\n  }\r\n\r\n  // Helper aliases\r\n\r\n  var aliases = exports.aliases = {\r\n    'windows': 91,\r\n    '⇧': 16,\r\n    '⌥': 18,\r\n    '⌃': 17,\r\n    '⌘': 91,\r\n    'ctl': 17,\r\n    'control': 17,\r\n    'option': 18,\r\n    'pause': 19,\r\n    'break': 19,\r\n    'caps': 20,\r\n    'return': 13,\r\n    'escape': 27,\r\n    'spc': 32,\r\n    'spacebar': 32,\r\n    'pgup': 33,\r\n    'pgdn': 34,\r\n    'ins': 45,\r\n    'del': 46,\r\n    'cmd': 91\r\n  }\r\n\r\n  /*!\r\n   * Programatically add the following\r\n   */\r\n\r\n  // lower case chars\r\n  for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\r\n\r\n  // numbers\r\n  for (var i = 48; i < 58; i++) codes[i - 48] = i\r\n\r\n  // function keys\r\n  for (i = 1; i < 13; i++) codes['f'+i] = i + 111\r\n\r\n  // numpad keys\r\n  for (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\r\n\r\n  /**\r\n   * Get by code\r\n   *\r\n   *   exports.name[13] // => 'Enter'\r\n   */\r\n\r\n  var names = exports.names = exports.title = {} // title for backward compat\r\n\r\n  // Create reverse mapping\r\n  for (i in codes) names[codes[i]] = i\r\n\r\n  // Add aliases\r\n  for (var alias in aliases) {\r\n    codes[alias] = aliases[alias]\r\n  }\r\n\r\n  return exports;\r\n\r\n});"]}