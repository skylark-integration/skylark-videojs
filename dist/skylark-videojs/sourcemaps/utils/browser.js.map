{"version":3,"sources":["utils/browser.js"],"names":["define","window","document","isReal","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPOD","test","IOS_VERSION","match","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","result","version","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","Boolean","maxTouchPoints","DocumentTouch","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI"],"mappings":";;;;;;;AAAAA,QACI,+BACA,kCACD,SAAUC,EAAOC,GAChB,aAEA,SAASC,IACL,OAAOD,IAAaD,EAAOC,SAG/B,MAAME,EAAaH,EAAOI,WAAaJ,EAAOI,UAAUC,WAAa,GAC/DC,EAAmB,yBAAyBC,KAAKJ,GACjDK,EAAqBF,EAAmBG,WAAWH,EAAiBI,OAAS,KAC7EC,EAAU,QAAQC,KAAKT,GACvBU,EAAc,WAChB,MAAMC,EAAQX,EAAWW,MAAM,cAC/B,OAAIA,GAASA,EAAM,GACRA,EAAM,GAEV,KALS,GAOdC,EAAa,WAAWH,KAAKT,GAC7Ba,EAAkB,WACpB,MAAMF,EAAQX,EAAWW,MAAM,0CAC/B,IAAKA,EACD,OAAO,KAEX,MAAMG,EAAQH,EAAM,IAAML,WAAWK,EAAM,IACrCI,EAAQJ,EAAM,IAAML,WAAWK,EAAM,IAC3C,OAAIG,GAASC,EACFT,WAAWK,EAAM,GAAK,IAAMA,EAAM,IAClCG,GAGJ,KAZa,GAclBE,EAAoBJ,GAAcC,EAAkB,GAAKR,EAAqB,IAC9EY,EAAa,WAAWR,KAAKT,GAC7BkB,EAAU,OAAOT,KAAKT,GACtBmB,GAAaD,IAAY,UAAUT,KAAKT,IAAe,SAASS,KAAKT,IACrEoB,EAAiB,WACnB,MAAMT,EAAQX,EAAWW,MAAM,yBAC/B,OAAIA,GAASA,EAAM,GACRL,WAAWK,EAAM,IAErB,KALY,GAOjBU,EAAa,WACf,MAAMC,EAAS,kBAAkBlB,KAAKJ,GACtC,IAAIuB,EAAUD,GAAUhB,WAAWgB,EAAO,IAI1C,OAHKC,GAAW,gBAAgBd,KAAKT,IAAe,UAAUS,KAAKT,KAC/DuB,EAAU,IAEPA,EANQ,GAQbC,EAAY,UAAUf,KAAKT,KAAgBmB,IAAcP,IAAeM,EACxEO,EAAa,WAAWhB,KAAKT,GAC7B0B,EAAgBC,QAAQ5B,MAAa,iBAAkBF,GAAUA,EAAOI,UAAU2B,gBAAkB/B,EAAOgC,eAAiBhC,EAAOC,oBAAoBD,EAAOgC,gBAC9JC,EAAU,QAAQrB,KAAKT,IAAewB,GAAaE,IAAkB,UAAUjB,KAAKT,GACpF+B,EAAY,UAAUtB,KAAKT,KAAgB8B,EAC3CE,EAASD,GAAaD,GAAWtB,EAEvC,OACIA,QAASA,EACTE,YAAaA,EACbE,WAAYA,EACZC,gBAAiBA,EACjBG,kBAAmBA,EACnBC,WAAYA,EACZC,QAASA,EACTC,UAAWA,EACXC,eAAgBA,EAChBC,WAAYA,EACZG,UAAWA,EACXC,WAAYA,EACZC,cAAeA,EACfI,QAASA,EACTC,UAAWA,EACXC,OAAQA,EACRC,eAlBmBT,GAAaQ,KAAYb,EAoB5CpB,OAAAA","file":"../../utils/browser.js","sourcesContent":["define([\n    \"skylark-langx-globals/window\",\n    \"skylark-langx-globals/document\"\n], function (window,document) {\n    'use strict';\n\n    function isReal() {\n        return document === window.document;\n    }\n\n    const USER_AGENT = window.navigator && window.navigator.userAgent || '';\n    const webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\n    const appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n    const IS_IPOD = /iPod/i.test(USER_AGENT);\n    const IOS_VERSION = function () {\n        const match = USER_AGENT.match(/OS (\\d+)_/i);\n        if (match && match[1]) {\n            return match[1];\n        }\n        return null;\n    }();\n    const IS_ANDROID = /Android/i.test(USER_AGENT);\n    const ANDROID_VERSION = function () {\n        const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n        if (!match) {\n            return null;\n        }\n        const major = match[1] && parseFloat(match[1]);\n        const minor = match[2] && parseFloat(match[2]);\n        if (major && minor) {\n            return parseFloat(match[1] + '.' + match[2]);\n        } else if (major) {\n            return major;\n        }\n        return null;\n    }();\n    const IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n    const IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n    const IS_EDGE = /Edg/i.test(USER_AGENT);\n    const IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n    const CHROME_VERSION = function () {\n        const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n        if (match && match[2]) {\n            return parseFloat(match[2]);\n        }\n        return null;\n    }();\n    const IE_VERSION = function () {\n        const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n        let version = result && parseFloat(result[1]);\n        if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n            version = 11;\n        }\n        return version;\n    }();\n    const IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n    const IS_WINDOWS = /Windows/i.test(USER_AGENT);\n    const TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch));\n    const IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n    const IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n    const IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n    const IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n    return {\n        IS_IPOD: IS_IPOD,\n        IOS_VERSION: IOS_VERSION,\n        IS_ANDROID: IS_ANDROID,\n        ANDROID_VERSION: ANDROID_VERSION,\n        IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n        IS_FIREFOX: IS_FIREFOX,\n        IS_EDGE: IS_EDGE,\n        IS_CHROME: IS_CHROME,\n        CHROME_VERSION: CHROME_VERSION,\n        IE_VERSION: IE_VERSION,\n        IS_SAFARI: IS_SAFARI,\n        IS_WINDOWS: IS_WINDOWS,\n        TOUCH_ENABLED: TOUCH_ENABLED,\n        IS_IPAD: IS_IPAD,\n        IS_IPHONE: IS_IPHONE,\n        IS_IOS: IS_IOS,\n        IS_ANY_SAFARI: IS_ANY_SAFARI,\n\n        isReal\n    };\n});"]}