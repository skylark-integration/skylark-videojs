{"version":3,"sources":["player.js"],"names":["define","document","Component","evented","Events","Dom","Fn","Guid","browser","log","stringCases","timeRages","buffer","stylesheet","FullscreenApi","MediaError","safeParseTuple","obj","mergeOptions","promise","textTrackConverter","ModalDialog","Tech","middleware","TRACK_TYPES","filterSource","mimetypes","keycode","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","forEach","k","v","charAt","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","Infinity","Player","[object Object]","tag","options","ready","id","newGUID","assign","getTagSettings","initChildren","createEl","reportTouchActivity","language","closest","getAttribute","element","nodeType","getAttributes","hasOwnProperty","parentNode","super","this","boundDocumentFullscreenChange_","e","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isFullscreen_","createLogger","id_","fsApi_","isPosterFromTech_","queuedCallbacks_","isReady_","hasStarted_","userActive_","debugEnabled_","options_","techOrder","length","Error","tagAttributes","languages","languagesToLower","Object","getOwnPropertyNames","name","toLowerCase","languages_","prototype","resetCache_","poster_","poster","controls_","controls","removeAttribute","changingSrc_","playCallbacks_","playTerminatedQueue_","hasAttribute","autoplay","plugins","keys","scrubbing_","el_","eventBusKey","requestFullscreen","on","fullscreenchange","fluid_","updateStyleEl_","playerOptionsCopy","debug","playerOptions","middleware_","isAudio","nodeName","addClass","setAttribute","localize","flexNotSupported_","TOUCH_ENABLED","IS_IOS","players","userActive","reportUserActivity","one","listenForUserActivity_","handleStageClick_","handleKeyDown","handleLanguagechange","breakpoints","responsive","trigger","off","styleEl_","removeChild","player","tech_","dispose","playerElIngest_","clearCacheForPlayer","ALL","names","list","getterName","el","playerElIngest","divEmbed","tagName","attrs","createElement","children","appendChild","firstChild","hasClass","tabindex","IE_VERSION","IS_CHROME","IS_WINDOWS","role","width","height","attr","playerId","className","window","VIDEOJS_NO_DYNAMIC_STYLE","createStyleElement","defaultsStyleEl","$","head","insertBefore","nextSibling","fill_","fill","fluid","aspectRatio","crossOrigin","crossorigin","links","getElementsByTagName","i","linkEl","item","initNetworkState_","networkState","prependTo","children_","unshift","language_","value","techGet_","techCall_","warn","dimension","privDimension","undefined","parsedVal","parseFloat","isNaN","error","bool","isEvented","addEventedCallback","removeClass","ratio","aspectRatio_","test","width_","height_","techEl","idClass","ratioParts","videoWidth","videoHeight","split","ratioMultiplier","setTextContent","techName","source","unloadTech_","titleTechName","toTitleCase","camelTechName","slice","getTech","disposeMediaElement","techName_","techOptions","nativeControlsForTouch","techId","playsinline","preload","loop","disablePictureInPicture","muted","vtt.js","canOverridePoster","techCanOverridePoster","enableSourceset","Promise","props","privateName","src","cache_","currentTime","startTime","TechClass","bind","handleTechReady_","jsonToTextTracks","textTracksJson_","event","eventObj","playbackRate","seeking","push","callback","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","textTracksToJson","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","triggerReady","volume","paused","hasStarted","manualAutoplay_","type","previouslyMuted","restoreMuted","mutedPromise","play","isPromise","catch","then","srcObj","sources","findMimetype","matchingSources","filter","s","sourceElSources","sourceEls","$$","matchingSourceEls","sourceObj","updateSourceCaches","updateSourceCaches_","playerSrc","currentSource","eventSrc","lastSource_","tech","any","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","starttime","pause","duration","isSingleLeftClick","silencePromise","Array","some","call","contains","target","userActions","doubleClick","isFullscreen","exitFullscreen","userWasActive","cancelable","preventDefault","targetPlayer","isFs","fullscreenElement","matches","fullscreen","msMatchesSelector","data","nativeIOSFullscreen","toggleClass","err","isInPictureInPicture","arguments","initTime","inactivityTimeout","NaN","lastVolume","defaultPlaybackRate","media","method","arg","allowedSetters","set","allowedMediators","mediate","allowedGetters","get","PromiseClass","resolve","play_","isSrcReady","Boolean","currentSrc","waitToPlay_","IS_ANY_SAFARI","load","val","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","cb","createTimeRange","isScrubbing","seconds","applyInitTime_","Math","floor","buffered","bufferedPercent","end","percentAsDecimal","vol","max","min","lastVolume_","defaultMuted","isFS","oldValue","prefixed","toggleFullscreenClass_","fullscreenOptions","self","reject","offHandler","errorHandler","changeHandler","requestFullscreenHelper_","fsOptions","supportsFullScreen","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","documentElement","style","overflow","body","isEventKey","isPiP","isInPictureInPicture_","togglePictureInPictureClass_","exitPictureInPicture","hotkeys","isContentEditable","indexOf","excludeElement","ownerDocument","activeElement","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","stopPropagation","FSToggle","getComponent","fullscreenEnabled","handleClick","can","j","isSupported","canPlayType","techs","map","findFirstPassingTechSourcePair","outerArray","innerArray","tester","found","outerChoice","innerChoice","foundSourceAndTech","finder","canPlaySource","sourceOrder","fn","a","b","flip","setSource","middlewareSource","mws","src_","setTimeout","code","message","notSupportedMessage","setTech","sourceTech","selectSource","titleCaseEquals","constructor","loadTech_","doReset_","playPromise","clearTracks","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","durationDisplay","remainingTimeDisplay","controlBar","updateContent","techAutoplay","newPoster","usingNativeControls_","error_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","close","errorTypes","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","clearInterval","setInterval","screenX","screenY","getChild","IS_ANDROID","clearTimeout","timeout","rate","featuresPlaybackRate","isAudio_","kind","label","addTextTrack","manualCleanup","addRemoteTextTrack","track","removeRemoteTextTrack","String","tracks","content","modal","addChild","open","currentBreakpoint","currentWidth","candidateBreakpoint","breakpoints_","breakpoint_","currentBreakpointClass","updateCurrentBreakpoint_","responsive_","removeCurrentBreakpoint_","reset","artwork","textTracks","getMimetype","isArray","tt","currentSources","remoteTextTracks","baseOptions","tagOptions","dataSetup","hasChildNodes","childNodes","child","childName","elem","enabled","previousLogLevel_","level","ListClass","navigator","defaultTechOrder_","html5","playbackRates","liveui","userLanguage","navigationUI","registerComponent"],"mappings":";;;;;;;AAAAA,QACI,iCACA,cACA,mBACA,iBACA,cACA,aACA,eACA,kBACA,cACA,uBACA,sBACA,iBACA,qBACA,mBACA,gBACA,yBACA,cACA,wBACA,kBACA,qCACA,iBACA,cACA,oBACA,uBACA,wBACA,oBACA,kBACA,gBACA,iBACA,8BACA,oBACA,oBACA,iBACA,4BACA,kBACA,+BACA,mBACA,iBACA,gBACD,SACCC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,aACA,MAAMC,GACF,WACA,QACA,UACA,UACA,UACA,iBACA,aACA,aACA,SACA,eACA,mBAEEC,GACFC,QAAS,UACTC,eAAgB,iBAChBC,QAAS,UACTC,OAAQ,UAENC,GACF,OACA,SACA,QACA,SACA,QACA,SACA,QAEEC,KACND,EAAiBE,QAAQC,IACrB,MAAMC,EAAoB,MAAhBD,EAAEE,OAAO,QAAmBF,EAAEG,UAAU,KAAQH,EAC1DF,EAAmBE,iBAAoBC,MAE3C,MAAMG,GACFC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,MAAO,KACPC,OAAQ,KACRC,KAAMC,EAAAA,SAEJC,UAAehD,EACjBiD,YAAYC,EAAKC,EAASC,GAOtB,GANAF,EAAIG,GAAKH,EAAIG,IAAMF,EAAQE,iBAAoBhD,EAAKiD,aACpDH,EAAUpC,EAAIwC,OAAOP,EAAOQ,eAAeN,GAAMC,IACzCM,cAAe,EACvBN,EAAQO,UAAW,EACnBP,EAAQlD,SAAU,EAClBkD,EAAQQ,qBAAsB,GACzBR,EAAQS,SACT,GAA2B,mBAAhBV,EAAIW,QAAwB,CACnC,MAAMA,EAAUX,EAAIW,QAAQ,UACxBA,GAAWA,EAAQC,eACnBX,EAAQS,SAAWC,EAAQC,aAAa,aAEzC,CACH,IAAIC,EAAUb,EACd,KAAOa,GAAgC,IAArBA,EAAQC,UAAgB,CACtC,GAAI7D,EAAI8D,cAAcF,GAAS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","file":"../player.js","sourcesContent":["define([\n    'skylark-langx-globals/document',\n    './component',\n    './mixins/evented',\n    './utils/events',\n    './utils/dom',\n    './utils/fn',\n    './utils/guid',\n    './utils/browser',\n    './utils/log',\n    './utils/string-cases',\n    './utils/time-ranges',\n    './utils/buffer',\n    './utils/stylesheet',\n    './fullscreen-api',\n    './media-error',\n    './utils/safeParseTuple',\n    './utils/obj',\n    './utils/merge-options',\n    './utils/promise',\n    './tracks/text-track-list-converter',\n    './modal-dialog',\n    './tech/tech',\n    './tech/middleware',\n    './tracks/track-types',\n    './utils/filter-source',\n    './utils/mimetypes',\n    './utils/keycode',\n    './tech/loader',\n    './poster-image',\n    './tracks/text-track-display',\n    './loading-spinner',\n    './big-play-button',\n    './close-button',\n    './control-bar/control-bar',\n    './error-display',\n    './tracks/text-track-settings',\n    './resize-manager',\n    './live-tracker',\n    './tech/html5'\n], function (\n    document,\n    Component,\n    evented, \n    Events, \n    Dom, \n    Fn, \n    Guid, \n    browser, \n    log, \n    stringCases, \n    timeRages, \n    buffer, \n    stylesheet, \n    FullscreenApi, \n    MediaError, \n    safeParseTuple, \n    obj, \n    mergeOptions, \n    promise, \n    textTrackConverter, \n    ModalDialog, \n    Tech, \n    middleware, \n    TRACK_TYPES, \n    filterSource, \n    mimetypes, \n    keycode\n) {\n    'use strict';\n    const TECH_EVENTS_RETRIGGER = [\n        'progress',\n        'abort',\n        'suspend',\n        'emptied',\n        'stalled',\n        'loadedmetadata',\n        'loadeddata',\n        'timeupdate',\n        'resize',\n        'volumechange',\n        'texttrackchange'\n    ];\n    const TECH_EVENTS_QUEUE = {\n        canplay: 'CanPlay',\n        canplaythrough: 'CanPlayThrough',\n        playing: 'Playing',\n        seeked: 'Seeked'\n    };\n    const BREAKPOINT_ORDER = [\n        'tiny',\n        'xsmall',\n        'small',\n        'medium',\n        'large',\n        'xlarge',\n        'huge'\n    ];\n    const BREAKPOINT_CLASSES = {};\n    BREAKPOINT_ORDER.forEach(k => {\n        const v = k.charAt(0) === 'x' ? `x-${ k.substring(1) }` : k;\n        BREAKPOINT_CLASSES[k] = `vjs-layout-${ v }`;\n    });\n    const DEFAULT_BREAKPOINTS = {\n        tiny: 210,\n        xsmall: 320,\n        small: 425,\n        medium: 768,\n        large: 1440,\n        xlarge: 2560,\n        huge: Infinity\n    };\n    class Player extends Component {\n        constructor(tag, options, ready) {\n            tag.id = tag.id || options.id || `vjs_video_${ Guid.newGUID() }`;\n            options = obj.assign(Player.getTagSettings(tag), options);\n            options.initChildren = false;\n            options.createEl = false;\n            options.evented = false;\n            options.reportTouchActivity = false;\n            if (!options.language) {\n                if (typeof tag.closest === 'function') {\n                    const closest = tag.closest('[lang]');\n                    if (closest && closest.getAttribute) {\n                        options.language = closest.getAttribute('lang');\n                    }\n                } else {\n                    let element = tag;\n                    while (element && element.nodeType === 1) {\n                        if (Dom.getAttributes(element).hasOwnProperty('lang')) {\n                            options.language = element.getAttribute('lang');\n                            break;\n                        }\n                        element = element.parentNode;\n                    }\n                }\n            }\n            super(null, options, ready);\n            this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n            this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n            this.isFullscreen_ = false;\n            this.log = log.createLogger(this.id_);\n            this.fsApi_ = FullscreenApi;\n            this.isPosterFromTech_ = false;\n            this.queuedCallbacks_ = [];\n            this.isReady_ = false;\n            this.hasStarted_ = false;\n            this.userActive_ = false;\n            this.debugEnabled_ = false;\n            if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n                throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n            }\n            this.tag = tag;\n            this.tagAttributes = tag && Dom.getAttributes(tag);\n            this.language(this.options_.language);\n            if (options.languages) {\n                const languagesToLower = {};\n                Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n                    languagesToLower[name.toLowerCase()] = options.languages[name];\n                });\n                this.languages_ = languagesToLower;\n            } else {\n                this.languages_ = Player.prototype.options_.languages;\n            }\n            this.resetCache_();\n            this.poster_ = options.poster || '';\n            this.controls_ = !!options.controls;\n            tag.controls = false;\n            tag.removeAttribute('controls');\n            this.changingSrc_ = false;\n            this.playCallbacks_ = [];\n            this.playTerminatedQueue_ = [];\n            if (tag.hasAttribute('autoplay')) {\n                this.autoplay(true);\n            } else {\n                this.autoplay(this.options_.autoplay);\n            }\n            if (options.plugins) {\n                Object.keys(options.plugins).forEach(name => {\n                    if (typeof this[name] !== 'function') {\n                        throw new Error(`plugin \"${ name }\" does not exist`);\n                    }\n                });\n            }\n            this.scrubbing_ = false;\n            this.el_ = this.createEl();\n            evented(this, { eventBusKey: 'el_' });\n            if (this.fsApi_.requestFullscreen) {\n                Events.on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n                this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n            }\n            if (this.fluid_) {\n                this.on([\n                    'playerreset',\n                    'resize'\n                ], this.updateStyleEl_);\n            }\n            const playerOptionsCopy = mergeOptions(this.options_);\n            if (options.plugins) {\n                Object.keys(options.plugins).forEach(name => {\n                    this[name](options.plugins[name]);\n                });\n            }\n            if (options.debug) {\n                this.debug(true);\n            }\n            this.options_.playerOptions = playerOptionsCopy;\n            this.middleware_ = [];\n            this.initChildren();\n            this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n            if (this.controls()) {\n                this.addClass('vjs-controls-enabled');\n            } else {\n                this.addClass('vjs-controls-disabled');\n            }\n            this.el_.setAttribute('role', 'region');\n            if (this.isAudio()) {\n                this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n            } else {\n                this.el_.setAttribute('aria-label', this.localize('Video Player'));\n            }\n            if (this.isAudio()) {\n                this.addClass('vjs-audio');\n            }\n            if (this.flexNotSupported_()) {\n                this.addClass('vjs-no-flex');\n            }\n            if (browser.TOUCH_ENABLED) {\n                this.addClass('vjs-touch-enabled');\n            }\n            if (!browser.IS_IOS) {\n                this.addClass('vjs-workinghover');\n            }\n            Player.players[this.id_] = this;\n            const majorVersion = \"7\";\n            this.addClass(`vjs-v${ majorVersion }`);\n            this.userActive(true);\n            this.reportUserActivity();\n            this.one('play', this.listenForUserActivity_);\n            this.on('stageclick', this.handleStageClick_);\n            this.on('keydown', this.handleKeyDown);\n            this.on('languagechange', this.handleLanguagechange);\n            this.breakpoints(this.options_.breakpoints);\n            this.responsive(this.options_.responsive);\n        }\n        dispose() {\n            this.trigger('dispose');\n            this.off('dispose');\n            Events.off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n            Events.off(document, 'keydown', this.boundFullWindowOnEscKey_);\n            if (this.styleEl_ && this.styleEl_.parentNode) {\n                this.styleEl_.parentNode.removeChild(this.styleEl_);\n                this.styleEl_ = null;\n            }\n            Player.players[this.id_] = null;\n            if (this.tag && this.tag.player) {\n                this.tag.player = null;\n            }\n            if (this.el_ && this.el_.player) {\n                this.el_.player = null;\n            }\n            if (this.tech_) {\n                this.tech_.dispose();\n                this.isPosterFromTech_ = false;\n                this.poster_ = '';\n            }\n            if (this.playerElIngest_) {\n                this.playerElIngest_ = null;\n            }\n            if (this.tag) {\n                this.tag = null;\n            }\n            middleware.clearCacheForPlayer(this);\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES[name];\n                const list = this[props.getterName]();\n                if (list && list.off) {\n                    list.off();\n                }\n            });\n            super.dispose();\n        }\n        createEl() {\n            let tag = this.tag;\n            let el;\n            let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n            const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n            if (playerElIngest) {\n                el = this.el_ = tag.parentNode;\n            } else if (!divEmbed) {\n                el = this.el_ = super.createEl('div');\n            }\n            const attrs = Dom.getAttributes(tag);\n            if (divEmbed) {\n                el = this.el_ = tag;\n                tag = this.tag = document.createElement('video');\n                while (el.children.length) {\n                    tag.appendChild(el.firstChild);\n                }\n                if (!Dom.hasClass(el, 'video-js')) {\n                    Dom.addClass(el, 'video-js');\n                }\n                el.appendChild(tag);\n                playerElIngest = this.playerElIngest_ = el;\n                Object.keys(el).forEach(k => {\n                    try {\n                        tag[k] = el[k];\n                    } catch (e) {\n                    }\n                });\n            }\n            tag.setAttribute('tabindex', '-1');\n            attrs.tabindex = '-1';\n            if (browser.IE_VERSION || browser.IS_CHROME && browser.IS_WINDOWS) {\n                tag.setAttribute('role', 'application');\n                attrs.role = 'application';\n            }\n            tag.removeAttribute('width');\n            tag.removeAttribute('height');\n            if ('width' in attrs) {\n                delete attrs.width;\n            }\n            if ('height' in attrs) {\n                delete attrs.height;\n            }\n            Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n                if (!(divEmbed && attr === 'class')) {\n                    el.setAttribute(attr, attrs[attr]);\n                }\n                if (divEmbed) {\n                    tag.setAttribute(attr, attrs[attr]);\n                }\n            });\n            tag.playerId = tag.id;\n            tag.id += '_html5_api';\n            tag.className = 'vjs-tech';\n            tag.player = el.player = this;\n            this.addClass('vjs-paused');\n            if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n                this.styleEl_ = stylesheet.createStyleElement('vjs-styles-dimensions');\n                const defaultsStyleEl = Dom.$('.vjs-styles-defaults');\n                const head = Dom.$('head');\n                head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n            }\n            this.fill_ = false;\n            this.fluid_ = false;\n            this.width(this.options_.width);\n            this.height(this.options_.height);\n            this.fill(this.options_.fill);\n            this.fluid(this.options_.fluid);\n            this.aspectRatio(this.options_.aspectRatio);\n            this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n            const links = tag.getElementsByTagName('a');\n            for (let i = 0; i < links.length; i++) {\n                const linkEl = links.item(i);\n                Dom.addClass(linkEl, 'vjs-hidden');\n                linkEl.setAttribute('hidden', 'hidden');\n            }\n            tag.initNetworkState_ = tag.networkState;\n            if (tag.parentNode && !playerElIngest) {\n                tag.parentNode.insertBefore(el, tag);\n            }\n            Dom.prependTo(tag, el);\n            this.children_.unshift(tag);\n            this.el_.setAttribute('lang', this.language_);\n            this.el_ = el;\n            return el;\n        }\n        crossOrigin(value) {\n            if (!value) {\n                return this.techGet_('crossOrigin');\n            }\n            if (value !== 'anonymous' && value !== 'use-credentials') {\n                log.warn(`crossOrigin must be \"anonymous\" or \"use-credentials\", given \"${ value }\"`);\n                return;\n            }\n            this.techCall_('setCrossOrigin', value);\n            return;\n        }\n        width(value) {\n            return this.dimension('width', value);\n        }\n        height(value) {\n            return this.dimension('height', value);\n        }\n        dimension(dimension, value) {\n            const privDimension = dimension + '_';\n            if (value === undefined) {\n                return this[privDimension] || 0;\n            }\n            if (value === '' || value === 'auto') {\n                this[privDimension] = undefined;\n                this.updateStyleEl_();\n                return;\n            }\n            const parsedVal = parseFloat(value);\n            if (isNaN(parsedVal)) {\n                log.error(`Improper value \"${ value }\" supplied for for ${ dimension }`);\n                return;\n            }\n            this[privDimension] = parsedVal;\n            this.updateStyleEl_();\n        }\n        fluid(bool) {\n            if (bool === undefined) {\n                return !!this.fluid_;\n            }\n            this.fluid_ = !!bool;\n            if (evented.isEvented(this)) {\n                this.off([\n                    'playerreset',\n                    'resize'\n                ], this.updateStyleEl_);\n            }\n            if (bool) {\n                this.addClass('vjs-fluid');\n                this.fill(false);\n                evented.addEventedCallback(this, () => {\n                    this.on([\n                        'playerreset',\n                        'resize'\n                    ], this.updateStyleEl_);\n                });\n            } else {\n                this.removeClass('vjs-fluid');\n            }\n            this.updateStyleEl_();\n        }\n        fill(bool) {\n            if (bool === undefined) {\n                return !!this.fill_;\n            }\n            this.fill_ = !!bool;\n            if (bool) {\n                this.addClass('vjs-fill');\n                this.fluid(false);\n            } else {\n                this.removeClass('vjs-fill');\n            }\n        }\n        aspectRatio(ratio) {\n            if (ratio === undefined) {\n                return this.aspectRatio_;\n            }\n            if (!/^\\d+\\:\\d+$/.test(ratio)) {\n                throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n            }\n            this.aspectRatio_ = ratio;\n            this.fluid(true);\n            this.updateStyleEl_();\n        }\n        updateStyleEl_() {\n            if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n                const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n                const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n                const techEl = this.tech_ && this.tech_.el();\n                if (techEl) {\n                    if (width >= 0) {\n                        techEl.width = width;\n                    }\n                    if (height >= 0) {\n                        techEl.height = height;\n                    }\n                }\n                return;\n            }\n            let width;\n            let height;\n            let aspectRatio;\n            let idClass;\n            if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n                aspectRatio = this.aspectRatio_;\n            } else if (this.videoWidth() > 0) {\n                aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n            } else {\n                aspectRatio = '16:9';\n            }\n            const ratioParts = aspectRatio.split(':');\n            const ratioMultiplier = ratioParts[1] / ratioParts[0];\n            if (this.width_ !== undefined) {\n                width = this.width_;\n            } else if (this.height_ !== undefined) {\n                width = this.height_ / ratioMultiplier;\n            } else {\n                width = this.videoWidth() || 300;\n            }\n            if (this.height_ !== undefined) {\n                height = this.height_;\n            } else {\n                height = width * ratioMultiplier;\n            }\n            if (/^[^a-zA-Z]/.test(this.id())) {\n                idClass = 'dimensions-' + this.id();\n            } else {\n                idClass = this.id() + '-dimensions';\n            }\n            this.addClass(idClass);\n            stylesheet.setTextContent(this.styleEl_, `\n      .${ idClass } {\n        width: ${ width }px;\n        height: ${ height }px;\n      }\n\n      .${ idClass }.vjs-fluid {\n        padding-top: ${ ratioMultiplier * 100 }%;\n      }\n    `);\n        }\n        loadTech_(techName, source) {\n            if (this.tech_) {\n                this.unloadTech_();\n            }\n            const titleTechName = stringCases.toTitleCase(techName);\n            const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n            if (titleTechName !== 'Html5' && this.tag) {\n                Tech.getTech('Html5').disposeMediaElement(this.tag);\n                this.tag.player = null;\n                this.tag = null;\n            }\n            this.techName_ = titleTechName;\n            this.isReady_ = false;\n            const autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n            const techOptions = {\n                source,\n                autoplay,\n                'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n                'playerId': this.id(),\n                'techId': `${ this.id() }_${ camelTechName }_api`,\n                'playsinline': this.options_.playsinline,\n                'preload': this.options_.preload,\n                'loop': this.options_.loop,\n                'disablePictureInPicture': this.options_.disablePictureInPicture,\n                'muted': this.options_.muted,\n                'poster': this.poster(),\n                'language': this.language(),\n                'playerElIngest': this.playerElIngest_ || false,\n                'vtt.js': this.options_['vtt.js'],\n                'canOverridePoster': !!this.options_.techCanOverridePoster,\n                'enableSourceset': this.options_.enableSourceset,\n                'Promise': this.options_.Promise\n            };\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                techOptions[props.getterName] = this[props.privateName];\n            });\n            obj.assign(techOptions, this.options_[titleTechName]);\n            obj.assign(techOptions, this.options_[camelTechName]);\n            obj.assign(techOptions, this.options_[techName.toLowerCase()]);\n            if (this.tag) {\n                techOptions.tag = this.tag;\n            }\n            if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n                techOptions.startTime = this.cache_.currentTime;\n            }\n            const TechClass = Tech.getTech(techName);\n            if (!TechClass) {\n                throw new Error(`No Tech named '${ titleTechName }' exists! '${ titleTechName }' should be registered using videojs.registerTech()'`);\n            }\n            this.tech_ = new TechClass(techOptions);\n            this.tech_.ready(Fn.bind(this, this.handleTechReady_), true);\n            textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n            TECH_EVENTS_RETRIGGER.forEach(event => {\n                this.on(this.tech_, event, this[`handleTech${ stringCases.toTitleCase(event) }_`]);\n            });\n            Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n                this.on(this.tech_, event, eventObj => {\n                    if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n                        this.queuedCallbacks_.push({\n                            callback: this[`handleTech${ TECH_EVENTS_QUEUE[event] }_`].bind(this),\n                            event: eventObj\n                        });\n                        return;\n                    }\n                    this[`handleTech${ TECH_EVENTS_QUEUE[event] }_`](eventObj);\n                });\n            });\n            this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n            this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n            this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n            this.on(this.tech_, 'ended', this.handleTechEnded_);\n            this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n            this.on(this.tech_, 'play', this.handleTechPlay_);\n            this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n            this.on(this.tech_, 'pause', this.handleTechPause_);\n            this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n            this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n            this.on(this.tech_, 'fullscreenerror', this.handleTechFullscreenError_);\n            this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n            this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n            this.on(this.tech_, 'error', this.handleTechError_);\n            this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n            this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n            this.on(this.tech_, 'textdata', this.handleTechTextData_);\n            this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n            this.usingNativeControls(this.techGet_('controls'));\n            if (this.controls() && !this.usingNativeControls()) {\n                this.addTechControlsListeners_();\n            }\n            if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n                Dom.prependTo(this.tech_.el(), this.el());\n            }\n            if (this.tag) {\n                this.tag.player = null;\n                this.tag = null;\n            }\n        }\n        unloadTech_() {\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                this[props.privateName] = this[props.getterName]();\n            });\n            this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n            this.isReady_ = false;\n            this.tech_.dispose();\n            this.tech_ = false;\n            if (this.isPosterFromTech_) {\n                this.poster_ = '';\n                this.trigger('posterchange');\n            }\n            this.isPosterFromTech_ = false;\n        }\n        tech(safety) {\n            if (safety === undefined) {\n                log.warn(\"Using the tech directly can be dangerous. I hope you know what you're doing.\\n\" + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n            }\n            return this.tech_;\n        }\n        addTechControlsListeners_() {\n            this.removeTechControlsListeners_();\n            this.on(this.tech_, 'mouseup', this.handleTechClick_);\n            this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n            this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n            this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n            this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n            this.on(this.tech_, 'tap', this.handleTechTap_);\n        }\n        removeTechControlsListeners_() {\n            this.off(this.tech_, 'tap', this.handleTechTap_);\n            this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n            this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n            this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n            this.off(this.tech_, 'mouseup', this.handleTechClick_);\n            this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n        }\n        handleTechReady_() {\n            this.triggerReady();\n            if (this.cache_.volume) {\n                this.techCall_('setVolume', this.cache_.volume);\n            }\n            this.handleTechPosterChange_();\n            this.handleTechDurationChange_();\n        }\n        handleTechLoadStart_() {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-seeking');\n            this.error(null);\n            this.handleTechDurationChange_();\n            if (!this.paused()) {\n                this.trigger('loadstart');\n                this.trigger('firstplay');\n            } else {\n                this.hasStarted(false);\n                this.trigger('loadstart');\n            }\n            this.manualAutoplay_(this.autoplay());\n        }\n        manualAutoplay_(type) {\n            if (!this.tech_ || typeof type !== 'string') {\n                return;\n            }\n            const muted = () => {\n                const previouslyMuted = this.muted();\n                this.muted(true);\n                const restoreMuted = () => {\n                    this.muted(previouslyMuted);\n                };\n                this.playTerminatedQueue_.push(restoreMuted);\n                const mutedPromise = this.play();\n                if (!promise.isPromise(mutedPromise)) {\n                    return;\n                }\n                return mutedPromise.catch(restoreMuted);\n            };\n            let promise;\n            if (type === 'any' && this.muted() !== true) {\n                promise = this.play();\n                if (promise.isPromise(promise)) {\n                    promise = promise.catch(muted);\n                }\n            } else if (type === 'muted' && this.muted() !== true) {\n                promise = muted();\n            } else {\n                promise = this.play();\n            }\n            if (!promise.isPromise(promise)) {\n                return;\n            }\n            return promise.then(() => {\n                this.trigger({\n                    type: 'autoplay-success',\n                    autoplay: type\n                });\n            }).catch(e => {\n                this.trigger({\n                    type: 'autoplay-failure',\n                    autoplay: type\n                });\n            });\n        }\n        updateSourceCaches_(srcObj = '') {\n            let src = srcObj;\n            let type = '';\n            if (typeof src !== 'string') {\n                src = srcObj.src;\n                type = srcObj.type;\n            }\n            this.cache_.source = this.cache_.source || {};\n            this.cache_.sources = this.cache_.sources || [];\n            if (src && !type) {\n                type = mimetypes.findMimetype(this, src);\n            }\n            this.cache_.source = mergeOptions({}, srcObj, {\n                src,\n                type\n            });\n            const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n            const sourceElSources = [];\n            const sourceEls = this.$$('source');\n            const matchingSourceEls = [];\n            for (let i = 0; i < sourceEls.length; i++) {\n                const sourceObj = Dom.getAttributes(sourceEls[i]);\n                sourceElSources.push(sourceObj);\n                if (sourceObj.src && sourceObj.src === src) {\n                    matchingSourceEls.push(sourceObj.src);\n                }\n            }\n            if (matchingSourceEls.length && !matchingSources.length) {\n                this.cache_.sources = sourceElSources;\n            } else if (!matchingSources.length) {\n                this.cache_.sources = [this.cache_.source];\n            }\n            this.cache_.src = src;\n        }\n        handleTechSourceset_(event) {\n            if (!this.changingSrc_) {\n                let updateSourceCaches = src => this.updateSourceCaches_(src);\n                const playerSrc = this.currentSource().src;\n                const eventSrc = event.src;\n                if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n                    if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n                        updateSourceCaches = () => {\n                        };\n                    }\n                }\n                updateSourceCaches(eventSrc);\n                if (!event.src) {\n                    this.tech_.any([\n                        'sourceset',\n                        'loadstart'\n                    ], e => {\n                        if (e.type === 'sourceset') {\n                            return;\n                        }\n                        const techSrc = this.techGet('currentSrc');\n                        this.lastSource_.tech = techSrc;\n                        this.updateSourceCaches_(techSrc);\n                    });\n                }\n            }\n            this.lastSource_ = {\n                player: this.currentSource().src,\n                tech: event.src\n            };\n            this.trigger({\n                src: event.src,\n                type: 'sourceset'\n            });\n        }\n        hasStarted(request) {\n            if (request === undefined) {\n                return this.hasStarted_;\n            }\n            if (request === this.hasStarted_) {\n                return;\n            }\n            this.hasStarted_ = request;\n            if (this.hasStarted_) {\n                this.addClass('vjs-has-started');\n                this.trigger('firstplay');\n            } else {\n                this.removeClass('vjs-has-started');\n            }\n        }\n        handleTechPlay_() {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-paused');\n            this.addClass('vjs-playing');\n            this.hasStarted(true);\n            this.trigger('play');\n        }\n        handleTechRateChange_() {\n            if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n                this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n                this.queuedCallbacks_ = [];\n            }\n            this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n            this.trigger('ratechange');\n        }\n        handleTechWaiting_() {\n            this.addClass('vjs-waiting');\n            this.trigger('waiting');\n            const timeWhenWaiting = this.currentTime();\n            const timeUpdateListener = () => {\n                if (timeWhenWaiting !== this.currentTime()) {\n                    this.removeClass('vjs-waiting');\n                    this.off('timeupdate', timeUpdateListener);\n                }\n            };\n            this.on('timeupdate', timeUpdateListener);\n        }\n        handleTechCanPlay_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('canplay');\n        }\n        handleTechCanPlayThrough_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('canplaythrough');\n        }\n        handleTechPlaying_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('playing');\n        }\n        handleTechSeeking_() {\n            this.addClass('vjs-seeking');\n            this.trigger('seeking');\n        }\n        handleTechSeeked_() {\n            this.removeClass('vjs-seeking');\n            this.removeClass('vjs-ended');\n            this.trigger('seeked');\n        }\n        handleTechFirstPlay_() {\n            if (this.options_.starttime) {\n                log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n                this.currentTime(this.options_.starttime);\n            }\n            this.addClass('vjs-has-started');\n            this.trigger('firstplay');\n        }\n        handleTechPause_() {\n            this.removeClass('vjs-playing');\n            this.addClass('vjs-paused');\n            this.trigger('pause');\n        }\n        handleTechEnded_() {\n            this.addClass('vjs-ended');\n            if (this.options_.loop) {\n                this.currentTime(0);\n                this.play();\n            } else if (!this.paused()) {\n                this.pause();\n            }\n            this.trigger('ended');\n        }\n        handleTechDurationChange_() {\n            this.duration(this.techGet_('duration'));\n        }\n        handleTechClick_(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            if (!this.controls_) {\n                return;\n            }\n            if (this.paused()) {\n                promise.silencePromise(this.play());\n            } else {\n                this.pause();\n            }\n        }\n        handleTechDoubleClick_(event) {\n            if (!this.controls_) {\n                return;\n            }\n            const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n            if (!inAllowedEls) {\n                if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n                    if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n                        this.options_.userActions.doubleClick.call(this, event);\n                    } else if (this.isFullscreen()) {\n                        this.exitFullscreen();\n                    } else {\n                        this.requestFullscreen();\n                    }\n                }\n            }\n        }\n        handleTechTap_() {\n            this.userActive(!this.userActive());\n        }\n        handleTechTouchStart_() {\n            this.userWasActive = this.userActive();\n        }\n        handleTechTouchMove_() {\n            if (this.userWasActive) {\n                this.reportUserActivity();\n            }\n        }\n        handleTechTouchEnd_(event) {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n        }\n        handleStageClick_() {\n            this.reportUserActivity();\n        }\n        toggleFullscreenClass_() {\n            if (this.isFullscreen()) {\n                this.addClass('vjs-fullscreen');\n            } else {\n                this.removeClass('vjs-fullscreen');\n            }\n        }\n        documentFullscreenChange_(e) {\n            const targetPlayer = e.target.player;\n            if (targetPlayer && targetPlayer !== this) {\n                return;\n            }\n            const el = this.el();\n            let isFs = document[this.fsApi_.fullscreenElement] === el;\n            if (!isFs && el.matches) {\n                isFs = el.matches(':' + this.fsApi_.fullscreen);\n            } else if (!isFs && el.msMatchesSelector) {\n                isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n            }\n            this.isFullscreen(isFs);\n        }\n        handleTechFullscreenChange_(event, data) {\n            if (data) {\n                if (data.nativeIOSFullscreen) {\n                    this.toggleClass('vjs-ios-native-fs');\n                }\n                this.isFullscreen(data.isFullscreen);\n            }\n        }\n        handleTechFullscreenError_(event, err) {\n            this.trigger('fullscreenerror', err);\n        }\n        togglePictureInPictureClass_() {\n            if (this.isInPictureInPicture()) {\n                this.addClass('vjs-picture-in-picture');\n            } else {\n                this.removeClass('vjs-picture-in-picture');\n            }\n        }\n        handleTechEnterPictureInPicture_(event) {\n            this.isInPictureInPicture(true);\n        }\n        handleTechLeavePictureInPicture_(event) {\n            this.isInPictureInPicture(false);\n        }\n        handleTechError_() {\n            const error = this.tech_.error();\n            this.error(error);\n        }\n        handleTechTextData_() {\n            let data = null;\n            if (arguments.length > 1) {\n                data = arguments[1];\n            }\n            this.trigger('textdata', data);\n        }\n        getCache() {\n            return this.cache_;\n        }\n        resetCache_() {\n            this.cache_ = {\n                currentTime: 0,\n                initTime: 0,\n                inactivityTimeout: this.options_.inactivityTimeout,\n                duration: NaN,\n                lastVolume: 1,\n                lastPlaybackRate: this.defaultPlaybackRate(),\n                media: null,\n                src: '',\n                source: {},\n                sources: [],\n                volume: 1\n            };\n        }\n        techCall_(method, arg) {\n            this.ready(function () {\n                if (method in middleware.allowedSetters) {\n                    return middleware.set(this.middleware_, this.tech_, method, arg);\n                } else if (method in middleware.allowedMediators) {\n                    return middleware.mediate(this.middleware_, this.tech_, method, arg);\n                }\n                try {\n                    if (this.tech_) {\n                        this.tech_[method](arg);\n                    }\n                } catch (e) {\n                    log(e);\n                    throw e;\n                }\n            }, true);\n        }\n        techGet_(method) {\n            if (!this.tech_ || !this.tech_.isReady_) {\n                return;\n            }\n            if (method in middleware.allowedGetters) {\n                return middleware.get(this.middleware_, this.tech_, method);\n            } else if (method in middleware.allowedMediators) {\n                return middleware.mediate(this.middleware_, this.tech_, method);\n            }\n            try {\n                return this.tech_[method]();\n            } catch (e) {\n                if (this.tech_[method] === undefined) {\n                    log(`Video.js: ${ method } method not defined for ${ this.techName_ } playback technology.`, e);\n                    throw e;\n                }\n                if (e.name === 'TypeError') {\n                    log(`Video.js: ${ method } unavailable on ${ this.techName_ } playback technology element.`, e);\n                    this.tech_.isReady_ = false;\n                    throw e;\n                }\n                log(e);\n                throw e;\n            }\n        }\n        play() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                return new PromiseClass(resolve => {\n                    this.play_(resolve);\n                });\n            }\n            return this.play_();\n        }\n        play_(callback = promise.silencePromise) {\n            this.playCallbacks_.push(callback);\n            const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n            if (this.waitToPlay_) {\n                this.off([\n                    'ready',\n                    'loadstart'\n                ], this.waitToPlay_);\n                this.waitToPlay_ = null;\n            }\n            if (!this.isReady_ || !isSrcReady) {\n                this.waitToPlay_ = e => {\n                    this.play_();\n                };\n                this.one([\n                    'ready',\n                    'loadstart'\n                ], this.waitToPlay_);\n                if (!isSrcReady && (browser.IS_ANY_SAFARI || browser.IS_IOS)) {\n                    this.load();\n                }\n                return;\n            }\n            const val = this.techGet_('play');\n            if (val === null) {\n                this.runPlayTerminatedQueue_();\n            } else {\n                this.runPlayCallbacks_(val);\n            }\n        }\n        runPlayTerminatedQueue_() {\n            const queue = this.playTerminatedQueue_.slice(0);\n            this.playTerminatedQueue_ = [];\n            queue.forEach(function (q) {\n                q();\n            });\n        }\n        runPlayCallbacks_(val) {\n            const callbacks = this.playCallbacks_.slice(0);\n            this.playCallbacks_ = [];\n            this.playTerminatedQueue_ = [];\n            callbacks.forEach(function (cb) {\n                cb(val);\n            });\n        }\n        pause() {\n            this.techCall_('pause');\n        }\n        paused() {\n            return this.techGet_('paused') === false ? false : true;\n        }\n        played() {\n            return this.techGet_('played') || timeRages.createTimeRange(0, 0);\n        }\n        scrubbing(isScrubbing) {\n            if (typeof isScrubbing === 'undefined') {\n                return this.scrubbing_;\n            }\n            this.scrubbing_ = !!isScrubbing;\n            this.techCall_('setScrubbing', this.scrubbing_);\n            if (isScrubbing) {\n                this.addClass('vjs-scrubbing');\n            } else {\n                this.removeClass('vjs-scrubbing');\n            }\n        }\n        currentTime(seconds) {\n            if (typeof seconds !== 'undefined') {\n                if (seconds < 0) {\n                    seconds = 0;\n                }\n                if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n                    this.cache_.initTime = seconds;\n                    this.off('canplay', this.applyInitTime_);\n                    this.one('canplay', this.applyInitTime_);\n                    return;\n                }\n                this.techCall_('setCurrentTime', seconds);\n                this.cache_.initTime = 0;\n                return;\n            }\n            this.cache_.currentTime = this.techGet_('currentTime') || 0;\n            return this.cache_.currentTime;\n        }\n        applyInitTime_() {\n            this.currentTime(this.cache_.initTime);\n        }\n        duration(seconds) {\n            if (seconds === undefined) {\n                return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n            }\n            seconds = parseFloat(seconds);\n            if (seconds < 0) {\n                seconds = Infinity;\n            }\n            if (seconds !== this.cache_.duration) {\n                this.cache_.duration = seconds;\n                if (seconds === Infinity) {\n                    this.addClass('vjs-live');\n                } else {\n                    this.removeClass('vjs-live');\n                }\n                if (!isNaN(seconds)) {\n                    this.trigger('durationchange');\n                }\n            }\n        }\n        remainingTime() {\n            return this.duration() - this.currentTime();\n        }\n        remainingTimeDisplay() {\n            return Math.floor(this.duration()) - Math.floor(this.currentTime());\n        }\n        buffered() {\n            let buffered = this.techGet_('buffered');\n            if (!buffered || !buffered.length) {\n                buffered = timeRages.createTimeRange(0, 0);\n            }\n            return buffered;\n        }\n        bufferedPercent() {\n            return buffer.bufferedPercent(this.buffered(), this.duration());\n        }\n        bufferedEnd() {\n            const buffered = this.buffered();\n            const duration = this.duration();\n            let end = buffered.end(buffered.length - 1);\n            if (end > duration) {\n                end = duration;\n            }\n            return end;\n        }\n        volume(percentAsDecimal) {\n            let vol;\n            if (percentAsDecimal !== undefined) {\n                vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n                this.cache_.volume = vol;\n                this.techCall_('setVolume', vol);\n                if (vol > 0) {\n                    this.lastVolume_(vol);\n                }\n                return;\n            }\n            vol = parseFloat(this.techGet_('volume'));\n            return isNaN(vol) ? 1 : vol;\n        }\n        muted(muted) {\n            if (muted !== undefined) {\n                this.techCall_('setMuted', muted);\n                return;\n            }\n            return this.techGet_('muted') || false;\n        }\n        defaultMuted(defaultMuted) {\n            if (defaultMuted !== undefined) {\n                return this.techCall_('setDefaultMuted', defaultMuted);\n            }\n            return this.techGet_('defaultMuted') || false;\n        }\n        lastVolume_(percentAsDecimal) {\n            if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n                this.cache_.lastVolume = percentAsDecimal;\n                return;\n            }\n            return this.cache_.lastVolume;\n        }\n        supportsFullScreen() {\n            return this.techGet_('supportsFullScreen') || false;\n        }\n        isFullscreen(isFS) {\n            if (isFS !== undefined) {\n                const oldValue = this.isFullscreen_;\n                this.isFullscreen_ = Boolean(isFS);\n                if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n                    this.trigger('fullscreenchange');\n                }\n                this.toggleFullscreenClass_();\n                return;\n            }\n            return this.isFullscreen_;\n        }\n        requestFullscreen(fullscreenOptions) {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                const self = this;\n                return new PromiseClass((resolve, reject) => {\n                    function offHandler() {\n                        self.off('fullscreenerror', errorHandler);\n                        self.off('fullscreenchange', changeHandler);\n                    }\n                    function changeHandler() {\n                        offHandler();\n                        resolve();\n                    }\n                    function errorHandler(e, err) {\n                        offHandler();\n                        reject(err);\n                    }\n                    self.one('fullscreenchange', changeHandler);\n                    self.one('fullscreenerror', errorHandler);\n                    const promise = self.requestFullscreenHelper_(fullscreenOptions);\n                    if (promise) {\n                        promise.then(offHandler, offHandler);\n                        return promise;\n                    }\n                });\n            }\n            return this.requestFullscreenHelper_();\n        }\n        requestFullscreenHelper_(fullscreenOptions) {\n            let fsOptions;\n            if (!this.fsApi_.prefixed) {\n                fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n                if (fullscreenOptions !== undefined) {\n                    fsOptions = fullscreenOptions;\n                }\n            }\n            if (this.fsApi_.requestFullscreen) {\n                const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n                if (promise) {\n                    promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n                }\n                return promise;\n            } else if (this.tech_.supportsFullScreen()) {\n                this.techCall_('enterFullScreen');\n            } else {\n                this.enterFullWindow();\n            }\n        }\n        exitFullscreen() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                const self = this;\n                return new PromiseClass((resolve, reject) => {\n                    function offHandler() {\n                        self.off('fullscreenerror', errorHandler);\n                        self.off('fullscreenchange', changeHandler);\n                    }\n                    function changeHandler() {\n                        offHandler();\n                        resolve();\n                    }\n                    function errorHandler(e, err) {\n                        offHandler();\n                        reject(err);\n                    }\n                    self.one('fullscreenchange', changeHandler);\n                    self.one('fullscreenerror', errorHandler);\n                    const promise = self.exitFullscreenHelper_();\n                    if (promise) {\n                        promise.then(offHandler, offHandler);\n                        return promise;\n                    }\n                });\n            }\n            return this.exitFullscreenHelper_();\n        }\n        exitFullscreenHelper_() {\n            if (this.fsApi_.requestFullscreen) {\n                const promise = document[this.fsApi_.exitFullscreen]();\n                if (promise) {\n                    promise.then(() => this.isFullscreen(false));\n                }\n                return promise;\n            } else if (this.tech_.supportsFullScreen()) {\n                this.techCall_('exitFullScreen');\n            } else {\n                this.exitFullWindow();\n            }\n        }\n        enterFullWindow() {\n            this.isFullscreen(true);\n            this.isFullWindow = true;\n            this.docOrigOverflow = document.documentElement.style.overflow;\n            Events.on(document, 'keydown', this.boundFullWindowOnEscKey_);\n            document.documentElement.style.overflow = 'hidden';\n            Dom.addClass(document.body, 'vjs-full-window');\n            this.trigger('enterFullWindow');\n        }\n        fullWindowOnEscKey(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                if (this.isFullscreen() === true) {\n                    this.exitFullscreen();\n                } else {\n                    this.exitFullWindow();\n                }\n            }\n        }\n        exitFullWindow() {\n            this.isFullscreen(false);\n            this.isFullWindow = false;\n            Events.off(document, 'keydown', this.boundFullWindowOnEscKey_);\n            document.documentElement.style.overflow = this.docOrigOverflow;\n            Dom.removeClass(document.body, 'vjs-full-window');\n            this.trigger('exitFullWindow');\n        }\n        disablePictureInPicture(value) {\n            if (value === undefined) {\n                return this.techGet_('disablePictureInPicture');\n            }\n            this.techCall_('setDisablePictureInPicture', value);\n            this.options_.disablePictureInPicture = value;\n            this.trigger('disablepictureinpicturechanged');\n        }\n        isInPictureInPicture(isPiP) {\n            if (isPiP !== undefined) {\n                this.isInPictureInPicture_ = !!isPiP;\n                this.togglePictureInPictureClass_();\n                return;\n            }\n            return !!this.isInPictureInPicture_;\n        }\n        requestPictureInPicture() {\n            if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n                return this.techGet_('requestPictureInPicture');\n            }\n        }\n        exitPictureInPicture() {\n            if ('pictureInPictureEnabled' in document) {\n                return document.exitPictureInPicture();\n            }\n        }\n        handleKeyDown(event) {\n            const {userActions} = this.options_;\n            if (!userActions || !userActions.hotkeys) {\n                return;\n            }\n            const excludeElement = el => {\n                const tagName = el.tagName.toLowerCase();\n                if (el.isContentEditable) {\n                    return true;\n                }\n                const allowedInputTypes = [\n                    'button',\n                    'checkbox',\n                    'hidden',\n                    'radio',\n                    'reset',\n                    'submit'\n                ];\n                if (tagName === 'input') {\n                    return allowedInputTypes.indexOf(el.type) === -1;\n                }\n                const excludedTags = ['textarea'];\n                return excludedTags.indexOf(tagName) !== -1;\n            };\n            if (excludeElement(this.el_.ownerDocument.activeElement)) {\n                return;\n            }\n            if (typeof userActions.hotkeys === 'function') {\n                userActions.hotkeys.call(this, event);\n            } else {\n                this.handleHotkeys(event);\n            }\n        }\n        handleHotkeys(event) {\n            const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n            const {fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'), muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'), playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')} = hotkeys;\n            if (fullscreenKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const FSToggle = Component.getComponent('FullscreenToggle');\n                if (document[this.fsApi_.fullscreenEnabled] !== false) {\n                    FSToggle.prototype.handleClick.call(this, event);\n                }\n            } else if (muteKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const MuteToggle = Component.getComponent('MuteToggle');\n                MuteToggle.prototype.handleClick.call(this, event);\n            } else if (playPauseKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const PlayToggle = Component.getComponent('PlayToggle');\n                PlayToggle.prototype.handleClick.call(this, event);\n            }\n        }\n        canPlayType(type) {\n            let can;\n            for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n                const techName = j[i];\n                let tech = Tech.getTech(techName);\n                if (!tech) {\n                    tech = Component.getComponent(techName);\n                }\n                if (!tech) {\n                    log.error(`The \"${ techName }\" tech is undefined. Skipped browser support check for that tech.`);\n                    continue;\n                }\n                if (tech.isSupported()) {\n                    can = tech.canPlayType(type);\n                    if (can) {\n                        return can;\n                    }\n                }\n            }\n            return '';\n        }\n        selectSource(sources) {\n            const techs = this.options_.techOrder.map(techName => {\n                return [\n                    techName,\n                    Tech.getTech(techName)\n                ];\n            }).filter(([techName, tech]) => {\n                if (tech) {\n                    return tech.isSupported();\n                }\n                log.error(`The \"${ techName }\" tech is undefined. Skipped browser support check for that tech.`);\n                return false;\n            });\n            const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n                let found;\n                outerArray.some(outerChoice => {\n                    return innerArray.some(innerChoice => {\n                        found = tester(outerChoice, innerChoice);\n                        if (found) {\n                            return true;\n                        }\n                    });\n                });\n                return found;\n            };\n            let foundSourceAndTech;\n            const flip = fn => (a, b) => fn(b, a);\n            const finder = ([techName, tech], source) => {\n                if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n                    return {\n                        source,\n                        tech: techName\n                    };\n                }\n            };\n            if (this.options_.sourceOrder) {\n                foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n            } else {\n                foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n            }\n            return foundSourceAndTech || false;\n        }\n        src(source) {\n            if (typeof source === 'undefined') {\n                return this.cache_.src || '';\n            }\n            const sources = filterSource(source);\n            if (!sources.length) {\n                this.setTimeout(function () {\n                    this.error({\n                        code: 4,\n                        message: this.localize(this.options_.notSupportedMessage)\n                    });\n                }, 0);\n                return;\n            }\n            this.changingSrc_ = true;\n            this.cache_.sources = sources;\n            this.updateSourceCaches_(sources[0]);\n            middleware.setSource(this, sources[0], (middlewareSource, mws) => {\n                this.middleware_ = mws;\n                this.cache_.sources = sources;\n                this.updateSourceCaches_(middlewareSource);\n                const err = this.src_(middlewareSource);\n                if (err) {\n                    if (sources.length > 1) {\n                        return this.src(sources.slice(1));\n                    }\n                    this.changingSrc_ = false;\n                    this.setTimeout(function () {\n                        this.error({\n                            code: 4,\n                            message: this.localize(this.options_.notSupportedMessage)\n                        });\n                    }, 0);\n                    this.triggerReady();\n                    return;\n                }\n                middleware.setTech(mws, this.tech_);\n            });\n        }\n        src_(source) {\n            const sourceTech = this.selectSource([source]);\n            if (!sourceTech) {\n                return true;\n            }\n            if (!stringCases.titleCaseEquals(sourceTech.tech, this.techName_)) {\n                this.changingSrc_ = true;\n                this.loadTech_(sourceTech.tech, sourceTech.source);\n                this.tech_.ready(() => {\n                    this.changingSrc_ = false;\n                });\n                return false;\n            }\n            this.ready(function () {\n                if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n                    this.techCall_('setSource', source);\n                } else {\n                    this.techCall_('src', source.src);\n                }\n                this.changingSrc_ = false;\n            }, true);\n            return false;\n        }\n        load() {\n            this.techCall_('load');\n        }\n        reset() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (this.paused() || !PromiseClass) {\n                this.doReset_();\n            } else {\n                const playPromise = this.play();\n                promise.silencePromise(playPromise.then(() => this.doReset_()));\n            }\n        }\n        doReset_() {\n            if (this.tech_) {\n                this.tech_.clearTracks('text');\n            }\n            this.resetCache_();\n            this.poster('');\n            this.loadTech_(this.options_.techOrder[0], null);\n            this.techCall_('reset');\n            this.resetControlBarUI_();\n            if (evented.isEvented(this)) {\n                this.trigger('playerreset');\n            }\n        }\n        resetControlBarUI_() {\n            this.resetProgressBar_();\n            this.resetPlaybackRate_();\n            this.resetVolumeBar_();\n        }\n        resetProgressBar_() {\n            this.currentTime(0);\n            const {durationDisplay, remainingTimeDisplay} = this.controlBar;\n            if (durationDisplay) {\n                durationDisplay.updateContent();\n            }\n            if (remainingTimeDisplay) {\n                remainingTimeDisplay.updateContent();\n            }\n        }\n        resetPlaybackRate_() {\n            this.playbackRate(this.defaultPlaybackRate());\n            this.handleTechRateChange_();\n        }\n        resetVolumeBar_() {\n            this.volume(1);\n            this.trigger('volumechange');\n        }\n        currentSources() {\n            const source = this.currentSource();\n            const sources = [];\n            if (Object.keys(source).length !== 0) {\n                sources.push(source);\n            }\n            return this.cache_.sources || sources;\n        }\n        currentSource() {\n            return this.cache_.source || {};\n        }\n        currentSrc() {\n            return this.currentSource() && this.currentSource().src || '';\n        }\n        currentType() {\n            return this.currentSource() && this.currentSource().type || '';\n        }\n        preload(value) {\n            if (value !== undefined) {\n                this.techCall_('setPreload', value);\n                this.options_.preload = value;\n                return;\n            }\n            return this.techGet_('preload');\n        }\n        autoplay(value) {\n            if (value === undefined) {\n                return this.options_.autoplay || false;\n            }\n            let techAutoplay;\n            if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n                this.options_.autoplay = value;\n                this.manualAutoplay_(value);\n                techAutoplay = false;\n            } else if (!value) {\n                this.options_.autoplay = false;\n            } else {\n                this.options_.autoplay = true;\n            }\n            techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n            if (this.tech_) {\n                this.techCall_('setAutoplay', techAutoplay);\n            }\n        }\n        playsinline(value) {\n            if (value !== undefined) {\n                this.techCall_('setPlaysinline', value);\n                this.options_.playsinline = value;\n                return this;\n            }\n            return this.techGet_('playsinline');\n        }\n        loop(value) {\n            if (value !== undefined) {\n                this.techCall_('setLoop', value);\n                this.options_.loop = value;\n                return;\n            }\n            return this.techGet_('loop');\n        }\n        poster(src) {\n            if (src === undefined) {\n                return this.poster_;\n            }\n            if (!src) {\n                src = '';\n            }\n            if (src === this.poster_) {\n                return;\n            }\n            this.poster_ = src;\n            this.techCall_('setPoster', src);\n            this.isPosterFromTech_ = false;\n            this.trigger('posterchange');\n        }\n        handleTechPosterChange_() {\n            if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n                const newPoster = this.tech_.poster() || '';\n                if (newPoster !== this.poster_) {\n                    this.poster_ = newPoster;\n                    this.isPosterFromTech_ = true;\n                    this.trigger('posterchange');\n                }\n            }\n        }\n        controls(bool) {\n            if (bool === undefined) {\n                return !!this.controls_;\n            }\n            bool = !!bool;\n            if (this.controls_ === bool) {\n                return;\n            }\n            this.controls_ = bool;\n            if (this.usingNativeControls()) {\n                this.techCall_('setControls', bool);\n            }\n            if (this.controls_) {\n                this.removeClass('vjs-controls-disabled');\n                this.addClass('vjs-controls-enabled');\n                this.trigger('controlsenabled');\n                if (!this.usingNativeControls()) {\n                    this.addTechControlsListeners_();\n                }\n            } else {\n                this.removeClass('vjs-controls-enabled');\n                this.addClass('vjs-controls-disabled');\n                this.trigger('controlsdisabled');\n                if (!this.usingNativeControls()) {\n                    this.removeTechControlsListeners_();\n                }\n            }\n        }\n        usingNativeControls(bool) {\n            if (bool === undefined) {\n                return !!this.usingNativeControls_;\n            }\n            bool = !!bool;\n            if (this.usingNativeControls_ === bool) {\n                return;\n            }\n            this.usingNativeControls_ = bool;\n            if (this.usingNativeControls_) {\n                this.addClass('vjs-using-native-controls');\n                this.trigger('usingnativecontrols');\n            } else {\n                this.removeClass('vjs-using-native-controls');\n                this.trigger('usingcustomcontrols');\n            }\n        }\n        error(err) {\n            if (err === undefined) {\n                return this.error_ || null;\n            }\n            if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n                const triggerSuppressedError = function () {\n                    this.error(err);\n                };\n                this.options_.suppressNotSupportedError = false;\n                this.any([\n                    'click',\n                    'touchstart'\n                ], triggerSuppressedError);\n                this.one('loadstart', function () {\n                    this.off([\n                        'click',\n                        'touchstart'\n                    ], triggerSuppressedError);\n                });\n                return;\n            }\n            if (err === null) {\n                this.error_ = err;\n                this.removeClass('vjs-error');\n                if (this.errorDisplay) {\n                    this.errorDisplay.close();\n                }\n                return;\n            }\n            this.error_ = new MediaError(err);\n            this.addClass('vjs-error');\n            log.error(`(CODE:${ this.error_.code } ${ MediaError.errorTypes[this.error_.code] })`, this.error_.message, this.error_);\n            this.trigger('error');\n            return;\n        }\n        reportUserActivity(event) {\n            this.userActivity_ = true;\n        }\n        userActive(bool) {\n            if (bool === undefined) {\n                return this.userActive_;\n            }\n            bool = !!bool;\n            if (bool === this.userActive_) {\n                return;\n            }\n            this.userActive_ = bool;\n            if (this.userActive_) {\n                this.userActivity_ = true;\n                this.removeClass('vjs-user-inactive');\n                this.addClass('vjs-user-active');\n                this.trigger('useractive');\n                return;\n            }\n            if (this.tech_) {\n                this.tech_.one('mousemove', function (e) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                });\n            }\n            this.userActivity_ = false;\n            this.removeClass('vjs-user-active');\n            this.addClass('vjs-user-inactive');\n            this.trigger('userinactive');\n        }\n        listenForUserActivity_() {\n            let mouseInProgress;\n            let lastMoveX;\n            let lastMoveY;\n            const handleActivity = Fn.bind(this, this.reportUserActivity);\n            const handleMouseMove = function (e) {\n                if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n                    lastMoveX = e.screenX;\n                    lastMoveY = e.screenY;\n                    handleActivity();\n                }\n            };\n            const handleMouseDown = function () {\n                handleActivity();\n                this.clearInterval(mouseInProgress);\n                mouseInProgress = this.setInterval(handleActivity, 250);\n            };\n            const handleMouseUpAndMouseLeave = function (event) {\n                handleActivity();\n                this.clearInterval(mouseInProgress);\n            };\n            this.on('mousedown', handleMouseDown);\n            this.on('mousemove', handleMouseMove);\n            this.on('mouseup', handleMouseUpAndMouseLeave);\n            this.on('mouseleave', handleMouseUpAndMouseLeave);\n            const controlBar = this.getChild('controlBar');\n            if (controlBar && !browser.IS_IOS && !browser.IS_ANDROID) {\n                controlBar.on('mouseenter', function (event) {\n                    this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n                    this.player().options_.inactivityTimeout = 0;\n                });\n                controlBar.on('mouseleave', function (event) {\n                    this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n                });\n            }\n            this.on('keydown', handleActivity);\n            this.on('keyup', handleActivity);\n            let inactivityTimeout;\n            this.setInterval(function () {\n                if (!this.userActivity_) {\n                    return;\n                }\n                this.userActivity_ = false;\n                this.userActive(true);\n                this.clearTimeout(inactivityTimeout);\n                const timeout = this.options_.inactivityTimeout;\n                if (timeout <= 0) {\n                    return;\n                }\n                inactivityTimeout = this.setTimeout(function () {\n                    if (!this.userActivity_) {\n                        this.userActive(false);\n                    }\n                }, timeout);\n            }, 250);\n        }\n        playbackRate(rate) {\n            if (rate !== undefined) {\n                this.techCall_('setPlaybackRate', rate);\n                return;\n            }\n            if (this.tech_ && this.tech_.featuresPlaybackRate) {\n                return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n            }\n            return 1;\n        }\n        defaultPlaybackRate(rate) {\n            if (rate !== undefined) {\n                return this.techCall_('setDefaultPlaybackRate', rate);\n            }\n            if (this.tech_ && this.tech_.featuresPlaybackRate) {\n                return this.techGet_('defaultPlaybackRate');\n            }\n            return 1;\n        }\n        isAudio(bool) {\n            if (bool !== undefined) {\n                this.isAudio_ = !!bool;\n                return;\n            }\n            return !!this.isAudio_;\n        }\n        addTextTrack(kind, label, language) {\n            if (this.tech_) {\n                return this.tech_.addTextTrack(kind, label, language);\n            }\n        }\n        addRemoteTextTrack(options, manualCleanup) {\n            if (this.tech_) {\n                return this.tech_.addRemoteTextTrack(options, manualCleanup);\n            }\n        }\n        removeRemoteTextTrack(obj = {}) {\n            let {track} = obj;\n            if (!track) {\n                track = obj;\n            }\n            if (this.tech_) {\n                return this.tech_.removeRemoteTextTrack(track);\n            }\n        }\n        getVideoPlaybackQuality() {\n            return this.techGet_('getVideoPlaybackQuality');\n        }\n        videoWidth() {\n            return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n        }\n        videoHeight() {\n            return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n        }\n        language(code) {\n            if (code === undefined) {\n                return this.language_;\n            }\n            if (this.language_ !== String(code).toLowerCase()) {\n                this.language_ = String(code).toLowerCase();\n                if (evented.isEvented(this)) {\n                    this.trigger('languagechange');\n                }\n            }\n        }\n        languages() {\n            return mergeOptions(Player.prototype.options_.languages, this.languages_);\n        }\n        toJSON() {\n            const options = mergeOptions(this.options_);\n            const tracks = options.tracks;\n            options.tracks = [];\n            for (let i = 0; i < tracks.length; i++) {\n                let track = tracks[i];\n                track = mergeOptions(track);\n                track.player = undefined;\n                options.tracks[i] = track;\n            }\n            return options;\n        }\n        createModal(content, options) {\n            options = options || {};\n            options.content = content || '';\n            const modal = new ModalDialog(this, options);\n            this.addChild(modal);\n            modal.on('dispose', () => {\n                this.removeChild(modal);\n            });\n            modal.open();\n            return modal;\n        }\n        updateCurrentBreakpoint_() {\n            if (!this.responsive()) {\n                return;\n            }\n            const currentBreakpoint = this.currentBreakpoint();\n            const currentWidth = this.currentWidth();\n            for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n                const candidateBreakpoint = BREAKPOINT_ORDER[i];\n                const maxWidth = this.breakpoints_[candidateBreakpoint];\n                if (currentWidth <= maxWidth) {\n                    if (currentBreakpoint === candidateBreakpoint) {\n                        return;\n                    }\n                    if (currentBreakpoint) {\n                        this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n                    }\n                    this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n                    this.breakpoint_ = candidateBreakpoint;\n                    break;\n                }\n            }\n        }\n        removeCurrentBreakpoint_() {\n            const className = this.currentBreakpointClass();\n            this.breakpoint_ = '';\n            if (className) {\n                this.removeClass(className);\n            }\n        }\n        breakpoints(breakpoints) {\n            if (breakpoints === undefined) {\n                return obj.assign(this.breakpoints_);\n            }\n            this.breakpoint_ = '';\n            this.breakpoints_ = obj.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n            this.updateCurrentBreakpoint_();\n            return obj.assign(this.breakpoints_);\n        }\n        responsive(value) {\n            if (value === undefined) {\n                return this.responsive_;\n            }\n            value = Boolean(value);\n            const current = this.responsive_;\n            if (value === current) {\n                return;\n            }\n            this.responsive_ = value;\n            if (value) {\n                this.on('playerresize', this.updateCurrentBreakpoint_);\n                this.updateCurrentBreakpoint_();\n            } else {\n                this.off('playerresize', this.updateCurrentBreakpoint_);\n                this.removeCurrentBreakpoint_();\n            }\n            return value;\n        }\n        currentBreakpoint() {\n            return this.breakpoint_;\n        }\n        currentBreakpointClass() {\n            return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n        }\n        loadMedia(media, ready) {\n            if (!media || typeof media !== 'object') {\n                return;\n            }\n            this.reset();\n            this.cache_.media = mergeOptions(media);\n            const {artwork, poster, src, textTracks} = this.cache_.media;\n            if (!artwork && poster) {\n                this.cache_.media.artwork = [{\n                        src: poster,\n                        type: mimetypes.getMimetype(poster)\n                    }];\n            }\n            if (src) {\n                this.src(src);\n            }\n            if (poster) {\n                this.poster(poster);\n            }\n            if (Array.isArray(textTracks)) {\n                textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n            }\n            this.ready(ready);\n        }\n        getMedia() {\n            if (!this.cache_.media) {\n                const poster = this.poster();\n                const src = this.currentSources();\n                const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n                    kind: tt.kind,\n                    label: tt.label,\n                    language: tt.language,\n                    src: tt.src\n                }));\n                const media = {\n                    src,\n                    textTracks\n                };\n                if (poster) {\n                    media.poster = poster;\n                    media.artwork = [{\n                            src: media.poster,\n                            type: mimetypes.getMimetype(media.poster)\n                        }];\n                }\n                return media;\n            }\n            return mergeOptions(this.cache_.media);\n        }\n        static getTagSettings(tag) {\n            const baseOptions = {\n                sources: [],\n                tracks: []\n            };\n            const tagOptions = Dom.getAttributes(tag);\n            const dataSetup = tagOptions['data-setup'];\n            if (Dom.hasClass(tag, 'vjs-fill')) {\n                tagOptions.fill = true;\n            }\n            if (Dom.hasClass(tag, 'vjs-fluid')) {\n                tagOptions.fluid = true;\n            }\n            if (dataSetup !== null) {\n                const [err, data] = safeParseTuple(dataSetup || '{}');\n                if (err) {\n                    log.error(err);\n                }\n                obj.assign(tagOptions, data);\n            }\n            obj.assign(baseOptions, tagOptions);\n            if (tag.hasChildNodes()) {\n                const children = tag.childNodes;\n                for (let i = 0, j = children.length; i < j; i++) {\n                    const child = children[i];\n                    const childName = child.nodeName.toLowerCase();\n                    if (childName === 'source') {\n                        baseOptions.sources.push(Dom.getAttributes(child));\n                    } else if (childName === 'track') {\n                        baseOptions.tracks.push(Dom.getAttributes(child));\n                    }\n                }\n            }\n            return baseOptions;\n        }\n        flexNotSupported_() {\n            const elem = document.createElement('i');\n            return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || 'msFlexOrder' in elem.style);\n        }\n        debug(enabled) {\n            if (enabled === undefined) {\n                return this.debugEnabled_;\n            }\n            if (enabled) {\n                this.trigger('debugon');\n                this.previousLogLevel_ = this.log.level;\n                this.log.level('debug');\n                this.debugEnabled_ = true;\n            } else {\n                this.trigger('debugoff');\n                this.log.level(this.previousLogLevel_);\n                this.previousLogLevel_ = undefined;\n                this.debugEnabled_ = false;\n            }\n        }\n    }\n    TRACK_TYPES.ALL.names.forEach(function (name) {\n        const props = TRACK_TYPES.ALL[name];\n        Player.prototype[props.getterName] = function () {\n            if (this.tech_) {\n                return this.tech_[props.getterName]();\n            }\n            this[props.privateName] = this[props.privateName] || new props.ListClass();\n            return this[props.privateName];\n        };\n    });\n    Player.prototype.crossorigin = Player.prototype.crossOrigin;\n    Player.players = {};\n    const navigator = window.navigator;\n    Player.prototype.options_ = {\n        techOrder: Tech.defaultTechOrder_,\n        html5: {},\n        inactivityTimeout: 2000,\n        playbackRates: [],\n        liveui: false,\n        children: [\n            'mediaLoader',\n            'posterImage',\n            'textTrackDisplay',\n            'loadingSpinner',\n            'bigPlayButton',\n            'liveTracker',\n            'controlBar',\n            'errorDisplay',\n            'textTrackSettings',\n            'resizeManager'\n        ],\n        language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n        languages: {},\n        notSupportedMessage: 'No compatible source was found for this media.',\n        fullscreen: { options: { navigationUI: 'hide' } },\n        breakpoints: {},\n        responsive: false\n    };\n    [\n        'ended',\n        'seeking',\n        'seekable',\n        'networkState',\n        'readyState'\n    ].forEach(function (fn) {\n        Player.prototype[fn] = function () {\n            return this.techGet_(fn);\n        };\n    });\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n        Player.prototype[`handleTech${ stringCases.toTitleCase(event) }_`] = function () {\n            return this.trigger(event);\n        };\n    });\n    Component.registerComponent('Player', Player);\n    return Player;\n});"]}