{"version":3,"sources":["player.js"],"names":["define","document","domx","Component","Events","Dom","Fn","Guid","browser","log","stringCases","timeRages","buffer","stylesheet","FullscreenApi","MediaError","safeParseTuple","obj","mergeOptions","promise","textTrackConverter","ModalDialog","Tech","middleware","TRACK_TYPES","filterSource","mimetypes","keycode","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","forEach","k","v","charAt","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","Infinity","Player","[object Object]","tag","options","ready","id","newGUID","assign","getTagSettings","initChildren","evented","reportTouchActivity","language","closest","getAttribute","element","nodeType","getAttributes","hasOwnProperty","parentNode","this","tagAttributes","super","_construct","boundDocumentFullscreenChange_","e","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isFullscreen_","createLogger","id_","fsApi_","isPosterFromTech_","queuedCallbacks_","isReady_","hasStarted_","userActive_","debugEnabled_","options_","techOrder","length","Error","languages","languagesToLower","Object","getOwnPropertyNames","name","toLowerCase","languages_","prototype","resetCache_","poster_","poster","controls_","controls","removeAttribute","changingSrc_","playCallbacks_","playTerminatedQueue_","hasAttribute","autoplay","plugins","keys","scrubbing_","requestFullscreen","on","fullscreenchange","listenTo","fluid_","updateStyleEl_","playerOptionsCopy","debug","playerOptions","middleware_","isAudio","nodeName","addClass","el_","setAttribute","localize","flexNotSupported_","TOUCH_ENABLED","IS_IOS","players","userActive","reportUserActivity","listenToOnce","listenForUserActivity_","handleStageClick_","handleKeyDown","handleLanguagechange","breakpoints","responsive","info","_init","children_","unshift","window","VIDEOJS_NO_DYNAMIC_STYLE","styleEl_","createStyleElement","defaultsStyleEl","$","head","insertBefore","nextSibling","firstChild","fill_","width","height","fill","fluid","aspectRatio","crossOrigin","crossorigin","trigger","unlistenTo","off","removeChild","player","tech_","dispose","playerElIngest_","clearCacheForPlayer","ALL","names","list","getterName","el","playerElIngest","divEmbed","tagName","createEl","attrs","createElement","children","appendChild","hasClass","tabindex","IE_VERSION","IS_CHROME","IS_WINDOWS","role","attr","playerId","className","links","getElementsByTagName","i","linkEl","item","initNetworkState_","networkState","prependTo","language_","value","techGet_","techCall_","warn","dimension","privDimension","undefined","parsedVal","parseFloat","isNaN","error","bool","removeClass","ratio","aspectRatio_","test","width_","height_","techEl","idClass","ratioParts","videoWidth","videoHeight","split","ratioMultiplier","setTextContent","techName","source","unloadTech_","titleTechName","toTitleCase","camelTechName","slice","getTech","disposeMediaElement","techName_","techOptions","nativeControlsForTouch","techId","playsinline","preload","loop","disablePictureInPicture","muted","vtt.js","canOverridePoster","techCanOverridePoster","enableSourceset","Promise","props","privateName","src","cache_","currentTime","startTime","TechClass","bind","handleTechReady_","jsonToTextTracks","textTracksJson_","event","eventObj","playbackRate","seeking","push","callback","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","textTracksToJson","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","triggerReady","volume","paused","hasStarted","manualAutoplay_","type","previouslyMuted","restoreMuted","mutedPromise","play","isPromise","catch","then","srcObj","sources","findMimetype","matchingSources","filter","s","sourceElSources","sourceEls","$$","matchingSourceEls","sourceObj","updateSourceCaches","updateSourceCaches_","playerSrc","currentSource","eventSrc","lastSource_","tech","any","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","starttime","pause","duration","isSingleLeftClick","silencePromise","Array","some","call","contains","target","userActions","doubleClick","isFullscreen","exitFullscreen","userWasActive","cancelable","preventDefault","targetPlayer","isFs","fullscreenElement","matches","fullscreen","msMatchesSelector","data","nativeIOSFullscreen","toggleClass","err","isInPictureInPicture","arguments","initTime","inactivityTimeout","NaN","lastVolume","defaultPlaybackRate","media","method","arg","allowedSetters","set","allowedMediators","mediate","allowedGetters","get","PromiseClass","resolve","play_","isSrcReady","Boolean","currentSrc","waitToPlay_","IS_ANY_SAFARI","load","val","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","cb","createTimeRange","isScrubbing","seconds","applyInitTime_","Math","floor","buffered","bufferedPercent","end","percentAsDecimal","vol","max","min","lastVolume_","defaultMuted","isFS","oldValue","prefixed","toggleFullscreenClass_","fullscreenOptions","self","reject","offHandler","errorHandler","changeHandler","one","requestFullscreenHelper_","fsOptions","support","noder","supportsFullScreen","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","documentElement","style","overflow","body","isEventKey","isPiP","isInPictureInPicture_","togglePictureInPictureClass_","exitPictureInPicture","hotkeys","isContentEditable","indexOf","excludeElement","ownerDocument","activeElement","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","stopPropagation","FSToggle","getComponent","fullscreenEnabled","handleClick","can","j","isSupported","canPlayType","techs","map","findFirstPassingTechSourcePair","outerArray","innerArray","tester","found","outerChoice","innerChoice","foundSourceAndTech","finder","canPlaySource","sourceOrder","fn","a","b","flip","setSource","middlewareSource","mws","src_","setTimeout","code","message","notSupportedMessage","setTech","sourceTech","selectSource","titleCaseEquals","constructor","loadTech_","doReset_","playPromise","clearTracks","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","durationDisplay","remainingTimeDisplay","controlBar","updateContent","techAutoplay","newPoster","usingNativeControls_","error_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","close","errorTypes","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","clearInterval","setInterval","screenX","screenY","getChild","IS_ANDROID","clearTimeout","timeout","rate","featuresPlaybackRate","isAudio_","kind","label","addTextTrack","manualCleanup","addRemoteTextTrack","track","removeRemoteTextTrack","String","tracks","content","modal","addChild","open","currentBreakpoint","currentWidth","candidateBreakpoint","breakpoints_","breakpoint_","currentBreakpointClass","updateCurrentBreakpoint_","responsive_","removeCurrentBreakpoint_","reset","artwork","textTracks","getMimetype","isArray","tt","currentSources","remoteTextTracks","baseOptions","tagOptions","dataSetup","hasChildNodes","childNodes","child","childName","elem","enabled","previousLogLevel_","level","ListClass","navigator","defaultTechOrder_","html5","playbackRates","liveui","userLanguage","navigationUI","registerComponent"],"mappings":";;;;;;;AAAAA,QACI,iCACA,eACA,cAEA,iBACA,cACA,aACA,eACA,kBACA,cACA,uBACA,sBACA,iBACA,qBACA,mBACA,gBACA,yBACA,cACA,wBACA,kBACA,qCACA,iBACA,cACA,oBACA,uBACA,wBACA,oBACA,kBACA,gBACA,iBACA,8BACA,oBACA,oBACA,iBACA,4BACA,kBACA,+BACA,mBACA,iBACA,gBACD,SACCC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,aACA,MAAMC,GACF,WACA,QACA,UACA,UACA,UACA,iBACA,aACA,aACA,SACA,eACA,mBAEEC,GACFC,QAAS,UACTC,eAAgB,iBAChBC,QAAS,UACTC,OAAQ,UAENC,GACF,OACA,SACA,QACA,SACA,QACA,SACA,QAEEC,KACND,EAAiBE,QAAQC,IACrB,MAAMC,EAAoB,MAAhBD,EAAEE,OAAO,QAAmBF,EAAEG,UAAU,KAAQH,EAC1DF,EAAmBE,iBAAoBC,MAE3C,MAAMG,GACFC,KAAM,IACNC,OAAQ,IACRC,MAAO,IACPC,OAAQ,IACRC,MAAO,KACPC,OAAQ,KACRC,KAAMC,EAAAA,SAEJC,UAAe/C,EACjBgD,WAAWC,EAAKC,EAASC,GAOrB,GANAF,EAAIG,GAAKH,EAAIG,IAAMF,EAAQE,iBAAoBhD,EAAKiD,aACpDH,EAAUpC,EAAIwC,OAAOP,EAAOQ,eAAeN,GAAMC,IACzCM,cAAe,EAEvBN,EAAQO,SAAU,EAClBP,EAAQQ,qBAAsB,GACzBR,EAAQS,SACT,GAA2B,mBAAhBV,EAAIW,QAAwB,CACnC,MAAMA,EAAUX,EAAIW,QAAQ,UACxBA,GAAWA,EAAQC,eACnBX,EAAQS,SAAWC,EAAQC,aAAa,aAEzC,CACH,IAAIC,EAAUb,EACd,KAAOa,GAAgC,IAArBA,EAAQC,UAAgB,CACtC,GAAI7D,EAAI8D,cAAcF,GAASG,eAAe,QAAS,CACnDf,EA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","file":"../player.js","sourcesContent":["define([\n    'skylark-langx-globals/document',\n    'skylark-domx',\n    './component',\n    ///'./mixins/evented',\n    './utils/events',\n    './utils/dom',\n    './utils/fn',\n    './utils/guid',\n    './utils/browser',\n    './utils/log',\n    './utils/string-cases',\n    './utils/time-ranges',\n    './utils/buffer',\n    './utils/stylesheet',\n    './fullscreen-api',\n    './media-error',\n    './utils/safeParseTuple',\n    './utils/obj',\n    './utils/merge-options',\n    './utils/promise',\n    './tracks/text-track-list-converter',\n    './modal-dialog',\n    './tech/tech',\n    './tech/middleware',\n    './tracks/track-types',\n    './utils/filter-source',\n    './utils/mimetypes',\n    './utils/keycode',\n    './tech/loader',\n    './poster-image',\n    './tracks/text-track-display',\n    './loading-spinner',\n    './big-play-button',\n    './close-button',\n    './control-bar/control-bar',\n    './error-display',\n    './tracks/text-track-settings',\n    './resize-manager',\n    './live-tracker',\n    './tech/html5'\n], function (\n    document,\n    domx,\n    Component,\n    Events, \n    Dom, \n    Fn, \n    Guid, \n    browser, \n    log, \n    stringCases, \n    timeRages, \n    buffer, \n    stylesheet, \n    FullscreenApi, \n    MediaError, \n    safeParseTuple, \n    obj, \n    mergeOptions, \n    promise, \n    textTrackConverter, \n    ModalDialog, \n    Tech, \n    middleware, \n    TRACK_TYPES, \n    filterSource, \n    mimetypes, \n    keycode\n) {\n    'use strict';\n    const TECH_EVENTS_RETRIGGER = [\n        'progress',\n        'abort',\n        'suspend',\n        'emptied',\n        'stalled',\n        'loadedmetadata',\n        'loadeddata',\n        'timeupdate',\n        'resize',\n        'volumechange',\n        'texttrackchange'\n    ];\n    const TECH_EVENTS_QUEUE = {\n        canplay: 'CanPlay',\n        canplaythrough: 'CanPlayThrough',\n        playing: 'Playing',\n        seeked: 'Seeked'\n    };\n    const BREAKPOINT_ORDER = [\n        'tiny',\n        'xsmall',\n        'small',\n        'medium',\n        'large',\n        'xlarge',\n        'huge'\n    ];\n    const BREAKPOINT_CLASSES = {};\n    BREAKPOINT_ORDER.forEach(k => {\n        const v = k.charAt(0) === 'x' ? `x-${ k.substring(1) }` : k;\n        BREAKPOINT_CLASSES[k] = `vjs-layout-${ v }`;\n    });\n    const DEFAULT_BREAKPOINTS = {\n        tiny: 210,\n        xsmall: 320,\n        small: 425,\n        medium: 768,\n        large: 1440,\n        xlarge: 2560,\n        huge: Infinity\n    };\n    class Player extends Component {\n        _construct(tag, options, ready) {\n            tag.id = tag.id || options.id || `vjs_video_${ Guid.newGUID() }`;\n            options = obj.assign(Player.getTagSettings(tag), options);\n            options.initChildren = false;\n            ///options.createEl = false;\n            options.evented = false;\n            options.reportTouchActivity = false;\n            if (!options.language) {\n                if (typeof tag.closest === 'function') {\n                    const closest = tag.closest('[lang]');\n                    if (closest && closest.getAttribute) {\n                        options.language = closest.getAttribute('lang');\n                    }\n                } else {\n                    let element = tag;\n                    while (element && element.nodeType === 1) {\n                        if (Dom.getAttributes(element).hasOwnProperty('lang')) {\n                            options.language = element.getAttribute('lang');\n                            break;\n                        }\n                        element = element.parentNode;\n                    }\n                }\n            }\n\n            this.tag = tag;\n            this.tagAttributes = tag && Dom.getAttributes(tag);\n\n            super._construct(null, options, ready);\n\n            this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n            this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n            this.isFullscreen_ = false;\n            this.log = log.createLogger(this.id_);\n            this.fsApi_ = FullscreenApi;\n            this.isPosterFromTech_ = false;\n            this.queuedCallbacks_ = [];\n            this.isReady_ = false;\n            this.hasStarted_ = false;\n            this.userActive_ = false;\n            this.debugEnabled_ = false;\n            if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n                throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n            }\n            this.language(this.options_.language);\n            if (options.languages) {\n                const languagesToLower = {};\n                Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n                    languagesToLower[name.toLowerCase()] = options.languages[name];\n                });\n                this.languages_ = languagesToLower;\n            } else {\n                this.languages_ = Player.prototype.options_.languages;\n            }\n            this.resetCache_();\n            this.poster_ = options.poster || '';\n            this.controls_ = !!options.controls;\n            tag.controls = false;\n            tag.removeAttribute('controls');\n            this.changingSrc_ = false;\n            this.playCallbacks_ = [];\n            this.playTerminatedQueue_ = [];\n            if (tag.hasAttribute('autoplay')) {\n                this.autoplay(true);\n            } else {\n                this.autoplay(this.options_.autoplay);\n            }\n            if (options.plugins) {\n                Object.keys(options.plugins).forEach(name => {\n                    if (typeof this[name] !== 'function') {\n                        throw new Error(`plugin \"${ name }\" does not exist`);\n                    }\n                });\n            }\n            this.scrubbing_ = false;\n            ///this.el_ = this.createEl();\n            //evented(this, { eventBusKey: 'el_' });\n            if (this.fsApi_.requestFullscreen) {\n                Events.on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n                this.listenTo(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n            }\n            if (this.fluid_) {\n                this.listenTo([\n                    'playerreset',\n                    'resize'\n                ], this.updateStyleEl_);\n            }\n            const playerOptionsCopy = mergeOptions(this.options_);\n            if (options.plugins) {\n                Object.keys(options.plugins).forEach(name => {\n                    this[name](options.plugins[name]);\n                });\n            }\n            if (options.debug) {\n                this.debug(true);\n            }\n            this.options_.playerOptions = playerOptionsCopy;\n            this.middleware_ = [];\n            this.initChildren();\n            this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n            if (this.controls()) {\n                this.addClass('vjs-controls-enabled');\n            } else {\n                this.addClass('vjs-controls-disabled');\n            }\n            this.el_.setAttribute('role', 'region');\n            if (this.isAudio()) {\n                this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n            } else {\n                this.el_.setAttribute('aria-label', this.localize('Video Player'));\n            }\n            if (this.isAudio()) {\n                this.addClass('vjs-audio');\n            }\n            if (this.flexNotSupported_()) {\n                this.addClass('vjs-no-flex');\n            }\n            if (browser.TOUCH_ENABLED) {\n                this.addClass('vjs-touch-enabled');\n            }\n            if (!browser.IS_IOS) {\n                this.addClass('vjs-workinghover');\n            }\n            Player.players[this.id_] = this;\n            const majorVersion = \"7\";\n            this.addClass(`vjs-v${ majorVersion }`);\n            this.userActive(true);\n            this.reportUserActivity();\n            this.listenToOnce('play', this.listenForUserActivity_);\n            this.listenTo('stageclick', this.handleStageClick_);\n            this.listenTo('keydown', this.handleKeyDown);\n            this.listenTo('languagechange', this.handleLanguagechange);\n            this.breakpoints(this.options_.breakpoints);\n            this.responsive(this.options_.responsive);\n\n            log.info(\"The player is created.\");\n        }\n\n        _init() {\n            super._init();\n\n            this.children_.unshift(this.tag);\n\n            this.addClass('vjs-paused');\n\n            if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n                this.styleEl_ = stylesheet.createStyleElement('vjs-styles-dimensions');\n                const defaultsStyleEl = Dom.$('.vjs-styles-defaults');\n                const head = Dom.$('head');\n                head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n            }\n            this.fill_ = false;\n            this.fluid_ = false;\n            this.width(this.options_.width);\n            this.height(this.options_.height);\n            this.fill(this.options_.fill);\n            this.fluid(this.options_.fluid);\n            this.aspectRatio(this.options_.aspectRatio);\n            this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n\n        }\n        dispose() {\n            this.trigger('dispose');\n            this.unlistenTo('dispose');\n            Events.off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n            Events.off(document, 'keydown', this.boundFullWindowOnEscKey_);\n            if (this.styleEl_ && this.styleEl_.parentNode) {\n                this.styleEl_.parentNode.removeChild(this.styleEl_);\n                this.styleEl_ = null;\n            }\n            Player.players[this.id_] = null;\n            if (this.tag && this.tag.player) {\n                this.tag.player = null;\n            }\n            if (this.el_ && this.el_.player) {\n                this.el_.player = null;\n            }\n            if (this.tech_) {\n                this.tech_.dispose();\n                this.isPosterFromTech_ = false;\n                this.poster_ = '';\n            }\n            if (this.playerElIngest_) {\n                this.playerElIngest_ = null;\n            }\n            if (this.tag) {\n                this.tag = null;\n            }\n            middleware.clearCacheForPlayer(this);\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES[name];\n                const list = this[props.getterName]();\n                if (list && list.off) {\n                    list.off();\n                }\n            });\n            super.dispose();\n        }\n        createEl() {\n            let tag = this.tag;\n            let el;\n            let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n            const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n            if (playerElIngest) {\n                el = this.el_ = tag.parentNode;\n            } else if (!divEmbed) {\n                el = this.el_ = super.createEl('div');\n            }\n            const attrs = Dom.getAttributes(tag);\n            if (divEmbed) {\n                el = this.el_ = tag;\n                tag = this.tag = document.createElement('video');\n                while (el.children.length) {\n                    tag.appendChild(el.firstChild);\n                }\n                if (!Dom.hasClass(el, 'video-js')) {\n                    Dom.addClass(el, 'video-js');\n                }\n                el.appendChild(tag);\n                playerElIngest = this.playerElIngest_ = el;\n                Object.keys(el).forEach(k => {\n                    try {\n                        tag[k] = el[k];\n                    } catch (e) {\n                    }\n                });\n            }\n            tag.setAttribute('tabindex', '-1');\n            attrs.tabindex = '-1';\n            if (browser.IE_VERSION || browser.IS_CHROME && browser.IS_WINDOWS) {\n                tag.setAttribute('role', 'application');\n                attrs.role = 'application';\n            }\n            tag.removeAttribute('width');\n            tag.removeAttribute('height');\n            if ('width' in attrs) {\n                delete attrs.width;\n            }\n            if ('height' in attrs) {\n                delete attrs.height;\n            }\n            Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n                if (!(divEmbed && attr === 'class')) {\n                    el.setAttribute(attr, attrs[attr]);\n                }\n                if (divEmbed) {\n                    tag.setAttribute(attr, attrs[attr]);\n                }\n            });\n            tag.playerId = tag.id;\n            tag.id += '_html5_api';\n            tag.className = 'vjs-tech';\n            tag.player = el.player = this;\n\n            const links = tag.getElementsByTagName('a');\n            for (let i = 0; i < links.length; i++) {\n                const linkEl = links.item(i);\n                Dom.addClass(linkEl, 'vjs-hidden');\n                linkEl.setAttribute('hidden', 'hidden');\n            }\n            tag.initNetworkState_ = tag.networkState;\n            if (tag.parentNode && !playerElIngest) {\n                tag.parentNode.insertBefore(el, tag);\n            }\n            Dom.prependTo(tag, el);\n            this.el_.setAttribute('lang', this.language_);\n            this.el_ = el;\n            return el;\n        }\n        crossOrigin(value) {\n            if (!value) {\n                return this.techGet_('crossOrigin');\n            }\n            if (value !== 'anonymous' && value !== 'use-credentials') {\n                log.warn(`crossOrigin must be \"anonymous\" or \"use-credentials\", given \"${ value }\"`);\n                return;\n            }\n            this.techCall_('setCrossOrigin', value);\n            return;\n        }\n        width(value) {\n            return this.dimension('width', value);\n        }\n        height(value) {\n            return this.dimension('height', value);\n        }\n        dimension(dimension, value) {\n            const privDimension = dimension + '_';\n            if (value === undefined) {\n                return this[privDimension] || 0;\n            }\n            if (value === '' || value === 'auto') {\n                this[privDimension] = undefined;\n                this.updateStyleEl_();\n                return;\n            }\n            const parsedVal = parseFloat(value);\n            if (isNaN(parsedVal)) {\n                log.error(`Improper value \"${ value }\" supplied for for ${ dimension }`);\n                return;\n            }\n            this[privDimension] = parsedVal;\n            this.updateStyleEl_();\n        }\n        fluid(bool) {\n            if (bool === undefined) {\n                return !!this.fluid_;\n            }\n            this.fluid_ = !!bool;\n            ///if (evented.isEvented(this)) {\n                this.unlistenTo([\n                    'playerreset',\n                    'resize'\n                ], this.updateStyleEl_);\n            ///}\n            if (bool) {\n                this.addClass('vjs-fluid');\n                this.fill(false);\n                ///evented.addEventedCallback(this, () => {\n                ///    this.listenTo([\n                ///        'playerreset',\n                ///        'resize'\n                ///    ], this.updateStyleEl_);\n                ///});\n            } else {\n                this.removeClass('vjs-fluid');\n            }\n            this.updateStyleEl_();\n        }\n        fill(bool) {\n            if (bool === undefined) {\n                return !!this.fill_;\n            }\n            this.fill_ = !!bool;\n            if (bool) {\n                this.addClass('vjs-fill');\n                this.fluid(false);\n            } else {\n                this.removeClass('vjs-fill');\n            }\n        }\n        aspectRatio(ratio) {\n            if (ratio === undefined) {\n                return this.aspectRatio_;\n            }\n            if (!/^\\d+\\:\\d+$/.test(ratio)) {\n                throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n            }\n            this.aspectRatio_ = ratio;\n            this.fluid(true);\n            this.updateStyleEl_();\n        }\n        updateStyleEl_() {\n            if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n                const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n                const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n                const techEl = this.tech_ && this.tech_.el();\n                if (techEl) {\n                    if (width >= 0) {\n                        techEl.width = width;\n                    }\n                    if (height >= 0) {\n                        techEl.height = height;\n                    }\n                }\n                return;\n            }\n            let width;\n            let height;\n            let aspectRatio;\n            let idClass;\n            if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n                aspectRatio = this.aspectRatio_;\n            } else if (this.videoWidth() > 0) {\n                aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n            } else {\n                aspectRatio = '16:9';\n            }\n            const ratioParts = aspectRatio.split(':');\n            const ratioMultiplier = ratioParts[1] / ratioParts[0];\n            if (this.width_ !== undefined) {\n                width = this.width_;\n            } else if (this.height_ !== undefined) {\n                width = this.height_ / ratioMultiplier;\n            } else {\n                width = this.videoWidth() || 300;\n            }\n            if (this.height_ !== undefined) {\n                height = this.height_;\n            } else {\n                height = width * ratioMultiplier;\n            }\n            if (/^[^a-zA-Z]/.test(this.id())) {\n                idClass = 'dimensions-' + this.id();\n            } else {\n                idClass = this.id() + '-dimensions';\n            }\n            this.addClass(idClass);\n            stylesheet.setTextContent(this.styleEl_, `\n      .${ idClass } {\n        width: ${ width }px;\n        height: ${ height }px;\n      }\n\n      .${ idClass }.vjs-fluid {\n        padding-top: ${ ratioMultiplier * 100 }%;\n      }\n    `);\n        }\n        loadTech_(techName, source) {\n            if (this.tech_) {\n                this.unloadTech_();\n            }\n            const titleTechName = stringCases.toTitleCase(techName);\n            const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n            if (titleTechName !== 'Html5' && this.tag) {\n                Tech.getTech('Html5').disposeMediaElement(this.tag);\n                this.tag.player = null;\n                this.tag = null;\n            }\n            this.techName_ = titleTechName;\n            this.isReady_ = false;\n            const autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n            const techOptions = {\n                source,\n                autoplay,\n                'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n                'playerId': this.id(),\n                'techId': `${ this.id() }_${ camelTechName }_api`,\n                'playsinline': this.options_.playsinline,\n                'preload': this.options_.preload,\n                'loop': this.options_.loop,\n                'disablePictureInPicture': this.options_.disablePictureInPicture,\n                'muted': this.options_.muted,\n                'poster': this.poster(),\n                'language': this.language(),\n                'playerElIngest': this.playerElIngest_ || false,\n                'vtt.js': this.options_['vtt.js'],\n                'canOverridePoster': !!this.options_.techCanOverridePoster,\n                'enableSourceset': this.options_.enableSourceset,\n                'Promise': this.options_.Promise\n            };\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                techOptions[props.getterName] = this[props.privateName];\n            });\n            obj.assign(techOptions, this.options_[titleTechName]);\n            obj.assign(techOptions, this.options_[camelTechName]);\n            obj.assign(techOptions, this.options_[techName.toLowerCase()]);\n            if (this.tag) {\n                techOptions.tag = this.tag;\n            }\n            if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n                techOptions.startTime = this.cache_.currentTime;\n            }\n            const TechClass = Tech.getTech(techName);\n            if (!TechClass) {\n                throw new Error(`No Tech named '${ titleTechName }' exists! '${ titleTechName }' should be registered using videojs.registerTech()'`);\n            }\n            this.tech_ = new TechClass(techOptions);\n            this.tech_.ready(Fn.bind(this, this.handleTechReady_), true);\n            textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n            TECH_EVENTS_RETRIGGER.forEach(event => {\n                this.listenTo(this.tech_, event, this[`handleTech${ stringCases.toTitleCase(event) }_`]);\n            });\n            Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n                this.listenTo(this.tech_, event, eventObj => {\n                    if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n                        this.queuedCallbacks_.push({\n                            callback: this[`handleTech${ TECH_EVENTS_QUEUE[event] }_`].bind(this),\n                            event: eventObj\n                        });\n                        return;\n                    }\n                    this[`handleTech${ TECH_EVENTS_QUEUE[event] }_`](eventObj);\n                });\n            });\n            this.listenTo(this.tech_, 'loadstart', this.handleTechLoadStart_);\n            this.listenTo(this.tech_, 'sourceset', this.handleTechSourceset_);\n            this.listenTo(this.tech_, 'waiting', this.handleTechWaiting_);\n            this.listenTo(this.tech_, 'ended', this.handleTechEnded_);\n            this.listenTo(this.tech_, 'seeking', this.handleTechSeeking_);\n            this.listenTo(this.tech_, 'play', this.handleTechPlay_);\n            this.listenTo(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n            this.listenTo(this.tech_, 'pause', this.handleTechPause_);\n            this.listenTo(this.tech_, 'durationchange', this.handleTechDurationChange_);\n            this.listenTo(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n            this.listenTo(this.tech_, 'fullscreenerror', this.handleTechFullscreenError_);\n            this.listenTo(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n            this.listenTo(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n            this.listenTo(this.tech_, 'error', this.handleTechError_);\n            this.listenTo(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n            this.listenTo(this.tech_, 'posterchange', this.handleTechPosterChange_);\n            this.listenTo(this.tech_, 'textdata', this.handleTechTextData_);\n            this.listenTo(this.tech_, 'ratechange', this.handleTechRateChange_);\n            this.usingNativeControls(this.techGet_('controls'));\n            if (this.controls() && !this.usingNativeControls()) {\n                this.addTechControlsListeners_();\n            }\n            if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n                Dom.prependTo(this.tech_.el(), this.el());\n            }\n            if (this.tag) {\n                this.tag.player = null;\n                this.tag = null;\n            }\n        }\n        unloadTech_() {\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                this[props.privateName] = this[props.getterName]();\n            });\n            this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n            this.isReady_ = false;\n            this.tech_.dispose();\n            this.tech_ = false;\n            if (this.isPosterFromTech_) {\n                this.poster_ = '';\n                this.trigger('posterchange');\n            }\n            this.isPosterFromTech_ = false;\n        }\n        tech(safety) {\n            if (safety === undefined) {\n                log.warn(\"Using the tech directly can be dangerous. I hope you know what you're doing.\\n\" + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n            }\n            return this.tech_;\n        }\n        addTechControlsListeners_() {\n            this.removeTechControlsListeners_();\n            this.listenTo(this.tech_, 'mouseup', this.handleTechClick_);\n            this.listenTo(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n            this.listenTo(this.tech_, 'touchstart', this.handleTechTouchStart_);\n            this.listenTo(this.tech_, 'touchmove', this.handleTechTouchMove_);\n            this.listenTo(this.tech_, 'touchend', this.handleTechTouchEnd_);\n            this.listenTo(this.tech_, 'tap', this.handleTechTap_);\n        }\n        removeTechControlsListeners_() {\n            this.unlistenTo(this.tech_, 'tap', this.handleTechTap_);\n            this.unlistenTo(this.tech_, 'touchstart', this.handleTechTouchStart_);\n            this.unlistenTo(this.tech_, 'touchmove', this.handleTechTouchMove_);\n            this.unlistenTo(this.tech_, 'touchend', this.handleTechTouchEnd_);\n            this.unlistenTo(this.tech_, 'mouseup', this.handleTechClick_);\n            this.unlistenTo(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n        }\n        handleTechReady_() {\n            this.triggerReady();\n            if (this.cache_.volume) {\n                this.techCall_('setVolume', this.cache_.volume);\n            }\n            this.handleTechPosterChange_();\n            this.handleTechDurationChange_();\n        }\n        handleTechLoadStart_() {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-seeking');\n            this.error(null);\n            this.handleTechDurationChange_();\n            if (!this.paused()) {\n                this.trigger('loadstart');\n                this.trigger('firstplay');\n            } else {\n                this.hasStarted(false);\n                this.trigger('loadstart');\n            }\n            this.manualAutoplay_(this.autoplay());\n        }\n        manualAutoplay_(type) {\n            if (!this.tech_ || typeof type !== 'string') {\n                return;\n            }\n            const muted = () => {\n                const previouslyMuted = this.muted();\n                this.muted(true);\n                const restoreMuted = () => {\n                    this.muted(previouslyMuted);\n                };\n                this.playTerminatedQueue_.push(restoreMuted);\n                const mutedPromise = this.play();\n                if (!promise.isPromise(mutedPromise)) {\n                    return;\n                }\n                return mutedPromise.catch(restoreMuted);\n            };\n            let promise;\n            if (type === 'any' && this.muted() !== true) {\n                promise = this.play();\n                if (promise.isPromise(promise)) {\n                    promise = promise.catch(muted);\n                }\n            } else if (type === 'muted' && this.muted() !== true) {\n                promise = muted();\n            } else {\n                promise = this.play();\n            }\n            if (!promise.isPromise(promise)) {\n                return;\n            }\n            return promise.then(() => {\n                this.trigger({\n                    type: 'autoplay-success',\n                    autoplay: type\n                });\n            }).catch(e => {\n                this.trigger({\n                    type: 'autoplay-failure',\n                    autoplay: type\n                });\n            });\n        }\n        updateSourceCaches_(srcObj = '') {\n            let src = srcObj;\n            let type = '';\n            if (typeof src !== 'string') {\n                src = srcObj.src;\n                type = srcObj.type;\n            }\n            this.cache_.source = this.cache_.source || {};\n            this.cache_.sources = this.cache_.sources || [];\n            if (src && !type) {\n                type = mimetypes.findMimetype(this, src);\n            }\n            this.cache_.source = mergeOptions({}, srcObj, {\n                src,\n                type\n            });\n            const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n            const sourceElSources = [];\n            const sourceEls = this.$$('source');\n            const matchingSourceEls = [];\n            for (let i = 0; i < sourceEls.length; i++) {\n                const sourceObj = Dom.getAttributes(sourceEls[i]);\n                sourceElSources.push(sourceObj);\n                if (sourceObj.src && sourceObj.src === src) {\n                    matchingSourceEls.push(sourceObj.src);\n                }\n            }\n            if (matchingSourceEls.length && !matchingSources.length) {\n                this.cache_.sources = sourceElSources;\n            } else if (!matchingSources.length) {\n                this.cache_.sources = [this.cache_.source];\n            }\n            this.cache_.src = src;\n        }\n        handleTechSourceset_(event) {\n            if (!this.changingSrc_) {\n                let updateSourceCaches = src => this.updateSourceCaches_(src);\n                const playerSrc = this.currentSource().src;\n                const eventSrc = event.src;\n                if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n                    if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n                        updateSourceCaches = () => {\n                        };\n                    }\n                }\n                updateSourceCaches(eventSrc);\n                if (!event.src) {\n                    this.tech_.any([\n                        'sourceset',\n                        'loadstart'\n                    ], e => {\n                        if (e.type === 'sourceset') {\n                            return;\n                        }\n                        const techSrc = this.techGet('currentSrc');\n                        this.lastSource_.tech = techSrc;\n                        this.updateSourceCaches_(techSrc);\n                    });\n                }\n            }\n            this.lastSource_ = {\n                player: this.currentSource().src,\n                tech: event.src\n            };\n            this.trigger({\n                src: event.src,\n                type: 'sourceset'\n            });\n        }\n        hasStarted(request) {\n            if (request === undefined) {\n                return this.hasStarted_;\n            }\n            if (request === this.hasStarted_) {\n                return;\n            }\n            this.hasStarted_ = request;\n            if (this.hasStarted_) {\n                this.addClass('vjs-has-started');\n                this.trigger('firstplay');\n            } else {\n                this.removeClass('vjs-has-started');\n            }\n        }\n        handleTechPlay_() {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-paused');\n            this.addClass('vjs-playing');\n            this.hasStarted(true);\n            this.trigger('play');\n        }\n        handleTechRateChange_() {\n            if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n                this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n                this.queuedCallbacks_ = [];\n            }\n            this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n            this.trigger('ratechange');\n        }\n        handleTechWaiting_() {\n            this.addClass('vjs-waiting');\n            this.trigger('waiting');\n            const timeWhenWaiting = this.currentTime();\n            const timeUpdateListener = () => {\n                if (timeWhenWaiting !== this.currentTime()) {\n                    this.removeClass('vjs-waiting');\n                    this.unlistenTo('timeupdate', timeUpdateListener);\n                }\n            };\n            this.listenTo('timeupdate', timeUpdateListener);\n        }\n        handleTechCanPlay_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('canplay');\n        }\n        handleTechCanPlayThrough_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('canplaythrough');\n        }\n        handleTechPlaying_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('playing');\n        }\n        handleTechSeeking_() {\n            this.addClass('vjs-seeking');\n            this.trigger('seeking');\n        }\n        handleTechSeeked_() {\n            this.removeClass('vjs-seeking');\n            this.removeClass('vjs-ended');\n            this.trigger('seeked');\n        }\n        handleTechFirstPlay_() {\n            if (this.options_.starttime) {\n                log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n                this.currentTime(this.options_.starttime);\n            }\n            this.addClass('vjs-has-started');\n            this.trigger('firstplay');\n        }\n        handleTechPause_() {\n            this.removeClass('vjs-playing');\n            this.addClass('vjs-paused');\n            this.trigger('pause');\n        }\n        handleTechEnded_() {\n            this.addClass('vjs-ended');\n            if (this.options_.loop) {\n                this.currentTime(0);\n                this.play();\n            } else if (!this.paused()) {\n                this.pause();\n            }\n            this.trigger('ended');\n        }\n        handleTechDurationChange_() {\n            this.duration(this.techGet_('duration'));\n        }\n        handleTechClick_(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            if (!this.controls_) {\n                return;\n            }\n            if (this.paused()) {\n                promise.silencePromise(this.play());\n            } else {\n                this.pause();\n            }\n        }\n        handleTechDoubleClick_(event) {\n            if (!this.controls_) {\n                return;\n            }\n            const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n            if (!inAllowedEls) {\n                if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n                    if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n                        this.options_.userActions.doubleClick.call(this, event);\n                    } else if (this.isFullscreen()) {\n                        this.exitFullscreen();\n                    } else {\n                        this.requestFullscreen();\n                    }\n                }\n            }\n        }\n        handleTechTap_() {\n            this.userActive(!this.userActive());\n        }\n        handleTechTouchStart_() {\n            this.userWasActive = this.userActive();\n        }\n        handleTechTouchMove_() {\n            if (this.userWasActive) {\n                this.reportUserActivity();\n            }\n        }\n        handleTechTouchEnd_(event) {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n        }\n        handleStageClick_() {\n            this.reportUserActivity();\n        }\n        toggleFullscreenClass_() {\n            if (this.isFullscreen()) {\n                this.addClass('vjs-fullscreen');\n            } else {\n                this.removeClass('vjs-fullscreen');\n            }\n        }\n        documentFullscreenChange_(e) {\n            const targetPlayer = e.target.player;\n            if (targetPlayer && targetPlayer !== this) {\n                return;\n            }\n            const el = this.el();\n            let isFs = document[this.fsApi_.fullscreenElement] === el;\n            if (!isFs && el.matches) {\n                isFs = el.matches(':' + this.fsApi_.fullscreen);\n            } else if (!isFs && el.msMatchesSelector) {\n                isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n            }\n            this.isFullscreen(isFs);\n        }\n        handleTechFullscreenChange_(event, data) {\n            if (data) {\n                if (data.nativeIOSFullscreen) {\n                    this.toggleClass('vjs-ios-native-fs');\n                }\n                this.isFullscreen(data.isFullscreen);\n            }\n        }\n        handleTechFullscreenError_(event, err) {\n            this.trigger('fullscreenerror', err);\n        }\n        togglePictureInPictureClass_() {\n            if (this.isInPictureInPicture()) {\n                this.addClass('vjs-picture-in-picture');\n            } else {\n                this.removeClass('vjs-picture-in-picture');\n            }\n        }\n        handleTechEnterPictureInPicture_(event) {\n            this.isInPictureInPicture(true);\n        }\n        handleTechLeavePictureInPicture_(event) {\n            this.isInPictureInPicture(false);\n        }\n        handleTechError_() {\n            const error = this.tech_.error();\n            this.error(error);\n        }\n        handleTechTextData_() {\n            let data = null;\n            if (arguments.length > 1) {\n                data = arguments[1];\n            }\n            this.trigger('textdata', data);\n        }\n        getCache() {\n            return this.cache_;\n        }\n        resetCache_() {\n            this.cache_ = {\n                currentTime: 0,\n                initTime: 0,\n                inactivityTimeout: this.options_.inactivityTimeout,\n                duration: NaN,\n                lastVolume: 1,\n                lastPlaybackRate: this.defaultPlaybackRate(),\n                media: null,\n                src: '',\n                source: {},\n                sources: [],\n                volume: 1\n            };\n        }\n        techCall_(method, arg) {\n            this.ready(function () {\n                if (method in middleware.allowedSetters) {\n                    return middleware.set(this.middleware_, this.tech_, method, arg);\n                } else if (method in middleware.allowedMediators) {\n                    return middleware.mediate(this.middleware_, this.tech_, method, arg);\n                }\n                try {\n                    if (this.tech_) {\n                        this.tech_[method](arg);\n                    }\n                } catch (e) {\n                    log.error(e);\n                    throw e;\n                }\n            }, true);\n        }\n        techGet_(method) {\n            if (!this.tech_ || !this.tech_.isReady_) {\n                return;\n            }\n            if (method in middleware.allowedGetters) {\n                return middleware.get(this.middleware_, this.tech_, method);\n            } else if (method in middleware.allowedMediators) {\n                return middleware.mediate(this.middleware_, this.tech_, method);\n            }\n            try {\n                return this.tech_[method]();\n            } catch (e) {\n                if (this.tech_[method] === undefined) {\n                    log.warn(`Video.js: ${ method } method not defined for ${ this.techName_ } playback technology.`, e);\n                    throw e;\n                }\n                if (e.name === 'TypeError') {\n                    log.warn(`Video.js: ${ method } unavailable on ${ this.techName_ } playback technology element.`, e);\n                    this.tech_.isReady_ = false;\n                    throw e;\n                }\n                log.error(e);\n                throw e;\n            }\n        }\n        play() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                return new PromiseClass(resolve => {\n                    this.play_(resolve);\n                });\n            }\n            return this.play_();\n        }\n        play_(callback = promise.silencePromise) {\n            this.playCallbacks_.push(callback);\n            const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n            if (this.waitToPlay_) {\n                this.unlistenTo([\n                    'ready',\n                    'loadstart'\n                ], this.waitToPlay_);\n                this.waitToPlay_ = null;\n            }\n            if (!this.isReady_ || !isSrcReady) {\n                this.waitToPlay_ = e => {\n                    this.play_();\n                };\n                this.listenToOnce([\n                    'ready',\n                    'loadstart'\n                ], this.waitToPlay_);\n                if (!isSrcReady && (browser.IS_ANY_SAFARI || browser.IS_IOS)) {\n                    this.load();\n                }\n                return;\n            }\n            const val = this.techGet_('play');\n            if (val === null) {\n                this.runPlayTerminatedQueue_();\n            } else {\n                this.runPlayCallbacks_(val);\n            }\n        }\n        runPlayTerminatedQueue_() {\n            const queue = this.playTerminatedQueue_.slice(0);\n            this.playTerminatedQueue_ = [];\n            queue.forEach(function (q) {\n                q();\n            });\n        }\n        runPlayCallbacks_(val) {\n            const callbacks = this.playCallbacks_.slice(0);\n            this.playCallbacks_ = [];\n            this.playTerminatedQueue_ = [];\n            callbacks.forEach(function (cb) {\n                cb(val);\n            });\n        }\n        pause() {\n            this.techCall_('pause');\n        }\n        paused() {\n            return this.techGet_('paused') === false ? false : true;\n        }\n        played() {\n            return this.techGet_('played') || timeRages.createTimeRange(0, 0);\n        }\n        scrubbing(isScrubbing) {\n            if (typeof isScrubbing === 'undefined') {\n                return this.scrubbing_;\n            }\n            this.scrubbing_ = !!isScrubbing;\n            this.techCall_('setScrubbing', this.scrubbing_);\n            if (isScrubbing) {\n                this.addClass('vjs-scrubbing');\n            } else {\n                this.removeClass('vjs-scrubbing');\n            }\n        }\n        currentTime(seconds) {\n            if (typeof seconds !== 'undefined') {\n                if (seconds < 0) {\n                    seconds = 0;\n                }\n                if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n                    this.cache_.initTime = seconds;\n                    this.unlistenTo('canplay', this.applyInitTime_);\n                    this.listenToOnce('canplay', this.applyInitTime_);\n                    return;\n                }\n                this.techCall_('setCurrentTime', seconds);\n                this.cache_.initTime = 0;\n                return;\n            }\n            this.cache_.currentTime = this.techGet_('currentTime') || 0;\n            return this.cache_.currentTime;\n        }\n        applyInitTime_() {\n            this.currentTime(this.cache_.initTime);\n        }\n        duration(seconds) {\n            if (seconds === undefined) {\n                return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n            }\n            seconds = parseFloat(seconds);\n            if (seconds < 0) {\n                seconds = Infinity;\n            }\n            if (seconds !== this.cache_.duration) {\n                this.cache_.duration = seconds;\n                if (seconds === Infinity) {\n                    this.addClass('vjs-live');\n                } else {\n                    this.removeClass('vjs-live');\n                }\n                if (!isNaN(seconds)) {\n                    this.trigger('durationchange');\n                }\n            }\n        }\n        remainingTime() {\n            return this.duration() - this.currentTime();\n        }\n        remainingTimeDisplay() {\n            return Math.floor(this.duration()) - Math.floor(this.currentTime());\n        }\n        buffered() {\n            let buffered = this.techGet_('buffered');\n            if (!buffered || !buffered.length) {\n                buffered = timeRages.createTimeRange(0, 0);\n            }\n            return buffered;\n        }\n        bufferedPercent() {\n            return buffer.bufferedPercent(this.buffered(), this.duration());\n        }\n        bufferedEnd() {\n            const buffered = this.buffered();\n            const duration = this.duration();\n            let end = buffered.end(buffered.length - 1);\n            if (end > duration) {\n                end = duration;\n            }\n            return end;\n        }\n        volume(percentAsDecimal) {\n            let vol;\n            if (percentAsDecimal !== undefined) {\n                vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n                this.cache_.volume = vol;\n                this.techCall_('setVolume', vol);\n                if (vol > 0) {\n                    this.lastVolume_(vol);\n                }\n                return;\n            }\n            vol = parseFloat(this.techGet_('volume'));\n            return isNaN(vol) ? 1 : vol;\n        }\n        muted(muted) {\n            if (muted !== undefined) {\n                this.techCall_('setMuted', muted);\n                return;\n            }\n            return this.techGet_('muted') || false;\n        }\n        defaultMuted(defaultMuted) {\n            if (defaultMuted !== undefined) {\n                return this.techCall_('setDefaultMuted', defaultMuted);\n            }\n            return this.techGet_('defaultMuted') || false;\n        }\n        lastVolume_(percentAsDecimal) {\n            if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n                this.cache_.lastVolume = percentAsDecimal;\n                return;\n            }\n            return this.cache_.lastVolume;\n        }\n        supportsFullScreen() {\n            return this.techGet_('supportsFullScreen') || false;\n        }\n        isFullscreen(isFS) {\n            if (isFS !== undefined) {\n                const oldValue = this.isFullscreen_;\n                this.isFullscreen_ = Boolean(isFS);\n                if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n                    this.trigger('fullscreenchange');\n                }\n                this.toggleFullscreenClass_();\n                return;\n            }\n            return this.isFullscreen_;\n        }\n        requestFullscreen(fullscreenOptions) {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                const self = this;\n                return new PromiseClass((resolve, reject) => {\n                    function offHandler() {\n                        self.off('fullscreenerror', errorHandler);\n                        self.off('fullscreenchange', changeHandler);\n                    }\n                    function changeHandler() {\n                        offHandler();\n                        resolve();\n                    }\n                    function errorHandler(e, err) {\n                        offHandler();\n                        reject(err);\n                    }\n                    self.one('fullscreenchange', changeHandler);\n                    self.one('fullscreenerror', errorHandler);\n                    const promise = self.requestFullscreenHelper_(fullscreenOptions);\n                    if (promise) {\n                        promise.then(offHandler, offHandler);\n                        return promise;\n                    }\n                });\n            }\n            return this.requestFullscreenHelper_();\n        }\n        requestFullscreenHelper_(fullscreenOptions) {\n            let fsOptions;\n            if (!this.fsApi_.prefixed) {\n                fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n                if (fullscreenOptions !== undefined) {\n                    fsOptions = fullscreenOptions;\n                }\n            }\n//            if (this.fsApi_.requestFullscreen) {\n//                const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n            if (domx.browser.support.fullscreen) {\n                const promise = domx.noder.fullscreen(this.el_);\n                if (promise) {\n                    promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n                }\n                return promise;\n            } else if (this.tech_.supportsFullScreen()) {\n                this.techCall_('enterFullScreen');\n            } else {\n                this.enterFullWindow();\n            }\n        }\n        exitFullscreen() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                const self = this;\n                return new PromiseClass((resolve, reject) => {\n                    function offHandler() {\n                        self.off('fullscreenerror', errorHandler);\n                        self.off('fullscreenchange', changeHandler);\n                    }\n                    function changeHandler() {\n                        offHandler();\n                        resolve();\n                    }\n                    function errorHandler(e, err) {\n                        offHandler();\n                        reject(err);\n                    }\n                    self.one('fullscreenchange', changeHandler);\n                    self.one('fullscreenerror', errorHandler);\n                    const promise = self.exitFullscreenHelper_();\n                    if (promise) {\n                        promise.then(offHandler, offHandler);\n                        return promise;\n                    }\n                });\n            }\n            return this.exitFullscreenHelper_();\n        }\n        exitFullscreenHelper_() {\n            if (this.fsApi_.requestFullscreen) {\n                //const promise = document[this.fsApi_.exitFullscreen]();\n                const promise = domx.noder.fullscreen(false);\n                if (promise) {\n                    promise.then(() => this.isFullscreen(false));\n                }\n                return promise;\n            } else if (this.tech_.supportsFullScreen()) {\n                this.techCall_('exitFullScreen');\n            } else {\n                this.exitFullWindow();\n            }\n        }\n        enterFullWindow() {\n            this.isFullscreen(true);\n            this.isFullWindow = true;\n            this.docOrigOverflow = document.documentElement.style.overflow;\n            Events.on(document, 'keydown', this.boundFullWindowOnEscKey_);\n            document.documentElement.style.overflow = 'hidden';\n            Dom.addClass(document.body, 'vjs-full-window');\n            this.trigger('enterFullWindow');\n        }\n        fullWindowOnEscKey(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                if (this.isFullscreen() === true) {\n                    this.exitFullscreen();\n                } else {\n                    this.exitFullWindow();\n                }\n            }\n        }\n        exitFullWindow() {\n            this.isFullscreen(false);\n            this.isFullWindow = false;\n            Events.off(document, 'keydown', this.boundFullWindowOnEscKey_);\n            document.documentElement.style.overflow = this.docOrigOverflow;\n            Dom.removeClass(document.body, 'vjs-full-window');\n            this.trigger('exitFullWindow');\n        }\n        disablePictureInPicture(value) {\n            if (value === undefined) {\n                return this.techGet_('disablePictureInPicture');\n            }\n            this.techCall_('setDisablePictureInPicture', value);\n            this.options_.disablePictureInPicture = value;\n            this.trigger('disablepictureinpicturechanged');\n        }\n        isInPictureInPicture(isPiP) {\n            if (isPiP !== undefined) {\n                this.isInPictureInPicture_ = !!isPiP;\n                this.togglePictureInPictureClass_();\n                return;\n            }\n            return !!this.isInPictureInPicture_;\n        }\n        requestPictureInPicture() {\n            if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n                return this.techGet_('requestPictureInPicture');\n            }\n        }\n        exitPictureInPicture() {\n            if ('pictureInPictureEnabled' in document) {\n                return document.exitPictureInPicture();\n            }\n        }\n        handleKeyDown(event) {\n            const {userActions} = this.options_;\n            if (!userActions || !userActions.hotkeys) {\n                return;\n            }\n            const excludeElement = el => {\n                const tagName = el.tagName.toLowerCase();\n                if (el.isContentEditable) {\n                    return true;\n                }\n                const allowedInputTypes = [\n                    'button',\n                    'checkbox',\n                    'hidden',\n                    'radio',\n                    'reset',\n                    'submit'\n                ];\n                if (tagName === 'input') {\n                    return allowedInputTypes.indexOf(el.type) === -1;\n                }\n                const excludedTags = ['textarea'];\n                return excludedTags.indexOf(tagName) !== -1;\n            };\n            if (excludeElement(this.el_.ownerDocument.activeElement)) {\n                return;\n            }\n            if (typeof userActions.hotkeys === 'function') {\n                userActions.hotkeys.call(this, event);\n            } else {\n                this.handleHotkeys(event);\n            }\n        }\n        handleHotkeys(event) {\n            const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n            const {fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'), muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'), playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')} = hotkeys;\n            if (fullscreenKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const FSToggle = Component.getComponent('FullscreenToggle');\n                if (document[this.fsApi_.fullscreenEnabled] !== false) {\n                    FSToggle.prototype.handleClick.call(this, event);\n                }\n            } else if (muteKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const MuteToggle = Component.getComponent('MuteToggle');\n                MuteToggle.prototype.handleClick.call(this, event);\n            } else if (playPauseKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const PlayToggle = Component.getComponent('PlayToggle');\n                PlayToggle.prototype.handleClick.call(this, event);\n            }\n        }\n        canPlayType(type) {\n            let can;\n            for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n                const techName = j[i];\n                let tech = Tech.getTech(techName);\n                if (!tech) {\n                    tech = Component.getComponent(techName);\n                }\n                if (!tech) {\n                    log.error(`The \"${ techName }\" tech is undefined. Skipped browser support check for that tech.`);\n                    continue;\n                }\n                if (tech.isSupported()) {\n                    can = tech.canPlayType(type);\n                    if (can) {\n                        return can;\n                    }\n                }\n            }\n            return '';\n        }\n        selectSource(sources) {\n            const techs = this.options_.techOrder.map(techName => {\n                return [\n                    techName,\n                    Tech.getTech(techName)\n                ];\n            }).filter(([techName, tech]) => {\n                if (tech) {\n                    return tech.isSupported();\n                }\n                log.error(`The \"${ techName }\" tech is undefined. Skipped browser support check for that tech.`);\n                return false;\n            });\n            const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n                let found;\n                outerArray.some(outerChoice => {\n                    return innerArray.some(innerChoice => {\n                        found = tester(outerChoice, innerChoice);\n                        if (found) {\n                            return true;\n                        }\n                    });\n                });\n                return found;\n            };\n            let foundSourceAndTech;\n            const flip = fn => (a, b) => fn(b, a);\n            const finder = ([techName, tech], source) => {\n                if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n                    return {\n                        source,\n                        tech: techName\n                    };\n                }\n            };\n            if (this.options_.sourceOrder) {\n                foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n            } else {\n                foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n            }\n            return foundSourceAndTech || false;\n        }\n        src(source) {\n            if (typeof source === 'undefined') {\n                return this.cache_.src || '';\n            }\n            const sources = filterSource(source);\n            if (!sources.length) {\n                this.setTimeout(function () {\n                    this.error({\n                        code: 4,\n                        message: this.localize(this.options_.notSupportedMessage)\n                    });\n                }, 0);\n                return;\n            }\n            this.changingSrc_ = true;\n            this.cache_.sources = sources;\n            this.updateSourceCaches_(sources[0]);\n            middleware.setSource(this, sources[0], (middlewareSource, mws) => {\n                this.middleware_ = mws;\n                this.cache_.sources = sources;\n                this.updateSourceCaches_(middlewareSource);\n                const err = this.src_(middlewareSource);\n                if (err) {\n                    if (sources.length > 1) {\n                        return this.src(sources.slice(1));\n                    }\n                    this.changingSrc_ = false;\n                    this.setTimeout(function () {\n                        this.error({\n                            code: 4,\n                            message: this.localize(this.options_.notSupportedMessage)\n                        });\n                    }, 0);\n                    this.triggerReady();\n                    return;\n                }\n                middleware.setTech(mws, this.tech_);\n            });\n        }\n        src_(source) {\n            const sourceTech = this.selectSource([source]);\n            if (!sourceTech) {\n                return true;\n            }\n            if (!stringCases.titleCaseEquals(sourceTech.tech, this.techName_)) {\n                this.changingSrc_ = true;\n                this.loadTech_(sourceTech.tech, sourceTech.source);\n                this.tech_.ready(() => {\n                    this.changingSrc_ = false;\n                });\n                return false;\n            }\n            this.ready(function () {\n                if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n                    this.techCall_('setSource', source);\n                } else {\n                    this.techCall_('src', source.src);\n                }\n                this.changingSrc_ = false;\n            }, true);\n            return false;\n        }\n        load() {\n            this.techCall_('load');\n        }\n        reset() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (this.paused() || !PromiseClass) {\n                this.doReset_();\n            } else {\n                const playPromise = this.play();\n                promise.silencePromise(playPromise.then(() => this.doReset_()));\n            }\n        }\n        doReset_() {\n            if (this.tech_) {\n                this.tech_.clearTracks('text');\n            }\n            this.resetCache_();\n            this.poster('');\n            this.loadTech_(this.options_.techOrder[0], null);\n            this.techCall_('reset');\n            this.resetControlBarUI_();\n            ///if (evented.isEvented(this)) {\n                this.trigger('playerreset');\n            ///}\n        }\n        resetControlBarUI_() {\n            this.resetProgressBar_();\n            this.resetPlaybackRate_();\n            this.resetVolumeBar_();\n        }\n        resetProgressBar_() {\n            this.currentTime(0);\n            const {durationDisplay, remainingTimeDisplay} = this.controlBar;\n            if (durationDisplay) {\n                durationDisplay.updateContent();\n            }\n            if (remainingTimeDisplay) {\n                remainingTimeDisplay.updateContent();\n            }\n        }\n        resetPlaybackRate_() {\n            this.playbackRate(this.defaultPlaybackRate());\n            this.handleTechRateChange_();\n        }\n        resetVolumeBar_() {\n            this.volume(1);\n            this.trigger('volumechange');\n        }\n        currentSources() {\n            const source = this.currentSource();\n            const sources = [];\n            if (Object.keys(source).length !== 0) {\n                sources.push(source);\n            }\n            return this.cache_.sources || sources;\n        }\n        currentSource() {\n            return this.cache_.source || {};\n        }\n        currentSrc() {\n            return this.currentSource() && this.currentSource().src || '';\n        }\n        currentType() {\n            return this.currentSource() && this.currentSource().type || '';\n        }\n        preload(value) {\n            if (value !== undefined) {\n                this.techCall_('setPreload', value);\n                this.options_.preload = value;\n                return;\n            }\n            return this.techGet_('preload');\n        }\n        autoplay(value) {\n            if (value === undefined) {\n                return this.options_.autoplay || false;\n            }\n            let techAutoplay;\n            if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n                this.options_.autoplay = value;\n                this.manualAutoplay_(value);\n                techAutoplay = false;\n            } else if (!value) {\n                this.options_.autoplay = false;\n            } else {\n                this.options_.autoplay = true;\n            }\n            techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n            if (this.tech_) {\n                this.techCall_('setAutoplay', techAutoplay);\n            }\n        }\n        playsinline(value) {\n            if (value !== undefined) {\n                this.techCall_('setPlaysinline', value);\n                this.options_.playsinline = value;\n                return this;\n            }\n            return this.techGet_('playsinline');\n        }\n        loop(value) {\n            if (value !== undefined) {\n                this.techCall_('setLoop', value);\n                this.options_.loop = value;\n                return;\n            }\n            return this.techGet_('loop');\n        }\n        poster(src) {\n            if (src === undefined) {\n                return this.poster_;\n            }\n            if (!src) {\n                src = '';\n            }\n            if (src === this.poster_) {\n                return;\n            }\n            this.poster_ = src;\n            this.techCall_('setPoster', src);\n            this.isPosterFromTech_ = false;\n            this.trigger('posterchange');\n        }\n        handleTechPosterChange_() {\n            if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n                const newPoster = this.tech_.poster() || '';\n                if (newPoster !== this.poster_) {\n                    this.poster_ = newPoster;\n                    this.isPosterFromTech_ = true;\n                    this.trigger('posterchange');\n                }\n            }\n        }\n        controls(bool) {\n            if (bool === undefined) {\n                return !!this.controls_;\n            }\n            bool = !!bool;\n            if (this.controls_ === bool) {\n                return;\n            }\n            this.controls_ = bool;\n            if (this.usingNativeControls()) {\n                this.techCall_('setControls', bool);\n            }\n            if (this.controls_) {\n                this.removeClass('vjs-controls-disabled');\n                this.addClass('vjs-controls-enabled');\n                this.trigger('controlsenabled');\n                if (!this.usingNativeControls()) {\n                    this.addTechControlsListeners_();\n                }\n            } else {\n                this.removeClass('vjs-controls-enabled');\n                this.addClass('vjs-controls-disabled');\n                this.trigger('controlsdisabled');\n                if (!this.usingNativeControls()) {\n                    this.removeTechControlsListeners_();\n                }\n            }\n        }\n        usingNativeControls(bool) {\n            if (bool === undefined) {\n                return !!this.usingNativeControls_;\n            }\n            bool = !!bool;\n            if (this.usingNativeControls_ === bool) {\n                return;\n            }\n            this.usingNativeControls_ = bool;\n            if (this.usingNativeControls_) {\n                this.addClass('vjs-using-native-controls');\n                this.trigger('usingnativecontrols');\n            } else {\n                this.removeClass('vjs-using-native-controls');\n                this.trigger('usingcustomcontrols');\n            }\n        }\n        error(err) {\n            if (err === undefined) {\n                return this.error_ || null;\n            }\n            if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n                const triggerSuppressedError = function () {\n                    this.error(err);\n                };\n                this.options_.suppressNotSupportedError = false;\n                this.any([\n                    'click',\n                    'touchstart'\n                ], triggerSuppressedError);\n                this.listenToOnce('loadstart', function () {\n                    this.unlistenTo([\n                        'click',\n                        'touchstart'\n                    ], triggerSuppressedError);\n                });\n                return;\n            }\n            if (err === null) {\n                this.error_ = err;\n                this.removeClass('vjs-error');\n                if (this.errorDisplay) {\n                    this.errorDisplay.close();\n                }\n                return;\n            }\n            this.error_ = new MediaError(err);\n            this.addClass('vjs-error');\n            log.error(`(CODE:${ this.error_.code } ${ MediaError.errorTypes[this.error_.code] })`, this.error_.message, this.error_);\n            this.trigger('error');\n            return;\n        }\n        reportUserActivity(event) {\n            this.userActivity_ = true;\n        }\n        userActive(bool) {\n            if (bool === undefined) {\n                return this.userActive_;\n            }\n            bool = !!bool;\n            if (bool === this.userActive_) {\n                return;\n            }\n            this.userActive_ = bool;\n            if (this.userActive_) {\n                this.userActivity_ = true;\n                this.removeClass('vjs-user-inactive');\n                this.addClass('vjs-user-active');\n                this.trigger('useractive');\n                return;\n            }\n            if (this.tech_) {\n                this.tech_.one('mousemove', function (e) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                });\n            }\n            this.userActivity_ = false;\n            this.removeClass('vjs-user-active');\n            this.addClass('vjs-user-inactive');\n            this.trigger('userinactive');\n        }\n        listenForUserActivity_() {\n            let mouseInProgress;\n            let lastMoveX;\n            let lastMoveY;\n            const handleActivity = Fn.bind(this, this.reportUserActivity);\n            const handleMouseMove = function (e) {\n                if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n                    lastMoveX = e.screenX;\n                    lastMoveY = e.screenY;\n                    handleActivity();\n                }\n            };\n            const handleMouseDown = function () {\n                handleActivity();\n                this.clearInterval(mouseInProgress);\n                mouseInProgress = this.setInterval(handleActivity, 250);\n            };\n            const handleMouseUpAndMouseLeave = function (event) {\n                handleActivity();\n                this.clearInterval(mouseInProgress);\n            };\n            this.listenTo('mousedown', handleMouseDown);\n            this.listenTo('mousemove', handleMouseMove);\n            this.listenTo('mouseup', handleMouseUpAndMouseLeave);\n            this.listenTo('mouseleave', handleMouseUpAndMouseLeave);\n            const controlBar = this.getChild('controlBar');\n            if (controlBar && !browser.IS_IOS && !browser.IS_ANDROID) {\n                this.listenTo(controlBar,'mouseenter', function (event) {\n                    this.cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n                    this.options_.inactivityTimeout = 0;\n                });\n                this.listenTo(controlBar,'mouseleave', function (event) {\n                    this.options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n                });\n            }\n            this.listenTo('keydown', handleActivity);\n            this.listenTo('keyup', handleActivity);\n            let inactivityTimeout;\n            this.setInterval(function () {\n                if (!this.userActivity_) {\n                    return;\n                }\n                this.userActivity_ = false;\n                this.userActive(true);\n                this.clearTimeout(inactivityTimeout);\n                const timeout = this.options_.inactivityTimeout;\n                if (timeout <= 0) {\n                    return;\n                }\n                inactivityTimeout = this.setTimeout(function () {\n                    if (!this.userActivity_) {\n                        this.userActive(false);\n                    }\n                }, timeout);\n            }, 250);\n        }\n        playbackRate(rate) {\n            if (rate !== undefined) {\n                this.techCall_('setPlaybackRate', rate);\n                return;\n            }\n            if (this.tech_ && this.tech_.featuresPlaybackRate) {\n                return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n            }\n            return 1;\n        }\n        defaultPlaybackRate(rate) {\n            if (rate !== undefined) {\n                return this.techCall_('setDefaultPlaybackRate', rate);\n            }\n            if (this.tech_ && this.tech_.featuresPlaybackRate) {\n                return this.techGet_('defaultPlaybackRate');\n            }\n            return 1;\n        }\n        isAudio(bool) {\n            if (bool !== undefined) {\n                this.isAudio_ = !!bool;\n                return;\n            }\n            return !!this.isAudio_;\n        }\n        addTextTrack(kind, label, language) {\n            if (this.tech_) {\n                return this.tech_.addTextTrack(kind, label, language);\n            }\n        }\n        addRemoteTextTrack(options, manualCleanup) {\n            if (this.tech_) {\n                return this.tech_.addRemoteTextTrack(options, manualCleanup);\n            }\n        }\n        removeRemoteTextTrack(obj = {}) {\n            let {track} = obj;\n            if (!track) {\n                track = obj;\n            }\n            if (this.tech_) {\n                return this.tech_.removeRemoteTextTrack(track);\n            }\n        }\n        getVideoPlaybackQuality() {\n            return this.techGet_('getVideoPlaybackQuality');\n        }\n        videoWidth() {\n            return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n        }\n        videoHeight() {\n            return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n        }\n        language(code) {\n            if (code === undefined) {\n                return this.language_;\n            }\n            if (this.language_ !== String(code).toLowerCase()) {\n                this.language_ = String(code).toLowerCase();\n                ///if (evented.isEvented(this)) {\n                    this.trigger('languagechange');\n                ///}\n            }\n        }\n        languages() {\n            return mergeOptions(Player.prototype.options_.languages, this.languages_);\n        }\n        toJSON() {\n            const options = mergeOptions(this.options_);\n            const tracks = options.tracks;\n            options.tracks = [];\n            for (let i = 0; i < tracks.length; i++) {\n                let track = tracks[i];\n                track = mergeOptions(track);\n                track.player = undefined;\n                options.tracks[i] = track;\n            }\n            return options;\n        }\n        createModal(content, options) {\n            options = options || {};\n            options.content = content || '';\n            const modal = new ModalDialog(this, options);\n            this.addChild(modal);\n            modal.on('dispose', () => {\n                this.removeChild(modal);\n            });\n            modal.open();\n            return modal;\n        }\n        updateCurrentBreakpoint_() {\n            if (!this.responsive()) {\n                return;\n            }\n            const currentBreakpoint = this.currentBreakpoint();\n            const currentWidth = this.currentWidth();\n            for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n                const candidateBreakpoint = BREAKPOINT_ORDER[i];\n                const maxWidth = this.breakpoints_[candidateBreakpoint];\n                if (currentWidth <= maxWidth) {\n                    if (currentBreakpoint === candidateBreakpoint) {\n                        return;\n                    }\n                    if (currentBreakpoint) {\n                        this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n                    }\n                    this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n                    this.breakpoint_ = candidateBreakpoint;\n                    break;\n                }\n            }\n        }\n        removeCurrentBreakpoint_() {\n            const className = this.currentBreakpointClass();\n            this.breakpoint_ = '';\n            if (className) {\n                this.removeClass(className);\n            }\n        }\n        breakpoints(breakpoints) {\n            if (breakpoints === undefined) {\n                return obj.assign(this.breakpoints_);\n            }\n            this.breakpoint_ = '';\n            this.breakpoints_ = obj.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n            this.updateCurrentBreakpoint_();\n            return obj.assign(this.breakpoints_);\n        }\n        responsive(value) {\n            if (value === undefined) {\n                return this.responsive_;\n            }\n            value = Boolean(value);\n            const current = this.responsive_;\n            if (value === current) {\n                return;\n            }\n            this.responsive_ = value;\n            if (value) {\n                this.listenTo('playerresize', this.updateCurrentBreakpoint_);\n                this.updateCurrentBreakpoint_();\n            } else {\n                this.unlistenTo('playerresize', this.updateCurrentBreakpoint_);\n                this.removeCurrentBreakpoint_();\n            }\n            return value;\n        }\n        currentBreakpoint() {\n            return this.breakpoint_;\n        }\n        currentBreakpointClass() {\n            return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n        }\n        loadMedia(media, ready) {\n            if (!media || typeof media !== 'object') {\n                return;\n            }\n            this.reset();\n            this.cache_.media = mergeOptions(media);\n            const {artwork, poster, src, textTracks} = this.cache_.media;\n            if (!artwork && poster) {\n                this.cache_.media.artwork = [{\n                        src: poster,\n                        type: mimetypes.getMimetype(poster)\n                    }];\n            }\n            if (src) {\n                this.src(src);\n            }\n            if (poster) {\n                this.poster(poster);\n            }\n            if (Array.isArray(textTracks)) {\n                textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n            }\n            this.ready(ready);\n        }\n        getMedia() {\n            if (!this.cache_.media) {\n                const poster = this.poster();\n                const src = this.currentSources();\n                const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n                    kind: tt.kind,\n                    label: tt.label,\n                    language: tt.language,\n                    src: tt.src\n                }));\n                const media = {\n                    src,\n                    textTracks\n                };\n                if (poster) {\n                    media.poster = poster;\n                    media.artwork = [{\n                            src: media.poster,\n                            type: mimetypes.getMimetype(media.poster)\n                        }];\n                }\n                return media;\n            }\n            return mergeOptions(this.cache_.media);\n        }\n        static getTagSettings(tag) {\n            const baseOptions = {\n                sources: [],\n                tracks: []\n            };\n            const tagOptions = Dom.getAttributes(tag);\n            const dataSetup = tagOptions['data-setup'];\n            if (Dom.hasClass(tag, 'vjs-fill')) {\n                tagOptions.fill = true;\n            }\n            if (Dom.hasClass(tag, 'vjs-fluid')) {\n                tagOptions.fluid = true;\n            }\n            if (dataSetup !== null) {\n                const [err, data] = safeParseTuple(dataSetup || '{}');\n                if (err) {\n                    log.error(err);\n                }\n                obj.assign(tagOptions, data);\n            }\n            obj.assign(baseOptions, tagOptions);\n            if (tag.hasChildNodes()) {\n                const children = tag.childNodes;\n                for (let i = 0, j = children.length; i < j; i++) {\n                    const child = children[i];\n                    const childName = child.nodeName.toLowerCase();\n                    if (childName === 'source') {\n                        baseOptions.sources.push(Dom.getAttributes(child));\n                    } else if (childName === 'track') {\n                        baseOptions.tracks.push(Dom.getAttributes(child));\n                    }\n                }\n            }\n            return baseOptions;\n        }\n        flexNotSupported_() {\n            const elem = document.createElement('i');\n            return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || 'msFlexOrder' in elem.style);\n        }\n        debug(enabled) {\n            if (enabled === undefined) {\n                return this.debugEnabled_;\n            }\n            if (enabled) {\n                this.trigger('debugon');\n                this.previousLogLevel_ = this.log.level;\n                this.log.level('debug');\n                this.debugEnabled_ = true;\n            } else {\n                this.trigger('debugoff');\n                this.log.level(this.previousLogLevel_);\n                this.previousLogLevel_ = undefined;\n                this.debugEnabled_ = false;\n            }\n        }\n    }\n    TRACK_TYPES.ALL.names.forEach(function (name) {\n        const props = TRACK_TYPES.ALL[name];\n        Player.prototype[props.getterName] = function () {\n            if (this.tech_) {\n                return this.tech_[props.getterName]();\n            }\n            this[props.privateName] = this[props.privateName] || new props.ListClass();\n            return this[props.privateName];\n        };\n    });\n    Player.prototype.crossorigin = Player.prototype.crossOrigin;\n    Player.players = {};\n    const navigator = window.navigator;\n\n    Player.prototype.options_ = {\n        techOrder: Tech.defaultTechOrder_,\n        html5: {},\n        inactivityTimeout: 2000,\n        playbackRates: [],\n        liveui: false,\n        children: [\n            'mediaLoader',\n            'posterImage',\n            'textTrackDisplay',\n            'loadingSpinner',\n            'bigPlayButton',\n            'liveTracker',\n            'controlBar',\n            'errorDisplay',\n            'textTrackSettings',\n            'resizeManager'\n        ],\n        language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n        languages: {},\n        notSupportedMessage: 'No compatible source was found for this media.',\n        fullscreen: { options: { navigationUI: 'hide' } },\n        breakpoints: {},\n        responsive: false\n    };\n    [\n        'ended',\n        'seeking',\n        'seekable',\n        'networkState',\n        'readyState'\n    ].forEach(function (fn) {\n        Player.prototype[fn] = function () {\n            return this.techGet_(fn);\n        };\n    });\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n        Player.prototype[`handleTech${ stringCases.toTitleCase(event) }_`] = function () {\n            return this.trigger(event);\n        };\n    });\n    Component.registerComponent('Player', Player);\n    return Player;\n});"]}