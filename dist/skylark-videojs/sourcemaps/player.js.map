{"version":3,"sources":["player.js"],"names":["define","document","Component","Events","Dom","Fn","Guid","browser","log","stringCases","timeRages","buffer","stylesheet","FullscreenApi","MediaError","safeParseTuple","obj","mergeOptions","promise","textTrackConverter","ModalDialog","Tech","middleware","TRACK_TYPES","filterSource","mimetypes","keycode","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","forEach","k","v","charAt","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","Infinity","Player","[object Object]","tag","options","ready","id","newGUID","assign","getTagSettings","initChildren","createEl","evented","reportTouchActivity","language","closest","getAttribute","element","nodeType","getAttributes","hasOwnProperty","parentNode","super","this","boundDocumentFullscreenChange_","e","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isFullscreen_","createLogger","id_","fsApi_","isPosterFromTech_","queuedCallbacks_","isReady_","hasStarted_","userActive_","debugEnabled_","options_","techOrder","length","Error","tagAttributes","languages","languagesToLower","Object","getOwnPropertyNames","name","toLowerCase","languages_","prototype","resetCache_","poster_","poster","controls_","controls","removeAttribute","changingSrc_","playCallbacks_","playTerminatedQueue_","hasAttribute","autoplay","plugins","keys","scrubbing_","el_","requestFullscreen","on","fullscreenchange","listenTo","fluid_","updateStyleEl_","playerOptionsCopy","debug","playerOptions","middleware_","isAudio","nodeName","addClass","setAttribute","localize","flexNotSupported_","TOUCH_ENABLED","IS_IOS","players","userActive","reportUserActivity","listenToOnce","listenForUserActivity_","handleStageClick_","handleKeyDown","handleLanguagechange","breakpoints","responsive","trigger","unlistenTo","off","styleEl_","removeChild","player","tech_","dispose","playerElIngest_","clearCacheForPlayer","ALL","names","list","getterName","el","playerElIngest","divEmbed","tagName","attrs","createElement","children","appendChild","firstChild","hasClass","tabindex","IE_VERSION","IS_CHROME","IS_WINDOWS","role","width","height","attr","playerId","className","window","VIDEOJS_NO_DYNAMIC_STYLE","createStyleElement","defaultsStyleEl","$","head","insertBefore","nextSibling","fill_","fill","fluid","aspectRatio","crossOrigin","crossorigin","links","getElementsByTagName","i","linkEl","item","initNetworkState_","networkState","prependTo","children_","unshift","language_","value","techGet_","techCall_","warn","dimension","privDimension","undefined","parsedVal","parseFloat","isNaN","error","bool","removeClass","ratio","aspectRatio_","test","width_","height_","techEl","idClass","ratioParts","videoWidth","videoHeight","split","ratioMultiplier","setTextContent","techName","source","unloadTech_","titleTechName","toTitleCase","camelTechName","slice","getTech","disposeMediaElement","techName_","techOptions","nativeControlsForTouch","techId","playsinline","preload","loop","disablePictureInPicture","muted","vtt.js","canOverridePoster","techCanOverridePoster","enableSourceset","Promise","props","privateName","src","cache_","currentTime","startTime","TechClass","bind","handleTechReady_","jsonToTextTracks","textTracksJson_","event","eventObj","playbackRate","seeking","push","callback","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","textTracksToJson","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","triggerReady","volume","paused","hasStarted","manualAutoplay_","type","previouslyMuted","restoreMuted","mutedPromise","play","isPromise","catch","then","srcObj","sources","findMimetype","matchingSources","filter","s","sourceElSources","sourceEls","$$","matchingSourceEls","sourceObj","updateSourceCaches","updateSourceCaches_","playerSrc","currentSource","eventSrc","lastSource_","tech","any","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","starttime","pause","duration","isSingleLeftClick","silencePromise","Array","some","call","contains","target","userActions","doubleClick","isFullscreen","exitFullscreen","userWasActive","cancelable","preventDefault","targetPlayer","isFs","fullscreenElement","matches","fullscreen","msMatchesSelector","data","nativeIOSFullscreen","toggleClass","err","isInPictureInPicture","arguments","initTime","inactivityTimeout","NaN","lastVolume","defaultPlaybackRate","media","method","arg","allowedSetters","set","allowedMediators","mediate","allowedGetters","get","PromiseClass","resolve","play_","isSrcReady","Boolean","currentSrc","waitToPlay_","IS_ANY_SAFARI","load","val","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","cb","createTimeRange","isScrubbing","seconds","applyInitTime_","Math","floor","buffered","bufferedPercent","end","percentAsDecimal","vol","max","min","lastVolume_","defaultMuted","isFS","oldValue","prefixed","toggleFullscreenClass_","fullscreenOptions","self","reject","offHandler","errorHandler","changeHandler","one","requestFullscreenHelper_","fsOptions","supportsFullScreen","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","documentElement","style","overflow","body","isEventKey","isPiP","isInPictureInPicture_","togglePictureInPictureClass_","exitPictureInPicture","hotkeys","isContentEditable","indexOf","excludeElement","ownerDocument","activeElement","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","stopPropagation","FSToggle","getComponent","fullscreenEnabled","handleClick","can","j","isSupported","canPlayType","techs","map","findFirstPassingTechSourcePair","outerArray","innerArray","tester","found","outerChoice","innerChoice","foundSourceAndTech","finder","canPlaySource","sourceOrder","fn","a","b","flip","setSource","middlewareSource","mws","src_","setTimeout","code","message","notSupportedMessage","setTech","sourceTech","selectSource","titleCaseEquals","constructor","loadTech_","doReset_","playPromise","clearTracks","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","durationDisplay","remainingTimeDisplay","controlBar","updateContent","techAutoplay","newPoster","usingNativeControls_","error_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","close","errorTypes","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","clearInterval","setInterval","screenX","screenY","getChild","IS_ANDROID","clearTimeout","timeout","rate","featuresPlaybackRate","isAudio_","kind","label","addTextTrack","manualCleanup","addRemoteTextTrack","track","removeRemoteTextTrack","String","tracks","content","modal","addChild","open","currentBreakpoint","currentWidth","candidateBreakpoint","breakpoints_","breakpoint_","currentBreakpointClass","updateCurrentBreakpoint_","responsive_","removeCurrentBreakpoint_","reset","artwork","textTracks","getMimetype","isArray","tt","currentSources","remoteTextTracks","baseOptions","tagOptions","dataSetup","hasChildNodes","childNodes","child","childName","elem","enabled","previousLogLevel_","level","ListClass","navigator","defaultTechOrder_","html5","playbackRates","liveui","userLanguage","navigationUI","registerComponent"],"mappings":"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","file":"../player.js","sourcesContent":["define([\n    'skylark-langx-globals/document',\n    './component',\n    ///'./mixins/evented',\n    './utils/events',\n    './utils/dom',\n    './utils/fn',\n    './utils/guid',\n    './utils/browser',\n    './utils/log',\n    './utils/string-cases',\n    './utils/time-ranges',\n    './utils/buffer',\n    './utils/stylesheet',\n    './fullscreen-api',\n    './media-error',\n    './utils/safeParseTuple',\n    './utils/obj',\n    './utils/merge-options',\n    './utils/promise',\n    './tracks/text-track-list-converter',\n    './modal-dialog',\n    './tech/tech',\n    './tech/middleware',\n    './tracks/track-types',\n    './utils/filter-source',\n    './utils/mimetypes',\n    './utils/keycode',\n    './tech/loader',\n    './poster-image',\n    './tracks/text-track-display',\n    './loading-spinner',\n    './big-play-button',\n    './close-button',\n    './control-bar/control-bar',\n    './error-display',\n    './tracks/text-track-settings',\n    './resize-manager',\n    './live-tracker',\n    './tech/html5'\n], function (\n    document,\n    Component,\n    Events, \n    Dom, \n    Fn, \n    Guid, \n    browser, \n    log, \n    stringCases, \n    timeRages, \n    buffer, \n    stylesheet, \n    FullscreenApi, \n    MediaError, \n    safeParseTuple, \n    obj, \n    mergeOptions, \n    promise, \n    textTrackConverter, \n    ModalDialog, \n    Tech, \n    middleware, \n    TRACK_TYPES, \n    filterSource, \n    mimetypes, \n    keycode\n) {\n    'use strict';\n    const TECH_EVENTS_RETRIGGER = [\n        'progress',\n        'abort',\n        'suspend',\n        'emptied',\n        'stalled',\n        'loadedmetadata',\n        'loadeddata',\n        'timeupdate',\n        'resize',\n        'volumechange',\n        'texttrackchange'\n    ];\n    const TECH_EVENTS_QUEUE = {\n        canplay: 'CanPlay',\n        canplaythrough: 'CanPlayThrough',\n        playing: 'Playing',\n        seeked: 'Seeked'\n    };\n    const BREAKPOINT_ORDER = [\n        'tiny',\n        'xsmall',\n        'small',\n        'medium',\n        'large',\n        'xlarge',\n        'huge'\n    ];\n    const BREAKPOINT_CLASSES = {};\n    BREAKPOINT_ORDER.forEach(k => {\n        const v = k.charAt(0) === 'x' ? `x-${ k.substring(1) }` : k;\n        BREAKPOINT_CLASSES[k] = `vjs-layout-${ v }`;\n    });\n    const DEFAULT_BREAKPOINTS = {\n        tiny: 210,\n        xsmall: 320,\n        small: 425,\n        medium: 768,\n        large: 1440,\n        xlarge: 2560,\n        huge: Infinity\n    };\n    class Player extends Component {\n        constructor(tag, options, ready) {\n            tag.id = tag.id || options.id || `vjs_video_${ Guid.newGUID() }`;\n            options = obj.assign(Player.getTagSettings(tag), options);\n            options.initChildren = false;\n            options.createEl = false;\n            options.evented = false;\n            options.reportTouchActivity = false;\n            if (!options.language) {\n                if (typeof tag.closest === 'function') {\n                    const closest = tag.closest('[lang]');\n                    if (closest && closest.getAttribute) {\n                        options.language = closest.getAttribute('lang');\n                    }\n                } else {\n                    let element = tag;\n                    while (element && element.nodeType === 1) {\n                        if (Dom.getAttributes(element).hasOwnProperty('lang')) {\n                            options.language = element.getAttribute('lang');\n                            break;\n                        }\n                        element = element.parentNode;\n                    }\n                }\n            }\n            super(null, options, ready);\n            this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n            this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n            this.isFullscreen_ = false;\n            this.log = log.createLogger(this.id_);\n            this.fsApi_ = FullscreenApi;\n            this.isPosterFromTech_ = false;\n            this.queuedCallbacks_ = [];\n            this.isReady_ = false;\n            this.hasStarted_ = false;\n            this.userActive_ = false;\n            this.debugEnabled_ = false;\n            if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n                throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n            }\n            this.tag = tag;\n            this.tagAttributes = tag && Dom.getAttributes(tag);\n            this.language(this.options_.language);\n            if (options.languages) {\n                const languagesToLower = {};\n                Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n                    languagesToLower[name.toLowerCase()] = options.languages[name];\n                });\n                this.languages_ = languagesToLower;\n            } else {\n                this.languages_ = Player.prototype.options_.languages;\n            }\n            this.resetCache_();\n            this.poster_ = options.poster || '';\n            this.controls_ = !!options.controls;\n            tag.controls = false;\n            tag.removeAttribute('controls');\n            this.changingSrc_ = false;\n            this.playCallbacks_ = [];\n            this.playTerminatedQueue_ = [];\n            if (tag.hasAttribute('autoplay')) {\n                this.autoplay(true);\n            } else {\n                this.autoplay(this.options_.autoplay);\n            }\n            if (options.plugins) {\n                Object.keys(options.plugins).forEach(name => {\n                    if (typeof this[name] !== 'function') {\n                        throw new Error(`plugin \"${ name }\" does not exist`);\n                    }\n                });\n            }\n            this.scrubbing_ = false;\n            this.el_ = this.createEl();\n            //evented(this, { eventBusKey: 'el_' });\n            if (this.fsApi_.requestFullscreen) {\n                Events.on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n                this.listenTo(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n            }\n            if (this.fluid_) {\n                this.listenTo([\n                    'playerreset',\n                    'resize'\n                ], this.updateStyleEl_);\n            }\n            const playerOptionsCopy = mergeOptions(this.options_);\n            if (options.plugins) {\n                Object.keys(options.plugins).forEach(name => {\n                    this[name](options.plugins[name]);\n                });\n            }\n            if (options.debug) {\n                this.debug(true);\n            }\n            this.options_.playerOptions = playerOptionsCopy;\n            this.middleware_ = [];\n            this.initChildren();\n            this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n            if (this.controls()) {\n                this.addClass('vjs-controls-enabled');\n            } else {\n                this.addClass('vjs-controls-disabled');\n            }\n            this.el_.setAttribute('role', 'region');\n            if (this.isAudio()) {\n                this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n            } else {\n                this.el_.setAttribute('aria-label', this.localize('Video Player'));\n            }\n            if (this.isAudio()) {\n                this.addClass('vjs-audio');\n            }\n            if (this.flexNotSupported_()) {\n                this.addClass('vjs-no-flex');\n            }\n            if (browser.TOUCH_ENABLED) {\n                this.addClass('vjs-touch-enabled');\n            }\n            if (!browser.IS_IOS) {\n                this.addClass('vjs-workinghover');\n            }\n            Player.players[this.id_] = this;\n            const majorVersion = \"7\";\n            this.addClass(`vjs-v${ majorVersion }`);\n            this.userActive(true);\n            this.reportUserActivity();\n            this.listenToOnce('play', this.listenForUserActivity_);\n            this.listenTo('stageclick', this.handleStageClick_);\n            this.listenTo('keydown', this.handleKeyDown);\n            this.listenTo('languagechange', this.handleLanguagechange);\n            this.breakpoints(this.options_.breakpoints);\n            this.responsive(this.options_.responsive);\n        }\n        dispose() {\n            this.trigger('dispose');\n            this.unlistenTo('dispose');\n            Events.off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n            Events.off(document, 'keydown', this.boundFullWindowOnEscKey_);\n            if (this.styleEl_ && this.styleEl_.parentNode) {\n                this.styleEl_.parentNode.removeChild(this.styleEl_);\n                this.styleEl_ = null;\n            }\n            Player.players[this.id_] = null;\n            if (this.tag && this.tag.player) {\n                this.tag.player = null;\n            }\n            if (this.el_ && this.el_.player) {\n                this.el_.player = null;\n            }\n            if (this.tech_) {\n                this.tech_.dispose();\n                this.isPosterFromTech_ = false;\n                this.poster_ = '';\n            }\n            if (this.playerElIngest_) {\n                this.playerElIngest_ = null;\n            }\n            if (this.tag) {\n                this.tag = null;\n            }\n            middleware.clearCacheForPlayer(this);\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES[name];\n                const list = this[props.getterName]();\n                if (list && list.off) {\n                    list.off();\n                }\n            });\n            super.dispose();\n        }\n        createEl() {\n            let tag = this.tag;\n            let el;\n            let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n            const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n            if (playerElIngest) {\n                el = this.el_ = tag.parentNode;\n            } else if (!divEmbed) {\n                el = this.el_ = super.createEl('div');\n            }\n            const attrs = Dom.getAttributes(tag);\n            if (divEmbed) {\n                el = this.el_ = tag;\n                tag = this.tag = document.createElement('video');\n                while (el.children.length) {\n                    tag.appendChild(el.firstChild);\n                }\n                if (!Dom.hasClass(el, 'video-js')) {\n                    Dom.addClass(el, 'video-js');\n                }\n                el.appendChild(tag);\n                playerElIngest = this.playerElIngest_ = el;\n                Object.keys(el).forEach(k => {\n                    try {\n                        tag[k] = el[k];\n                    } catch (e) {\n                    }\n                });\n            }\n            tag.setAttribute('tabindex', '-1');\n            attrs.tabindex = '-1';\n            if (browser.IE_VERSION || browser.IS_CHROME && browser.IS_WINDOWS) {\n                tag.setAttribute('role', 'application');\n                attrs.role = 'application';\n            }\n            tag.removeAttribute('width');\n            tag.removeAttribute('height');\n            if ('width' in attrs) {\n                delete attrs.width;\n            }\n            if ('height' in attrs) {\n                delete attrs.height;\n            }\n            Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n                if (!(divEmbed && attr === 'class')) {\n                    el.setAttribute(attr, attrs[attr]);\n                }\n                if (divEmbed) {\n                    tag.setAttribute(attr, attrs[attr]);\n                }\n            });\n            tag.playerId = tag.id;\n            tag.id += '_html5_api';\n            tag.className = 'vjs-tech';\n            tag.player = el.player = this;\n            this.addClass('vjs-paused');\n            if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n                this.styleEl_ = stylesheet.createStyleElement('vjs-styles-dimensions');\n                const defaultsStyleEl = Dom.$('.vjs-styles-defaults');\n                const head = Dom.$('head');\n                head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n            }\n            this.fill_ = false;\n            this.fluid_ = false;\n            this.width(this.options_.width);\n            this.height(this.options_.height);\n            this.fill(this.options_.fill);\n            this.fluid(this.options_.fluid);\n            this.aspectRatio(this.options_.aspectRatio);\n            this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n            const links = tag.getElementsByTagName('a');\n            for (let i = 0; i < links.length; i++) {\n                const linkEl = links.item(i);\n                Dom.addClass(linkEl, 'vjs-hidden');\n                linkEl.setAttribute('hidden', 'hidden');\n            }\n            tag.initNetworkState_ = tag.networkState;\n            if (tag.parentNode && !playerElIngest) {\n                tag.parentNode.insertBefore(el, tag);\n            }\n            Dom.prependTo(tag, el);\n            this.children_.unshift(tag);\n            this.el_.setAttribute('lang', this.language_);\n            this.el_ = el;\n            return el;\n        }\n        crossOrigin(value) {\n            if (!value) {\n                return this.techGet_('crossOrigin');\n            }\n            if (value !== 'anonymous' && value !== 'use-credentials') {\n                log.warn(`crossOrigin must be \"anonymous\" or \"use-credentials\", given \"${ value }\"`);\n                return;\n            }\n            this.techCall_('setCrossOrigin', value);\n            return;\n        }\n        width(value) {\n            return this.dimension('width', value);\n        }\n        height(value) {\n            return this.dimension('height', value);\n        }\n        dimension(dimension, value) {\n            const privDimension = dimension + '_';\n            if (value === undefined) {\n                return this[privDimension] || 0;\n            }\n            if (value === '' || value === 'auto') {\n                this[privDimension] = undefined;\n                this.updateStyleEl_();\n                return;\n            }\n            const parsedVal = parseFloat(value);\n            if (isNaN(parsedVal)) {\n                log.error(`Improper value \"${ value }\" supplied for for ${ dimension }`);\n                return;\n            }\n            this[privDimension] = parsedVal;\n            this.updateStyleEl_();\n        }\n        fluid(bool) {\n            if (bool === undefined) {\n                return !!this.fluid_;\n            }\n            this.fluid_ = !!bool;\n            ///if (evented.isEvented(this)) {\n                this.unlistenTo([\n                    'playerreset',\n                    'resize'\n                ], this.updateStyleEl_);\n            ///}\n            if (bool) {\n                this.addClass('vjs-fluid');\n                this.fill(false);\n                ///evented.addEventedCallback(this, () => {\n                ///    this.listenTo([\n                ///        'playerreset',\n                ///        'resize'\n                ///    ], this.updateStyleEl_);\n                ///});\n            } else {\n                this.removeClass('vjs-fluid');\n            }\n            this.updateStyleEl_();\n        }\n        fill(bool) {\n            if (bool === undefined) {\n                return !!this.fill_;\n            }\n            this.fill_ = !!bool;\n            if (bool) {\n                this.addClass('vjs-fill');\n                this.fluid(false);\n            } else {\n                this.removeClass('vjs-fill');\n            }\n        }\n        aspectRatio(ratio) {\n            if (ratio === undefined) {\n                return this.aspectRatio_;\n            }\n            if (!/^\\d+\\:\\d+$/.test(ratio)) {\n                throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n            }\n            this.aspectRatio_ = ratio;\n            this.fluid(true);\n            this.updateStyleEl_();\n        }\n        updateStyleEl_() {\n            if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n                const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n                const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n                const techEl = this.tech_ && this.tech_.el();\n                if (techEl) {\n                    if (width >= 0) {\n                        techEl.width = width;\n                    }\n                    if (height >= 0) {\n                        techEl.height = height;\n                    }\n                }\n                return;\n            }\n            let width;\n            let height;\n            let aspectRatio;\n            let idClass;\n            if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n                aspectRatio = this.aspectRatio_;\n            } else if (this.videoWidth() > 0) {\n                aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n            } else {\n                aspectRatio = '16:9';\n            }\n            const ratioParts = aspectRatio.split(':');\n            const ratioMultiplier = ratioParts[1] / ratioParts[0];\n            if (this.width_ !== undefined) {\n                width = this.width_;\n            } else if (this.height_ !== undefined) {\n                width = this.height_ / ratioMultiplier;\n            } else {\n                width = this.videoWidth() || 300;\n            }\n            if (this.height_ !== undefined) {\n                height = this.height_;\n            } else {\n                height = width * ratioMultiplier;\n            }\n            if (/^[^a-zA-Z]/.test(this.id())) {\n                idClass = 'dimensions-' + this.id();\n            } else {\n                idClass = this.id() + '-dimensions';\n            }\n            this.addClass(idClass);\n            stylesheet.setTextContent(this.styleEl_, `\n      .${ idClass } {\n        width: ${ width }px;\n        height: ${ height }px;\n      }\n\n      .${ idClass }.vjs-fluid {\n        padding-top: ${ ratioMultiplier * 100 }%;\n      }\n    `);\n        }\n        loadTech_(techName, source) {\n            if (this.tech_) {\n                this.unloadTech_();\n            }\n            const titleTechName = stringCases.toTitleCase(techName);\n            const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n            if (titleTechName !== 'Html5' && this.tag) {\n                Tech.getTech('Html5').disposeMediaElement(this.tag);\n                this.tag.player = null;\n                this.tag = null;\n            }\n            this.techName_ = titleTechName;\n            this.isReady_ = false;\n            const autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n            const techOptions = {\n                source,\n                autoplay,\n                'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n                'playerId': this.id(),\n                'techId': `${ this.id() }_${ camelTechName }_api`,\n                'playsinline': this.options_.playsinline,\n                'preload': this.options_.preload,\n                'loop': this.options_.loop,\n                'disablePictureInPicture': this.options_.disablePictureInPicture,\n                'muted': this.options_.muted,\n                'poster': this.poster(),\n                'language': this.language(),\n                'playerElIngest': this.playerElIngest_ || false,\n                'vtt.js': this.options_['vtt.js'],\n                'canOverridePoster': !!this.options_.techCanOverridePoster,\n                'enableSourceset': this.options_.enableSourceset,\n                'Promise': this.options_.Promise\n            };\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                techOptions[props.getterName] = this[props.privateName];\n            });\n            obj.assign(techOptions, this.options_[titleTechName]);\n            obj.assign(techOptions, this.options_[camelTechName]);\n            obj.assign(techOptions, this.options_[techName.toLowerCase()]);\n            if (this.tag) {\n                techOptions.tag = this.tag;\n            }\n            if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n                techOptions.startTime = this.cache_.currentTime;\n            }\n            const TechClass = Tech.getTech(techName);\n            if (!TechClass) {\n                throw new Error(`No Tech named '${ titleTechName }' exists! '${ titleTechName }' should be registered using videojs.registerTech()'`);\n            }\n            this.tech_ = new TechClass(techOptions);\n            this.tech_.ready(Fn.bind(this, this.handleTechReady_), true);\n            textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n            TECH_EVENTS_RETRIGGER.forEach(event => {\n                this.listenTo(this.tech_, event, this[`handleTech${ stringCases.toTitleCase(event) }_`]);\n            });\n            Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n                this.listenTo(this.tech_, event, eventObj => {\n                    if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n                        this.queuedCallbacks_.push({\n                            callback: this[`handleTech${ TECH_EVENTS_QUEUE[event] }_`].bind(this),\n                            event: eventObj\n                        });\n                        return;\n                    }\n                    this[`handleTech${ TECH_EVENTS_QUEUE[event] }_`](eventObj);\n                });\n            });\n            this.listenTo(this.tech_, 'loadstart', this.handleTechLoadStart_);\n            this.listenTo(this.tech_, 'sourceset', this.handleTechSourceset_);\n            this.listenTo(this.tech_, 'waiting', this.handleTechWaiting_);\n            this.listenTo(this.tech_, 'ended', this.handleTechEnded_);\n            this.listenTo(this.tech_, 'seeking', this.handleTechSeeking_);\n            this.listenTo(this.tech_, 'play', this.handleTechPlay_);\n            this.listenTo(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n            this.listenTo(this.tech_, 'pause', this.handleTechPause_);\n            this.listenTo(this.tech_, 'durationchange', this.handleTechDurationChange_);\n            this.listenTo(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n            this.listenTo(this.tech_, 'fullscreenerror', this.handleTechFullscreenError_);\n            this.listenTo(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n            this.listenTo(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n            this.listenTo(this.tech_, 'error', this.handleTechError_);\n            this.listenTo(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n            this.listenTo(this.tech_, 'posterchange', this.handleTechPosterChange_);\n            this.listenTo(this.tech_, 'textdata', this.handleTechTextData_);\n            this.listenTo(this.tech_, 'ratechange', this.handleTechRateChange_);\n            this.usingNativeControls(this.techGet_('controls'));\n            if (this.controls() && !this.usingNativeControls()) {\n                this.addTechControlsListeners_();\n            }\n            if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n                Dom.prependTo(this.tech_.el(), this.el());\n            }\n            if (this.tag) {\n                this.tag.player = null;\n                this.tag = null;\n            }\n        }\n        unloadTech_() {\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                this[props.privateName] = this[props.getterName]();\n            });\n            this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n            this.isReady_ = false;\n            this.tech_.dispose();\n            this.tech_ = false;\n            if (this.isPosterFromTech_) {\n                this.poster_ = '';\n                this.trigger('posterchange');\n            }\n            this.isPosterFromTech_ = false;\n        }\n        tech(safety) {\n            if (safety === undefined) {\n                log.warn(\"Using the tech directly can be dangerous. I hope you know what you're doing.\\n\" + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n            }\n            return this.tech_;\n        }\n        addTechControlsListeners_() {\n            this.removeTechControlsListeners_();\n            this.listenTo(this.tech_, 'mouseup', this.handleTechClick_);\n            this.listenTo(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n            this.listenTo(this.tech_, 'touchstart', this.handleTechTouchStart_);\n            this.listenTo(this.tech_, 'touchmove', this.handleTechTouchMove_);\n            this.listenTo(this.tech_, 'touchend', this.handleTechTouchEnd_);\n            this.listenTo(this.tech_, 'tap', this.handleTechTap_);\n        }\n        removeTechControlsListeners_() {\n            this.unlistenTo(this.tech_, 'tap', this.handleTechTap_);\n            this.unlistenTo(this.tech_, 'touchstart', this.handleTechTouchStart_);\n            this.unlistenTo(this.tech_, 'touchmove', this.handleTechTouchMove_);\n            this.unlistenTo(this.tech_, 'touchend', this.handleTechTouchEnd_);\n            this.unlistenTo(this.tech_, 'mouseup', this.handleTechClick_);\n            this.unlistenTo(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n        }\n        handleTechReady_() {\n            this.triggerReady();\n            if (this.cache_.volume) {\n                this.techCall_('setVolume', this.cache_.volume);\n            }\n            this.handleTechPosterChange_();\n            this.handleTechDurationChange_();\n        }\n        handleTechLoadStart_() {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-seeking');\n            this.error(null);\n            this.handleTechDurationChange_();\n            if (!this.paused()) {\n                this.trigger('loadstart');\n                this.trigger('firstplay');\n            } else {\n                this.hasStarted(false);\n                this.trigger('loadstart');\n            }\n            this.manualAutoplay_(this.autoplay());\n        }\n        manualAutoplay_(type) {\n            if (!this.tech_ || typeof type !== 'string') {\n                return;\n            }\n            const muted = () => {\n                const previouslyMuted = this.muted();\n                this.muted(true);\n                const restoreMuted = () => {\n                    this.muted(previouslyMuted);\n                };\n                this.playTerminatedQueue_.push(restoreMuted);\n                const mutedPromise = this.play();\n                if (!promise.isPromise(mutedPromise)) {\n                    return;\n                }\n                return mutedPromise.catch(restoreMuted);\n            };\n            let promise;\n            if (type === 'any' && this.muted() !== true) {\n                promise = this.play();\n                if (promise.isPromise(promise)) {\n                    promise = promise.catch(muted);\n                }\n            } else if (type === 'muted' && this.muted() !== true) {\n                promise = muted();\n            } else {\n                promise = this.play();\n            }\n            if (!promise.isPromise(promise)) {\n                return;\n            }\n            return promise.then(() => {\n                this.trigger({\n                    type: 'autoplay-success',\n                    autoplay: type\n                });\n            }).catch(e => {\n                this.trigger({\n                    type: 'autoplay-failure',\n                    autoplay: type\n                });\n            });\n        }\n        updateSourceCaches_(srcObj = '') {\n            let src = srcObj;\n            let type = '';\n            if (typeof src !== 'string') {\n                src = srcObj.src;\n                type = srcObj.type;\n            }\n            this.cache_.source = this.cache_.source || {};\n            this.cache_.sources = this.cache_.sources || [];\n            if (src && !type) {\n                type = mimetypes.findMimetype(this, src);\n            }\n            this.cache_.source = mergeOptions({}, srcObj, {\n                src,\n                type\n            });\n            const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n            const sourceElSources = [];\n            const sourceEls = this.$$('source');\n            const matchingSourceEls = [];\n            for (let i = 0; i < sourceEls.length; i++) {\n                const sourceObj = Dom.getAttributes(sourceEls[i]);\n                sourceElSources.push(sourceObj);\n                if (sourceObj.src && sourceObj.src === src) {\n                    matchingSourceEls.push(sourceObj.src);\n                }\n            }\n            if (matchingSourceEls.length && !matchingSources.length) {\n                this.cache_.sources = sourceElSources;\n            } else if (!matchingSources.length) {\n                this.cache_.sources = [this.cache_.source];\n            }\n            this.cache_.src = src;\n        }\n        handleTechSourceset_(event) {\n            if (!this.changingSrc_) {\n                let updateSourceCaches = src => this.updateSourceCaches_(src);\n                const playerSrc = this.currentSource().src;\n                const eventSrc = event.src;\n                if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n                    if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n                        updateSourceCaches = () => {\n                        };\n                    }\n                }\n                updateSourceCaches(eventSrc);\n                if (!event.src) {\n                    this.tech_.any([\n                        'sourceset',\n                        'loadstart'\n                    ], e => {\n                        if (e.type === 'sourceset') {\n                            return;\n                        }\n                        const techSrc = this.techGet('currentSrc');\n                        this.lastSource_.tech = techSrc;\n                        this.updateSourceCaches_(techSrc);\n                    });\n                }\n            }\n            this.lastSource_ = {\n                player: this.currentSource().src,\n                tech: event.src\n            };\n            this.trigger({\n                src: event.src,\n                type: 'sourceset'\n            });\n        }\n        hasStarted(request) {\n            if (request === undefined) {\n                return this.hasStarted_;\n            }\n            if (request === this.hasStarted_) {\n                return;\n            }\n            this.hasStarted_ = request;\n            if (this.hasStarted_) {\n                this.addClass('vjs-has-started');\n                this.trigger('firstplay');\n            } else {\n                this.removeClass('vjs-has-started');\n            }\n        }\n        handleTechPlay_() {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-paused');\n            this.addClass('vjs-playing');\n            this.hasStarted(true);\n            this.trigger('play');\n        }\n        handleTechRateChange_() {\n            if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n                this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n                this.queuedCallbacks_ = [];\n            }\n            this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n            this.trigger('ratechange');\n        }\n        handleTechWaiting_() {\n            this.addClass('vjs-waiting');\n            this.trigger('waiting');\n            const timeWhenWaiting = this.currentTime();\n            const timeUpdateListener = () => {\n                if (timeWhenWaiting !== this.currentTime()) {\n                    this.removeClass('vjs-waiting');\n                    this.unlistenTo('timeupdate', timeUpdateListener);\n                }\n            };\n            this.listenTo('timeupdate', timeUpdateListener);\n        }\n        handleTechCanPlay_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('canplay');\n        }\n        handleTechCanPlayThrough_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('canplaythrough');\n        }\n        handleTechPlaying_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('playing');\n        }\n        handleTechSeeking_() {\n            this.addClass('vjs-seeking');\n            this.trigger('seeking');\n        }\n        handleTechSeeked_() {\n            this.removeClass('vjs-seeking');\n            this.removeClass('vjs-ended');\n            this.trigger('seeked');\n        }\n        handleTechFirstPlay_() {\n            if (this.options_.starttime) {\n                log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n                this.currentTime(this.options_.starttime);\n            }\n            this.addClass('vjs-has-started');\n            this.trigger('firstplay');\n        }\n        handleTechPause_() {\n            this.removeClass('vjs-playing');\n            this.addClass('vjs-paused');\n            this.trigger('pause');\n        }\n        handleTechEnded_() {\n            this.addClass('vjs-ended');\n            if (this.options_.loop) {\n                this.currentTime(0);\n                this.play();\n            } else if (!this.paused()) {\n                this.pause();\n            }\n            this.trigger('ended');\n        }\n        handleTechDurationChange_() {\n            this.duration(this.techGet_('duration'));\n        }\n        handleTechClick_(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            if (!this.controls_) {\n                return;\n            }\n            if (this.paused()) {\n                promise.silencePromise(this.play());\n            } else {\n                this.pause();\n            }\n        }\n        handleTechDoubleClick_(event) {\n            if (!this.controls_) {\n                return;\n            }\n            const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n            if (!inAllowedEls) {\n                if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n                    if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n                        this.options_.userActions.doubleClick.call(this, event);\n                    } else if (this.isFullscreen()) {\n                        this.exitFullscreen();\n                    } else {\n                        this.requestFullscreen();\n                    }\n                }\n            }\n        }\n        handleTechTap_() {\n            this.userActive(!this.userActive());\n        }\n        handleTechTouchStart_() {\n            this.userWasActive = this.userActive();\n        }\n        handleTechTouchMove_() {\n            if (this.userWasActive) {\n                this.reportUserActivity();\n            }\n        }\n        handleTechTouchEnd_(event) {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n        }\n        handleStageClick_() {\n            this.reportUserActivity();\n        }\n        toggleFullscreenClass_() {\n            if (this.isFullscreen()) {\n                this.addClass('vjs-fullscreen');\n            } else {\n                this.removeClass('vjs-fullscreen');\n            }\n        }\n        documentFullscreenChange_(e) {\n            const targetPlayer = e.target.player;\n            if (targetPlayer && targetPlayer !== this) {\n                return;\n            }\n            const el = this.el();\n            let isFs = document[this.fsApi_.fullscreenElement] === el;\n            if (!isFs && el.matches) {\n                isFs = el.matches(':' + this.fsApi_.fullscreen);\n            } else if (!isFs && el.msMatchesSelector) {\n                isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n            }\n            this.isFullscreen(isFs);\n        }\n        handleTechFullscreenChange_(event, data) {\n            if (data) {\n                if (data.nativeIOSFullscreen) {\n                    this.toggleClass('vjs-ios-native-fs');\n                }\n                this.isFullscreen(data.isFullscreen);\n            }\n        }\n        handleTechFullscreenError_(event, err) {\n            this.trigger('fullscreenerror', err);\n        }\n        togglePictureInPictureClass_() {\n            if (this.isInPictureInPicture()) {\n                this.addClass('vjs-picture-in-picture');\n            } else {\n                this.removeClass('vjs-picture-in-picture');\n            }\n        }\n        handleTechEnterPictureInPicture_(event) {\n            this.isInPictureInPicture(true);\n        }\n        handleTechLeavePictureInPicture_(event) {\n            this.isInPictureInPicture(false);\n        }\n        handleTechError_() {\n            const error = this.tech_.error();\n            this.error(error);\n        }\n        handleTechTextData_() {\n            let data = null;\n            if (arguments.length > 1) {\n                data = arguments[1];\n            }\n            this.trigger('textdata', data);\n        }\n        getCache() {\n            return this.cache_;\n        }\n        resetCache_() {\n            this.cache_ = {\n                currentTime: 0,\n                initTime: 0,\n                inactivityTimeout: this.options_.inactivityTimeout,\n                duration: NaN,\n                lastVolume: 1,\n                lastPlaybackRate: this.defaultPlaybackRate(),\n                media: null,\n                src: '',\n                source: {},\n                sources: [],\n                volume: 1\n            };\n        }\n        techCall_(method, arg) {\n            this.ready(function () {\n                if (method in middleware.allowedSetters) {\n                    return middleware.set(this.middleware_, this.tech_, method, arg);\n                } else if (method in middleware.allowedMediators) {\n                    return middleware.mediate(this.middleware_, this.tech_, method, arg);\n                }\n                try {\n                    if (this.tech_) {\n                        this.tech_[method](arg);\n                    }\n                } catch (e) {\n                    log(e);\n                    throw e;\n                }\n            }, true);\n        }\n        techGet_(method) {\n            if (!this.tech_ || !this.tech_.isReady_) {\n                return;\n            }\n            if (method in middleware.allowedGetters) {\n                return middleware.get(this.middleware_, this.tech_, method);\n            } else if (method in middleware.allowedMediators) {\n                return middleware.mediate(this.middleware_, this.tech_, method);\n            }\n            try {\n                return this.tech_[method]();\n            } catch (e) {\n                if (this.tech_[method] === undefined) {\n                    log(`Video.js: ${ method } method not defined for ${ this.techName_ } playback technology.`, e);\n                    throw e;\n                }\n                if (e.name === 'TypeError') {\n                    log(`Video.js: ${ method } unavailable on ${ this.techName_ } playback technology element.`, e);\n                    this.tech_.isReady_ = false;\n                    throw e;\n                }\n                log(e);\n                throw e;\n            }\n        }\n        play() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                return new PromiseClass(resolve => {\n                    this.play_(resolve);\n                });\n            }\n            return this.play_();\n        }\n        play_(callback = promise.silencePromise) {\n            this.playCallbacks_.push(callback);\n            const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n            if (this.waitToPlay_) {\n                this.unlistenTo([\n                    'ready',\n                    'loadstart'\n                ], this.waitToPlay_);\n                this.waitToPlay_ = null;\n            }\n            if (!this.isReady_ || !isSrcReady) {\n                this.waitToPlay_ = e => {\n                    this.play_();\n                };\n                this.listenToOnce([\n                    'ready',\n                    'loadstart'\n                ], this.waitToPlay_);\n                if (!isSrcReady && (browser.IS_ANY_SAFARI || browser.IS_IOS)) {\n                    this.load();\n                }\n                return;\n            }\n            const val = this.techGet_('play');\n            if (val === null) {\n                this.runPlayTerminatedQueue_();\n            } else {\n                this.runPlayCallbacks_(val);\n            }\n        }\n        runPlayTerminatedQueue_() {\n            const queue = this.playTerminatedQueue_.slice(0);\n            this.playTerminatedQueue_ = [];\n            queue.forEach(function (q) {\n                q();\n            });\n        }\n        runPlayCallbacks_(val) {\n            const callbacks = this.playCallbacks_.slice(0);\n            this.playCallbacks_ = [];\n            this.playTerminatedQueue_ = [];\n            callbacks.forEach(function (cb) {\n                cb(val);\n            });\n        }\n        pause() {\n            this.techCall_('pause');\n        }\n        paused() {\n            return this.techGet_('paused') === false ? false : true;\n        }\n        played() {\n            return this.techGet_('played') || timeRages.createTimeRange(0, 0);\n        }\n        scrubbing(isScrubbing) {\n            if (typeof isScrubbing === 'undefined') {\n                return this.scrubbing_;\n            }\n            this.scrubbing_ = !!isScrubbing;\n            this.techCall_('setScrubbing', this.scrubbing_);\n            if (isScrubbing) {\n                this.addClass('vjs-scrubbing');\n            } else {\n                this.removeClass('vjs-scrubbing');\n            }\n        }\n        currentTime(seconds) {\n            if (typeof seconds !== 'undefined') {\n                if (seconds < 0) {\n                    seconds = 0;\n                }\n                if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n                    this.cache_.initTime = seconds;\n                    this.unlistenTo('canplay', this.applyInitTime_);\n                    this.listenToOnce('canplay', this.applyInitTime_);\n                    return;\n                }\n                this.techCall_('setCurrentTime', seconds);\n                this.cache_.initTime = 0;\n                return;\n            }\n            this.cache_.currentTime = this.techGet_('currentTime') || 0;\n            return this.cache_.currentTime;\n        }\n        applyInitTime_() {\n            this.currentTime(this.cache_.initTime);\n        }\n        duration(seconds) {\n            if (seconds === undefined) {\n                return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n            }\n            seconds = parseFloat(seconds);\n            if (seconds < 0) {\n                seconds = Infinity;\n            }\n            if (seconds !== this.cache_.duration) {\n                this.cache_.duration = seconds;\n                if (seconds === Infinity) {\n                    this.addClass('vjs-live');\n                } else {\n                    this.removeClass('vjs-live');\n                }\n                if (!isNaN(seconds)) {\n                    this.trigger('durationchange');\n                }\n            }\n        }\n        remainingTime() {\n            return this.duration() - this.currentTime();\n        }\n        remainingTimeDisplay() {\n            return Math.floor(this.duration()) - Math.floor(this.currentTime());\n        }\n        buffered() {\n            let buffered = this.techGet_('buffered');\n            if (!buffered || !buffered.length) {\n                buffered = timeRages.createTimeRange(0, 0);\n            }\n            return buffered;\n        }\n        bufferedPercent() {\n            return buffer.bufferedPercent(this.buffered(), this.duration());\n        }\n        bufferedEnd() {\n            const buffered = this.buffered();\n            const duration = this.duration();\n            let end = buffered.end(buffered.length - 1);\n            if (end > duration) {\n                end = duration;\n            }\n            return end;\n        }\n        volume(percentAsDecimal) {\n            let vol;\n            if (percentAsDecimal !== undefined) {\n                vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n                this.cache_.volume = vol;\n                this.techCall_('setVolume', vol);\n                if (vol > 0) {\n                    this.lastVolume_(vol);\n                }\n                return;\n            }\n            vol = parseFloat(this.techGet_('volume'));\n            return isNaN(vol) ? 1 : vol;\n        }\n        muted(muted) {\n            if (muted !== undefined) {\n                this.techCall_('setMuted', muted);\n                return;\n            }\n            return this.techGet_('muted') || false;\n        }\n        defaultMuted(defaultMuted) {\n            if (defaultMuted !== undefined) {\n                return this.techCall_('setDefaultMuted', defaultMuted);\n            }\n            return this.techGet_('defaultMuted') || false;\n        }\n        lastVolume_(percentAsDecimal) {\n            if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n                this.cache_.lastVolume = percentAsDecimal;\n                return;\n            }\n            return this.cache_.lastVolume;\n        }\n        supportsFullScreen() {\n            return this.techGet_('supportsFullScreen') || false;\n        }\n        isFullscreen(isFS) {\n            if (isFS !== undefined) {\n                const oldValue = this.isFullscreen_;\n                this.isFullscreen_ = Boolean(isFS);\n                if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n                    this.trigger('fullscreenchange');\n                }\n                this.toggleFullscreenClass_();\n                return;\n            }\n            return this.isFullscreen_;\n        }\n        requestFullscreen(fullscreenOptions) {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                const self = this;\n                return new PromiseClass((resolve, reject) => {\n                    function offHandler() {\n                        self.off('fullscreenerror', errorHandler);\n                        self.off('fullscreenchange', changeHandler);\n                    }\n                    function changeHandler() {\n                        offHandler();\n                        resolve();\n                    }\n                    function errorHandler(e, err) {\n                        offHandler();\n                        reject(err);\n                    }\n                    self.one('fullscreenchange', changeHandler);\n                    self.one('fullscreenerror', errorHandler);\n                    const promise = self.requestFullscreenHelper_(fullscreenOptions);\n                    if (promise) {\n                        promise.then(offHandler, offHandler);\n                        return promise;\n                    }\n                });\n            }\n            return this.requestFullscreenHelper_();\n        }\n        requestFullscreenHelper_(fullscreenOptions) {\n            let fsOptions;\n            if (!this.fsApi_.prefixed) {\n                fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n                if (fullscreenOptions !== undefined) {\n                    fsOptions = fullscreenOptions;\n                }\n            }\n            if (this.fsApi_.requestFullscreen) {\n                const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n                if (promise) {\n                    promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n                }\n                return promise;\n            } else if (this.tech_.supportsFullScreen()) {\n                this.techCall_('enterFullScreen');\n            } else {\n                this.enterFullWindow();\n            }\n        }\n        exitFullscreen() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                const self = this;\n                return new PromiseClass((resolve, reject) => {\n                    function offHandler() {\n                        self.off('fullscreenerror', errorHandler);\n                        self.off('fullscreenchange', changeHandler);\n                    }\n                    function changeHandler() {\n                        offHandler();\n                        resolve();\n                    }\n                    function errorHandler(e, err) {\n                        offHandler();\n                        reject(err);\n                    }\n                    self.one('fullscreenchange', changeHandler);\n                    self.one('fullscreenerror', errorHandler);\n                    const promise = self.exitFullscreenHelper_();\n                    if (promise) {\n                        promise.then(offHandler, offHandler);\n                        return promise;\n                    }\n                });\n            }\n            return this.exitFullscreenHelper_();\n        }\n        exitFullscreenHelper_() {\n            if (this.fsApi_.requestFullscreen) {\n                const promise = document[this.fsApi_.exitFullscreen]();\n                if (promise) {\n                    promise.then(() => this.isFullscreen(false));\n                }\n                return promise;\n            } else if (this.tech_.supportsFullScreen()) {\n                this.techCall_('exitFullScreen');\n            } else {\n                this.exitFullWindow();\n            }\n        }\n        enterFullWindow() {\n            this.isFullscreen(true);\n            this.isFullWindow = true;\n            this.docOrigOverflow = document.documentElement.style.overflow;\n            Events.on(document, 'keydown', this.boundFullWindowOnEscKey_);\n            document.documentElement.style.overflow = 'hidden';\n            Dom.addClass(document.body, 'vjs-full-window');\n            this.trigger('enterFullWindow');\n        }\n        fullWindowOnEscKey(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                if (this.isFullscreen() === true) {\n                    this.exitFullscreen();\n                } else {\n                    this.exitFullWindow();\n                }\n            }\n        }\n        exitFullWindow() {\n            this.isFullscreen(false);\n            this.isFullWindow = false;\n            Events.off(document, 'keydown', this.boundFullWindowOnEscKey_);\n            document.documentElement.style.overflow = this.docOrigOverflow;\n            Dom.removeClass(document.body, 'vjs-full-window');\n            this.trigger('exitFullWindow');\n        }\n        disablePictureInPicture(value) {\n            if (value === undefined) {\n                return this.techGet_('disablePictureInPicture');\n            }\n            this.techCall_('setDisablePictureInPicture', value);\n            this.options_.disablePictureInPicture = value;\n            this.trigger('disablepictureinpicturechanged');\n        }\n        isInPictureInPicture(isPiP) {\n            if (isPiP !== undefined) {\n                this.isInPictureInPicture_ = !!isPiP;\n                this.togglePictureInPictureClass_();\n                return;\n            }\n            return !!this.isInPictureInPicture_;\n        }\n        requestPictureInPicture() {\n            if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n                return this.techGet_('requestPictureInPicture');\n            }\n        }\n        exitPictureInPicture() {\n            if ('pictureInPictureEnabled' in document) {\n                return document.exitPictureInPicture();\n            }\n        }\n        handleKeyDown(event) {\n            const {userActions} = this.options_;\n            if (!userActions || !userActions.hotkeys) {\n                return;\n            }\n            const excludeElement = el => {\n                const tagName = el.tagName.toLowerCase();\n                if (el.isContentEditable) {\n                    return true;\n                }\n                const allowedInputTypes = [\n                    'button',\n                    'checkbox',\n                    'hidden',\n                    'radio',\n                    'reset',\n                    'submit'\n                ];\n                if (tagName === 'input') {\n                    return allowedInputTypes.indexOf(el.type) === -1;\n                }\n                const excludedTags = ['textarea'];\n                return excludedTags.indexOf(tagName) !== -1;\n            };\n            if (excludeElement(this.el_.ownerDocument.activeElement)) {\n                return;\n            }\n            if (typeof userActions.hotkeys === 'function') {\n                userActions.hotkeys.call(this, event);\n            } else {\n                this.handleHotkeys(event);\n            }\n        }\n        handleHotkeys(event) {\n            const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n            const {fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'), muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'), playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')} = hotkeys;\n            if (fullscreenKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const FSToggle = Component.getComponent('FullscreenToggle');\n                if (document[this.fsApi_.fullscreenEnabled] !== false) {\n                    FSToggle.prototype.handleClick.call(this, event);\n                }\n            } else if (muteKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const MuteToggle = Component.getComponent('MuteToggle');\n                MuteToggle.prototype.handleClick.call(this, event);\n            } else if (playPauseKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const PlayToggle = Component.getComponent('PlayToggle');\n                PlayToggle.prototype.handleClick.call(this, event);\n            }\n        }\n        canPlayType(type) {\n            let can;\n            for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n                const techName = j[i];\n                let tech = Tech.getTech(techName);\n                if (!tech) {\n                    tech = Component.getComponent(techName);\n                }\n                if (!tech) {\n                    log.error(`The \"${ techName }\" tech is undefined. Skipped browser support check for that tech.`);\n                    continue;\n                }\n                if (tech.isSupported()) {\n                    can = tech.canPlayType(type);\n                    if (can) {\n                        return can;\n                    }\n                }\n            }\n            return '';\n        }\n        selectSource(sources) {\n            const techs = this.options_.techOrder.map(techName => {\n                return [\n                    techName,\n                    Tech.getTech(techName)\n                ];\n            }).filter(([techName, tech]) => {\n                if (tech) {\n                    return tech.isSupported();\n                }\n                log.error(`The \"${ techName }\" tech is undefined. Skipped browser support check for that tech.`);\n                return false;\n            });\n            const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n                let found;\n                outerArray.some(outerChoice => {\n                    return innerArray.some(innerChoice => {\n                        found = tester(outerChoice, innerChoice);\n                        if (found) {\n                            return true;\n                        }\n                    });\n                });\n                return found;\n            };\n            let foundSourceAndTech;\n            const flip = fn => (a, b) => fn(b, a);\n            const finder = ([techName, tech], source) => {\n                if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n                    return {\n                        source,\n                        tech: techName\n                    };\n                }\n            };\n            if (this.options_.sourceOrder) {\n                foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n            } else {\n                foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n            }\n            return foundSourceAndTech || false;\n        }\n        src(source) {\n            if (typeof source === 'undefined') {\n                return this.cache_.src || '';\n            }\n            const sources = filterSource(source);\n            if (!sources.length) {\n                this.setTimeout(function () {\n                    this.error({\n                        code: 4,\n                        message: this.localize(this.options_.notSupportedMessage)\n                    });\n                }, 0);\n                return;\n            }\n            this.changingSrc_ = true;\n            this.cache_.sources = sources;\n            this.updateSourceCaches_(sources[0]);\n            middleware.setSource(this, sources[0], (middlewareSource, mws) => {\n                this.middleware_ = mws;\n                this.cache_.sources = sources;\n                this.updateSourceCaches_(middlewareSource);\n                const err = this.src_(middlewareSource);\n                if (err) {\n                    if (sources.length > 1) {\n                        return this.src(sources.slice(1));\n                    }\n                    this.changingSrc_ = false;\n                    this.setTimeout(function () {\n                        this.error({\n                            code: 4,\n                            message: this.localize(this.options_.notSupportedMessage)\n                        });\n                    }, 0);\n                    this.triggerReady();\n                    return;\n                }\n                middleware.setTech(mws, this.tech_);\n            });\n        }\n        src_(source) {\n            const sourceTech = this.selectSource([source]);\n            if (!sourceTech) {\n                return true;\n            }\n            if (!stringCases.titleCaseEquals(sourceTech.tech, this.techName_)) {\n                this.changingSrc_ = true;\n                this.loadTech_(sourceTech.tech, sourceTech.source);\n                this.tech_.ready(() => {\n                    this.changingSrc_ = false;\n                });\n                return false;\n            }\n            this.ready(function () {\n                if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n                    this.techCall_('setSource', source);\n                } else {\n                    this.techCall_('src', source.src);\n                }\n                this.changingSrc_ = false;\n            }, true);\n            return false;\n        }\n        load() {\n            this.techCall_('load');\n        }\n        reset() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (this.paused() || !PromiseClass) {\n                this.doReset_();\n            } else {\n                const playPromise = this.play();\n                promise.silencePromise(playPromise.then(() => this.doReset_()));\n            }\n        }\n        doReset_() {\n            if (this.tech_) {\n                this.tech_.clearTracks('text');\n            }\n            this.resetCache_();\n            this.poster('');\n            this.loadTech_(this.options_.techOrder[0], null);\n            this.techCall_('reset');\n            this.resetControlBarUI_();\n            ///if (evented.isEvented(this)) {\n                this.trigger('playerreset');\n            ///}\n        }\n        resetControlBarUI_() {\n            this.resetProgressBar_();\n            this.resetPlaybackRate_();\n            this.resetVolumeBar_();\n        }\n        resetProgressBar_() {\n            this.currentTime(0);\n            const {durationDisplay, remainingTimeDisplay} = this.controlBar;\n            if (durationDisplay) {\n                durationDisplay.updateContent();\n            }\n            if (remainingTimeDisplay) {\n                remainingTimeDisplay.updateContent();\n            }\n        }\n        resetPlaybackRate_() {\n            this.playbackRate(this.defaultPlaybackRate());\n            this.handleTechRateChange_();\n        }\n        resetVolumeBar_() {\n            this.volume(1);\n            this.trigger('volumechange');\n        }\n        currentSources() {\n            const source = this.currentSource();\n            const sources = [];\n            if (Object.keys(source).length !== 0) {\n                sources.push(source);\n            }\n            return this.cache_.sources || sources;\n        }\n        currentSource() {\n            return this.cache_.source || {};\n        }\n        currentSrc() {\n            return this.currentSource() && this.currentSource().src || '';\n        }\n        currentType() {\n            return this.currentSource() && this.currentSource().type || '';\n        }\n        preload(value) {\n            if (value !== undefined) {\n                this.techCall_('setPreload', value);\n                this.options_.preload = value;\n                return;\n            }\n            return this.techGet_('preload');\n        }\n        autoplay(value) {\n            if (value === undefined) {\n                return this.options_.autoplay || false;\n            }\n            let techAutoplay;\n            if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n                this.options_.autoplay = value;\n                this.manualAutoplay_(value);\n                techAutoplay = false;\n            } else if (!value) {\n                this.options_.autoplay = false;\n            } else {\n                this.options_.autoplay = true;\n            }\n            techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n            if (this.tech_) {\n                this.techCall_('setAutoplay', techAutoplay);\n            }\n        }\n        playsinline(value) {\n            if (value !== undefined) {\n                this.techCall_('setPlaysinline', value);\n                this.options_.playsinline = value;\n                return this;\n            }\n            return this.techGet_('playsinline');\n        }\n        loop(value) {\n            if (value !== undefined) {\n                this.techCall_('setLoop', value);\n                this.options_.loop = value;\n                return;\n            }\n            return this.techGet_('loop');\n        }\n        poster(src) {\n            if (src === undefined) {\n                return this.poster_;\n            }\n            if (!src) {\n                src = '';\n            }\n            if (src === this.poster_) {\n                return;\n            }\n            this.poster_ = src;\n            this.techCall_('setPoster', src);\n            this.isPosterFromTech_ = false;\n            this.trigger('posterchange');\n        }\n        handleTechPosterChange_() {\n            if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n                const newPoster = this.tech_.poster() || '';\n                if (newPoster !== this.poster_) {\n                    this.poster_ = newPoster;\n                    this.isPosterFromTech_ = true;\n                    this.trigger('posterchange');\n                }\n            }\n        }\n        controls(bool) {\n            if (bool === undefined) {\n                return !!this.controls_;\n            }\n            bool = !!bool;\n            if (this.controls_ === bool) {\n                return;\n            }\n            this.controls_ = bool;\n            if (this.usingNativeControls()) {\n                this.techCall_('setControls', bool);\n            }\n            if (this.controls_) {\n                this.removeClass('vjs-controls-disabled');\n                this.addClass('vjs-controls-enabled');\n                this.trigger('controlsenabled');\n                if (!this.usingNativeControls()) {\n                    this.addTechControlsListeners_();\n                }\n            } else {\n                this.removeClass('vjs-controls-enabled');\n                this.addClass('vjs-controls-disabled');\n                this.trigger('controlsdisabled');\n                if (!this.usingNativeControls()) {\n                    this.removeTechControlsListeners_();\n                }\n            }\n        }\n        usingNativeControls(bool) {\n            if (bool === undefined) {\n                return !!this.usingNativeControls_;\n            }\n            bool = !!bool;\n            if (this.usingNativeControls_ === bool) {\n                return;\n            }\n            this.usingNativeControls_ = bool;\n            if (this.usingNativeControls_) {\n                this.addClass('vjs-using-native-controls');\n                this.trigger('usingnativecontrols');\n            } else {\n                this.removeClass('vjs-using-native-controls');\n                this.trigger('usingcustomcontrols');\n            }\n        }\n        error(err) {\n            if (err === undefined) {\n                return this.error_ || null;\n            }\n            if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n                const triggerSuppressedError = function () {\n                    this.error(err);\n                };\n                this.options_.suppressNotSupportedError = false;\n                this.any([\n                    'click',\n                    'touchstart'\n                ], triggerSuppressedError);\n                this.listenToOnce('loadstart', function () {\n                    this.unlistenTo([\n                        'click',\n                        'touchstart'\n                    ], triggerSuppressedError);\n                });\n                return;\n            }\n            if (err === null) {\n                this.error_ = err;\n                this.removeClass('vjs-error');\n                if (this.errorDisplay) {\n                    this.errorDisplay.close();\n                }\n                return;\n            }\n            this.error_ = new MediaError(err);\n            this.addClass('vjs-error');\n            log.error(`(CODE:${ this.error_.code } ${ MediaError.errorTypes[this.error_.code] })`, this.error_.message, this.error_);\n            this.trigger('error');\n            return;\n        }\n        reportUserActivity(event) {\n            this.userActivity_ = true;\n        }\n        userActive(bool) {\n            if (bool === undefined) {\n                return this.userActive_;\n            }\n            bool = !!bool;\n            if (bool === this.userActive_) {\n                return;\n            }\n            this.userActive_ = bool;\n            if (this.userActive_) {\n                this.userActivity_ = true;\n                this.removeClass('vjs-user-inactive');\n                this.addClass('vjs-user-active');\n                this.trigger('useractive');\n                return;\n            }\n            if (this.tech_) {\n                this.tech_.one('mousemove', function (e) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                });\n            }\n            this.userActivity_ = false;\n            this.removeClass('vjs-user-active');\n            this.addClass('vjs-user-inactive');\n            this.trigger('userinactive');\n        }\n        listenForUserActivity_() {\n            let mouseInProgress;\n            let lastMoveX;\n            let lastMoveY;\n            const handleActivity = Fn.bind(this, this.reportUserActivity);\n            const handleMouseMove = function (e) {\n                if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n                    lastMoveX = e.screenX;\n                    lastMoveY = e.screenY;\n                    handleActivity();\n                }\n            };\n            const handleMouseDown = function () {\n                handleActivity();\n                this.clearInterval(mouseInProgress);\n                mouseInProgress = this.setInterval(handleActivity, 250);\n            };\n            const handleMouseUpAndMouseLeave = function (event) {\n                handleActivity();\n                this.clearInterval(mouseInProgress);\n            };\n            this.listenTo('mousedown', handleMouseDown);\n            this.listenTo('mousemove', handleMouseMove);\n            this.listenTo('mouseup', handleMouseUpAndMouseLeave);\n            this.listenTo('mouseleave', handleMouseUpAndMouseLeave);\n            const controlBar = this.getChild('controlBar');\n            if (controlBar && !browser.IS_IOS && !browser.IS_ANDROID) {\n                this.listenTo(controlBar,'mouseenter', function (event) {\n                    this.cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n                    this.options_.inactivityTimeout = 0;\n                });\n                this.listenTo(controlBar,'mouseleave', function (event) {\n                    this.options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n                });\n            }\n            this.listenTo('keydown', handleActivity);\n            this.listenTo('keyup', handleActivity);\n            let inactivityTimeout;\n            this.setInterval(function () {\n                if (!this.userActivity_) {\n                    return;\n                }\n                this.userActivity_ = false;\n                this.userActive(true);\n                this.clearTimeout(inactivityTimeout);\n                const timeout = this.options_.inactivityTimeout;\n                if (timeout <= 0) {\n                    return;\n                }\n                inactivityTimeout = this.setTimeout(function () {\n                    if (!this.userActivity_) {\n                        this.userActive(false);\n                    }\n                }, timeout);\n            }, 250);\n        }\n        playbackRate(rate) {\n            if (rate !== undefined) {\n                this.techCall_('setPlaybackRate', rate);\n                return;\n            }\n            if (this.tech_ && this.tech_.featuresPlaybackRate) {\n                return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n            }\n            return 1;\n        }\n        defaultPlaybackRate(rate) {\n            if (rate !== undefined) {\n                return this.techCall_('setDefaultPlaybackRate', rate);\n            }\n            if (this.tech_ && this.tech_.featuresPlaybackRate) {\n                return this.techGet_('defaultPlaybackRate');\n            }\n            return 1;\n        }\n        isAudio(bool) {\n            if (bool !== undefined) {\n                this.isAudio_ = !!bool;\n                return;\n            }\n            return !!this.isAudio_;\n        }\n        addTextTrack(kind, label, language) {\n            if (this.tech_) {\n                return this.tech_.addTextTrack(kind, label, language);\n            }\n        }\n        addRemoteTextTrack(options, manualCleanup) {\n            if (this.tech_) {\n                return this.tech_.addRemoteTextTrack(options, manualCleanup);\n            }\n        }\n        removeRemoteTextTrack(obj = {}) {\n            let {track} = obj;\n            if (!track) {\n                track = obj;\n            }\n            if (this.tech_) {\n                return this.tech_.removeRemoteTextTrack(track);\n            }\n        }\n        getVideoPlaybackQuality() {\n            return this.techGet_('getVideoPlaybackQuality');\n        }\n        videoWidth() {\n            return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n        }\n        videoHeight() {\n            return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n        }\n        language(code) {\n            if (code === undefined) {\n                return this.language_;\n            }\n            if (this.language_ !== String(code).toLowerCase()) {\n                this.language_ = String(code).toLowerCase();\n                ///if (evented.isEvented(this)) {\n                    this.trigger('languagechange');\n                ///}\n            }\n        }\n        languages() {\n            return mergeOptions(Player.prototype.options_.languages, this.languages_);\n        }\n        toJSON() {\n            const options = mergeOptions(this.options_);\n            const tracks = options.tracks;\n            options.tracks = [];\n            for (let i = 0; i < tracks.length; i++) {\n                let track = tracks[i];\n                track = mergeOptions(track);\n                track.player = undefined;\n                options.tracks[i] = track;\n            }\n            return options;\n        }\n        createModal(content, options) {\n            options = options || {};\n            options.content = content || '';\n            const modal = new ModalDialog(this, options);\n            this.addChild(modal);\n            modal.on('dispose', () => {\n                this.removeChild(modal);\n            });\n            modal.open();\n            return modal;\n        }\n        updateCurrentBreakpoint_() {\n            if (!this.responsive()) {\n                return;\n            }\n            const currentBreakpoint = this.currentBreakpoint();\n            const currentWidth = this.currentWidth();\n            for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n                const candidateBreakpoint = BREAKPOINT_ORDER[i];\n                const maxWidth = this.breakpoints_[candidateBreakpoint];\n                if (currentWidth <= maxWidth) {\n                    if (currentBreakpoint === candidateBreakpoint) {\n                        return;\n                    }\n                    if (currentBreakpoint) {\n                        this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n                    }\n                    this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n                    this.breakpoint_ = candidateBreakpoint;\n                    break;\n                }\n            }\n        }\n        removeCurrentBreakpoint_() {\n            const className = this.currentBreakpointClass();\n            this.breakpoint_ = '';\n            if (className) {\n                this.removeClass(className);\n            }\n        }\n        breakpoints(breakpoints) {\n            if (breakpoints === undefined) {\n                return obj.assign(this.breakpoints_);\n            }\n            this.breakpoint_ = '';\n            this.breakpoints_ = obj.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n            this.updateCurrentBreakpoint_();\n            return obj.assign(this.breakpoints_);\n        }\n        responsive(value) {\n            if (value === undefined) {\n                return this.responsive_;\n            }\n            value = Boolean(value);\n            const current = this.responsive_;\n            if (value === current) {\n                return;\n            }\n            this.responsive_ = value;\n            if (value) {\n                this.listenTo('playerresize', this.updateCurrentBreakpoint_);\n                this.updateCurrentBreakpoint_();\n            } else {\n                this.unlistenTo('playerresize', this.updateCurrentBreakpoint_);\n                this.removeCurrentBreakpoint_();\n            }\n            return value;\n        }\n        currentBreakpoint() {\n            return this.breakpoint_;\n        }\n        currentBreakpointClass() {\n            return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n        }\n        loadMedia(media, ready) {\n            if (!media || typeof media !== 'object') {\n                return;\n            }\n            this.reset();\n            this.cache_.media = mergeOptions(media);\n            const {artwork, poster, src, textTracks} = this.cache_.media;\n            if (!artwork && poster) {\n                this.cache_.media.artwork = [{\n                        src: poster,\n                        type: mimetypes.getMimetype(poster)\n                    }];\n            }\n            if (src) {\n                this.src(src);\n            }\n            if (poster) {\n                this.poster(poster);\n            }\n            if (Array.isArray(textTracks)) {\n                textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n            }\n            this.ready(ready);\n        }\n        getMedia() {\n            if (!this.cache_.media) {\n                const poster = this.poster();\n                const src = this.currentSources();\n                const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n                    kind: tt.kind,\n                    label: tt.label,\n                    language: tt.language,\n                    src: tt.src\n                }));\n                const media = {\n                    src,\n                    textTracks\n                };\n                if (poster) {\n                    media.poster = poster;\n                    media.artwork = [{\n                            src: media.poster,\n                            type: mimetypes.getMimetype(media.poster)\n                        }];\n                }\n                return media;\n            }\n            return mergeOptions(this.cache_.media);\n        }\n        static getTagSettings(tag) {\n            const baseOptions = {\n                sources: [],\n                tracks: []\n            };\n            const tagOptions = Dom.getAttributes(tag);\n            const dataSetup = tagOptions['data-setup'];\n            if (Dom.hasClass(tag, 'vjs-fill')) {\n                tagOptions.fill = true;\n            }\n            if (Dom.hasClass(tag, 'vjs-fluid')) {\n                tagOptions.fluid = true;\n            }\n            if (dataSetup !== null) {\n                const [err, data] = safeParseTuple(dataSetup || '{}');\n                if (err) {\n                    log.error(err);\n                }\n                obj.assign(tagOptions, data);\n            }\n            obj.assign(baseOptions, tagOptions);\n            if (tag.hasChildNodes()) {\n                const children = tag.childNodes;\n                for (let i = 0, j = children.length; i < j; i++) {\n                    const child = children[i];\n                    const childName = child.nodeName.toLowerCase();\n                    if (childName === 'source') {\n                        baseOptions.sources.push(Dom.getAttributes(child));\n                    } else if (childName === 'track') {\n                        baseOptions.tracks.push(Dom.getAttributes(child));\n                    }\n                }\n            }\n            return baseOptions;\n        }\n        flexNotSupported_() {\n            const elem = document.createElement('i');\n            return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || 'msFlexOrder' in elem.style);\n        }\n        debug(enabled) {\n            if (enabled === undefined) {\n                return this.debugEnabled_;\n            }\n            if (enabled) {\n                this.trigger('debugon');\n                this.previousLogLevel_ = this.log.level;\n                this.log.level('debug');\n                this.debugEnabled_ = true;\n            } else {\n                this.trigger('debugoff');\n                this.log.level(this.previousLogLevel_);\n                this.previousLogLevel_ = undefined;\n                this.debugEnabled_ = false;\n            }\n        }\n    }\n    TRACK_TYPES.ALL.names.forEach(function (name) {\n        const props = TRACK_TYPES.ALL[name];\n        Player.prototype[props.getterName] = function () {\n            if (this.tech_) {\n                return this.tech_[props.getterName]();\n            }\n            this[props.privateName] = this[props.privateName] || new props.ListClass();\n            return this[props.privateName];\n        };\n    });\n    Player.prototype.crossorigin = Player.prototype.crossOrigin;\n    Player.players = {};\n    const navigator = window.navigator;\n    Player.prototype.options_ = {\n        techOrder: Tech.defaultTechOrder_,\n        html5: {},\n        inactivityTimeout: 2000,\n        playbackRates: [],\n        liveui: false,\n        children: [\n            'mediaLoader',\n            'posterImage',\n            'textTrackDisplay',\n            'loadingSpinner',\n            'bigPlayButton',\n            'liveTracker',\n            'controlBar',\n            'errorDisplay',\n            'textTrackSettings',\n            'resizeManager'\n        ],\n        language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n        languages: {},\n        notSupportedMessage: 'No compatible source was found for this media.',\n        fullscreen: { options: { navigationUI: 'hide' } },\n        breakpoints: {},\n        responsive: false\n    };\n    [\n        'ended',\n        'seeking',\n        'seekable',\n        'networkState',\n        'readyState'\n    ].forEach(function (fn) {\n        Player.prototype[fn] = function () {\n            return this.techGet_(fn);\n        };\n    });\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n        Player.prototype[`handleTech${ stringCases.toTitleCase(event) }_`] = function () {\n            return this.trigger(event);\n        };\n    });\n    Component.registerComponent('Player', Player);\n    return Player;\n});"]}