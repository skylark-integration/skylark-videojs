{"version":3,"sources":["component.js"],"names":["define","langx","eventer","Widget","stateful","Dom","DomData","Fn","Guid","stringCases","mergeOptions","computedStyle","Map","Set","Component","[object Object]","player","options","ready","this","play","player_","options_","ready_","super","_construct","el","el_","createEl","elmx","isDisposed_","parentComponent_","id_","id","newGUID","name_","name","evented","handleLanguagechange","bind","listenTo","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","length","trigger","type","bubbles","i","dispose","parentNode","removeChild","clear","Boolean","obj","tagName","properties","attributes","string","tokens","defaultValue","code","language","languages","primaryCode","split","primaryLang","localizedString","replace","match","index","value","ret","contentEl_","names","reduce","acc","n","concat","currentChild","getChild","child","component","componentName","toTitleCase","componentClassName","componentClass","ComponentClass","getComponent","Error","splice","toLowerCase","refNode","isEl","contentEl","insertBefore","childFound","compEl","children","parentOptions","handleAdd","opts","undefined","playerOptions","newChild","addChild","workingChildren","Tech","Array","isArray","Object","keys","filter","some","wchild","map","c","isTech","forEach","fn","sync","isReady_","call","setTimeout","push","readyQueue","selector","context","$","$$","addClass","removeClass","num","skipListeners","dimension","width","height","widthOrHeight","indexOf","style","val","pxIndex","parseInt","slice","computedWidthOrHeight","parseFloat","isNaN","rule","currentDimension","event","stopPropagation","handleKeyDown","touchStart","firstTouch","couldBeTap","touches","pageX","pageY","window","performance","now","xdiff","ydiff","Math","sqrt","noTap","preventDefault","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeout","timeoutId","clearTimersOnDispose_","has","delete","add","clearTimeout","interval","intervalId","supportsRaf_","requestAnimationFrame","set","cancelAnimationFrame","get","listenToOnce","idName","cancelName","key","ComponentToRegister","isComp","prototype","isPrototypeOf","reason","components_","Player","players","playerNames","pname","every","getAttribute","getAttr","setAttribute","removeAttribute","removeAttr","registerComponent"],"mappings":"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","file":"../component.js","sourcesContent":["define([\n    \"skylark-langx\",\n    \"skylark-domx-eventer\",\n    \"skylark-widgets-base/Widget\",\n    ///'./mixins/evented',\n    './mixins/stateful',\n    './utils/dom',\n    './utils/dom-data',\n    './utils/fn',\n    './utils/guid',\n    './utils/string-cases',\n    './utils/merge-options',\n    './utils/computed-style',\n    './utils/map',\n    './utils/set'\n], function (langx,eventer,Widget, stateful, Dom, DomData, Fn, Guid, stringCases, mergeOptions, computedStyle, Map, Set) {\n    'use strict';\n\n    function isNativeEvent(el,events) {\n        if (langx.isString(events)) {\n            return el[\"on\"+ events] !== undefined;\n        } else if (langx.isArray(events)) {\n            for (var i=0; i<events.length; i++) {\n                if (el[\"on\"+ events[i]] !== undefined) {\n                    return true;\n                }\n            }\n            return events.length > 0;\n        }\n    }\n\n\n    class Component extends Widget {\n        _construct(player, options, ready) {\n            if (!player && this.play) {\n                this.player_ = player = this;\n            } else {\n                this.player_ = player;\n            }\n            this.options_ = mergeOptions({}, this.options_);\n            this.options_ = mergeOptions(this.options_, options);\n            this.ready_ = ready;\n\n            super._construct(this.options_,ready);\n\n        }\n\n        _create() {\n            var options = this.options_ = this.options;\n\n            if (options.el) {\n               this.el_ = options.el;\n            } else if (options.createEl !== false) {\n                this.el_ = this.createEl();\n            }\n\n            return this.elmx(this.el_)\n        }\n\n        _init() {\n            var options = this.options_,\n                player = this.player_;\n\n            this.isDisposed_ = false;\n            this.parentComponent_ = null;\n            this.id_ = options.id || options.el && options.el.id;\n            if (!this.id_) {\n                const id = player && player.id && player.id() || 'no_player';\n                this.id_ = `${ id }_component_${ Guid.newGUID() }`;\n            }\n            this.name_ = options.name || null;\n\n\n            if (options.evented !== false) {\n                ///evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n                this.handleLanguagechange = this.handleLanguagechange.bind(this);\n                ///this.listenTo(this.player_, 'languagechange', this.handleLanguagechange);\n                this.listenTo(this.player_, 'languagechange', this.handleLanguagechange);\n            }\n\n\n            ///stateful(this, this.constructor.defaultState);\n            this.children_ = [];\n            this.childIndex_ = {};\n            this.childNameIndex_ = {};\n            this.setTimeoutIds_ = new Set();\n            this.setIntervalIds_ = new Set();\n            this.rafIds_ = new Set();\n            this.namedRafs_ = new Map();\n            this.clearingTimersOnDispose_ = false;\n            if (options.initChildren !== false) {\n                this.initChildren();\n            }\n            this.ready(this.ready_);\n            if (options.reportTouchActivity !== false) {\n                this.enableTouchActivity();\n            }\n\n        }\n\n        dispose() {\n            if (this.isDisposed_) {\n                return;\n            }\n            if (this.readyQueue_) {\n                this.readyQueue_.length = 0;\n            }\n            this.trigger({\n                type: 'dispose',\n                bubbles: false\n            });\n            this.isDisposed_ = true;\n            if (this.children_) {\n                for (let i = this.children_.length - 1; i >= 0; i--) {\n                    if (this.children_[i].dispose) {\n                        this.children_[i].dispose();\n                    }\n                }\n            }\n            this.children_ = null;\n            this.childIndex_ = null;\n            this.childNameIndex_ = null;\n            this.parentComponent_ = null;\n            if (this.el_) {\n                if (this.el_.parentNode) {\n                    this.el_.parentNode.removeChild(this.el_);\n                }\n                ///if (DomData.has(this.el_)) {\n                ///    DomData.delete(this.el_);\n                ///}\n                eventer.clear(this.el_);\n                this.el_ = null;\n            }\n            this.player_ = null;\n        }\n        isDisposed() {\n            return Boolean(this.isDisposed_);\n        }\n        player() {\n            return this.player_;\n        }\n        options(obj) {\n            if (!obj) {\n                return this.options_;\n            }\n            this.options_ = mergeOptions(this.options_, obj);\n            return this.options_;\n        }\n        el() {\n            return this.el_;\n        }\n        createEl(tagName, properties, attributes) {\n            return Dom.createEl(tagName, properties, attributes);\n        }\n        localize(string, tokens, defaultValue = string) {\n            const code = this.player_.language && this.player_.language();\n            const languages = this.player_.languages && this.player_.languages();\n            const language = languages && languages[code];\n            const primaryCode = code && code.split('-')[0];\n            const primaryLang = languages && languages[primaryCode];\n            let localizedString = defaultValue;\n            if (language && language[string]) {\n                localizedString = language[string];\n            } else if (primaryLang && primaryLang[string]) {\n                localizedString = primaryLang[string];\n            }\n            if (tokens) {\n                localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n                    const value = tokens[index - 1];\n                    let ret = value;\n                    if (typeof value === 'undefined') {\n                        ret = match;\n                    }\n                    return ret;\n                });\n            }\n            return localizedString;\n        }\n        handleLanguagechange() {\n        }\n        contentEl() {\n            return this.contentEl_ || this.el_;\n        }\n        id() {\n            return this.id_;\n        }\n        name() {\n            return this.name_;\n        }\n        children() {\n            return this.children_;\n        }\n        getChildById(id) {\n            return this.childIndex_[id];\n        }\n        getChild(name) {\n            if (!name) {\n                return;\n            }\n            return this.childNameIndex_[name];\n        }\n        getDescendant(...names) {\n            names = names.reduce((acc, n) => acc.concat(n), []);\n            let currentChild = this;\n            for (let i = 0; i < names.length; i++) {\n                currentChild = currentChild.getChild(names[i]);\n                if (!currentChild || !currentChild.getChild) {\n                    return;\n                }\n            }\n            return currentChild;\n        }\n        addChild(child, options = {}, index = this.children_.length) {\n            let component;\n            let componentName;\n            if (typeof child === 'string') {\n                componentName = stringCases.toTitleCase(child);\n                const componentClassName = options.componentClass || componentName;\n                options.name = componentName;\n                const ComponentClass = Component.getComponent(componentClassName);\n                if (!ComponentClass) {\n                    throw new Error(`Component ${ componentClassName } does not exist`);\n                }\n                if (typeof ComponentClass !== 'function') {\n                    return null;\n                }\n                component = new ComponentClass(this.player_ || this, options);\n            } else {\n                component = child;\n            }\n            if (component.parentComponent_) {\n                component.parentComponent_.removeChild(component);\n            }\n            this.children_.splice(index, 0, component);\n            component.parentComponent_ = this;\n            if (typeof component.id === 'function') {\n                this.childIndex_[component.id()] = component;\n            }\n            componentName = componentName || component.name && stringCases.toTitleCase(component.name());\n            if (componentName) {\n                this.childNameIndex_[componentName] = component;\n                this.childNameIndex_[stringCases.toLowerCase(componentName)] = component;\n            }\n            if (typeof component.el === 'function' && component.el()) {\n                let refNode = null;\n                if (this.children_[index + 1]) {\n                    if (this.children_[index + 1].el_) {\n                        refNode = this.children_[index + 1].el_;\n                    } else if (Dom.isEl(this.children_[index + 1])) {\n                        refNode = this.children_[index + 1];\n                    }\n                }\n                this.contentEl().insertBefore(component.el(), refNode);\n            }\n            return component;\n        }\n        removeChild(component) {\n            if (typeof component === 'string') {\n                component = this.getChild(component);\n            }\n            if (!component || !this.children_) {\n                return;\n            }\n            let childFound = false;\n            for (let i = this.children_.length - 1; i >= 0; i--) {\n                if (this.children_[i] === component) {\n                    childFound = true;\n                    this.children_.splice(i, 1);\n                    break;\n                }\n            }\n            if (!childFound) {\n                return;\n            }\n            component.parentComponent_ = null;\n            this.childIndex_[component.id()] = null;\n            this.childNameIndex_[stringCases.toTitleCase(component.name())] = null;\n            this.childNameIndex_[stringCases.toLowerCase(component.name())] = null;\n            const compEl = component.el();\n            if (compEl && compEl.parentNode === this.contentEl()) {\n                this.contentEl().removeChild(component.el());\n            }\n        }\n        initChildren() {\n            const children = this.options_.children;\n            if (children) {\n                const parentOptions = this.options_;\n                const handleAdd = child => {\n                    const name = child.name;\n                    let opts = child.opts;\n                    if (parentOptions[name] !== undefined) {\n                        opts = parentOptions[name];\n                    }\n                    if (opts === false) {\n                        return;\n                    }\n                    if (opts === true) {\n                        opts = {};\n                    }\n                    opts.playerOptions = this.options_.playerOptions;\n                    const newChild = this.addChild(name, opts);\n                    if (newChild) {\n                        this[name] = newChild;\n                    }\n                };\n                let workingChildren;\n                const Tech = Component.getComponent('Tech');\n                if (Array.isArray(children)) {\n                    workingChildren = children;\n                } else {\n                    workingChildren = Object.keys(children);\n                }\n                workingChildren.concat(Object.keys(this.options_).filter(function (child) {\n                    return !workingChildren.some(function (wchild) {\n                        if (typeof wchild === 'string') {\n                            return child === wchild;\n                        }\n                        return child === wchild.name;\n                    });\n                })).map(child => {\n                    let name;\n                    let opts;\n                    if (typeof child === 'string') {\n                        name = child;\n                        opts = children[name] || this.options_[name] || {};\n                    } else {\n                        name = child.name;\n                        opts = child;\n                    }\n                    return {\n                        name,\n                        opts\n                    };\n                }).filter(child => {\n                    const c = Component.getComponent(child.opts.componentClass || stringCases.toTitleCase(child.name));\n                    return c && !Tech.isTech(c);\n                }).forEach(handleAdd);\n            }\n        }\n        buildCSSClass() {\n            return '';\n        }\n        ready(fn, sync = false) {\n            if (!fn) {\n                return;\n            }\n            if (!this.isReady_) {\n                this.readyQueue_ = this.readyQueue_ || [];\n                this.readyQueue_.push(fn);\n                return;\n            }\n            if (sync) {\n                fn.call(this);\n            } else {\n                this.setTimeout(fn, 1);\n            }\n        }\n        triggerReady() {\n            this.isReady_ = true;\n            this.setTimeout(function () {\n                const readyQueue = this.readyQueue_;\n                this.readyQueue_ = [];\n                if (readyQueue && readyQueue.length > 0) {\n                    readyQueue.forEach(function (fn) {\n                        fn.call(this);\n                    }, this);\n                }\n                this.trigger('ready');\n            }, 1);\n        }\n        $(selector, context) {\n            return Dom.$(selector, context || this.contentEl());\n        }\n        $$(selector, context) {\n            return Dom.$$(selector, context || this.contentEl());\n        }\n/*\n        hasClass(classToCheck) {\n            return Dom.hasClass(this.el_, classToCheck);\n        }\n        addClass(classToAdd) {\n            Dom.addClass(this.el_, classToAdd);\n        }\n        removeClass(classToRemove) {\n            Dom.removeClass(this.el_, classToRemove);\n        }\n        toggleClass(classToToggle, predicate) {\n            Dom.toggleClass(this.el_, classToToggle, predicate);\n        }\n        show() {\n            this.removeClass('vjs-hidden');\n        }\n        hide() {\n            this.addClass('vjs-hidden');\n        }\n*/  \n        lockShowing() {\n            this.addClass('vjs-lock-showing');\n        }\n        unlockShowing() {\n            this.removeClass('vjs-lock-showing');\n        }\n/*\n        getAttribute(attribute) {\n            return Dom.getAttribute(this.el_, attribute);\n        }\n        setAttribute(attribute, value) {\n            Dom.setAttribute(this.el_, attribute, value);\n        }\n        removeAttribute(attribute) {\n            Dom.removeAttribute(this.el_, attribute);\n        }\n*/\n        width(num, skipListeners) {\n            return this.dimension('width', num, skipListeners);\n        }\n        height(num, skipListeners) {\n            return this.dimension('height', num, skipListeners);\n        }\n        dimensions(width, height) {\n            this.width(width, true);\n            this.height(height);\n        }\n        dimension(widthOrHeight, num, skipListeners) {\n            if (num !== undefined) {\n                if (num === null || num !== num) {\n                    num = 0;\n                }\n                if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n                    this.el_.style[widthOrHeight] = num;\n                } else if (num === 'auto') {\n                    this.el_.style[widthOrHeight] = '';\n                } else {\n                    this.el_.style[widthOrHeight] = num + 'px';\n                }\n                if (!skipListeners) {\n                    this.trigger('componentresize');\n                }\n                return;\n            }\n            if (!this.el_) {\n                return 0;\n            }\n            const val = this.el_.style[widthOrHeight];\n            const pxIndex = val.indexOf('px');\n            if (pxIndex !== -1) {\n                return parseInt(val.slice(0, pxIndex), 10);\n            }\n            return parseInt(this.el_['offset' + stringCases.toTitleCase(widthOrHeight)], 10);\n        }\n        currentDimension(widthOrHeight) {\n            let computedWidthOrHeight = 0;\n            if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n                throw new Error('currentDimension only accepts width or height value');\n            }\n            computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n            computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n            if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n                const rule = `offset${ stringCases.toTitleCase(widthOrHeight) }`;\n                computedWidthOrHeight = this.el_[rule];\n            }\n            return computedWidthOrHeight;\n        }\n        currentDimensions() {\n            return {\n                width: this.currentDimension('width'),\n                height: this.currentDimension('height')\n            };\n        }\n        currentWidth() {\n            return this.currentDimension('width');\n        }\n        currentHeight() {\n            return this.currentDimension('height');\n        }\n/*\n        focus() {\n            this.el_.focus();\n        }\n        blur() {\n            this.el_.blur();\n        }\n*/\n        handleKeyDown(event) {\n            if (this.player_) {\n                event.stopPropagation();\n                this.player_.handleKeyDown(event);\n            }\n        }\n        handleKeyPress(event) {\n            this.handleKeyDown(event);\n        }\n        emitTapEvents() {\n            let touchStart = 0;\n            let firstTouch = null;\n            const tapMovementThreshold = 10;\n            const touchTimeThreshold = 200;\n            let couldBeTap;\n            this.listenTo('touchstart', function (event) {\n                if (event.touches.length === 1) {\n                    firstTouch = {\n                        pageX: event.touches[0].pageX,\n                        pageY: event.touches[0].pageY\n                    };\n                    touchStart = window.performance.now();\n                    couldBeTap = true;\n                }\n            });\n            this.listenTo('touchmove', function (event) {\n                if (event.touches.length > 1) {\n                    couldBeTap = false;\n                } else if (firstTouch) {\n                    const xdiff = event.touches[0].pageX - firstTouch.pageX;\n                    const ydiff = event.touches[0].pageY - firstTouch.pageY;\n                    const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n                    if (touchDistance > tapMovementThreshold) {\n                        couldBeTap = false;\n                    }\n                }\n            });\n            const noTap = function () {\n                couldBeTap = false;\n            };\n            this.listenTo('touchleave', noTap);\n            this.listenTo('touchcancel', noTap);\n            this.listenTo('touchend', function (event) {\n                firstTouch = null;\n                if (couldBeTap === true) {\n                    const touchTime = window.performance.now() - touchStart;\n                    if (touchTime < touchTimeThreshold) {\n                        event.preventDefault();\n                        this.trigger('tap');\n                    }\n                }\n            });\n        }\n        enableTouchActivity() {\n            if (!this.player() || !this.player().reportUserActivity) {\n                return;\n            }\n            const report = Fn.bind(this.player(), this.player().reportUserActivity);\n            let touchHolding;\n            this.listenTo('touchstart', function () {\n                report();\n                this.clearInterval(touchHolding);\n                touchHolding = this.setInterval(report, 250);\n            });\n            const touchEnd = function (event) {\n                report();\n                this.clearInterval(touchHolding);\n            };\n            this.listenTo('touchmove', report);\n            this.listenTo('touchend', touchEnd);\n            this.listenTo('touchcancel', touchEnd);\n        }\n        setTimeout(fn, timeout) {\n            var timeoutId, disposeFn;\n            fn = Fn.bind(this, fn);\n            this.clearTimersOnDispose_();\n            timeoutId = window.setTimeout(() => {\n                if (this.setTimeoutIds_.has(timeoutId)) {\n                    this.setTimeoutIds_.delete(timeoutId);\n                }\n                fn();\n            }, timeout);\n            this.setTimeoutIds_.add(timeoutId);\n            return timeoutId;\n        }\n        clearTimeout(timeoutId) {\n            if (this.setTimeoutIds_.has(timeoutId)) {\n                this.setTimeoutIds_.delete(timeoutId);\n                window.clearTimeout(timeoutId);\n            }\n            return timeoutId;\n        }\n        setInterval(fn, interval) {\n            fn = Fn.bind(this, fn);\n            this.clearTimersOnDispose_();\n            const intervalId = window.setInterval(fn, interval);\n            this.setIntervalIds_.add(intervalId);\n            return intervalId;\n        }\n        clearInterval(intervalId) {\n            if (this.setIntervalIds_.has(intervalId)) {\n                this.setIntervalIds_.delete(intervalId);\n                window.clearInterval(intervalId);\n            }\n            return intervalId;\n        }\n        requestAnimationFrame(fn) {\n            if (!this.supportsRaf_) {\n                return this.setTimeout(fn, 1000 / 60);\n            }\n            this.clearTimersOnDispose_();\n            var id;\n            fn = Fn.bind(this, fn);\n            id = window.requestAnimationFrame(() => {\n                if (this.rafIds_.has(id)) {\n                    this.rafIds_.delete(id);\n                }\n                fn();\n            });\n            this.rafIds_.add(id);\n            return id;\n        }\n        requestNamedAnimationFrame(name, fn) {\n            if (this.namedRafs_.has(name)) {\n                return;\n            }\n            this.clearTimersOnDispose_();\n            fn = Fn.bind(this, fn);\n            const id = this.requestAnimationFrame(() => {\n                fn();\n                if (this.namedRafs_.has(name)) {\n                    this.namedRafs_.delete(name);\n                }\n            });\n            this.namedRafs_.set(name, id);\n            return name;\n        }\n        cancelNamedAnimationFrame(name) {\n            if (!this.namedRafs_.has(name)) {\n                return;\n            }\n            this.cancelAnimationFrame(this.namedRafs_.get(name));\n            this.namedRafs_.delete(name);\n        }\n        cancelAnimationFrame(id) {\n            if (!this.supportsRaf_) {\n                return this.clearTimeout(id);\n            }\n            if (this.rafIds_.has(id)) {\n                this.rafIds_.delete(id);\n                window.cancelAnimationFrame(id);\n            }\n            return id;\n        }\n        clearTimersOnDispose_() {\n            if (this.clearingTimersOnDispose_) {\n                return;\n            }\n            this.clearingTimersOnDispose_ = true;\n            this.listenToOnce('dispose', () => {\n                [\n                    [\n                        'namedRafs_',\n                        'cancelNamedAnimationFrame'\n                    ],\n                    [\n                        'rafIds_',\n                        'cancelAnimationFrame'\n                    ],\n                    [\n                        'setTimeoutIds_',\n                        'clearTimeout'\n                    ],\n                    [\n                        'setIntervalIds_',\n                        'clearInterval'\n                    ]\n                ].forEach(([idName, cancelName]) => {\n                    this[idName].forEach((val, key) => this[cancelName](key));\n                });\n                this.clearingTimersOnDispose_ = false;\n            });\n        }\n        static registerComponent(name, ComponentToRegister) {\n            if (typeof name !== 'string' || !name) {\n                throw new Error(`Illegal component name, \"${ name }\"; must be a non-empty string.`);\n            }\n            const Tech = Component.getComponent('Tech');\n            const isTech = Tech && Tech.isTech(ComponentToRegister);\n            const isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n            if (isTech || !isComp) {\n                let reason;\n                if (isTech) {\n                    reason = 'techs must be registered using Tech.registerTech()';\n                } else {\n                    reason = 'must be a Component subclass';\n                }\n                throw new Error(`Illegal component, \"${ name }\"; ${ reason }.`);\n            }\n            name = stringCases.toTitleCase(name);\n            if (!Component.components_) {\n                Component.components_ = {};\n            }\n            const Player = Component.getComponent('Player');\n            if (name === 'Player' && Player && Player.players) {\n                const players = Player.players;\n                const playerNames = Object.keys(players);\n                if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n                    throw new Error('Can not register Player component after player has been created.');\n                }\n            }\n            Component.components_[name] = ComponentToRegister;\n            Component.components_[stringCases.toLowerCase(name)] = ComponentToRegister;\n            return ComponentToRegister;\n        }\n        static getComponent(name) {\n            if (!name || !Component.components_) {\n                return;\n            }\n            return Component.components_[name];\n        }\n    }\n\n    Component.prototype.getAttribute = Component.prototype.getAttr;\n    Component.prototype.setAttribute = Component.prototype.getAttr;\n    Component.prototype.removeAttribute = Component.prototype.removeAttr;\n\n\n    Component.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n    Component.registerComponent('Component', Component);\n    return Component;\n});"]}