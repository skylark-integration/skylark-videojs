{"version":3,"sources":["component.js"],"names":["define","langx","eventer","Widget","evented","stateful","Dom","DomData","Fn","Guid","stringCases","mergeOptions","computedStyle","Map","Set","Component","[object Object]","events","selector","data","callback","ctx","one","this","el_","isNativeEvent","on","super","off","obj","event","isString","isArray","nodeType","listenTo","unlistenTo","player","options","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","el","newGUID","name_","name","createEl","handleLanguagechange","bind","constructor","defaultState","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","length","trigger","type","bubbles","i","dispose","parentNode","removeChild","clear","Boolean","tagName","properties","attributes","string","tokens","defaultValue","code","language","languages","primaryCode","split","primaryLang","localizedString","replace","match","index","value","ret","contentEl_","names","reduce","acc","n","concat","currentChild","getChild","child","component","componentName","toTitleCase","componentClassName","componentClass","ComponentClass","getComponent","Error","splice","toLowerCase","refNode","isEl","contentEl","insertBefore","childFound","compEl","children","parentOptions","handleAdd","opts","undefined","playerOptions","newChild","addChild","workingChildren","Tech","Array","Object","keys","filter","some","wchild","map","c","isTech","forEach","fn","sync","isReady_","call","setTimeout","push","readyQueue","context","$","$$","classToCheck","hasClass","classToAdd","addClass","classToRemove","removeClass","classToToggle","predicate","toggleClass","attribute","getAttribute","setAttribute","removeAttribute","num","skipListeners","dimension","width","height","widthOrHeight","indexOf","style","val","pxIndex","parseInt","slice","computedWidthOrHeight","parseFloat","isNaN","rule","currentDimension","focus","blur","stopPropagation","handleKeyDown","touchStart","firstTouch","couldBeTap","touches","pageX","pageY","window","performance","now","xdiff","ydiff","Math","sqrt","noTap","preventDefault","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeout","timeoutId","clearTimersOnDispose_","has","delete","add","clearTimeout","interval","intervalId","supportsRaf_","requestAnimationFrame","set","cancelAnimationFrame","get","listenToOnce","idName","cancelName","key","ComponentToRegister","isComp","prototype","isPrototypeOf","reason","components_","Player","players","playerNames","pname","every","registerComponent"],"mappings":"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","file":"../component.js","sourcesContent":["define([\n    \"skylark-langx\",\n    \"skylark-domx-eventer\",\n    \"skylark-widgets-base/Widget\",\n    './mixins/evented',\n    './mixins/stateful',\n    './utils/dom',\n    './utils/dom-data',\n    './utils/fn',\n    './utils/guid',\n    './utils/string-cases',\n    './utils/merge-options',\n    './utils/computed-style',\n    './utils/map',\n    './utils/set'\n], function (langx,eventer,Widget,evented, stateful, Dom, DomData, Fn, Guid, stringCases, mergeOptions, computedStyle, Map, Set) {\n    'use strict';\n    class Component extends Widget {\n        on(events, selector, data, callback, ctx, /*used internally*/ one) {\n            if (this.el_ && eventer.isNativeEvent(events)) {\n                eventer.on(this.el_,events,selector,data,callback,ctx,one);\n            } else {\n                super.on(events, selector, data, callback, ctx,  one);\n            }\n        }   \n\n        off(events, callback) {\n            if (this.el_ && eventer.isNativeEvent(events)) {\n                eventer.off(this.el_,events,callback);\n            } else {\n                super.off(events,callback);\n            }\n        }\n\n        listenTo (obj, event, callback, /*used internally*/ one) {\n            if (langx.isString(obj) || langx.isArray(obj)) {\n                one = callback;\n                callback = event;\n                event = obj;\n                if (this.el_ && eventer.isNativeEvent(event)) {\n                    eventer.on(this.el_,event,callback,this,one);\n                } else {\n                    this.on(event,callback,this,one);\n                }\n            } else {\n                if (obj.nodeType) {\n                    eventer.on(obj,event,callback,this,one)\n                } else {\n                    super.listenTo(obj,event,callback,one)\n                }                \n            }\n        }\n\n        unlistenTo(obj, event, callback) {\n            if (langx.isString(obj) || langx.isArray(obj)) {\n                callback = event;\n                event = obj;\n                if (this.el_ && eventer.isNativeEvent(event)) {\n                    eventer.off(this.el_,event,callback);\n                } else {\n                    this.off(event,callback);                   \n                }\n            } else {\n                if (obj.nodeType) {\n                    eventer.off(obj,event,callback)\n                } else {\n                    super.unlistenTo(obj,event,callback)\n                }\n            }\n        }\n\n        _create() {\n\n        }\n\n\n        _construct(player, options, ready) {\n            /*\n            var el;\n            if (options.el) {\n               el = options.el;\n            } else if (options.createEl !== false) {\n                el = this.createEl();\n            }\n            super(el);\n            */\n\n            if (!player && this.play) {\n                this.player_ = player = this;\n            } else {\n                this.player_ = player;\n            }\n            this.isDisposed_ = false;\n            this.parentComponent_ = null;\n            this.options_ = mergeOptions({}, this.options_);\n            options = this.options_ = mergeOptions(this.options_, options);\n            this.id_ = options.id || options.el && options.el.id;\n            if (!this.id_) {\n                const id = player && player.id && player.id() || 'no_player';\n                this.id_ = `${ id }_component_${ Guid.newGUID() }`;\n            }\n            this.name_ = options.name || null;\n            if (options.el) {\n               this.el_ = options.el;\n            } else if (options.createEl !== false) {\n                this.el_ = this.createEl();\n            }\n            //this.el_ = this._elm;\n\n            if (options.evented !== false) {\n                ///evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n                this.handleLanguagechange = this.handleLanguagechange.bind(this);\n                ///this.listenTo(this.player_, 'languagechange', this.handleLanguagechange);\n                this.listenTo(this.player_, 'languagechange', this.handleLanguagechange);\n            }\n\n\n            stateful(this, this.constructor.defaultState);\n            this.children_ = [];\n            this.childIndex_ = {};\n            this.childNameIndex_ = {};\n            this.setTimeoutIds_ = new Set();\n            this.setIntervalIds_ = new Set();\n            this.rafIds_ = new Set();\n            this.namedRafs_ = new Map();\n            this.clearingTimersOnDispose_ = false;\n            if (options.initChildren !== false) {\n                this.initChildren();\n            }\n            this.ready(ready);\n            if (options.reportTouchActivity !== false) {\n                this.enableTouchActivity();\n            }\n        }\n        dispose() {\n            if (this.isDisposed_) {\n                return;\n            }\n            if (this.readyQueue_) {\n                this.readyQueue_.length = 0;\n            }\n            this.trigger({\n                type: 'dispose',\n                bubbles: false\n            });\n            this.isDisposed_ = true;\n            if (this.children_) {\n                for (let i = this.children_.length - 1; i >= 0; i--) {\n                    if (this.children_[i].dispose) {\n                        this.children_[i].dispose();\n                    }\n                }\n            }\n            this.children_ = null;\n            this.childIndex_ = null;\n            this.childNameIndex_ = null;\n            this.parentComponent_ = null;\n            if (this.el_) {\n                if (this.el_.parentNode) {\n                    this.el_.parentNode.removeChild(this.el_);\n                }\n                ///if (DomData.has(this.el_)) {\n                ///    DomData.delete(this.el_);\n                ///}\n                eventer.clear(this.el_);\n                this.el_ = null;\n            }\n            this.player_ = null;\n        }\n        isDisposed() {\n            return Boolean(this.isDisposed_);\n        }\n        player() {\n            return this.player_;\n        }\n        options(obj) {\n            if (!obj) {\n                return this.options_;\n            }\n            this.options_ = mergeOptions(this.options_, obj);\n            return this.options_;\n        }\n        el() {\n            return this.el_;\n        }\n        createEl(tagName, properties, attributes) {\n            return Dom.createEl(tagName, properties, attributes);\n        }\n        localize(string, tokens, defaultValue = string) {\n            const code = this.player_.language && this.player_.language();\n            const languages = this.player_.languages && this.player_.languages();\n            const language = languages && languages[code];\n            const primaryCode = code && code.split('-')[0];\n            const primaryLang = languages && languages[primaryCode];\n            let localizedString = defaultValue;\n            if (language && language[string]) {\n                localizedString = language[string];\n            } else if (primaryLang && primaryLang[string]) {\n                localizedString = primaryLang[string];\n            }\n            if (tokens) {\n                localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n                    const value = tokens[index - 1];\n                    let ret = value;\n                    if (typeof value === 'undefined') {\n                        ret = match;\n                    }\n                    return ret;\n                });\n            }\n            return localizedString;\n        }\n        handleLanguagechange() {\n        }\n        contentEl() {\n            return this.contentEl_ || this.el_;\n        }\n        id() {\n            return this.id_;\n        }\n        name() {\n            return this.name_;\n        }\n        children() {\n            return this.children_;\n        }\n        getChildById(id) {\n            return this.childIndex_[id];\n        }\n        getChild(name) {\n            if (!name) {\n                return;\n            }\n            return this.childNameIndex_[name];\n        }\n        getDescendant(...names) {\n            names = names.reduce((acc, n) => acc.concat(n), []);\n            let currentChild = this;\n            for (let i = 0; i < names.length; i++) {\n                currentChild = currentChild.getChild(names[i]);\n                if (!currentChild || !currentChild.getChild) {\n                    return;\n                }\n            }\n            return currentChild;\n        }\n        addChild(child, options = {}, index = this.children_.length) {\n            let component;\n            let componentName;\n            if (typeof child === 'string') {\n                componentName = stringCases.toTitleCase(child);\n                const componentClassName = options.componentClass || componentName;\n                options.name = componentName;\n                const ComponentClass = Component.getComponent(componentClassName);\n                if (!ComponentClass) {\n                    throw new Error(`Component ${ componentClassName } does not exist`);\n                }\n                if (typeof ComponentClass !== 'function') {\n                    return null;\n                }\n                component = new ComponentClass(this.player_ || this, options);\n            } else {\n                component = child;\n            }\n            if (component.parentComponent_) {\n                component.parentComponent_.removeChild(component);\n            }\n            this.children_.splice(index, 0, component);\n            component.parentComponent_ = this;\n            if (typeof component.id === 'function') {\n                this.childIndex_[component.id()] = component;\n            }\n            componentName = componentName || component.name && stringCases.toTitleCase(component.name());\n            if (componentName) {\n                this.childNameIndex_[componentName] = component;\n                this.childNameIndex_[stringCases.toLowerCase(componentName)] = component;\n            }\n            if (typeof component.el === 'function' && component.el()) {\n                let refNode = null;\n                if (this.children_[index + 1]) {\n                    if (this.children_[index + 1].el_) {\n                        refNode = this.children_[index + 1].el_;\n                    } else if (Dom.isEl(this.children_[index + 1])) {\n                        refNode = this.children_[index + 1];\n                    }\n                }\n                this.contentEl().insertBefore(component.el(), refNode);\n            }\n            return component;\n        }\n        removeChild(component) {\n            if (typeof component === 'string') {\n                component = this.getChild(component);\n            }\n            if (!component || !this.children_) {\n                return;\n            }\n            let childFound = false;\n            for (let i = this.children_.length - 1; i >= 0; i--) {\n                if (this.children_[i] === component) {\n                    childFound = true;\n                    this.children_.splice(i, 1);\n                    break;\n                }\n            }\n            if (!childFound) {\n                return;\n            }\n            component.parentComponent_ = null;\n            this.childIndex_[component.id()] = null;\n            this.childNameIndex_[stringCases.toTitleCase(component.name())] = null;\n            this.childNameIndex_[stringCases.toLowerCase(component.name())] = null;\n            const compEl = component.el();\n            if (compEl && compEl.parentNode === this.contentEl()) {\n                this.contentEl().removeChild(component.el());\n            }\n        }\n        initChildren() {\n            const children = this.options_.children;\n            if (children) {\n                const parentOptions = this.options_;\n                const handleAdd = child => {\n                    const name = child.name;\n                    let opts = child.opts;\n                    if (parentOptions[name] !== undefined) {\n                        opts = parentOptions[name];\n                    }\n                    if (opts === false) {\n                        return;\n                    }\n                    if (opts === true) {\n                        opts = {};\n                    }\n                    opts.playerOptions = this.options_.playerOptions;\n                    const newChild = this.addChild(name, opts);\n                    if (newChild) {\n                        this[name] = newChild;\n                    }\n                };\n                let workingChildren;\n                const Tech = Component.getComponent('Tech');\n                if (Array.isArray(children)) {\n                    workingChildren = children;\n                } else {\n                    workingChildren = Object.keys(children);\n                }\n                workingChildren.concat(Object.keys(this.options_).filter(function (child) {\n                    return !workingChildren.some(function (wchild) {\n                        if (typeof wchild === 'string') {\n                            return child === wchild;\n                        }\n                        return child === wchild.name;\n                    });\n                })).map(child => {\n                    let name;\n                    let opts;\n                    if (typeof child === 'string') {\n                        name = child;\n                        opts = children[name] || this.options_[name] || {};\n                    } else {\n                        name = child.name;\n                        opts = child;\n                    }\n                    return {\n                        name,\n                        opts\n                    };\n                }).filter(child => {\n                    const c = Component.getComponent(child.opts.componentClass || stringCases.toTitleCase(child.name));\n                    return c && !Tech.isTech(c);\n                }).forEach(handleAdd);\n            }\n        }\n        buildCSSClass() {\n            return '';\n        }\n        ready(fn, sync = false) {\n            if (!fn) {\n                return;\n            }\n            if (!this.isReady_) {\n                this.readyQueue_ = this.readyQueue_ || [];\n                this.readyQueue_.push(fn);\n                return;\n            }\n            if (sync) {\n                fn.call(this);\n            } else {\n                this.setTimeout(fn, 1);\n            }\n        }\n        triggerReady() {\n            this.isReady_ = true;\n            this.setTimeout(function () {\n                const readyQueue = this.readyQueue_;\n                this.readyQueue_ = [];\n                if (readyQueue && readyQueue.length > 0) {\n                    readyQueue.forEach(function (fn) {\n                        fn.call(this);\n                    }, this);\n                }\n                this.trigger('ready');\n            }, 1);\n        }\n        $(selector, context) {\n            return Dom.$(selector, context || this.contentEl());\n        }\n        $$(selector, context) {\n            return Dom.$$(selector, context || this.contentEl());\n        }\n        hasClass(classToCheck) {\n            return Dom.hasClass(this.el_, classToCheck);\n        }\n        addClass(classToAdd) {\n            Dom.addClass(this.el_, classToAdd);\n        }\n        removeClass(classToRemove) {\n            Dom.removeClass(this.el_, classToRemove);\n        }\n        toggleClass(classToToggle, predicate) {\n            Dom.toggleClass(this.el_, classToToggle, predicate);\n        }\n        show() {\n            this.removeClass('vjs-hidden');\n        }\n        hide() {\n            this.addClass('vjs-hidden');\n        }\n        lockShowing() {\n            this.addClass('vjs-lock-showing');\n        }\n        unlockShowing() {\n            this.removeClass('vjs-lock-showing');\n        }\n        getAttribute(attribute) {\n            return Dom.getAttribute(this.el_, attribute);\n        }\n        setAttribute(attribute, value) {\n            Dom.setAttribute(this.el_, attribute, value);\n        }\n        removeAttribute(attribute) {\n            Dom.removeAttribute(this.el_, attribute);\n        }\n        width(num, skipListeners) {\n            return this.dimension('width', num, skipListeners);\n        }\n        height(num, skipListeners) {\n            return this.dimension('height', num, skipListeners);\n        }\n        dimensions(width, height) {\n            this.width(width, true);\n            this.height(height);\n        }\n        dimension(widthOrHeight, num, skipListeners) {\n            if (num !== undefined) {\n                if (num === null || num !== num) {\n                    num = 0;\n                }\n                if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n                    this.el_.style[widthOrHeight] = num;\n                } else if (num === 'auto') {\n                    this.el_.style[widthOrHeight] = '';\n                } else {\n                    this.el_.style[widthOrHeight] = num + 'px';\n                }\n                if (!skipListeners) {\n                    this.trigger('componentresize');\n                }\n                return;\n            }\n            if (!this.el_) {\n                return 0;\n            }\n            const val = this.el_.style[widthOrHeight];\n            const pxIndex = val.indexOf('px');\n            if (pxIndex !== -1) {\n                return parseInt(val.slice(0, pxIndex), 10);\n            }\n            return parseInt(this.el_['offset' + stringCases.toTitleCase(widthOrHeight)], 10);\n        }\n        currentDimension(widthOrHeight) {\n            let computedWidthOrHeight = 0;\n            if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n                throw new Error('currentDimension only accepts width or height value');\n            }\n            computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n            computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n            if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n                const rule = `offset${ stringCases.toTitleCase(widthOrHeight) }`;\n                computedWidthOrHeight = this.el_[rule];\n            }\n            return computedWidthOrHeight;\n        }\n        currentDimensions() {\n            return {\n                width: this.currentDimension('width'),\n                height: this.currentDimension('height')\n            };\n        }\n        currentWidth() {\n            return this.currentDimension('width');\n        }\n        currentHeight() {\n            return this.currentDimension('height');\n        }\n        focus() {\n            this.el_.focus();\n        }\n        blur() {\n            this.el_.blur();\n        }\n        handleKeyDown(event) {\n            if (this.player_) {\n                event.stopPropagation();\n                this.player_.handleKeyDown(event);\n            }\n        }\n        handleKeyPress(event) {\n            this.handleKeyDown(event);\n        }\n        emitTapEvents() {\n            let touchStart = 0;\n            let firstTouch = null;\n            const tapMovementThreshold = 10;\n            const touchTimeThreshold = 200;\n            let couldBeTap;\n            this.listenTo('touchstart', function (event) {\n                if (event.touches.length === 1) {\n                    firstTouch = {\n                        pageX: event.touches[0].pageX,\n                        pageY: event.touches[0].pageY\n                    };\n                    touchStart = window.performance.now();\n                    couldBeTap = true;\n                }\n            });\n            this.listenTo('touchmove', function (event) {\n                if (event.touches.length > 1) {\n                    couldBeTap = false;\n                } else if (firstTouch) {\n                    const xdiff = event.touches[0].pageX - firstTouch.pageX;\n                    const ydiff = event.touches[0].pageY - firstTouch.pageY;\n                    const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n                    if (touchDistance > tapMovementThreshold) {\n                        couldBeTap = false;\n                    }\n                }\n            });\n            const noTap = function () {\n                couldBeTap = false;\n            };\n            this.listenTo('touchleave', noTap);\n            this.listenTo('touchcancel', noTap);\n            this.listenTo('touchend', function (event) {\n                firstTouch = null;\n                if (couldBeTap === true) {\n                    const touchTime = window.performance.now() - touchStart;\n                    if (touchTime < touchTimeThreshold) {\n                        event.preventDefault();\n                        this.trigger('tap');\n                    }\n                }\n            });\n        }\n        enableTouchActivity() {\n            if (!this.player() || !this.player().reportUserActivity) {\n                return;\n            }\n            const report = Fn.bind(this.player(), this.player().reportUserActivity);\n            let touchHolding;\n            this.listenTo('touchstart', function () {\n                report();\n                this.clearInterval(touchHolding);\n                touchHolding = this.setInterval(report, 250);\n            });\n            const touchEnd = function (event) {\n                report();\n                this.clearInterval(touchHolding);\n            };\n            this.listenTo('touchmove', report);\n            this.listenTo('touchend', touchEnd);\n            this.listenTo('touchcancel', touchEnd);\n        }\n        setTimeout(fn, timeout) {\n            var timeoutId, disposeFn;\n            fn = Fn.bind(this, fn);\n            this.clearTimersOnDispose_();\n            timeoutId = window.setTimeout(() => {\n                if (this.setTimeoutIds_.has(timeoutId)) {\n                    this.setTimeoutIds_.delete(timeoutId);\n                }\n                fn();\n            }, timeout);\n            this.setTimeoutIds_.add(timeoutId);\n            return timeoutId;\n        }\n        clearTimeout(timeoutId) {\n            if (this.setTimeoutIds_.has(timeoutId)) {\n                this.setTimeoutIds_.delete(timeoutId);\n                window.clearTimeout(timeoutId);\n            }\n            return timeoutId;\n        }\n        setInterval(fn, interval) {\n            fn = Fn.bind(this, fn);\n            this.clearTimersOnDispose_();\n            const intervalId = window.setInterval(fn, interval);\n            this.setIntervalIds_.add(intervalId);\n            return intervalId;\n        }\n        clearInterval(intervalId) {\n            if (this.setIntervalIds_.has(intervalId)) {\n                this.setIntervalIds_.delete(intervalId);\n                window.clearInterval(intervalId);\n            }\n            return intervalId;\n        }\n        requestAnimationFrame(fn) {\n            if (!this.supportsRaf_) {\n                return this.setTimeout(fn, 1000 / 60);\n            }\n            this.clearTimersOnDispose_();\n            var id;\n            fn = Fn.bind(this, fn);\n            id = window.requestAnimationFrame(() => {\n                if (this.rafIds_.has(id)) {\n                    this.rafIds_.delete(id);\n                }\n                fn();\n            });\n            this.rafIds_.add(id);\n            return id;\n        }\n        requestNamedAnimationFrame(name, fn) {\n            if (this.namedRafs_.has(name)) {\n                return;\n            }\n            this.clearTimersOnDispose_();\n            fn = Fn.bind(this, fn);\n            const id = this.requestAnimationFrame(() => {\n                fn();\n                if (this.namedRafs_.has(name)) {\n                    this.namedRafs_.delete(name);\n                }\n            });\n            this.namedRafs_.set(name, id);\n            return name;\n        }\n        cancelNamedAnimationFrame(name) {\n            if (!this.namedRafs_.has(name)) {\n                return;\n            }\n            this.cancelAnimationFrame(this.namedRafs_.get(name));\n            this.namedRafs_.delete(name);\n        }\n        cancelAnimationFrame(id) {\n            if (!this.supportsRaf_) {\n                return this.clearTimeout(id);\n            }\n            if (this.rafIds_.has(id)) {\n                this.rafIds_.delete(id);\n                window.cancelAnimationFrame(id);\n            }\n            return id;\n        }\n        clearTimersOnDispose_() {\n            if (this.clearingTimersOnDispose_) {\n                return;\n            }\n            this.clearingTimersOnDispose_ = true;\n            this.listenToOnce('dispose', () => {\n                [\n                    [\n                        'namedRafs_',\n                        'cancelNamedAnimationFrame'\n                    ],\n                    [\n                        'rafIds_',\n                        'cancelAnimationFrame'\n                    ],\n                    [\n                        'setTimeoutIds_',\n                        'clearTimeout'\n                    ],\n                    [\n                        'setIntervalIds_',\n                        'clearInterval'\n                    ]\n                ].forEach(([idName, cancelName]) => {\n                    this[idName].forEach((val, key) => this[cancelName](key));\n                });\n                this.clearingTimersOnDispose_ = false;\n            });\n        }\n        static registerComponent(name, ComponentToRegister) {\n            if (typeof name !== 'string' || !name) {\n                throw new Error(`Illegal component name, \"${ name }\"; must be a non-empty string.`);\n            }\n            const Tech = Component.getComponent('Tech');\n            const isTech = Tech && Tech.isTech(ComponentToRegister);\n            const isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n            if (isTech || !isComp) {\n                let reason;\n                if (isTech) {\n                    reason = 'techs must be registered using Tech.registerTech()';\n                } else {\n                    reason = 'must be a Component subclass';\n                }\n                throw new Error(`Illegal component, \"${ name }\"; ${ reason }.`);\n            }\n            name = stringCases.toTitleCase(name);\n            if (!Component.components_) {\n                Component.components_ = {};\n            }\n            const Player = Component.getComponent('Player');\n            if (name === 'Player' && Player && Player.players) {\n                const players = Player.players;\n                const playerNames = Object.keys(players);\n                if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n                    throw new Error('Can not register Player component after player has been created.');\n                }\n            }\n            Component.components_[name] = ComponentToRegister;\n            Component.components_[stringCases.toLowerCase(name)] = ComponentToRegister;\n            return ComponentToRegister;\n        }\n        static getComponent(name) {\n            if (!name || !Component.components_) {\n                return;\n            }\n            return Component.components_[name];\n        }\n    }\n    Component.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n    Component.registerComponent('Component', Component);\n    return Component;\n});"]}