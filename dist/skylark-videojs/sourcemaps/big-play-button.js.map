{"version":3,"sources":["big-play-button.js"],"names":["define","Button","Component","promise","browser","BigPlayButton","[object Object]","player","options","super","this","mouseused_","listenTo","handleMouseDown","event","playPromise","player_","play","clientX","clientY","sourceIsEncrypted","usingPlugin","eme","sessions","length","silencePromise","tech","IE_VERSION","IS_EDGE","focus","cb","getChild","playToggle","playFocus","isPromise","then","setTimeout","handleKeyDown","prototype","controlText_","registerComponent"],"mappings":";;;;;;;AAAAA,QACI,WACA,cACA,kBACA,mBACD,SAAUC,EAAQC,EAAWC,EAASC,GACrC,mBACMC,UAAsBJ,EACxBK,YAAYC,EAAQC,GAChBC,MAAMF,EAAQC,GACdE,KAAKC,YAAa,EAClBD,KAAKE,SAAS,YAAaF,KAAKG,iBAEpCP,gBACI,MAAO,sBAEXA,YAAYQ,GACR,MAAMC,EAAcL,KAAKM,QAAQC,OACjC,GAAIP,KAAKC,YAAcG,EAAMI,SAAWJ,EAAMK,QAAS,CACnD,MAAMC,EAAoBV,KAAKM,QAAQK,YAAY,QAAUX,KAAKM,QAAQM,IAAIC,UAAYb,KAAKM,QAAQM,IAAIC,SAASC,OAAS,EAK7H,OAJArB,EAAQsB,eAAeV,SACnBL,KAAKM,QAAQU,MAAK,KAAYtB,EAAQuB,YAAcvB,EAAQwB,UAAYR,GACxEV,KAAKM,QAAQU,MAAK,GAAMG,SAIhC,MAAMC,EAAKpB,KAAKM,QAAQe,SAAS,cAC3BC,EAAaF,GAAMA,EAAGC,SAAS,cACrC,IAAKC,EAED,YADAtB,KAAKM,QAAQU,MAAK,GAAMG,QAG5B,MAAMI,EAAY,IAAMD,EAAWH,QAC/B1B,EAAQ+B,UAAUnB,GAClBA,EAAYoB,KAAKF,EAAW,QAG5BvB,KAAK0B,WAAWH,EAAW,GAGnC3B,cAAcQ,GACVJ,KAAKC,YAAa,EAClBF,MAAM4B,cAAcvB,GAExBR,gBAAgBQ,GACZJ,KAAKC,YAAa,GAK1B,OAFAN,EAAciC,UAAUC,aAAe,aACvCrC,EAAUsC,kBAAkB,gBAAiBnC,GACtCA","file":"../big-play-button.js","sourcesContent":["define([\n    './button',\n    './component',\n    './utils/promise',\n    './utils/browser'\n], function (Button, Component, promise, browser) {\n    'use strict';\n    class BigPlayButton extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.mouseused_ = false;\n            this.listenTo('mousedown', this.handleMouseDown);\n        }\n        buildCSSClass() {\n            return 'vjs-big-play-button';\n        }\n        handleClick(event) {\n            const playPromise = this.player_.play();\n            if (this.mouseused_ && event.clientX && event.clientY) {\n                const sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n                promise.silencePromise(playPromise);\n                if (this.player_.tech(true) && !((browser.IE_VERSION || browser.IS_EDGE) && sourceIsEncrypted)) {\n                    this.player_.tech(true).focus();\n                }\n                return;\n            }\n            const cb = this.player_.getChild('controlBar');\n            const playToggle = cb && cb.getChild('playToggle');\n            if (!playToggle) {\n                this.player_.tech(true).focus();\n                return;\n            }\n            const playFocus = () => playToggle.focus();\n            if (promise.isPromise(playPromise)) {\n                playPromise.then(playFocus, () => {\n                });\n            } else {\n                this.setTimeout(playFocus, 1);\n            }\n        }\n        handleKeyDown(event) {\n            this.mouseused_ = false;\n            super.handleKeyDown(event);\n        }\n        handleMouseDown(event) {\n            this.mouseused_ = true;\n        }\n    }\n    BigPlayButton.prototype.controlText_ = 'Play Video';\n    Component.registerComponent('BigPlayButton', BigPlayButton);\n    return BigPlayButton;\n});"]}