{"version":3,"sources":["skylark-videojs.js"],"names":["define","skylark","types","objects","arrays","funcs","Deferred","Evented","http","each","mixin","noop","isArray","isFunction","isPlainObject","type","getAbsoluteUrl","url","a","document","createElement","href","Xhr","jsonpID","key","name","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","async","beforeSend","success","error","complete","context","global","accepts","script","json","xml","html","text","crossDomain","timeout","processData","cache","traditional","xhrFields","withCredentials","mimeToDataType","mime","split","test","appendQuery","query","replace","serializeData","options","data","param","toUpperCase","undefined","serialize","params","obj","scope","t","array","hash","value","add","this","push","encodeURIComponent","join","inherit","klassName","_request","args","_","self","xhr","XMLHttpRequest","call","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","deferred","contentType","indexOf","overrideMimeType","responseType","finish","onloadend","onabort","onprogress","ontimeout","result","status","startsWith","getResponseHeader","eval","responseText","responseXML","JSON","parse","response","reponse","e","reject","resolve","Error","statusText","evt","notify","open","toLowerCase","setRequestHeader","send","promise","abort","request","get","post","patch","put","del","init","forEach","defaultOptions","history","createLogger","logByType","level","log","lvl","levels","lvlRegExp","RegExp","unshift","concat","splice","length","window","console","fn","info","Array","LogByTypeFactory","subname","all","off","debug","warn","DEFAULT","hasOwnProperty","filter","fname","historyItem","clear","disable","enable","langx","object","reduce","assign","isObject","isPlain","styler","css","isReal","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPOD","IOS_VERSION","match","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","version","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","Boolean","maxTouchPoints","DocumentTouch","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI","domx","computedStyle","browser","isNonBlankString","str","trim","isEl","nodeType","createQuerier","method","selector","querySelector","ctx","findPosition","el","offsetParent","left","top","width","height","offsetWidth","offsetHeight","noder","isFullscreen","offsetLeft","offsetTop","normalizeContent","content","map","createTextNode","isElement","isInFrame","createEl","tagName","properties","attributes","append","textContent","prependTo","child","parent","prepend","hasClass","addClass","removeClass","toggleClass","toogleClass","setAttributes","attr","getAttributes","tag","knownBooleans","attrs","i","attrName","attrVal","getAttribute","setAttribute","removeAttribute","removeAttr","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","geom","pageRect","getPointerPosition","event","translated","x","y","item","nodeName","transform","values","slice","Number","position","boxTarget","target","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","Math","max","min","isTextNode","emptyEl","empty","appendContent","insertContent","isSingleLeftClick","button","buttons","$","finder","find","$$","findAll","Dom","videojs","_windowLoaded","autoSetup","vids","prototype","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","hasLoaded","createStyleElement","className","style","setTextContent","styleSheet","cssText","Obj","StatefulMixin","state","[object Object]","stateUpdates","changes","from","to","trigger","defaultState","handleStateChanged","on","_initialGuid","_guid","newGUID","resetGuidInTestsOnly","Guid","FakeWeakMap","WeakMap","vdata","floor","performance","now","Date","access","GUID","UPDATE_REFRESH_INTERVAL","bind","uid","guid","bound","throttle","debounce","toTitleCase","string","w","titleCaseEquals","str1","str2","mergeOptions","sources","source","Map","map_","has","callback","thisArg","Set","set_","eventer","Widget","stateful","DomData","Fn","stringCases","NativeEvents","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","submit","reset","fullscreenchange","fullscreenerror","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","progress","textInput","tap","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","Component","events","isString","one","el_","isNativeEvent","super","listenTo","unlistenTo","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","name_","evented","handleLanguagechange","constructor","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","bubbles","dispose","removeChild","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","index","ret","contentEl_","names","acc","n","currentChild","getChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","contentEl","insertBefore","childFound","compEl","children","parentOptions","handleAdd","opts","playerOptions","newChild","addChild","workingChildren","Tech","Object","keys","some","wchild","c","isTech","sync","isReady_","readyQueue","classToCheck","classToAdd","classToRemove","classToToggle","predicate","attribute","num","skipListeners","dimension","widthOrHeight","val","pxIndex","parseInt","computedWidthOrHeight","isNaN","rule","currentDimension","stopPropagation","handleKeyDown","touchStart","firstTouch","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","preventDefault","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","delete","clearTimeout","interval","intervalId","supportsRaf_","requestAnimationFrame","set","cancelAnimationFrame","listenToOnce","idName","cancelName","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","every","registerComponent","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","old","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","documentElement","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","any","Emitter","Events","EventTarget","EVENT_MAP","dispatchEvent","queueTrigger","oldTimeout","size","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","start","end","createTimeRanges","timeRages","bufferedPercent","buffered","duration","bufferedDuration","createTimeRange","support","fullscreen","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","reviver","err","isPromise","then","silencePromise","trackToJson_","track","prop","cues","cue","startTime","endTime","textTracksToJson","tech","trackEls","trackObjs","trackEl","src","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","searchInput","hasKeyCode","search","String","foundNamedKey","codes","aliases","charCodeAt","isEventKey","nameOrCode","exports","backspace","tab","enter","shift","ctrl","alt","pause/break","caps lock","esc","space","page up","page down","home","up","right","down","insert","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","option","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","cmd","fromCharCode","title","alias","keycode","MODAL_CLASS_NAME","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","appendChild","buildCSSClass","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","localize","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","controls","show","conditionalFocus_","hide","conditionalBlur_","temporary","closeable_","close","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","closeButton","content_","activeEl","activeElement","playerEl","contains","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","tracks","tracks_","defineProperty","addTrack","labelchange_","rtrack","l","allowedEvents_","addtrack","removetrack","labelchange","disableOthers","list","enabled","changing_","enabledChange_","removeTrack","selected","selectedChange_","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","trackElements","trackElements_","addTrackElement_","trackElement","trackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","disabled","hidden","showing","trackProps","newLabel","parseUrl","props","addToBody","host","protocol","div","innerHTML","firstChild","details","location","getAbsoluteURL","getFileExtension","path","splitPathRe","pathParts","isCrossOrigin","winLoc","urlInfo","_Xhr","parseHeaders","row","initParams","uri","createXHR","_createXHR","called","errorFunc","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","useXDR","firefoxBugTakenEffect","getXml","isJson","getBody","rawRequest","getAllResponseHeaders","cors","XDomainRequest","stringify","onreadystatechange","onload","onerror","username","isEmpty","iterator","forEachArray","catch","vtt","TrackEnums","Track","XHR","merge","parseCues","srcContent","parser","WebVTT","Parser","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","tech_","responseBody","loaded_","TextTrack","settings","srclang","mode","default_","default","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","isDisposed","defineProperties","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","cuechange","newEnabled","newSelected","NONE","LOADED","HTMLTrackElement","LOADING","ERROR","AudioTrackList","VideoTrackList","TextTrackList","HtmlTrackElementList","AudioTrack","VideoTrack","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","buffer","TRACK_TYPES","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","emitTapEvents","triggerSourceset","listenToDurationChange","manualProgress","trackProgress","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","currentTimeInterval","manuallyTriggered","clearTracks","manualProgressOff","manualTimeUpdatesOff","removeRemoteTextTrack","error_","trackListChanges","addWebVttScript_","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","createTrackHelper","manualCleanup","htmlTrackElement","createRemoteTextTrack","remoteTextTrackEls","getTrackElementByTrack_","removeTrackElement_","PromiseClass","Promise","srcObj","canPlayType","techs_","canPlaySource","defaultTechOrder_","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","handlers","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","apply","arguments","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","cleanupAutoTextTracks","registerTech","middlewares","middlewareInstances","TERMINATOR","middlewareIterator","mw","setSourceHelper","middleware","next","lastRun","mwFactory","mwrest","mws","mwf","mwi","getOrCreateFactory","_src","use","getMiddleware","setTech","reduceRight","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","muted","played","seekable","volume","allowedSetters","setCurrentTime","setMuted","setVolume","allowedMediators","clearCacheForPlayer","Url","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","s","mimetypes","filterSource","newsrc","srcobj","fixSource","MediaLoader","j","techOrder","techName","getTech","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleMouseOver","handleMouseOut","clickHandler","PosterImage","update","poster","setSrc","backgroundImage","sourceIsEncrypted","usingPlugin","eme","sessions","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","modes","trackList","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","processCues","allowMultipleShowingTracks","clearDisplay","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","cueEl","updateDisplayState","dom","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","m","h","gm","gh","Infinity","implementation","formatTime","setFormatTime","customImplementation","resetFormatTime","TimeDisplay","updateContent","updateTextNode_","labelText_","textNode_","time","formattedTime_","requestNamedAnimationFrame","oldNode","replaceChild","CurrentTimeDisplay","ended","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","number","clamp","Slider","bar","barName","vertical","playerEvent","ownerDocument","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","getProgress","progress_","sizeKey","toFixed","getPercent","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","wrapper","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","round","write","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","updateTime","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","SeekBar","setEventHandlers_","update_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","getCurrentTime_","liveCurrentTime","currentTime_","seekableStart","videoWasPlaying","newTime","distance","calculateDistance","mouseTimeDisplay","handleAction","gotoFraction","thisunlistenTo","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","playProgressBar","seekBarEl","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","pictureInPictureEnabled","disablePictureInPicture","isInPictureInPicture","exitPictureInPicture","requestPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","exitFullscreen","requestFullscreen","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","checkVolumeSupport","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","volumePanelState_","muteToggle","handleKeyPress","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","removeEventListenerForItem","childComponent","addEventListenerForItem","contentElType","element","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","haveTitle","MenuButton","buttonClass","menu","handleMenuKeyUp","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","addItem","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","lockShowing","unlockShowing","TrackButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","allHidden","TextTrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","ControlBar","ErrorDisplay","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","legendId","selectLabelledbyIds","o","optionId","createElSelect_","createElFgColor_","createElBgColor_","createElWinColor_","defaultsDescription","createElColors_","createElFont_","createElControls_","accum","selectedIndex","setSelectedOption","localStorage","getItem","setValues","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","cancel","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","abs","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","trackLive_","handleFirstTimeupdate","timeDiff","skipNextSeeked_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","innerText","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","enumerable","configurable","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","getValue","setter","writable","setupSourceset","defineLazyProperty","canplay","canplaythrough","disablepictureinpicturechanged","durationchange","emptied","enterpictureinpicture","leavepictureinpicture","loadeddata","loadstart","loadedmetadata","playing","posterchange","ratechange","seeking","seeked","sourceset","stalled","suspend","textdata","texttrackchange","timeupdate","volumechange","waiting","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","nodesLength","removeNodes","node","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","triggerReady","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","override","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","overrideNative_","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","listener","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","class","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","webkitEnterFullScreen","HAVE_METADATA","webkitDisplayingFullscreen","resetMediaElement","addTextTrack","getVideoPlaybackQuality","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","patchCanPlayType","unpatchCanPlayType","r","stylesheet","FullscreenApi","safeParseTuple","textTrackConverter","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","languagesToLower","getOwnPropertyNames","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","crossorigin","links","linkEl","techGet_","techCall_","privDimension","parsedVal","ratio","aspectRatio_","width_","height_","techEl","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","techOptions","playsinline","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","manualAutoplay_","previouslyMuted","restoreMuted","mutedPromise","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","updateSourceCaches_","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","starttime","inAllowedEls","userActions","doubleClick","userWasActive","cancelable","targetPlayer","isFs","fullscreenElement","matches","msMatchesSelector","initTime","inactivityTimeout","defaultPlaybackRate","media","play_","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","applyInitTime_","percentAsDecimal","defaultMuted","isFS","oldValue","prefixed","toggleFullscreenClass_","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","fsOptions","supportsFullScreen","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","togglePictureInPictureClass_","hotkeys","isContentEditable","excludeElement","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","sourceOrder","b","flip","middlewareSource","src_","notSupportedMessage","sourceTech","selectSource","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","durationDisplay","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","modal","currentBreakpoint","currentWidth","candidateBreakpoint","maxWidth","breakpoints_","breakpoint_","currentBreakpointClass","updateCurrentBreakpoint_","responsive_","current","removeCurrentBreakpoint_","artwork","tt","currentSources","baseOptions","tagOptions","dataSetup","childName","elem","previousLogLevel_","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","instance","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","p","isBasic","registerPlugin","hasPlugin","setup","timeRanges","middlewareUse","normalizeId","getPlayer","TypeError","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","getAllPlayers","comp","writeable","deregisterPlugin","getPlugins","getPluginVersion","addLanguage","attach"],"mappings":"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C,GACA,OACA,QAEAC,GACA,OACA,SAEAC,GACA,OACA,WAEAC,GACA,OACA,OAEAC,GACA,OACA,SAEAC,GACA,OACA,UAEAC,GACA,IACA,UAEAC,GACA,MACA,oBAEAC,GACA,IACA,eAEAC,GACApT,iBACA79B,SAAA,yBACAiP,GAAA,+BACA6S,MAAA,QACAhsB,SACAw6C,EACAM,EACAD,EACAF,EACAF,EACAM,EACAH,EACAF,IAGA1S,mBACA99B,SAAA,2BACAiP,GAAA,iCACA6S,MAAA,eACAhsB,SACAg7C,EACAC,EACAC,IAGAhV,OACAh8B,SAAA,yBACAiP,GAAA,+BACA6S,MAAA,QACAhsB,SACA86C,EACAN,EACAK,EACAF,EACAF,EACAM,EACAH,EACAF,IAGAvS,WACAj+B,SAAA,2BACAiP,GAAA,KACA6S,MAAA,kBACAhsB,UAEA,OACA,SAGA,SACA,WAGA,YACA,cAGA,UACA,YAGA,aACA,gBAIAuoC,YACAr+B,SAAA,4BACAiP,GAAA,0BACA6S,MAAA,cACAhsB,UAEA,wBACA,4BAGA,qBACA,yBAGA,oBACA,uBAGA,iBACA,oBAGA,SACA,WAGA,SACA,WAGA,aACA,gBAIAqoC,aACAn+B,SAAA,6BACAiP,GAAA,wBACA6S,MAAA,YACAhsB,UAEA,OACA,QAGA,OACA,QAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGAo3B,QAAA,EACArB,OAAAqlB,GAAA,SAAAA,EAAA,KAAA3sC,OAAA2sC,IAEAtT,aACA59B,SAAA,6BACAiP,GAAA,iCACA6S,MAAA,eACAhsB,SACAg7C,EACAC,IAGAhT,aACA/9B,SAAA,6BACAiP,GAAA,2BACA6S,MAAA,SAEAkc,eACAh+B,SAAA,+BACAiP,GAAA,6BACA6S,MAAA,eACAhsB,SACAk7C,EACAD,EACAD,KAKA,SAAAK,EAAAz6C,EAAAm1B,GAIA,GAHAA,IACAn1B,EAAAm1B,EAAAn1B,IAEAA,GAAA,SAAAA,EACA,OAAAA,EANAu6C,EAAAlT,YAAAjoC,QAAAm7C,EAAApT,gBAAA/nC,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AA81B,GACAt6C,KAAAyX,IAAA+M,GAAA81B,MAIA,QACA,OACA,QACAv2C,QAAA,SAAAygB,GACAy+B,EAAArzC,UAAA4U,GAAA,WACA,OAAAxkB,KAAAyX,IAAA+M,QAGA5I,EAAAkhB,mBAAAmmB,GACAA,EAAAplB,uBACAolB,EAAAplB,oBAAAxB,YAAA,SAAAjgC,GACA,IACA,OAAA6mD,EAAAwE,SAAAprB,YAAAjgC,GACA,MAAAuG,GACA,MAAA,KAGAsgD,EAAAplB,oBAAAP,gBAAA,SAAA3pB,EAAAzU,GACA,GAAAyU,EAAAvX,KACA,OAAA6mD,EAAAplB,oBAAAxB,YAAA1oB,EAAAvX,MACA,GAAAuX,EAAAuR,IAAA,CACA,MAAA6c,EAAAvB,EAAArO,iBAAAxe,EAAAuR,KACA,OAAA+9B,EAAAplB,oBAAAxB,qBAAA0F,KAEA,MAAA,IAEAkhB,EAAAplB,oBAAAG,aAAA,SAAArqB,EAAAmR,EAAA5lB,GACA4lB,EAAAmf,OAAAtwB,EAAAuR,MAEA+9B,EAAAplB,oBAAAtkB,QAAA,aAEA0pC,EAAAjmB,sBAAAimB,EAAAplB,qBACAjiB,EAAAsiB,aAAA,QAAA+kB,GACAA,IAEA5nD,OAAA,0BACA,iCACA,eACA,cAEA,iBACA,cACA,aACA,eACA,kBACA,cACA,uBACA,sBACA,iBACA,qBACA,mBACA,gBACA,yBACA,cACA,wBACA,kBACA,qCACA,iBACA,cACA,oBACA,uBACA,wBACA,oBACA,kBACA,gBACA,iBACA,8BACA,oBACA,oBACA,iBACA,4BACA,kBACA,+BACA,mBACA,iBACA,gBACA,SACAmB,EACAkM,EACA2O,EACAyK,EACAvS,EACAgF,EACArC,EACAtJ,EACAvE,EACAmQ,EACAwO,EACAiW,EACAovB,EACAC,EACA9kC,EACA+kC,EACA9oD,EACAgU,EACAnQ,EACAklD,EACAr+B,EACAvO,EACA6iB,EACAvF,EACAoJ,EACAD,EACApY,GAEA,aACA,MAAAw+B,GACA,WACA,QACA,UACA,UACA,UACA,iBACA,aACA,aACA,SACA,eACA,mBAEAC,GACAhH,QAAA,UAC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","file":"../skylark-videojs.js","sourcesContent":["define('skylark-net-http/xhr',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-async/Deferred\",\r\n  \"skylark-langx-emitter/Evented\",\r\n  \"./http\"\r\n],function(skylark,types,objects,arrays,funcs,Deferred,Evented,http){\r\n\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: false,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            traditional : false,\r\n            \r\n            xhrFields : {\r\n                withCredentials : false\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                if (type(options.data) != \"string\") {\r\n                    options.data = param(options.data, options.traditional);\r\n                }\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n        \r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) {\r\n                  value = value();\r\n                }\r\n                if (value == null) {\r\n                  value = \"\";\r\n                }\r\n                this.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n            };\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                if (options.beforeSend) {\r\n                    options.beforeSend.call(this, xhr, options);\r\n                }                \r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = options.contentType || (isFormData ? false : 'application/x-www-form-urlencoded');\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                if (dataType == \"blob\" || dataType == \"arraybuffer\") {\r\n                    xhr.responseType = dataType;\r\n                }\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        //result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(xhr.responseText);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(xhr.responseText) ? null : JSON.parse(xhr.responseText);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = xhr.response; // new Blob([xhr.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            } else if (dataType == \"text\") {\r\n                                result = xhr.responseText;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n                \r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = value;\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    //xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest'); // del for s02\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn http.Xhr = Xhr;\t\r\n});\ndefine('skylark-videojs/utils/create-logger',[], function () {\n    'use strict';\n    let history = [];\n    const LogByTypeFactory = (name, log) => (type, level, args) => {\n        const lvl = log.levels[level];\n        const lvlRegExp = new RegExp(`^(${ lvl })$`);\n        if (type !== 'log') {\n            args.unshift(type.toUpperCase() + ':');\n        }\n        args.unshift(name + ':');\n        if (history) {\n            history.push([].concat(args));\n            const splice = history.length - 1000;\n            history.splice(0, splice > 0 ? splice : 0);\n        }\n        if (!window.console) {\n            return;\n        }\n        let fn = window.console[type];\n        if (!fn && type === 'debug') {\n            fn = window.console.info || window.console.log;\n        }\n        if (!fn || !lvl || !lvlRegExp.test(type)) {\n            return;\n        }\n        fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n    };\n    return function createLogger(name) {\n        let level = 'info';\n        let logByType;\n        const log = function (...args) {\n            logByType('log', level, args);\n        };\n        logByType = LogByTypeFactory(name, log);\n        log.createLogger = subname => createLogger(name + ': ' + subname);\n        log.levels = {\n            all: 'debug|log|warn|error',\n            off: '',\n            debug: 'debug|log|warn|error',\n            info: 'log|warn|error',\n            warn: 'warn|error',\n            error: 'error',\n            DEFAULT: level\n        };\n        log.level = lvl => {\n            if (typeof lvl === 'string') {\n                if (!log.levels.hasOwnProperty(lvl)) {\n                    throw new Error(`\"${ lvl }\" in not a valid log level`);\n                }\n                level = lvl;\n            }\n            return level;\n        };\n        log.history = () => history ? [].concat(history) : [];\n        log.history.filter = fname => {\n            return (history || []).filter(historyItem => {\n                return new RegExp(`.*${ fname }.*`).test(historyItem[0]);\n            });\n        };\n        log.history.clear = () => {\n            if (history) {\n                history.length = 0;\n            }\n        };\n        log.history.disable = () => {\n            if (history !== null) {\n                history.length = 0;\n                history = null;\n            }\n        };\n        log.history.enable = () => {\n            if (history === null) {\n                history = [];\n            }\n        };\n        log.error = (...args) => logByType('error', level, args);\n        log.warn = (...args) => logByType('warn', level, args);\n        log.debug = (...args) => logByType('debug', level, args);\n        return log;\n    };\n});\ndefine('skylark-videojs/utils/log',['./create-logger'], function (createLogger) {\n    'use strict';\n    const log = createLogger('VIDEOJS');\n    log.createLogger = createLogger;\n    return log;\n});\ndefine('skylark-videojs/utils/obj',[\n    \"skylark-langx\"\n],function (langx) {\n    'use strict';\n\n    /*\n    const toString = Object.prototype.toString;\n    const keys = function (object) {\n        return isObject(object) ? Object.keys(object) : [];\n    };\n    function each(object, fn) {\n        keys(object).forEach(key => fn(object[key], key));\n    }\n    function reduce(object, fn, initial = 0) {\n        return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n    }\n    function assign(target, ...sources) {\n        if (Object.assign) {\n            return Object.assign(target, ...sources);\n        }\n        sources.forEach(source => {\n            if (!source) {\n                return;\n            }\n            each(source, (value, key) => {\n                target[key] = value;\n            });\n        });\n        return target;\n    }\n    function isObject(value) {\n        return !!value && typeof value === 'object';\n    }\n    function isPlain(value) {\n        return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n    }\n\n    */\n    return {\n        each : function(object,fn) {\n            return langx.each(object,fn,true/*isForEach*/);\n        },\n        reduce: langx.reduce,\n        assign: langx.mixin,\n        isObject: langx.isObject,\n        isPlain: langx.isPlainObject\n    };\n});\ndefine('skylark-videojs/utils/computed-style',[\n    'skylark-langx-globals/window',\n    'skylark-domx-styler'\n], function (window,styler) {\n    'use strict';\n    function computedStyle(el, prop) {\n        if (!el || !prop) {\n            return '';\n        }\n        if (typeof window.getComputedStyle === 'function') {\n            const computedStyleValue = window.getComputedStyle(el);\n            return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n        }\n        return '';\n    }\n    ///return computedStyle;\n    return styler.css;\n\n});\ndefine('skylark-videojs/utils/browser',[\n    \"skylark-langx-globals/window\",\n    \"skylark-langx-globals/document\"\n], function (window,document) {\n    'use strict';\n\n    function isReal() {\n        return document === window.document;\n    }\n\n    const USER_AGENT = window.navigator && window.navigator.userAgent || '';\n    const webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\n    const appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n    const IS_IPOD = /iPod/i.test(USER_AGENT);\n    const IOS_VERSION = function () {\n        const match = USER_AGENT.match(/OS (\\d+)_/i);\n        if (match && match[1]) {\n            return match[1];\n        }\n        return null;\n    }();\n    const IS_ANDROID = /Android/i.test(USER_AGENT);\n    const ANDROID_VERSION = function () {\n        const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n        if (!match) {\n            return null;\n        }\n        const major = match[1] && parseFloat(match[1]);\n        const minor = match[2] && parseFloat(match[2]);\n        if (major && minor) {\n            return parseFloat(match[1] + '.' + match[2]);\n        } else if (major) {\n            return major;\n        }\n        return null;\n    }();\n    const IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n    const IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n    const IS_EDGE = /Edg/i.test(USER_AGENT);\n    const IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n    const CHROME_VERSION = function () {\n        const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n        if (match && match[2]) {\n            return parseFloat(match[2]);\n        }\n        return null;\n    }();\n    const IE_VERSION = function () {\n        const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n        let version = result && parseFloat(result[1]);\n        if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n            version = 11;\n        }\n        return version;\n    }();\n    const IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n    const IS_WINDOWS = /Windows/i.test(USER_AGENT);\n    const TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch));\n    const IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n    const IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n    const IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n    const IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n    return {\n        IS_IPOD: IS_IPOD,\n        IOS_VERSION: IOS_VERSION,\n        IS_ANDROID: IS_ANDROID,\n        ANDROID_VERSION: ANDROID_VERSION,\n        IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n        IS_FIREFOX: IS_FIREFOX,\n        IS_EDGE: IS_EDGE,\n        IS_CHROME: IS_CHROME,\n        CHROME_VERSION: CHROME_VERSION,\n        IE_VERSION: IE_VERSION,\n        IS_SAFARI: IS_SAFARI,\n        IS_WINDOWS: IS_WINDOWS,\n        TOUCH_ENABLED: TOUCH_ENABLED,\n        IS_IPAD: IS_IPAD,\n        IS_IPHONE: IS_IPHONE,\n        IS_IOS: IS_IOS,\n        IS_ANY_SAFARI: IS_ANY_SAFARI,\n\n        isReal\n    };\n});\ndefine('skylark-videojs/utils/dom',[\n    \"skylark-langx-globals/window\",\n    \"skylark-langx-globals/document\",   \n    \"skylark-domx\",\n    './log',\n    './obj',\n    './computed-style',\n    './browser'\n], function (window,document,domx, log, obj, computedStyle, browser) {\n    'use strict';\n    function isNonBlankString(str) {\n        return typeof str === 'string' && Boolean(str.trim());\n    }\n    function throwIfWhitespace(str) {\n        if (str.indexOf(' ') >= 0) {\n            throw new Error('class has illegal whitespace characters');\n        }\n    }\n    function classRegExp(className) {\n        return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n    }\n\n    function isEl(value) {\n        return obj.isObject(value) && value.nodeType === 1;\n    }\n    function isInFrame() {\n        try {\n            return window.parent !== window.self;\n        } catch (x) {\n            return true;\n        }\n    }\n    function createQuerier(method) {\n        return function (selector, context) {\n            if (!isNonBlankString(selector)) {\n                return document[method](null);\n            }\n            if (isNonBlankString(context)) {\n                context = document.querySelector(context);\n            }\n            const ctx = isEl(context) ? context : document;\n            return ctx[method] && ctx[method](selector);\n        };\n    }\n    function createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n        const el = document.createElement(tagName);\n        Object.getOwnPropertyNames(properties).forEach(function (propName) {\n            const val = properties[propName];\n            if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n                log.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + `createEl(type, properties, attributes). Attempting to set ${ propName } to ${ val }.`);\n                el.setAttribute(propName, val);\n            } else if (propName === 'textContent') {\n                textContent(el, val);\n            } else if (el[propName] !== val || propName === 'tabIndex') {\n                el[propName] = val;\n            }\n        });\n        Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n            el.setAttribute(attrName, attributes[attrName]);\n        });\n        if (content) {\n            appendContent(el, content);\n        }\n        return el;\n    }\n    function textContent(el, text) {\n        if (typeof el.textContent === 'undefined') {\n            el.innerText = text;\n        } else {\n            el.textContent = text;\n        }\n        return el;\n    }\n    function prependTo(child, parent) {\n        if (parent.firstChild) {\n            parent.insertBefore(child, parent.firstChild);\n        } else {\n            parent.appendChild(child);\n        }\n    }\n    function hasClass(element, classToCheck) {\n        throwIfWhitespace(classToCheck);\n        if (element.classList) {\n            return element.classList.contains(classToCheck);\n        }\n        return classRegExp(classToCheck).test(element.className);\n    }\n    function addClass(element, classToAdd) {\n        if (element.classList) {\n            element.classList.add(classToAdd);\n        } else if (!hasClass(element, classToAdd)) {\n            element.className = (element.className + ' ' + classToAdd).trim();\n        }\n        return element;\n    }\n    function removeClass(element, classToRemove) {\n        if (element.classList) {\n            element.classList.remove(classToRemove);\n        } else {\n            throwIfWhitespace(classToRemove);\n            element.className = element.className.split(/\\s+/).filter(function (c) {\n                return c !== classToRemove;\n            }).join(' ');\n        }\n        return element;\n    }\n    function toggleClass(element, classToToggle, predicate) {\n        const has = hasClass(element, classToToggle);\n        if (typeof predicate === 'function') {\n            predicate = predicate(element, classToToggle);\n        }\n        if (typeof predicate !== 'boolean') {\n            predicate = !has;\n        }\n        if (predicate === has) {\n            return;\n        }\n        if (predicate) {\n            addClass(element, classToToggle);\n        } else {\n            removeClass(element, classToToggle);\n        }\n        return element;\n    }\n    function setAttributes(el, attributes) {\n        Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n            const attrValue = attributes[attrName];\n            if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n                el.removeAttribute(attrName);\n            } else {\n                el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n            }\n        });\n    }\n    function getAttributes(tag) {\n        const obj = {};\n        const knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n        if (tag && tag.attributes && tag.attributes.length > 0) {\n            const attrs = tag.attributes;\n            for (let i = attrs.length - 1; i >= 0; i--) {\n                const attrName = attrs[i].name;\n                let attrVal = attrs[i].value;\n                if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n                    attrVal = attrVal !== null ? true : false;\n                }\n                obj[attrName] = attrVal;\n            }\n        }\n        return obj;\n    }\n    function getAttribute(el, attribute) {\n        return el.getAttribute(attribute);\n    }\n    function setAttribute(el, attribute, value) {\n        el.setAttribute(attribute, value);\n    }\n    function removeAttribute(el, attribute) {\n        el.removeAttribute(attribute);\n    }\n    function blockTextSelection() {\n        document.body.focus();\n        document.onselectstart = function () {\n            return false;\n        };\n    }\n    function unblockTextSelection() {\n        document.onselectstart = function () {\n            return true;\n        };\n    }\n    function getBoundingClientRect(el) {\n        if (el && el.getBoundingClientRect && el.parentNode) {\n            const rect = el.getBoundingClientRect();\n            const result = {};\n            [\n                'bottom',\n                'height',\n                'left',\n                'right',\n                'top',\n                'width'\n            ].forEach(k => {\n                if (rect[k] !== undefined) {\n                    result[k] = rect[k];\n                }\n            });\n            if (!result.height) {\n                result.height = parseFloat(computedStyle(el, 'height'));\n            }\n            if (!result.width) {\n                result.width = parseFloat(computedStyle(el, 'width'));\n            }\n            return result;\n        }\n    }\n    function findPosition(el) {\n        if (!el || el && !el.offsetParent) {\n            return {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0\n            };\n        }\n        const width = el.offsetWidth;\n        const height = el.offsetHeight;\n        let left = 0;\n        let top = 0;\n        ///while (el.offsetParent && el !== document[fs.fullscreenElement]) {\n        while (el.offsetParent && !domx.noder.isFullscreen(el)) {\n            left += el.offsetLeft;\n            top += el.offsetTop;\n            el = el.offsetParent;\n        }\n        return {\n            left,\n            top,\n            width,\n            height\n        };\n    }\n    function getPointerPosition(el, event) {\n        const translated = {\n            x: 0,\n            y: 0\n        };\n        if (browser.IS_IOS) {\n            let item = el;\n            while (item && item.nodeName.toLowerCase() !== 'html') {\n                const transform = computedStyle(item, 'transform');\n                if (/^matrix/.test(transform)) {\n                    const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n                    translated.x += values[4];\n                    translated.y += values[5];\n                } else if (/^matrix3d/.test(transform)) {\n                    const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n                    translated.x += values[12];\n                    translated.y += values[13];\n                }\n                item = item.parentNode;\n            }\n        }\n        const position = {};\n        const boxTarget = findPosition(event.target);\n        const box = findPosition(el);\n        const boxW = box.width;\n        const boxH = box.height;\n        let offsetY = event.offsetY - (box.top - boxTarget.top);\n        let offsetX = event.offsetX - (box.left - boxTarget.left);\n        if (event.changedTouches) {\n            offsetX = event.changedTouches[0].pageX - box.left;\n            offsetY = event.changedTouches[0].pageY + box.top;\n            if (browser.IS_IOS) {\n                offsetX -= translated.x;\n                offsetY -= translated.y;\n            }\n        }\n        position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n        position.x = Math.max(0, Math.min(1, offsetX / boxW));\n        return position;\n    }\n    function isTextNode(value) {\n        return obj.isObject(value) && value.nodeType === 3;\n    }\n    function emptyEl(el) {\n        while (el.firstChild) {\n            el.removeChild(el.firstChild);\n        }\n        return el;\n    }\n    function normalizeContent(content) {\n        if (typeof content === 'function') {\n            content = content();\n        }\n        return (Array.isArray(content) ? content : [content]).map(value => {\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (isEl(value) || isTextNode(value)) {\n                return value;\n            }\n            if (typeof value === 'string' && /\\S/.test(value)) {\n                return document.createTextNode(value);\n            }\n        }).filter(value => value);\n    }\n    function appendContent(el, content) {\n        normalizeContent(content).forEach(node => el.appendChild(node));\n        return el;\n    }\n    function insertContent(el, content) {\n        return appendContent(emptyEl(el), content);\n    }\n    function isSingleLeftClick(event) {\n        if (event.button === undefined && event.buttons === undefined) {\n            return true;\n        }\n        if (event.button === 0 && event.buttons === undefined) {\n            return true;\n        }\n        if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n            return true;\n        }\n        if (event.button !== 0 || event.buttons !== 1) {\n            return false;\n        }\n        return true;\n    }\n    const $ = createQuerier('querySelector');\n    const $$ = createQuerier('querySelectorAll');\n    return {\n        isReal: browser.isReal,\n        isEl: domx.noder.isElement,// isEl,\n        isInFrame: domx.noder.isInFrame, //isInFrame,\n        createEl:  function (tagName = 'div', properties = {}, attributes = {}, content) { //createEl,\n            var el  = domx.noder.createElement(tagName,properties,attributes);\n            if (content) {\n                domx.noder.append(el,content)\n            }\n            return el;\n        }, \n        textContent: domx.data.text, //textContent,\n        prependTo: function (child, parent) { //prependTo,\n            domx.noder.prepend(parent,child);\n        },\n        hasClass: domx.styler.hasClass, //hasClass,\n        addClass: domx.styler.addClass,  //addClass,\n        removeClass: domx.styler.removeClass, //removeClass,\n        toggleClass: domx.styler.toogleClass, //toggleClass,\n        setAttributes: domx.data.attr, // setAttributes,\n        getAttributes: getAttributes,\n        getAttribute: domx.data.attr, //getAttribute,\n        setAttribute: domx.data.attr, //setAttribute,\n        removeAttribute: domx.data.removeAttr, //removeAttribute,\n        blockTextSelection: blockTextSelection,\n        unblockTextSelection: unblockTextSelection,\n        getBoundingClientRect: getBoundingClientRect,\n        findPosition: domx.geom.pageRect, //findPosition,\n        getPointerPosition: getPointerPosition,\n        isTextNode: domx.noder.isTextNode,// isTextNode,\n        emptyEl: domx.noder.empty, //emptyEl,\n        normalizeContent: normalizeContent,\n        appendContent: domx.noder.append,//appendContent,\n        insertContent: function(el,content) { //insertContent,\n            domx.noder.empty(el);\n            domx.noder.append(el,content);\n            return el;\n        },\n        isSingleLeftClick: isSingleLeftClick,\n        $: function(selector,context) {\n            context = context || document;\n            return domx.finder.find(context,selector);\n        },\n        $$: function(selector,context) {\n            context = context || document;\n            return domx.finder.findAll(context,selector);\n        }\n    };\n});\ndefine('skylark-videojs/setup',[\n    'skylark-langx-globals/document',\n    './utils/dom'\n], function (document,Dom) {\n    'use strict';\n    let _windowLoaded = false;\n    let videojs;\n    const autoSetup = function () {\n        if (!Dom.isReal() || videojs.options.autoSetup === false) {\n            return;\n        }\n        const vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n        const audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n        const divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n        const mediaEls = vids.concat(audios, divs);\n        if (mediaEls && mediaEls.length > 0) {\n            for (let i = 0, e = mediaEls.length; i < e; i++) {\n                const mediaEl = mediaEls[i];\n                if (mediaEl && mediaEl.getAttribute) {\n                    if (mediaEl.player === undefined) {\n                        const options = mediaEl.getAttribute('data-setup');\n                        if (options !== null) {\n                            videojs(mediaEl);\n                        }\n                    }\n                } else {\n                    autoSetupTimeout(1);\n                    break;\n                }\n            }\n        } else if (!_windowLoaded) {\n            autoSetupTimeout(1);\n        }\n    };\n    function autoSetupTimeout(wait, vjs) {\n        if (vjs) {\n            videojs = vjs;\n        }\n        window.setTimeout(autoSetup, wait);\n    }\n    function setWindowLoaded() {\n        _windowLoaded = true;\n        window.removeEventListener('load', setWindowLoaded);\n    }\n    if (Dom.isReal()) {\n        if (document.readyState === 'complete') {\n            setWindowLoaded();\n        } else {\n            window.addEventListener('load', setWindowLoaded);\n        }\n    }\n    const hasLoaded = function () {\n        return _windowLoaded;\n    };\n    return {\n        autoSetup,\n        autoSetupTimeout,\n        hasLoaded\n    };\n});\ndefine('skylark-videojs/utils/stylesheet',[\n    'skylark-langx-globals/document'\n], function (document) {\n    'use strict';\n    const createStyleElement = function (className) {\n        const style = document.createElement('style');\n        style.className = className;\n        return style;\n    };\n    const setTextContent = function (el, content) {\n        if (el.styleSheet) {\n            el.styleSheet.cssText = content;\n        } else {\n            el.textContent = content;\n        }\n    };\n    return {\n        createStyleElement: createStyleElement,\n        setTextContent: setTextContent\n    };\n});\ndefine('skylark-videojs/mixins/stateful',[\n    ///'./evented',\n    '../utils/obj'\n], function (Obj) {\n    'use strict';\n    const StatefulMixin = {\n        state: {},\n        setState(stateUpdates) {\n            if (typeof stateUpdates === 'function') {\n                stateUpdates = stateUpdates();\n            }\n            let changes;\n            Obj.each(stateUpdates, (value, key) => {\n                if (this.state[key] !== value) {\n                    changes = changes || {};\n                    changes[key] = {\n                        from: this.state[key],\n                        to: value\n                    };\n                }\n                this.state[key] = value;\n            });\n            //if (changes && evented.isEvented(this)) {\n            if (changes && this.trigger) {\n                this.trigger({\n                    changes,\n                    type: 'statechanged'\n                });\n            }\n            return changes;\n        }\n    };\n    function stateful(target, defaultState) {\n        Obj.assign(target, StatefulMixin);\n        target.state = Obj.assign({}, target.state, defaultState);\n        ///if (typeof target.handleStateChanged === 'function' && evented.isEvented(target)) {\n        if (typeof target.handleStateChanged === 'function' && target.on) {\n            target.on('statechanged', target.handleStateChanged);\n        }\n        return target;\n    }\n    return stateful;\n});\ndefine('skylark-videojs/utils/guid',[],function () {\n    'use strict';\n    const _initialGuid = 3;\n    let _guid = _initialGuid;\n    function newGUID() {\n        return _guid++;\n    }\n    function resetGuidInTestsOnly() {\n        _guid = _initialGuid;\n    }\n    return {\n        newGUID: newGUID,\n        resetGuidInTestsOnly: resetGuidInTestsOnly\n    };\n});\ndefine('skylark-videojs/utils/dom-data',[\n    './log',\n    './guid'\n], function (log, Guid) {\n    'use strict';\n    let FakeWeakMap;\n    if (!window.WeakMap) {\n        FakeWeakMap = class {\n            constructor() {\n                this.vdata = 'vdata' + Math.floor(window.performance && window.performance.now() || Date.now());\n                this.data = {};\n            }\n            set(key, value) {\n                const access = key[this.vdata] || Guid.newGUID();\n                if (!key[this.vdata]) {\n                    key[this.vdata] = access;\n                }\n                this.data[access] = value;\n                return this;\n            }\n            get(key) {\n                const access = key[this.vdata];\n                if (access) {\n                    return this.data[access];\n                }\n                log('We have no data for this element', key);\n                return undefined;\n            }\n            has(key) {\n                const access = key[this.vdata];\n                return access in this.data;\n            }\n            delete(key) {\n                const access = key[this.vdata];\n                if (access) {\n                    delete this.data[access];\n                    delete key[this.vdata];\n                }\n            }\n        };\n    }\n    return window.WeakMap ? new WeakMap() : new FakeWeakMap();\n});\ndefine('skylark-videojs/utils/fn',[\n    'skylark-langx-funcs',\n    './guid'\n], function (funcs,GUID) {\n    'use strict';\n    const UPDATE_REFRESH_INTERVAL = 30;\n    const bind = function (context, fn, uid) {\n        if (!fn.guid) {\n            fn.guid = GUID.newGUID();\n        }\n        const bound = fn.bind(context);\n        bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n        return bound;\n    };\n    const throttle = function (fn, wait) {\n        let last = window.performance.now();\n        const throttled = function (...args) {\n            const now = window.performance.now();\n            if (now - last >= wait) {\n                fn(...args);\n                last = now;\n            }\n        };\n        return throttled;\n    };\n    const debounce = function (func, wait, immediate, context = window) {\n        let timeout;\n        const cancel = () => {\n            context.clearTimeout(timeout);\n            timeout = null;\n        };\n        const debounced = function () {\n            const self = this;\n            const args = arguments;\n            let later = function () {\n                timeout = null;\n                later = null;\n                if (!immediate) {\n                    func.apply(self, args);\n                }\n            };\n            if (!timeout && immediate) {\n                func.apply(self, args);\n            }\n            context.clearTimeout(timeout);\n            timeout = context.setTimeout(later, wait);\n        };\n        debounced.cancel = cancel;\n        return debounced;\n    };\n    return {\n        UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n        bind: bind,\n        throttle: funcs.throttle, //throttle,\n        debounce: funcs.debounce //debounce\n    };\n});\ndefine('skylark-videojs/utils/string-cases',[],function () {\n    'use strict';\n    const toLowerCase = function (string) {\n        if (typeof string !== 'string') {\n            return string;\n        }\n        return string.replace(/./, w => w.toLowerCase());\n    };\n    const toTitleCase = function (string) {\n        if (typeof string !== 'string') {\n            return string;\n        }\n        return string.replace(/./, w => w.toUpperCase());\n    };\n    const titleCaseEquals = function (str1, str2) {\n        return toTitleCase(str1) === toTitleCase(str2);\n    };\n    return {\n        toLowerCase: toLowerCase,\n        toTitleCase: toTitleCase,\n        titleCaseEquals: titleCaseEquals\n    };\n});\ndefine('skylark-videojs/utils/merge-options',['./obj'], function (obj) {\n    'use strict';\n    function mergeOptions(...sources) {\n        const result = {};\n        sources.forEach(source => {\n            if (!source) {\n                return;\n            }\n            obj.each(source, (value, key) => {\n                if (!obj.isPlain(value)) {\n                    result[key] = value;\n                    return;\n                }\n                if (!obj.isPlain(result[key])) {\n                    result[key] = {};\n                }\n                result[key] = mergeOptions(result[key], value);\n            });\n        });\n        return result;\n    }\n    return mergeOptions;\n});\ndefine('skylark-videojs/utils/map',[], function () {\n    'use strict';\n    class MapSham {\n        constructor() {\n            this.map_ = {};\n        }\n        has(key) {\n            return key in this.map_;\n        }\n        delete(key) {\n            const has = this.has(key);\n            delete this.map_[key];\n            return has;\n        }\n        set(key, value) {\n            this.map_[key] = value;\n            return this;\n        }\n        forEach(callback, thisArg) {\n            for (const key in this.map_) {\n                callback.call(thisArg, this.map_[key], key, this);\n            }\n        }\n    }\n    return window.Map ? window.Map : MapSham;\n});\ndefine('skylark-videojs/utils/set',[], function () {\n    'use strict';\n    class SetSham {\n        constructor() {\n            this.set_ = {};\n        }\n        has(key) {\n            return key in this.set_;\n        }\n        delete(key) {\n            const has = this.has(key);\n            delete this.set_[key];\n            return has;\n        }\n        add(key) {\n            this.set_[key] = 1;\n            return this;\n        }\n        forEach(callback, thisArg) {\n            for (const key in this.set_) {\n                callback.call(thisArg, key, key, this);\n            }\n        }\n    }\n    return window.Set ? window.Set : SetSham;\n});\ndefine('skylark-videojs/component',[\n    \"skylark-langx\",\n    \"skylark-domx-eventer\",\n    \"skylark-widgets-base/Widget\",\n    ///'./mixins/evented',\n    './mixins/stateful',\n    './utils/dom',\n    './utils/dom-data',\n    './utils/fn',\n    './utils/guid',\n    './utils/string-cases',\n    './utils/merge-options',\n    './utils/computed-style',\n    './utils/map',\n    './utils/set'\n], function (langx,eventer,Widget, stateful, Dom, DomData, Fn, Guid, stringCases, mergeOptions, computedStyle, Map, Set) {\n    'use strict';\n\n    function isNativeEvent(el,events) {\n        if (langx.isString(events)) {\n            return el[\"on\"+ events] !== undefined;\n        } else if (langx.isArray(events)) {\n            for (var i=0; i<events.length; i++) {\n                if (el[\"on\"+ events[i]] !== undefined) {\n                    return true;\n                }\n            }\n            return events.length > 0;\n        }\n    }\n\n    const NativeEvents = {\n            \"drag\": 2, // DragEvent\n            \"dragend\": 2, // DragEvent\n            \"dragenter\": 2, // DragEvent\n            \"dragexit\": 2, // DragEvent\n            \"dragleave\": 2, // DragEvent\n            \"dragover\": 2, // DragEvent\n            \"dragstart\": 2, // DragEvent\n            \"drop\": 2, // DragEvent\n\n            \"abort\": 3, // Event\n            \"change\": 3, // Event\n            \"error\": 3, // Event\n            \"selectionchange\": 3, // Event\n            \"submit\": 3, // Event\n            \"reset\": 3, // Event\n            'fullscreenchange':3,\n            'fullscreenerror':3,\n\n/*\n            'disablepictureinpicturechanged':3,\n            'ended':3,\n            'enterpictureinpicture':3,\n            'durationchange':3,\n            'leavepictureinpicture':3,\n            'loadstart' : 3,\n            'loadedmetadata':3,\n            'pause' : 3,\n            'play':3,\n            'posterchange':3,\n            'ratechange':3,\n            'seeking' : 3,\n            'sourceset':3,\n            'suspend':3,\n            'textdata':3,\n            'texttrackchange':3,\n            'timeupdate':3,\n            'volumechange':3,\n            'waiting' : 3,\n*/\n\n\n            \"focus\": 4, // FocusEvent\n            \"blur\": 4, // FocusEvent\n            \"focusin\": 4, // FocusEvent\n            \"focusout\": 4, // FocusEvent\n\n            \"keydown\": 5, // KeyboardEvent\n            \"keypress\": 5, // KeyboardEvent\n            \"keyup\": 5, // KeyboardEvent\n\n            \"message\": 6, // MessageEvent\n\n            \"click\": 7, // MouseEvent\n            \"contextmenu\": 7, // MouseEvent\n            \"dblclick\": 7, // MouseEvent\n            \"mousedown\": 7, // MouseEvent\n            \"mouseup\": 7, // MouseEvent\n            \"mousemove\": 7, // MouseEvent\n            \"mouseover\": 7, // MouseEvent\n            \"mouseout\": 7, // MouseEvent\n            \"mouseenter\": 7, // MouseEvent\n            \"mouseleave\": 7, // MouseEvent\n\n\n            \"progress\" : 11, //ProgressEvent\n\n            \"textInput\": 12, // TextEvent\n\n            \"tap\": 13,\n            \"touchstart\": 13, // TouchEvent\n            \"touchmove\": 13, // TouchEvent\n            \"touchend\": 13, // TouchEvent\n\n            \"load\": 14, // UIEvent\n            \"resize\": 14, // UIEvent\n            \"select\": 14, // UIEvent\n            \"scroll\": 14, // UIEvent\n            \"unload\": 14, // UIEvent,\n\n            \"wheel\": 15, // WheelEvent\n\n    };\n\n    class Component extends Widget {\n        isNativeEvent(events) {\n            if (langx.isString(events)) {\n                return !!NativeEvents[events];\n            } else if (langx.isArray(events)) {\n                for (var i=0; i<events.length; i++) {\n                    if (NativeEvents[events[i]]) {\n                        return true;\n                    }\n                }\n                return false;\n            }            \n\n        }   \n\n        on(events, selector, data, callback, ctx, /*used internally*/ one) {\n            if (this.el_ && this.isNativeEvent(events)) {\n                eventer.on(this.el_,events,selector,data,callback,ctx,one);\n            } else {\n                super.on(events, selector, data, callback, ctx,  one);\n            }\n        }   \n\n        off(events, callback) {\n            if (this.el_ && this.isNativeEvent(events)) {\n                eventer.off(this.el_,events,callback);\n            } else {\n                super.off(events,callback);\n            }\n        }\n\n        listenTo (obj, event, callback, /*used internally*/ one) {\n            if (langx.isString(obj) || langx.isArray(obj)) {\n                one = callback;\n                callback = event;\n                event = obj;\n                if (this.el_ && this.isNativeEvent(event)) {\n                    eventer.on(this.el_,event,callback,this,one);\n                } else {\n                    this.on(event,callback,this,one);\n                }\n            } else {\n                if (obj.nodeType) {\n                    eventer.on(obj,event,callback,this,one)\n                } else {\n                    super.listenTo(obj,event,callback,one)\n                }                \n            }\n        }\n\n        unlistenTo(obj, event, callback) {\n            if (langx.isString(obj) || langx.isArray(obj)) {\n                callback = event;\n                event = obj;\n                if (this.el_ && this.isNativeEvent(event)) {\n                    eventer.off(this.el_,event,callback);\n                } else {\n                    this.off(event,callback);                   \n                }\n            } else {\n                if (obj.nodeType) {\n                    eventer.off(obj,event,callback)\n                } else {\n                    super.unlistenTo(obj,event,callback)\n                }\n            }\n        }\n\n        _create() {\n\n        }\n\n\n        _construct(player, options, ready) {\n            /*\n            var el;\n            if (options.el) {\n               el = options.el;\n            } else if (options.createEl !== false) {\n                el = this.createEl();\n            }\n            super(el);\n            */\n\n            if (!player && this.play) {\n                this.player_ = player = this;\n            } else {\n                this.player_ = player;\n            }\n            this.isDisposed_ = false;\n            this.parentComponent_ = null;\n            this.options_ = mergeOptions({}, this.options_);\n            options = this.options_ = mergeOptions(this.options_, options);\n            this.id_ = options.id || options.el && options.el.id;\n            if (!this.id_) {\n                const id = player && player.id && player.id() || 'no_player';\n                this.id_ = `${ id }_component_${ Guid.newGUID() }`;\n            }\n            this.name_ = options.name || null;\n            if (options.el) {\n               this.el_ = options.el;\n            } else if (options.createEl !== false) {\n                this.el_ = this.createEl();\n            }\n            //this.el_ = this._elm;\n\n            if (options.evented !== false) {\n                ///evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n                this.handleLanguagechange = this.handleLanguagechange.bind(this);\n                ///this.listenTo(this.player_, 'languagechange', this.handleLanguagechange);\n                this.listenTo(this.player_, 'languagechange', this.handleLanguagechange);\n            }\n\n\n            stateful(this, this.constructor.defaultState);\n            this.children_ = [];\n            this.childIndex_ = {};\n            this.childNameIndex_ = {};\n            this.setTimeoutIds_ = new Set();\n            this.setIntervalIds_ = new Set();\n            this.rafIds_ = new Set();\n            this.namedRafs_ = new Map();\n            this.clearingTimersOnDispose_ = false;\n            if (options.initChildren !== false) {\n                this.initChildren();\n            }\n            this.ready(ready);\n            if (options.reportTouchActivity !== false) {\n                this.enableTouchActivity();\n            }\n        }\n        dispose() {\n            if (this.isDisposed_) {\n                return;\n            }\n            if (this.readyQueue_) {\n                this.readyQueue_.length = 0;\n            }\n            this.trigger({\n                type: 'dispose',\n                bubbles: false\n            });\n            this.isDisposed_ = true;\n            if (this.children_) {\n                for (let i = this.children_.length - 1; i >= 0; i--) {\n                    if (this.children_[i].dispose) {\n                        this.children_[i].dispose();\n                    }\n                }\n            }\n            this.children_ = null;\n            this.childIndex_ = null;\n            this.childNameIndex_ = null;\n            this.parentComponent_ = null;\n            if (this.el_) {\n                if (this.el_.parentNode) {\n                    this.el_.parentNode.removeChild(this.el_);\n                }\n                ///if (DomData.has(this.el_)) {\n                ///    DomData.delete(this.el_);\n                ///}\n                eventer.clear(this.el_);\n                this.el_ = null;\n            }\n            this.player_ = null;\n        }\n        isDisposed() {\n            return Boolean(this.isDisposed_);\n        }\n        player() {\n            return this.player_;\n        }\n        options(obj) {\n            if (!obj) {\n                return this.options_;\n            }\n            this.options_ = mergeOptions(this.options_, obj);\n            return this.options_;\n        }\n        el() {\n            return this.el_;\n        }\n        createEl(tagName, properties, attributes) {\n            return Dom.createEl(tagName, properties, attributes);\n        }\n        localize(string, tokens, defaultValue = string) {\n            const code = this.player_.language && this.player_.language();\n            const languages = this.player_.languages && this.player_.languages();\n            const language = languages && languages[code];\n            const primaryCode = code && code.split('-')[0];\n            const primaryLang = languages && languages[primaryCode];\n            let localizedString = defaultValue;\n            if (language && language[string]) {\n                localizedString = language[string];\n            } else if (primaryLang && primaryLang[string]) {\n                localizedString = primaryLang[string];\n            }\n            if (tokens) {\n                localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n                    const value = tokens[index - 1];\n                    let ret = value;\n                    if (typeof value === 'undefined') {\n                        ret = match;\n                    }\n                    return ret;\n                });\n            }\n            return localizedString;\n        }\n        handleLanguagechange() {\n        }\n        contentEl() {\n            return this.contentEl_ || this.el_;\n        }\n        id() {\n            return this.id_;\n        }\n        name() {\n            return this.name_;\n        }\n        children() {\n            return this.children_;\n        }\n        getChildById(id) {\n            return this.childIndex_[id];\n        }\n        getChild(name) {\n            if (!name) {\n                return;\n            }\n            return this.childNameIndex_[name];\n        }\n        getDescendant(...names) {\n            names = names.reduce((acc, n) => acc.concat(n), []);\n            let currentChild = this;\n            for (let i = 0; i < names.length; i++) {\n                currentChild = currentChild.getChild(names[i]);\n                if (!currentChild || !currentChild.getChild) {\n                    return;\n                }\n            }\n            return currentChild;\n        }\n        addChild(child, options = {}, index = this.children_.length) {\n            let component;\n            let componentName;\n            if (typeof child === 'string') {\n                componentName = stringCases.toTitleCase(child);\n                const componentClassName = options.componentClass || componentName;\n                options.name = componentName;\n                const ComponentClass = Component.getComponent(componentClassName);\n                if (!ComponentClass) {\n                    throw new Error(`Component ${ componentClassName } does not exist`);\n                }\n                if (typeof ComponentClass !== 'function') {\n                    return null;\n                }\n                component = new ComponentClass(this.player_ || this, options);\n            } else {\n                component = child;\n            }\n            if (component.parentComponent_) {\n                component.parentComponent_.removeChild(component);\n            }\n            this.children_.splice(index, 0, component);\n            component.parentComponent_ = this;\n            if (typeof component.id === 'function') {\n                this.childIndex_[component.id()] = component;\n            }\n            componentName = componentName || component.name && stringCases.toTitleCase(component.name());\n            if (componentName) {\n                this.childNameIndex_[componentName] = component;\n                this.childNameIndex_[stringCases.toLowerCase(componentName)] = component;\n            }\n            if (typeof component.el === 'function' && component.el()) {\n                let refNode = null;\n                if (this.children_[index + 1]) {\n                    if (this.children_[index + 1].el_) {\n                        refNode = this.children_[index + 1].el_;\n                    } else if (Dom.isEl(this.children_[index + 1])) {\n                        refNode = this.children_[index + 1];\n                    }\n                }\n                this.contentEl().insertBefore(component.el(), refNode);\n            }\n            return component;\n        }\n        removeChild(component) {\n            if (typeof component === 'string') {\n                component = this.getChild(component);\n            }\n            if (!component || !this.children_) {\n                return;\n            }\n            let childFound = false;\n            for (let i = this.children_.length - 1; i >= 0; i--) {\n                if (this.children_[i] === component) {\n                    childFound = true;\n                    this.children_.splice(i, 1);\n                    break;\n                }\n            }\n            if (!childFound) {\n                return;\n            }\n            component.parentComponent_ = null;\n            this.childIndex_[component.id()] = null;\n            this.childNameIndex_[stringCases.toTitleCase(component.name())] = null;\n            this.childNameIndex_[stringCases.toLowerCase(component.name())] = null;\n            const compEl = component.el();\n            if (compEl && compEl.parentNode === this.contentEl()) {\n                this.contentEl().removeChild(component.el());\n            }\n        }\n        initChildren() {\n            const children = this.options_.children;\n            if (children) {\n                const parentOptions = this.options_;\n                const handleAdd = child => {\n                    const name = child.name;\n                    let opts = child.opts;\n                    if (parentOptions[name] !== undefined) {\n                        opts = parentOptions[name];\n                    }\n                    if (opts === false) {\n                        return;\n                    }\n                    if (opts === true) {\n                        opts = {};\n                    }\n                    opts.playerOptions = this.options_.playerOptions;\n                    const newChild = this.addChild(name, opts);\n                    if (newChild) {\n                        this[name] = newChild;\n                    }\n                };\n                let workingChildren;\n                const Tech = Component.getComponent('Tech');\n                if (Array.isArray(children)) {\n                    workingChildren = children;\n                } else {\n                    workingChildren = Object.keys(children);\n                }\n                workingChildren.concat(Object.keys(this.options_).filter(function (child) {\n                    return !workingChildren.some(function (wchild) {\n                        if (typeof wchild === 'string') {\n                            return child === wchild;\n                        }\n                        return child === wchild.name;\n                    });\n                })).map(child => {\n                    let name;\n                    let opts;\n                    if (typeof child === 'string') {\n                        name = child;\n                        opts = children[name] || this.options_[name] || {};\n                    } else {\n                        name = child.name;\n                        opts = child;\n                    }\n                    return {\n                        name,\n                        opts\n                    };\n                }).filter(child => {\n                    const c = Component.getComponent(child.opts.componentClass || stringCases.toTitleCase(child.name));\n                    return c && !Tech.isTech(c);\n                }).forEach(handleAdd);\n            }\n        }\n        buildCSSClass() {\n            return '';\n        }\n        ready(fn, sync = false) {\n            if (!fn) {\n                return;\n            }\n            if (!this.isReady_) {\n                this.readyQueue_ = this.readyQueue_ || [];\n                this.readyQueue_.push(fn);\n                return;\n            }\n            if (sync) {\n                fn.call(this);\n            } else {\n                this.setTimeout(fn, 1);\n            }\n        }\n        triggerReady() {\n            this.isReady_ = true;\n            this.setTimeout(function () {\n                const readyQueue = this.readyQueue_;\n                this.readyQueue_ = [];\n                if (readyQueue && readyQueue.length > 0) {\n                    readyQueue.forEach(function (fn) {\n                        fn.call(this);\n                    }, this);\n                }\n                this.trigger('ready');\n            }, 1);\n        }\n        $(selector, context) {\n            return Dom.$(selector, context || this.contentEl());\n        }\n        $$(selector, context) {\n            return Dom.$$(selector, context || this.contentEl());\n        }\n        hasClass(classToCheck) {\n            return Dom.hasClass(this.el_, classToCheck);\n        }\n        addClass(classToAdd) {\n            Dom.addClass(this.el_, classToAdd);\n        }\n        removeClass(classToRemove) {\n            Dom.removeClass(this.el_, classToRemove);\n        }\n        toggleClass(classToToggle, predicate) {\n            Dom.toggleClass(this.el_, classToToggle, predicate);\n        }\n        show() {\n            this.removeClass('vjs-hidden');\n        }\n        hide() {\n            this.addClass('vjs-hidden');\n        }\n        lockShowing() {\n            this.addClass('vjs-lock-showing');\n        }\n        unlockShowing() {\n            this.removeClass('vjs-lock-showing');\n        }\n        getAttribute(attribute) {\n            return Dom.getAttribute(this.el_, attribute);\n        }\n        setAttribute(attribute, value) {\n            Dom.setAttribute(this.el_, attribute, value);\n        }\n        removeAttribute(attribute) {\n            Dom.removeAttribute(this.el_, attribute);\n        }\n        width(num, skipListeners) {\n            return this.dimension('width', num, skipListeners);\n        }\n        height(num, skipListeners) {\n            return this.dimension('height', num, skipListeners);\n        }\n        dimensions(width, height) {\n            this.width(width, true);\n            this.height(height);\n        }\n        dimension(widthOrHeight, num, skipListeners) {\n            if (num !== undefined) {\n                if (num === null || num !== num) {\n                    num = 0;\n                }\n                if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n                    this.el_.style[widthOrHeight] = num;\n                } else if (num === 'auto') {\n                    this.el_.style[widthOrHeight] = '';\n                } else {\n                    this.el_.style[widthOrHeight] = num + 'px';\n                }\n                if (!skipListeners) {\n                    this.trigger('componentresize');\n                }\n                return;\n            }\n            if (!this.el_) {\n                return 0;\n            }\n            const val = this.el_.style[widthOrHeight];\n            const pxIndex = val.indexOf('px');\n            if (pxIndex !== -1) {\n                return parseInt(val.slice(0, pxIndex), 10);\n            }\n            return parseInt(this.el_['offset' + stringCases.toTitleCase(widthOrHeight)], 10);\n        }\n        currentDimension(widthOrHeight) {\n            let computedWidthOrHeight = 0;\n            if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n                throw new Error('currentDimension only accepts width or height value');\n            }\n            computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n            computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n            if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n                const rule = `offset${ stringCases.toTitleCase(widthOrHeight) }`;\n                computedWidthOrHeight = this.el_[rule];\n            }\n            return computedWidthOrHeight;\n        }\n        currentDimensions() {\n            return {\n                width: this.currentDimension('width'),\n                height: this.currentDimension('height')\n            };\n        }\n        currentWidth() {\n            return this.currentDimension('width');\n        }\n        currentHeight() {\n            return this.currentDimension('height');\n        }\n        focus() {\n            this.el_.focus();\n        }\n        blur() {\n            this.el_.blur();\n        }\n        handleKeyDown(event) {\n            if (this.player_) {\n                event.stopPropagation();\n                this.player_.handleKeyDown(event);\n            }\n        }\n        handleKeyPress(event) {\n            this.handleKeyDown(event);\n        }\n        emitTapEvents() {\n            let touchStart = 0;\n            let firstTouch = null;\n            const tapMovementThreshold = 10;\n            const touchTimeThreshold = 200;\n            let couldBeTap;\n            this.listenTo('touchstart', function (event) {\n                if (event.touches.length === 1) {\n                    firstTouch = {\n                        pageX: event.touches[0].pageX,\n                        pageY: event.touches[0].pageY\n                    };\n                    touchStart = window.performance.now();\n                    couldBeTap = true;\n                }\n            });\n            this.listenTo('touchmove', function (event) {\n                if (event.touches.length > 1) {\n                    couldBeTap = false;\n                } else if (firstTouch) {\n                    const xdiff = event.touches[0].pageX - firstTouch.pageX;\n                    const ydiff = event.touches[0].pageY - firstTouch.pageY;\n                    const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n                    if (touchDistance > tapMovementThreshold) {\n                        couldBeTap = false;\n                    }\n                }\n            });\n            const noTap = function () {\n                couldBeTap = false;\n            };\n            this.listenTo('touchleave', noTap);\n            this.listenTo('touchcancel', noTap);\n            this.listenTo('touchend', function (event) {\n                firstTouch = null;\n                if (couldBeTap === true) {\n                    const touchTime = window.performance.now() - touchStart;\n                    if (touchTime < touchTimeThreshold) {\n                        event.preventDefault();\n                        this.trigger('tap');\n                    }\n                }\n            });\n        }\n        enableTouchActivity() {\n            if (!this.player() || !this.player().reportUserActivity) {\n                return;\n            }\n            const report = Fn.bind(this.player(), this.player().reportUserActivity);\n            let touchHolding;\n            this.listenTo('touchstart', function () {\n                report();\n                this.clearInterval(touchHolding);\n                touchHolding = this.setInterval(report, 250);\n            });\n            const touchEnd = function (event) {\n                report();\n                this.clearInterval(touchHolding);\n            };\n            this.listenTo('touchmove', report);\n            this.listenTo('touchend', touchEnd);\n            this.listenTo('touchcancel', touchEnd);\n        }\n        setTimeout(fn, timeout) {\n            var timeoutId, disposeFn;\n            fn = Fn.bind(this, fn);\n            this.clearTimersOnDispose_();\n            timeoutId = window.setTimeout(() => {\n                if (this.setTimeoutIds_.has(timeoutId)) {\n                    this.setTimeoutIds_.delete(timeoutId);\n                }\n                fn();\n            }, timeout);\n            this.setTimeoutIds_.add(timeoutId);\n            return timeoutId;\n        }\n        clearTimeout(timeoutId) {\n            if (this.setTimeoutIds_.has(timeoutId)) {\n                this.setTimeoutIds_.delete(timeoutId);\n                window.clearTimeout(timeoutId);\n            }\n            return timeoutId;\n        }\n        setInterval(fn, interval) {\n            fn = Fn.bind(this, fn);\n            this.clearTimersOnDispose_();\n            const intervalId = window.setInterval(fn, interval);\n            this.setIntervalIds_.add(intervalId);\n            return intervalId;\n        }\n        clearInterval(intervalId) {\n            if (this.setIntervalIds_.has(intervalId)) {\n                this.setIntervalIds_.delete(intervalId);\n                window.clearInterval(intervalId);\n            }\n            return intervalId;\n        }\n        requestAnimationFrame(fn) {\n            if (!this.supportsRaf_) {\n                return this.setTimeout(fn, 1000 / 60);\n            }\n            this.clearTimersOnDispose_();\n            var id;\n            fn = Fn.bind(this, fn);\n            id = window.requestAnimationFrame(() => {\n                if (this.rafIds_.has(id)) {\n                    this.rafIds_.delete(id);\n                }\n                fn();\n            });\n            this.rafIds_.add(id);\n            return id;\n        }\n        requestNamedAnimationFrame(name, fn) {\n            if (this.namedRafs_.has(name)) {\n                return;\n            }\n            this.clearTimersOnDispose_();\n            fn = Fn.bind(this, fn);\n            const id = this.requestAnimationFrame(() => {\n                fn();\n                if (this.namedRafs_.has(name)) {\n                    this.namedRafs_.delete(name);\n                }\n            });\n            this.namedRafs_.set(name, id);\n            return name;\n        }\n        cancelNamedAnimationFrame(name) {\n            if (!this.namedRafs_.has(name)) {\n                return;\n            }\n            this.cancelAnimationFrame(this.namedRafs_.get(name));\n            this.namedRafs_.delete(name);\n        }\n        cancelAnimationFrame(id) {\n            if (!this.supportsRaf_) {\n                return this.clearTimeout(id);\n            }\n            if (this.rafIds_.has(id)) {\n                this.rafIds_.delete(id);\n                window.cancelAnimationFrame(id);\n            }\n            return id;\n        }\n        clearTimersOnDispose_() {\n            if (this.clearingTimersOnDispose_) {\n                return;\n            }\n            this.clearingTimersOnDispose_ = true;\n            this.listenToOnce('dispose', () => {\n                [\n                    [\n                        'namedRafs_',\n                        'cancelNamedAnimationFrame'\n                    ],\n                    [\n                        'rafIds_',\n                        'cancelAnimationFrame'\n                    ],\n                    [\n                        'setTimeoutIds_',\n                        'clearTimeout'\n                    ],\n                    [\n                        'setIntervalIds_',\n                        'clearInterval'\n                    ]\n                ].forEach(([idName, cancelName]) => {\n                    this[idName].forEach((val, key) => this[cancelName](key));\n                });\n                this.clearingTimersOnDispose_ = false;\n            });\n        }\n        static registerComponent(name, ComponentToRegister) {\n            if (typeof name !== 'string' || !name) {\n                throw new Error(`Illegal component name, \"${ name }\"; must be a non-empty string.`);\n            }\n            const Tech = Component.getComponent('Tech');\n            const isTech = Tech && Tech.isTech(ComponentToRegister);\n            const isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n            if (isTech || !isComp) {\n                let reason;\n                if (isTech) {\n                    reason = 'techs must be registered using Tech.registerTech()';\n                } else {\n                    reason = 'must be a Component subclass';\n                }\n                throw new Error(`Illegal component, \"${ name }\"; ${ reason }.`);\n            }\n            name = stringCases.toTitleCase(name);\n            if (!Component.components_) {\n                Component.components_ = {};\n            }\n            const Player = Component.getComponent('Player');\n            if (name === 'Player' && Player && Player.players) {\n                const players = Player.players;\n                const playerNames = Object.keys(players);\n                if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n                    throw new Error('Can not register Player component after player has been created.');\n                }\n            }\n            Component.components_[name] = ComponentToRegister;\n            Component.components_[stringCases.toLowerCase(name)] = ComponentToRegister;\n            return ComponentToRegister;\n        }\n        static getComponent(name) {\n            if (!name || !Component.components_) {\n                return;\n            }\n            return Component.components_[name];\n        }\n    }\n    Component.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n    Component.registerComponent('Component', Component);\n    return Component;\n});\ndefine('skylark-videojs/utils/events',[\n    'skylark-langx-globals/document',\n    \"skylark-domx\",\n    './dom-data',\n    './guid',\n    './log'\n], function (document, domx, DomData, Guid, log) {\n    'use strict';\n    function _cleanUpEvents(elem, type) {\n        if (!DomData.has(elem)) {\n            return;\n        }\n        const data = DomData.get(elem);\n        if (data.handlers[type].length === 0) {\n            delete data.handlers[type];\n            if (elem.removeEventListener) {\n                elem.removeEventListener(type, data.dispatcher, false);\n            } else if (elem.detachEvent) {\n                elem.detachEvent('on' + type, data.dispatcher);\n            }\n        }\n        if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n            delete data.handlers;\n            delete data.dispatcher;\n            delete data.disabled;\n        }\n        if (Object.getOwnPropertyNames(data).length === 0) {\n            DomData.delete(elem);\n        }\n    }\n    function _handleMultipleEvents(fn, elem, types, callback) {\n        types.forEach(function (type) {\n            fn(elem, type, callback);\n        });\n    }\n    function fixEvent(event) {\n        if (event.fixed_) {\n            return event;\n        }\n        function returnTrue() {\n            return true;\n        }\n        function returnFalse() {\n            return false;\n        }\n        if (!event || !event.isPropagationStopped) {\n            const old = event || window.event;\n            event = {};\n            for (const key in old) {\n                if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n                    if (!(key === 'returnValue' && old.preventDefault)) {\n                        event[key] = old[key];\n                    }\n                }\n            }\n            if (!event.target) {\n                event.target = event.srcElement || document;\n            }\n            if (!event.relatedTarget) {\n                event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n            }\n            event.preventDefault = function () {\n                if (old.preventDefault) {\n                    old.preventDefault();\n                }\n                event.returnValue = false;\n                old.returnValue = false;\n                event.defaultPrevented = true;\n            };\n            event.defaultPrevented = false;\n            event.stopPropagation = function () {\n                if (old.stopPropagation) {\n                    old.stopPropagation();\n                }\n                event.cancelBubble = true;\n                old.cancelBubble = true;\n                event.isPropagationStopped = returnTrue;\n            };\n            event.isPropagationStopped = returnFalse;\n            event.stopImmediatePropagation = function () {\n                if (old.stopImmediatePropagation) {\n                    old.stopImmediatePropagation();\n                }\n                event.isImmediatePropagationStopped = returnTrue;\n                event.stopPropagation();\n            };\n            event.isImmediatePropagationStopped = returnFalse;\n            if (event.clientX !== null && event.clientX !== undefined) {\n                const doc = document.documentElement;\n                const body = document.body;\n                event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n                event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n            }\n            event.which = event.charCode || event.keyCode;\n            if (event.button !== null && event.button !== undefined) {\n                event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n            }\n        }\n        event.fixed_ = true;\n        return event;\n    }\n    let _supportsPassive;\n    const supportsPassive = function () {\n        if (typeof _supportsPassive !== 'boolean') {\n            _supportsPassive = false;\n            try {\n                const opts = Object.defineProperty({}, 'passive', {\n                    get() {\n                        _supportsPassive = true;\n                    }\n                });\n                window.addEventListener('test', null, opts);\n                window.removeEventListener('test', null, opts);\n            } catch (e) {\n            }\n        }\n        return _supportsPassive;\n    };\n    const passiveEvents = [\n        'touchstart',\n        'touchmove'\n    ];\n    function on(elem, type, fn) {\n        if (Array.isArray(type)) {\n            return _handleMultipleEvents(on, elem, type, fn);\n        }\n        if (!DomData.has(elem)) {\n            DomData.set(elem, {});\n        }\n        const data = DomData.get(elem);\n        if (!data.handlers) {\n            data.handlers = {};\n        }\n        if (!data.handlers[type]) {\n            data.handlers[type] = [];\n        }\n        if (!fn.guid) {\n            fn.guid = Guid.newGUID();\n        }\n        data.handlers[type].push(fn);\n        if (!data.dispatcher) {\n            data.disabled = false;\n            data.dispatcher = function (event, hash) {\n                if (data.disabled) {\n                    return;\n                }\n                event = fixEvent(event);\n                const handlers = data.handlers[event.type];\n                if (handlers) {\n                    const handlersCopy = handlers.slice(0);\n                    for (let m = 0, n = handlersCopy.length; m < n; m++) {\n                        if (event.isImmediatePropagationStopped()) {\n                            break;\n                        } else {\n                            try {\n                                handlersCopy[m].call(elem, event, hash);\n                            } catch (e) {\n                                log.error(e);\n                            }\n                        }\n                    }\n                }\n            };\n        }\n        if (data.handlers[type].length === 1) {\n            if (elem.addEventListener) {\n                let options = false;\n                if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n                    options = { passive: true };\n                }\n                elem.addEventListener(type, data.dispatcher, options);\n            } else if (elem.attachEvent) {\n                elem.attachEvent('on' + type, data.dispatcher);\n            }\n        }\n    }\n    function off(elem, type, fn) {\n        if (!DomData.has(elem)) {\n            return;\n        }\n        const data = DomData.get(elem);\n        if (!data.handlers) {\n            return;\n        }\n        if (Array.isArray(type)) {\n            return _handleMultipleEvents(off, elem, type, fn);\n        }\n        const removeType = function (el, t) {\n            data.handlers[t] = [];\n            _cleanUpEvents(el, t);\n        };\n        if (type === undefined) {\n            for (const t in data.handlers) {\n                if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n                    removeType(elem, t);\n                }\n            }\n            return;\n        }\n        const handlers = data.handlers[type];\n        if (!handlers) {\n            return;\n        }\n        if (!fn) {\n            removeType(elem, type);\n            return;\n        }\n        if (fn.guid) {\n            for (let n = 0; n < handlers.length; n++) {\n                if (handlers[n].guid === fn.guid) {\n                    handlers.splice(n--, 1);\n                }\n            }\n        }\n        _cleanUpEvents(elem, type);\n    }\n    function trigger(elem, event, hash) {\n        const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n        const parent = elem.parentNode || elem.ownerDocument;\n        if (typeof event === 'string') {\n            event = {\n                type: event,\n                target: elem\n            };\n        } else if (!event.target) {\n            event.target = elem;\n        }\n        event = fixEvent(event);\n        if (elemData.dispatcher) {\n            elemData.dispatcher.call(elem, event, hash);\n        }\n        if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n            trigger.call(null, parent, event, hash);\n        } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n            if (!DomData.has(event.target)) {\n                DomData.set(event.target, {});\n            }\n            const targetData = DomData.get(event.target);\n            if (event.target[event.type]) {\n                targetData.disabled = true;\n                if (typeof event.target[event.type] === 'function') {\n                    event.target[event.type]();\n                }\n                targetData.disabled = false;\n            }\n        }\n        return !event.defaultPrevented;\n    }\n    function one(elem, type, fn) {\n        if (Array.isArray(type)) {\n            return _handleMultipleEvents(one, elem, type, fn);\n        }\n        const func = function () {\n            off(elem, type, func);\n            fn.apply(this, arguments);\n        };\n        func.guid = fn.guid = fn.guid || Guid.newGUID();\n        on(elem, type, func);\n    }\n    function any(elem, type, fn) {\n        const func = function () {\n            off(elem, type, func);\n            fn.apply(this, arguments);\n        };\n        func.guid = fn.guid = fn.guid || Guid.newGUID();\n        on(elem, type, func);\n    }\n    return {\n        fixEvent: fixEvent,\n        on: domx.eventer.on, //on,\n        off: domx.eventer.off, //off,\n        trigger: domx.eventer.trigger, //trigger,\n        one: domx.eventer.one, //one,\n        any: domx.eventer.one //any\n    };\n});\ndefine('skylark-videojs/event-target',[\n    \"skylark-langx-events/Emitter\",\n    './utils/events'\n], function (Emitter,Events) {\n    'use strict';\n\n    /*\n    const EventTarget = function () {\n    };\n    EventTarget.prototype.allowedEvents_ = {};\n    EventTarget.prototype.on = function (type, fn) {\n        const ael = this.addEventListener;\n        this.addEventListener = () => {\n        };\n        Events.on(this, type, fn);\n        this.addEventListener = ael;\n    };\n    EventTarget.prototype.addEventListener = EventTarget.prototype.on;\n    EventTarget.prototype.off = function (type, fn) {\n        Events.off(this, type, fn);\n    };\n    EventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n    EventTarget.prototype.one = function (type, fn) {\n        const ael = this.addEventListener;\n        this.addEventListener = () => {\n        };\n        Events.one(this, type, fn);\n        this.addEventListener = ael;\n    };\n    EventTarget.prototype.any = function (type, fn) {\n        const ael = this.addEventListener;\n        this.addEventListener = () => {\n        };\n        Events.any(this, type, fn);\n        this.addEventListener = ael;\n    };\n    EventTarget.prototype.trigger = function (event) {\n        const type = event.type || event;\n        if (typeof event === 'string') {\n            event = { type };\n        }\n        event = Events.fixEvent(event);\n        if (this.allowedEvents_[type] && this['on' + type]) {\n            this['on' + type](event);\n        }\n        Events.trigger(this, event);\n    };\n    EventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n    */\n\n    var EventTarget = Emitter.inherit({});\n    EventTarget.prototype.addEventListener = EventTarget.prototype.on;\n    EventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n    EventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n    EventTarget.prototype.any = EventTarget.prototype.one;\n\n    let EVENT_MAP;\n    EventTarget.prototype.queueTrigger = function (event) {\n        if (!EVENT_MAP) {\n            EVENT_MAP = new Map();\n        }\n        const type = event.type || event;\n        let map = EVENT_MAP.get(this);\n        if (!map) {\n            map = new Map();\n            EVENT_MAP.set(this, map);\n        }\n        const oldTimeout = map.get(type);\n        map.delete(type);\n        window.clearTimeout(oldTimeout);\n        const timeout = window.setTimeout(() => {\n            if (map.size === 0) {\n                map = null;\n                EVENT_MAP.delete(this);\n            }\n            this.trigger(event);\n        }, 0);\n        map.set(type, timeout);\n    };\n\n    return EventTarget;\n});\ndefine('skylark-videojs/utils/time-ranges',[],function () {\n    'use strict';\n    function rangeCheck(fnName, index, maxIndex) {\n        if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n            throw new Error(`Failed to execute '${ fnName }' on 'TimeRanges': The index provided (${ index }) is non-numeric or out of bounds (0-${ maxIndex }).`);\n        }\n    }\n    function getRange(fnName, valueIndex, ranges, rangeIndex) {\n        rangeCheck(fnName, rangeIndex, ranges.length - 1);\n        return ranges[rangeIndex][valueIndex];\n    }\n    function createTimeRangesObj(ranges) {\n        if (ranges === undefined || ranges.length === 0) {\n            return {\n                length: 0,\n                start() {\n                    throw new Error('This TimeRanges object is empty');\n                },\n                end() {\n                    throw new Error('This TimeRanges object is empty');\n                }\n            };\n        }\n        return {\n            length: ranges.length,\n            start: getRange.bind(null, 'start', 0, ranges),\n            end: getRange.bind(null, 'end', 1, ranges)\n        };\n    }\n    function createTimeRanges(start, end) {\n        if (Array.isArray(start)) {\n            return createTimeRangesObj(start);\n        } else if (start === undefined || end === undefined) {\n            return createTimeRangesObj();\n        }\n        return createTimeRangesObj([[\n                start,\n                end\n            ]]);\n    }\n    return {\n        createTimeRanges: createTimeRanges,\n        createTimeRanges\n    };\n});\ndefine('skylark-videojs/utils/buffer',['./time-ranges'], function (timeRages) {\n    'use strict';\n    function bufferedPercent(buffered, duration) {\n        let bufferedDuration = 0;\n        let start;\n        let end;\n        if (!duration) {\n            return 0;\n        }\n        if (!buffered || !buffered.length) {\n            buffered = timeRages.createTimeRange(0, 0);\n        }\n        for (let i = 0; i < buffered.length; i++) {\n            start = buffered.start(i);\n            end = buffered.end(i);\n            if (end > duration) {\n                end = duration;\n            }\n            bufferedDuration += end - start;\n        }\n        return bufferedDuration / duration;\n    }\n    return { bufferedPercent: bufferedPercent };\n});\ndefine('skylark-videojs/fullscreen-api',[\n    \"skylark-domx-browser\"\n], function (browser) {\n    'use strict';\n    /*\n    const FullscreenApi = { prefixed: true };\n    const apiMap = [\n        [\n            'requestFullscreen',\n            'exitFullscreen',\n            'fullscreenElement',\n            'fullscreenEnabled',\n            'fullscreenchange',\n            'fullscreenerror',\n            'fullscreen'\n        ],\n        [\n            'webkitRequestFullscreen',\n            'webkitExitFullscreen',\n            'webkitFullscreenElement',\n            'webkitFullscreenEnabled',\n            'webkitfullscreenchange',\n            'webkitfullscreenerror',\n            '-webkit-full-screen'\n        ],\n        [\n            'mozRequestFullScreen',\n            'mozCancelFullScreen',\n            'mozFullScreenElement',\n            'mozFullScreenEnabled',\n            'mozfullscreenchange',\n            'mozfullscreenerror',\n            '-moz-full-screen'\n        ],\n        [\n            'msRequestFullscreen',\n            'msExitFullscreen',\n            'msFullscreenElement',\n            'msFullscreenEnabled',\n            'MSFullscreenChange',\n            'MSFullscreenError',\n            '-ms-fullscreen'\n        ]\n    ];\n    const specApi = apiMap[0];\n    let browserApi;\n    for (let i = 0; i < apiMap.length; i++) {\n        if (apiMap[i][1] in document) {\n            browserApi = apiMap[i];\n            break;\n        }\n    }\n    if (browserApi) {\n        for (let i = 0; i < browserApi.length; i++) {\n            FullscreenApi[specApi[i]] = browserApi[i];\n        }\n        FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n    }\n    return FullscreenApi;\n    */\n\n    return browser.support.fullscreen;\n});\ndefine('skylark-videojs/media-error',['./utils/obj'], function (obj) {\n    'use strict';\n    function MediaError(value) {\n        if (value instanceof MediaError) {\n            return value;\n        }\n        if (typeof value === 'number') {\n            this.code = value;\n        } else if (typeof value === 'string') {\n            this.message = value;\n        } else if (obj.isObject(value)) {\n            if (typeof value.code === 'number') {\n                this.code = value.code;\n            }\n            obj.assign(this, value);\n        }\n        if (!this.message) {\n            this.message = MediaError.defaultMessages[this.code] || '';\n        }\n    }\n    MediaError.prototype.code = 0;\n    MediaError.prototype.message = '';\n    MediaError.prototype.status = null;\n    MediaError.errorTypes = [\n        'MEDIA_ERR_CUSTOM',\n        'MEDIA_ERR_ABORTED',\n        'MEDIA_ERR_NETWORK',\n        'MEDIA_ERR_DECODE',\n        'MEDIA_ERR_SRC_NOT_SUPPORTED',\n        'MEDIA_ERR_ENCRYPTED'\n    ];\n    MediaError.defaultMessages = {\n        1: 'You aborted the media playback',\n        2: 'A network error caused the media download to fail part-way.',\n        3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n        4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n        5: 'The media is encrypted and we do not have the keys to decrypt it.'\n    };\n    for (let errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n        MediaError[MediaError.errorTypes[errNum]] = errNum;\n        MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n    }\n    return MediaError;\n});\ndefine('skylark-videojs/utils/safeParseTuple',[],function(){\r\n\tfunction safeParseTuple(obj, reviver) {\r\n\t    var json\r\n\t    var error = null\r\n\r\n\t    try {\r\n\t        json = JSON.parse(obj, reviver)\r\n\t    } catch (err) {\r\n\t        error = err\r\n\t    }\r\n\r\n\t    return [error, json]\r\n\t}\r\n\r\n\treturn \tsafeParseTuple;\r\n});\r\n\r\n\ndefine('skylark-videojs/utils/promise',[],function () {\n    'use strict';\n    function isPromise(value) {\n        return value !== undefined && value !== null && typeof value.then === 'function';\n    }\n    function silencePromise(value) {\n        if (isPromise(value)) {\n            value.then(null, e => {\n            });\n        }\n    }\n    return {\n        isPromise: isPromise,\n        silencePromise: silencePromise\n    };\n});\ndefine('skylark-videojs/tracks/text-track-list-converter',[],function () {\n    'use strict';\n    const trackToJson_ = function (track) {\n        const ret = [\n            'kind',\n            'label',\n            'language',\n            'id',\n            'inBandMetadataTrackDispatchType',\n            'mode',\n            'src'\n        ].reduce((acc, prop, i) => {\n            if (track[prop]) {\n                acc[prop] = track[prop];\n            }\n            return acc;\n        }, {\n            cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n                return {\n                    startTime: cue.startTime,\n                    endTime: cue.endTime,\n                    text: cue.text,\n                    id: cue.id\n                };\n            })\n        });\n        return ret;\n    };\n    const textTracksToJson = function (tech) {\n        const trackEls = tech.$$('track');\n        const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n        const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n            const json = trackToJson_(trackEl.track);\n            if (trackEl.src) {\n                json.src = trackEl.src;\n            }\n            return json;\n        });\n        return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n            return trackObjs.indexOf(track) === -1;\n        }).map(trackToJson_));\n    };\n    const jsonToTextTracks = function (json, tech) {\n        json.forEach(function (track) {\n            const addedTrack = tech.addRemoteTextTrack(track).track;\n            if (!track.src && track.cues) {\n                track.cues.forEach(cue => addedTrack.addCue(cue));\n            }\n        });\n        return tech.textTracks();\n    };\n    return {\n        textTracksToJson,\n        jsonToTextTracks,\n        trackToJson_\n    };\n});\ndefine('skylark-videojs/utils/keycode',[],function(){\r\n  // Source: http://jsfiddle.net/vWx8V/\r\n  // http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\r\n\r\n  /**\r\n   * Conenience method returns corresponding value for given keyName or keyCode.\r\n   *\r\n   * @param {Mixed} keyCode {Number} or keyName {String}\r\n   * @return {Mixed}\r\n   * @api public\r\n   */\r\n\r\n  function keyCode(searchInput) {\r\n    // Keyboard Events\r\n    if (searchInput && 'object' === typeof searchInput) {\r\n      var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\r\n      if (hasKeyCode) searchInput = hasKeyCode\r\n    }\r\n\r\n    // Numbers\r\n    if ('number' === typeof searchInput) return names[searchInput]\r\n\r\n    // Everything else (cast to string)\r\n    var search = String(searchInput)\r\n\r\n    // check codes\r\n    var foundNamedKey = codes[search.toLowerCase()]\r\n    if (foundNamedKey) return foundNamedKey\r\n\r\n    // check aliases\r\n    var foundNamedKey = aliases[search.toLowerCase()]\r\n    if (foundNamedKey) return foundNamedKey\r\n\r\n    // weird character?\r\n    if (search.length === 1) return search.charCodeAt(0)\r\n\r\n    return undefined\r\n  }\r\n\r\n  /**\r\n   * Compares a keyboard event with a given keyCode or keyName.\r\n   *\r\n   * @param {Event} event Keyboard event that should be tested\r\n   * @param {Mixed} keyCode {Number} or keyName {String}\r\n   * @return {Boolean}\r\n   * @api public\r\n   */\r\n  keyCode.isEventKey = function isEventKey(event, nameOrCode) {\r\n    if (event && 'object' === typeof event) {\r\n      var keyCode = event.which || event.keyCode || event.charCode\r\n      if (keyCode === null || keyCode === undefined) { return false; }\r\n      if (typeof nameOrCode === 'string') {\r\n        // check codes\r\n        var foundNamedKey = codes[nameOrCode.toLowerCase()]\r\n        if (foundNamedKey) { return foundNamedKey === keyCode; }\r\n      \r\n        // check aliases\r\n        var foundNamedKey = aliases[nameOrCode.toLowerCase()]\r\n        if (foundNamedKey) { return foundNamedKey === keyCode; }\r\n      } else if (typeof nameOrCode === 'number') {\r\n        return nameOrCode === keyCode;\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  var exports = keyCode;\r\n\r\n  /**\r\n   * Get by name\r\n   *\r\n   *   exports.code['enter'] // => 13\r\n   */\r\n\r\n  var codes = exports.code = exports.codes = {\r\n    'backspace': 8,\r\n    'tab': 9,\r\n    'enter': 13,\r\n    'shift': 16,\r\n    'ctrl': 17,\r\n    'alt': 18,\r\n    'pause/break': 19,\r\n    'caps lock': 20,\r\n    'esc': 27,\r\n    'space': 32,\r\n    'page up': 33,\r\n    'page down': 34,\r\n    'end': 35,\r\n    'home': 36,\r\n    'left': 37,\r\n    'up': 38,\r\n    'right': 39,\r\n    'down': 40,\r\n    'insert': 45,\r\n    'delete': 46,\r\n    'command': 91,\r\n    'left command': 91,\r\n    'right command': 93,\r\n    'numpad *': 106,\r\n    'numpad +': 107,\r\n    'numpad -': 109,\r\n    'numpad .': 110,\r\n    'numpad /': 111,\r\n    'num lock': 144,\r\n    'scroll lock': 145,\r\n    'my computer': 182,\r\n    'my calculator': 183,\r\n    ';': 186,\r\n    '=': 187,\r\n    ',': 188,\r\n    '-': 189,\r\n    '.': 190,\r\n    '/': 191,\r\n    '`': 192,\r\n    '[': 219,\r\n    '\\\\': 220,\r\n    ']': 221,\r\n    \"'\": 222\r\n  }\r\n\r\n  // Helper aliases\r\n\r\n  var aliases = exports.aliases = {\r\n    'windows': 91,\r\n    '⇧': 16,\r\n    '⌥': 18,\r\n    '⌃': 17,\r\n    '⌘': 91,\r\n    'ctl': 17,\r\n    'control': 17,\r\n    'option': 18,\r\n    'pause': 19,\r\n    'break': 19,\r\n    'caps': 20,\r\n    'return': 13,\r\n    'escape': 27,\r\n    'spc': 32,\r\n    'spacebar': 32,\r\n    'pgup': 33,\r\n    'pgdn': 34,\r\n    'ins': 45,\r\n    'del': 46,\r\n    'cmd': 91\r\n  }\r\n\r\n  /*!\r\n   * Programatically add the following\r\n   */\r\n\r\n  // lower case chars\r\n  for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\r\n\r\n  // numbers\r\n  for (var i = 48; i < 58; i++) codes[i - 48] = i\r\n\r\n  // function keys\r\n  for (i = 1; i < 13; i++) codes['f'+i] = i + 111\r\n\r\n  // numpad keys\r\n  for (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\r\n\r\n  /**\r\n   * Get by code\r\n   *\r\n   *   exports.name[13] // => 'Enter'\r\n   */\r\n\r\n  var names = exports.names = exports.title = {} // title for backward compat\r\n\r\n  // Create reverse mapping\r\n  for (i in codes) names[codes[i]] = i\r\n\r\n  // Add aliases\r\n  for (var alias in aliases) {\r\n    codes[alias] = aliases[alias]\r\n  }\r\n\r\n  return exports;\r\n\r\n});\ndefine('skylark-videojs/modal-dialog',[\n    'skylark-langx-globals/document',\n    './utils/dom',\n    './component',\n    './utils/keycode'\n], function (document,Dom, Component, keycode) {\n    'use strict';\n    const MODAL_CLASS_NAME = 'vjs-modal-dialog';\n    class ModalDialog extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n            this.closeable(!this.options_.uncloseable);\n            this.content(this.options_.content);\n            this.contentEl_ = Dom.createEl('div', { className: `${ MODAL_CLASS_NAME }-content` }, { role: 'document' });\n            this.descEl_ = Dom.createEl('p', {\n                className: `${ MODAL_CLASS_NAME }-description vjs-control-text`,\n                id: this.el().getAttribute('aria-describedby')\n            });\n            Dom.textContent(this.descEl_, this.description());\n            this.el_.appendChild(this.descEl_);\n            this.el_.appendChild(this.contentEl_);\n        }\n        createEl() {\n            return super.createEl('div', {\n                className: this.buildCSSClass(),\n                tabIndex: -1\n            }, {\n                'aria-describedby': `${ this.id() }_description`,\n                'aria-hidden': 'true',\n                'aria-label': this.label(),\n                'role': 'dialog'\n            });\n        }\n        dispose() {\n            this.contentEl_ = null;\n            this.descEl_ = null;\n            this.previouslyActiveEl_ = null;\n            super.dispose();\n        }\n        buildCSSClass() {\n            return `${ MODAL_CLASS_NAME } vjs-hidden ${ super.buildCSSClass() }`;\n        }\n        label() {\n            return this.localize(this.options_.label || 'Modal Window');\n        }\n        description() {\n            let desc = this.options_.description || this.localize('This is a modal window.');\n            if (this.closeable()) {\n                desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n            }\n            return desc;\n        }\n        open() {\n            if (!this.opened_) {\n                const player = this.player();\n                this.trigger('beforemodalopen');\n                this.opened_ = true;\n                if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n                    this.fill();\n                }\n                this.wasPlaying_ = !player.paused();\n                if (this.options_.pauseOnOpen && this.wasPlaying_) {\n                    player.pause();\n                }\n                this.listenTo('keydown', this.handleKeyDown);\n                this.hadControls_ = player.controls();\n                player.controls(false);\n                this.show();\n                this.conditionalFocus_();\n                this.el().setAttribute('aria-hidden', 'false');\n                this.trigger('modalopen');\n                this.hasBeenOpened_ = true;\n            }\n        }\n        opened(value) {\n            if (typeof value === 'boolean') {\n                this[value ? 'open' : 'close']();\n            }\n            return this.opened_;\n        }\n        close() {\n            if (!this.opened_) {\n                return;\n            }\n            const player = this.player();\n            this.trigger('beforemodalclose');\n            this.opened_ = false;\n            if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n                player.play();\n            }\n            this.unlistenTo('keydown', this.handleKeyDown);\n            if (this.hadControls_) {\n                player.controls(true);\n            }\n            this.hide();\n            this.el().setAttribute('aria-hidden', 'true');\n            this.trigger('modalclose');\n            this.conditionalBlur_();\n            if (this.options_.temporary) {\n                this.dispose();\n            }\n        }\n        closeable(value) {\n            if (typeof value === 'boolean') {\n                const closeable = this.closeable_ = !!value;\n                let close = this.getChild('closeButton');\n                if (closeable && !close) {\n                    const temp = this.contentEl_;\n                    this.contentEl_ = this.el_;\n                    close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n                    this.contentEl_ = temp;\n                    this.listenTo(close, 'close', this.close);\n                }\n                if (!closeable && close) {\n                    this.unlistenTo(close, 'close', this.close);\n                    this.removeChild(close);\n                    close.dispose();\n                }\n            }\n            return this.closeable_;\n        }\n        fill() {\n            this.fillWith(this.content());\n        }\n        fillWith(content) {\n            const contentEl = this.contentEl();\n            const parentEl = contentEl.parentNode;\n            const nextSiblingEl = contentEl.nextSibling;\n            this.trigger('beforemodalfill');\n            this.hasBeenFilled_ = true;\n            parentEl.removeChild(contentEl);\n            this.empty();\n            Dom.insertContent(contentEl, content);\n            this.trigger('modalfill');\n            if (nextSiblingEl) {\n                parentEl.insertBefore(contentEl, nextSiblingEl);\n            } else {\n                parentEl.appendChild(contentEl);\n            }\n            const closeButton = this.getChild('closeButton');\n            if (closeButton) {\n                parentEl.appendChild(closeButton.el_);\n            }\n        }\n        empty() {\n            this.trigger('beforemodalempty');\n            Dom.emptyEl(this.contentEl());\n            this.trigger('modalempty');\n        }\n        content(value) {\n            if (typeof value !== 'undefined') {\n                this.content_ = value;\n            }\n            return this.content_;\n        }\n        conditionalFocus_() {\n            const activeEl = document.activeElement;\n            const playerEl = this.player_.el_;\n            this.previouslyActiveEl_ = null;\n            if (playerEl.contains(activeEl) || playerEl === activeEl) {\n                this.previouslyActiveEl_ = activeEl;\n                this.focus();\n            }\n        }\n        conditionalBlur_() {\n            if (this.previouslyActiveEl_) {\n                this.previouslyActiveEl_.focus();\n                this.previouslyActiveEl_ = null;\n            }\n        }\n        handleKeyDown(event) {\n            event.stopPropagation();\n            if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n                event.preventDefault();\n                this.close();\n                return;\n            }\n            if (!keycode.isEventKey(event, 'Tab')) {\n                return;\n            }\n            const focusableEls = this.focusableEls_();\n            const activeEl = this.el_.querySelector(':focus');\n            let focusIndex;\n            for (let i = 0; i < focusableEls.length; i++) {\n                if (activeEl === focusableEls[i]) {\n                    focusIndex = i;\n                    break;\n                }\n            }\n            if (document.activeElement === this.el_) {\n                focusIndex = 0;\n            }\n            if (event.shiftKey && focusIndex === 0) {\n                focusableEls[focusableEls.length - 1].focus();\n                event.preventDefault();\n            } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n                focusableEls[0].focus();\n                event.preventDefault();\n            }\n        }\n        focusableEls_() {\n            const allChildren = this.el_.querySelectorAll('*');\n            return Array.prototype.filter.call(allChildren, child => {\n                return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || (child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement) || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n            });\n        }\n    }\n    ModalDialog.prototype.options_ = {\n        pauseOnOpen: true,\n        temporary: true\n    };\n    Component.registerComponent('ModalDialog', ModalDialog);\n    return ModalDialog;\n});\ndefine('skylark-videojs/tracks/track-list',[\n    '../event-target'\n    ///'../mixins/evented'\n], function (EventTarget) {\n    'use strict';\n    class TrackList extends EventTarget {\n        constructor(tracks = []) {\n            super();\n            this.tracks_ = [];\n            Object.defineProperty(this, 'length', {\n                get() {\n                    return this.tracks_.length;\n                }\n            });\n            for (let i = 0; i < tracks.length; i++) {\n                this.addTrack(tracks[i]);\n            }\n        }\n        addTrack(track) {\n            const index = this.tracks_.length;\n            if (!('' + index in this)) {\n                Object.defineProperty(this, index, {\n                    get() {\n                        return this.tracks_[index];\n                    }\n                });\n            }\n            if (this.tracks_.indexOf(track) === -1) {\n                this.tracks_.push(track);\n                this.trigger({\n                    track,\n                    type: 'addtrack',\n                    target: this\n                });\n            }\n            track.labelchange_ = () => {\n                this.trigger({\n                    track,\n                    type: 'labelchange',\n                    target: this\n                });\n            };\n            ///if (evented.isEvented(track)) {\n            if (track.addEventListener) {\n                track.addEventListener('labelchange', track.labelchange_);\n            }\n        }\n        removeTrack(rtrack) {\n            let track;\n            for (let i = 0, l = this.length; i < l; i++) {\n                if (this[i] === rtrack) {\n                    track = this[i];\n                    if (track.off) {\n                        track.off();\n                    }\n                    this.tracks_.splice(i, 1);\n                    break;\n                }\n            }\n            if (!track) {\n                return;\n            }\n            this.trigger({\n                track,\n                type: 'removetrack',\n                target: this\n            });\n        }\n        getTrackById(id) {\n            let result = null;\n            for (let i = 0, l = this.length; i < l; i++) {\n                const track = this[i];\n                if (track.id === id) {\n                    result = track;\n                    break;\n                }\n            }\n            return result;\n        }\n    }\n    TrackList.prototype.allowedEvents_ = {\n        change: 'change',\n        addtrack: 'addtrack',\n        removetrack: 'removetrack',\n        labelchange: 'labelchange'\n    };\n    for (const event in TrackList.prototype.allowedEvents_) {\n        TrackList.prototype['on' + event] = null;\n    }\n    return TrackList;\n});\ndefine('skylark-videojs/tracks/audio-track-list',[\n    './track-list'\n], function (TrackList) {\n    'use strict';\n    const disableOthers = function (list, track) {\n        for (let i = 0; i < list.length; i++) {\n            if (!Object.keys(list[i]).length || track.id === list[i].id) {\n                continue;\n            }\n            list[i].enabled = false;\n        }\n    };\n    class AudioTrackList extends TrackList {\n        constructor(tracks = []) {\n            for (let i = tracks.length - 1; i >= 0; i--) {\n                if (tracks[i].enabled) {\n                    disableOthers(tracks, tracks[i]);\n                    break;\n                }\n            }\n            super(tracks);\n            this.changing_ = false;\n        }\n        addTrack(track) {\n            if (track.enabled) {\n                disableOthers(this, track);\n            }\n            super.addTrack(track);\n            if (!track.addEventListener) {\n                return;\n            }\n            track.enabledChange_ = () => {\n                if (this.changing_) {\n                    return;\n                }\n                this.changing_ = true;\n                disableOthers(this, track);\n                this.changing_ = false;\n                this.trigger('change');\n            };\n            track.addEventListener('enabledchange', track.enabledChange_);\n        }\n        removeTrack(rtrack) {\n            super.removeTrack(rtrack);\n            if (rtrack.removeEventListener && rtrack.enabledChange_) {\n                rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n                rtrack.enabledChange_ = null;\n            }\n        }\n    }\n    return AudioTrackList;\n});\ndefine('skylark-videojs/tracks/video-track-list',['./track-list'], function (TrackList) {\n    'use strict';\n    const disableOthers = function (list, track) {\n        for (let i = 0; i < list.length; i++) {\n            if (!Object.keys(list[i]).length || track.id === list[i].id) {\n                continue;\n            }\n            list[i].selected = false;\n        }\n    };\n    class VideoTrackList extends TrackList {\n        constructor(tracks = []) {\n            for (let i = tracks.length - 1; i >= 0; i--) {\n                if (tracks[i].selected) {\n                    disableOthers(tracks, tracks[i]);\n                    break;\n                }\n            }\n            super(tracks);\n            this.changing_ = false;\n            Object.defineProperty(this, 'selectedIndex', {\n                get() {\n                    for (let i = 0; i < this.length; i++) {\n                        if (this[i].selected) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                },\n                set() {\n                }\n            });\n        }\n        addTrack(track) {\n            if (track.selected) {\n                disableOthers(this, track);\n            }\n            super.addTrack(track);\n            if (!track.addEventListener) {\n                return;\n            }\n            track.selectedChange_ = () => {\n                if (this.changing_) {\n                    return;\n                }\n                this.changing_ = true;\n                disableOthers(this, track);\n                this.changing_ = false;\n                this.trigger('change');\n            };\n            track.addEventListener('selectedchange', track.selectedChange_);\n        }\n        removeTrack(rtrack) {\n            super.removeTrack(rtrack);\n            if (rtrack.removeEventListener && rtrack.selectedChange_) {\n                rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n                rtrack.selectedChange_ = null;\n            }\n        }\n    }\n    return VideoTrackList;\n});\ndefine('skylark-videojs/tracks/text-track-list',[\n    './track-list'\n], function (TrackList) {\n\n    'use strict';\n    \n    class TextTrackList extends TrackList {\n        addTrack(track) {\n            super.addTrack(track);\n            if (!this.queueChange_) {\n                this.queueChange_ = () => this.queueTrigger('change');\n            }\n            if (!this.triggerSelectedlanguagechange) {\n                this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n            }\n            track.addEventListener('modechange', this.queueChange_);\n            const nonLanguageTextTrackKind = [\n                'metadata',\n                'chapters'\n            ];\n            if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n                track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n            }\n        }\n        removeTrack(rtrack) {\n            super.removeTrack(rtrack);\n            if (rtrack.removeEventListener) {\n                if (this.queueChange_) {\n                    rtrack.removeEventListener('modechange', this.queueChange_);\n                }\n                if (this.selectedlanguagechange_) {\n                    rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n                }\n            }\n        }\n    }\n\n    return TextTrackList;\n});\ndefine('skylark-videojs/tracks/html-track-element-list',[],function () {\n    'use strict';\n    class HtmlTrackElementList {\n        constructor(trackElements = []) {\n            this.trackElements_ = [];\n            Object.defineProperty(this, 'length', {\n                get() {\n                    return this.trackElements_.length;\n                }\n            });\n            for (let i = 0, length = trackElements.length; i < length; i++) {\n                this.addTrackElement_(trackElements[i]);\n            }\n        }\n        addTrackElement_(trackElement) {\n            const index = this.trackElements_.length;\n            if (!('' + index in this)) {\n                Object.defineProperty(this, index, {\n                    get() {\n                        return this.trackElements_[index];\n                    }\n                });\n            }\n            if (this.trackElements_.indexOf(trackElement) === -1) {\n                this.trackElements_.push(trackElement);\n            }\n        }\n        getTrackElementByTrack_(track) {\n            let trackElement_;\n            for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n                if (track === this.trackElements_[i].track) {\n                    trackElement_ = this.trackElements_[i];\n                    break;\n                }\n            }\n            return trackElement_;\n        }\n        removeTrackElement_(trackElement) {\n            for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n                if (trackElement === this.trackElements_[i]) {\n                    if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n                        this.trackElements_[i].track.off();\n                    }\n                    if (typeof this.trackElements_[i].off === 'function') {\n                        this.trackElements_[i].off();\n                    }\n                    this.trackElements_.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n    return HtmlTrackElementList;\n});\ndefine('skylark-videojs/tracks/text-track-cue-list',[],function () {\n    'use strict';\n    class TextTrackCueList {\n        constructor(cues) {\n            TextTrackCueList.prototype.setCues_.call(this, cues);\n            Object.defineProperty(this, 'length', {\n                get() {\n                    return this.length_;\n                }\n            });\n        }\n        setCues_(cues) {\n            const oldLength = this.length || 0;\n            let i = 0;\n            const l = cues.length;\n            this.cues_ = cues;\n            this.length_ = cues.length;\n            const defineProp = function (index) {\n                if (!('' + index in this)) {\n                    Object.defineProperty(this, '' + index, {\n                        get() {\n                            return this.cues_[index];\n                        }\n                    });\n                }\n            };\n            if (oldLength < l) {\n                i = oldLength;\n                for (; i < l; i++) {\n                    defineProp.call(this, i);\n                }\n            }\n        }\n        getCueById(id) {\n            let result = null;\n            for (let i = 0, l = this.length; i < l; i++) {\n                const cue = this[i];\n                if (cue.id === id) {\n                    result = cue;\n                    break;\n                }\n            }\n            return result;\n        }\n    }\n    return TextTrackCueList;\n});\ndefine('skylark-videojs/tracks/track-enums',[],function () {\n    'use strict';\n    const VideoTrackKind = {\n        alternative: 'alternative',\n        captions: 'captions',\n        main: 'main',\n        sign: 'sign',\n        subtitles: 'subtitles',\n        commentary: 'commentary'\n    };\n    const AudioTrackKind = {\n        'alternative': 'alternative',\n        'descriptions': 'descriptions',\n        'main': 'main',\n        'main-desc': 'main-desc',\n        'translation': 'translation',\n        'commentary': 'commentary'\n    };\n    const TextTrackKind = {\n        subtitles: 'subtitles',\n        captions: 'captions',\n        descriptions: 'descriptions',\n        chapters: 'chapters',\n        metadata: 'metadata'\n    };\n    const TextTrackMode = {\n        disabled: 'disabled',\n        hidden: 'hidden',\n        showing: 'showing'\n    };\n    return {\n        VideoTrackKind: VideoTrackKind,\n        AudioTrackKind: AudioTrackKind,\n        TextTrackKind: TextTrackKind,\n        TextTrackMode: TextTrackMode\n    };\n});\ndefine('skylark-videojs/tracks/track',[\n    '../utils/guid',\n    '../event-target'\n], function (Guid, EventTarget) {\n    'use strict';\n    class Track extends EventTarget {\n        constructor(options = {}) {\n            super();\n            const trackProps = {\n                id: options.id || 'vjs_track_' + Guid.newGUID(),\n                kind: options.kind || '',\n                language: options.language || ''\n            };\n            let label = options.label || '';\n            for (const key in trackProps) {\n                Object.defineProperty(this, key, {\n                    get() {\n                        return trackProps[key];\n                    },\n                    set() {\n                    }\n                });\n            }\n            Object.defineProperty(this, 'label', {\n                get() {\n                    return label;\n                },\n                set(newLabel) {\n                    if (newLabel !== label) {\n                        label = newLabel;\n                        this.trigger('labelchange');\n                    }\n                }\n            });\n        }\n    }\n    return Track;\n});\ndefine('skylark-videojs/utils/url',[\n    'skylark-langx-globals/document'\n], function (document) {\n    'use strict';\n    const parseUrl = function (url) {\n        const props = [\n            'protocol',\n            'hostname',\n            'port',\n            'pathname',\n            'search',\n            'hash',\n            'host'\n        ];\n        let a = document.createElement('a');\n        a.href = url;\n        const addToBody = a.host === '' && a.protocol !== 'file:';\n        let div;\n        if (addToBody) {\n            div = document.createElement('div');\n            div.innerHTML = `<a href=\"${ url }\"></a>`;\n            a = div.firstChild;\n            div.setAttribute('style', 'display:none; position:absolute;');\n            document.body.appendChild(div);\n        }\n        const details = {};\n        for (let i = 0; i < props.length; i++) {\n            details[props[i]] = a[props[i]];\n        }\n        if (details.protocol === 'http:') {\n            details.host = details.host.replace(/:80$/, '');\n        }\n        if (details.protocol === 'https:') {\n            details.host = details.host.replace(/:443$/, '');\n        }\n        if (!details.protocol) {\n            details.protocol = window.location.protocol;\n        }\n        if (addToBody) {\n            document.body.removeChild(div);\n        }\n        return details;\n    };\n    const getAbsoluteURL = function (url) {\n        if (!url.match(/^https?:\\/\\//)) {\n            const div = document.createElement('div');\n            div.innerHTML = `<a href=\"${ url }\">x</a>`;\n            url = div.firstChild.href;\n        }\n        return url;\n    };\n    const getFileExtension = function (path) {\n        if (typeof path === 'string') {\n            const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n            const pathParts = splitPathRe.exec(path);\n            if (pathParts) {\n                return pathParts.pop().toLowerCase();\n            }\n        }\n        return '';\n    };\n    const isCrossOrigin = function (url, winLoc = window.location) {\n        const urlInfo = parseUrl(url);\n        const srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n        const crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n        return crossOrigin;\n    };\n    return {\n        parseUrl: parseUrl,\n        getAbsoluteURL: getAbsoluteURL,\n        getFileExtension: getFileExtension,\n        isCrossOrigin: isCrossOrigin\n    };\n});\ndefine('skylark-videojs/utils/xhr',[\r\n\t\"skylark-langx-globals/window\",\r\n\t\"skylark-langx-objects\",\r\n\t\"skylark-langx-types\",\r\n\t\"skylark-net-http/Xhr\"\r\n],function(window,objects,types,_Xhr){\r\n\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * @license\r\n\t * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\r\n\t * Copyright (c) 2014 David Björklund\r\n\t * Available under the MIT license\r\n\t * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\r\n\t */\r\n\r\n\tvar parseHeaders = function(headers) {\r\n\t    var result = {};\r\n\r\n\t    if (!headers) {\r\n\t        return result;\r\n\t    }\r\n\r\n\t    headers.trim().split('\\n').forEach(function(row) {\r\n\t        var index = row.indexOf(':');\r\n\t        var key = row.slice(0, index).trim().toLowerCase();\r\n\t        var value = row.slice(index + 1).trim();\r\n\r\n\t        if (typeof(result[key]) === 'undefined') {\r\n\t          result[key] = value\r\n\t        } else if (Array.isArray(result[key])) {\r\n\t          result[key].push(value)\r\n\t        } else {\r\n\t          result[key] = [ result[key], value ]\r\n\t        }\r\n\t    });\r\n\r\n\t    return result;\r\n\t};\r\n\r\n\r\n\tcreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\r\n\tcreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\r\n\r\n\tforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\r\n\t    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\r\n\t        options = initParams(uri, options, callback)\r\n\t        options.method = method.toUpperCase()\r\n\t        return _createXHR(options)\r\n\t    }\r\n\t})\r\n\r\n\tfunction forEachArray(array, iterator) {\r\n\t    for (var i = 0; i < array.length; i++) {\r\n\t        iterator(array[i])\r\n\t    }\r\n\t}\r\n\r\n\tfunction isEmpty(obj){\r\n\t    for(var i in obj){\r\n\t        if(obj.hasOwnProperty(i)) return false\r\n\t    }\r\n\t    return true\r\n\t}\r\n\r\n\tfunction initParams(uri, options, callback) {\r\n\t    var params = uri\r\n\r\n\t    if (types.isFunction(options)) {\r\n\t        callback = options\r\n\t        if (typeof uri === \"string\") {\r\n\t            params = {uri:uri}\r\n\t        }\r\n\t    } else {\r\n\t        params = objects.mixin({}, options, {uri: uri})\r\n\t    }\r\n\r\n\t    params.callback = callback\r\n\t    return params\r\n\t}\r\n\r\n\tfunction createXHR(uri, options, callback) {\r\n\t    options = initParams(uri, options, callback)\r\n\t    return _createXHR(options)\r\n\t}\r\n\r\n\tfunction _createXHR(options) {\r\n\t    if(typeof options.callback === \"undefined\"){\r\n\t        throw new Error(\"callback argument missing\")\r\n\t    }\r\n\r\n\t    var called = false\r\n\t    var callback = function cbOnce(err, response, body){\r\n\t        if(!called){\r\n\t            called = true\r\n\t            options.callback(err, response, body)\r\n\t        }\r\n\t    }\r\n\r\n\t    function readystatechange() {\r\n\t        if (xhr.readyState === 4) {\r\n\t            setTimeout(loadFunc, 0)\r\n\t        }\r\n\t    }\r\n\r\n\t    function getBody() {\r\n\t        // Chrome with requestType=blob throws errors arround when even testing access to responseText\r\n\t        var body = undefined\r\n\r\n\t        if (xhr.response) {\r\n\t            body = xhr.response\r\n\t        } else {\r\n\t            body = xhr.responseText || getXml(xhr)\r\n\t        }\r\n\r\n\t        if (isJson) {\r\n\t            try {\r\n\t                body = JSON.parse(body)\r\n\t            } catch (e) {}\r\n\t        }\r\n\r\n\t        return body\r\n\t    }\r\n\r\n\t    function errorFunc(evt) {\r\n\t        clearTimeout(timeoutTimer)\r\n\t        if(!(evt instanceof Error)){\r\n\t            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\r\n\t        }\r\n\t        evt.statusCode = 0\r\n\t        return callback(evt, failureResponse)\r\n\t    }\r\n\r\n\t    // will load the data & process the response in a special response object\r\n\t    function loadFunc() {\r\n\t        if (aborted) return\r\n\t        var status\r\n\t        clearTimeout(timeoutTimer)\r\n\t        if(options.useXDR && xhr.status===undefined) {\r\n\t            //IE8 CORS GET successful response doesn't have a status field, but body is fine\r\n\t            status = 200\r\n\t        } else {\r\n\t            status = (xhr.status === 1223 ? 204 : xhr.status)\r\n\t        }\r\n\t        var response = failureResponse\r\n\t        var err = null\r\n\r\n\t        if (status !== 0){\r\n\t            response = {\r\n\t                body: getBody(),\r\n\t                statusCode: status,\r\n\t                method: method,\r\n\t                headers: {},\r\n\t                url: uri,\r\n\t                rawRequest: xhr\r\n\t            }\r\n\t            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\r\n\t                response.headers = parseHeaders(xhr.getAllResponseHeaders())\r\n\t            }\r\n\t        } else {\r\n\t            err = new Error(\"Internal XMLHttpRequest Error\")\r\n\t        }\r\n\t        return callback(err, response, response.body)\r\n\t    }\r\n\r\n\t    var xhr = options.xhr || null\r\n\r\n\t    if (!xhr) {\r\n\t        if (options.cors || options.useXDR) {\r\n\t            xhr = new createXHR.XDomainRequest()\r\n\t        }else{\r\n\t            xhr = new createXHR.XMLHttpRequest()\r\n\t        }\r\n\t    }\r\n\r\n\t    var key\r\n\t    var aborted\r\n\t    var uri = xhr.url = options.uri || options.url\r\n\t    var method = xhr.method = options.method || \"GET\"\r\n\t    var body = options.body || options.data\r\n\t    var headers = xhr.headers = options.headers || {}\r\n\t    var sync = !!options.sync\r\n\t    var isJson = false\r\n\t    var timeoutTimer\r\n\t    var failureResponse = {\r\n\t        body: undefined,\r\n\t        headers: {},\r\n\t        statusCode: 0,\r\n\t        method: method,\r\n\t        url: uri,\r\n\t        rawRequest: xhr\r\n\t    }\r\n\r\n\t    if (\"json\" in options && options.json !== false) {\r\n\t        isJson = true\r\n\t        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\r\n\t        if (method !== \"GET\" && method !== \"HEAD\") {\r\n\t            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\r\n\t            body = JSON.stringify(options.json === true ? body : options.json)\r\n\t        }\r\n\t    }\r\n\r\n\t    xhr.onreadystatechange = readystatechange\r\n\t    xhr.onload = loadFunc\r\n\t    xhr.onerror = errorFunc\r\n\t    // IE9 must have onprogress be set to a unique function.\r\n\t    xhr.onprogress = function () {\r\n\t        // IE must die\r\n\t    }\r\n\t    xhr.onabort = function(){\r\n\t        aborted = true;\r\n\t    }\r\n\t    xhr.ontimeout = errorFunc\r\n\t    xhr.open(method, uri, !sync, options.username, options.password)\r\n\t    //has to be after open\r\n\t    if(!sync) {\r\n\t        xhr.withCredentials = !!options.withCredentials\r\n\t    }\r\n\t    // Cannot set timeout with sync request\r\n\t    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\r\n\t    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\r\n\t    if (!sync && options.timeout > 0 ) {\r\n\t        timeoutTimer = setTimeout(function(){\r\n\t            if (aborted) return\r\n\t            aborted = true//IE9 may still call readystatechange\r\n\t            xhr.abort(\"timeout\")\r\n\t            var e = new Error(\"XMLHttpRequest timeout\")\r\n\t            e.code = \"ETIMEDOUT\"\r\n\t            errorFunc(e)\r\n\t        }, options.timeout )\r\n\t    }\r\n\r\n\t    if (xhr.setRequestHeader) {\r\n\t        for(key in headers){\r\n\t            if(headers.hasOwnProperty(key)){\r\n\t                xhr.setRequestHeader(key, headers[key])\r\n\t            }\r\n\t        }\r\n\t    } else if (options.headers && !isEmpty(options.headers)) {\r\n\t        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\r\n\t    }\r\n\r\n\t    if (\"responseType\" in options) {\r\n\t        xhr.responseType = options.responseType\r\n\t    }\r\n\r\n\t    if (\"beforeSend\" in options &&\r\n\t        typeof options.beforeSend === \"function\"\r\n\t    ) {\r\n\t        options.beforeSend(xhr)\r\n\t    }\r\n\r\n\t    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\r\n\t    // XMLHttpRequest spec says to pass null as body to indicate no body\r\n\t    // See https://github.com/naugtur/xhr/issues/100.\r\n\t    xhr.send(body || null)\r\n\r\n\t    return xhr\r\n\r\n\r\n\t}\r\n\r\n\tfunction getXml(xhr) {\r\n\t    // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\r\n\t    // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\r\n\t    try {\r\n\t        if (xhr.responseType === \"document\") {\r\n\t            return xhr.responseXML\r\n\t        }\r\n\t        var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\r\n\t        if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\r\n\t            return xhr.responseXML\r\n\t        }\r\n\t    } catch (e) {}\r\n\r\n\t    return null\r\n\t}\r\n\r\n\tfunction noop() {}\r\n\r\n\t//return createXHR;\r\n\r\n\r\n\treturn function(uri, options, callback) {\r\n\t    options = initParams(uri, options, callback);\r\n\r\n\t    var x =  _Xhr.request(options.uri,options).then(function(result){\r\n\t    \toptions.callback(null,x,result)\r\n\t    }).catch(function(e,status){\r\n\t    \toptions.callback(e,status);\r\n\t    });\r\n\r\n\t    return x;\r\n\r\n\t};\r\n\r\n\r\n});\ndefine('skylark-videojs/tracks/text-track',[\n    'skylark-videojs-vtt',\n    './text-track-cue-list',\n    '../utils/fn',\n    './track-enums',\n    '../utils/log',\n    './track',\n    '../utils/url',\n    '../utils/xhr',\n    '../utils/merge-options'\n], function (vtt,TextTrackCueList, Fn, TrackEnums, log, Track, url, XHR, merge) {\n    'use strict';\n    const parseCues = function (srcContent, track) {\n        const parser = new vtt.WebVTT.Parser(window, vtt, vtt.WebVTT.StringDecoder());\n        const errors = [];\n        parser.oncue = function (cue) {\n            track.addCue(cue);\n        };\n        parser.onparsingerror = function (error) {\n            errors.push(error);\n        };\n        parser.onflush = function () {\n            track.trigger({\n                type: 'loadeddata',\n                target: track\n            });\n        };\n        parser.parse(srcContent);\n        if (errors.length > 0) {\n            if (window.console && window.console.groupCollapsed) {\n                window.console.groupCollapsed(`Text Track parsing errors for ${ track.src }`);\n            }\n            errors.forEach(error => log.error(error));\n            if (window.console && window.console.groupEnd) {\n                window.console.groupEnd();\n            }\n        }\n        parser.flush();\n    };\n    const loadTrack = function (src, track) {\n        const opts = { uri: src };\n        const crossOrigin = url.isCrossOrigin(src);\n        if (crossOrigin) {\n            opts.cors = crossOrigin;\n        }\n        const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n        if (withCredentials) {\n            opts.withCredentials = withCredentials;\n        }\n        XHR(opts, Fn.bind(this, function (err, response, responseBody) {\n            if (err) {\n                return log.error(err, response);\n            }\n            track.loaded_ = true;\n            if (typeof vtt.WebVTT !== 'function') {\n                if (track.tech_) {\n                    track.tech_.any([\n                        'vttjsloaded',\n                        'vttjserror'\n                    ], event => {\n                        if (event.type === 'vttjserror') {\n                            log.error(`vttjs failed to load, stopping trying to process ${ track.src }`);\n                            return;\n                        }\n                        return parseCues(responseBody, track);\n                    });\n                }\n            } else {\n                parseCues(responseBody, track);\n            }\n        }));\n    };\n    class TextTrack extends Track {\n        constructor(options = {}) {\n            if (!options.tech) {\n                throw new Error('A tech was not provided.');\n            }\n            const settings = merge(options, {\n                kind: TrackEnums.TextTrackKind[options.kind] || 'subtitles',\n                language: options.language || options.srclang || ''\n            });\n            let mode = TrackEnums.TextTrackMode[settings.mode] || 'disabled';\n            const default_ = settings.default;\n            if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n                mode = 'hidden';\n            }\n            super(settings);\n            this.tech_ = settings.tech;\n            this.cues_ = [];\n            this.activeCues_ = [];\n            this.preload_ = this.tech_.preloadTextTracks !== false;\n            const cues = new TextTrackCueList(this.cues_);\n            const activeCues = new TextTrackCueList(this.activeCues_);\n            let changed = false;\n            const timeupdateHandler = Fn.bind(this, function () {\n                if (!this.tech_.isReady_ || this.tech_.isDisposed()) {\n                    return;\n                }\n                this.activeCues = this.activeCues;\n                if (changed) {\n                    this.trigger('cuechange');\n                    changed = false;\n                }\n            });\n            const disposeHandler = () => {\n                this.tech_.off('timeupdate', timeupdateHandler);\n            };\n            this.tech_.one('dispose', disposeHandler);\n            if (mode !== 'disabled') {\n                this.tech_.on('timeupdate', timeupdateHandler);\n            }\n            Object.defineProperties(this, {\n                default: {\n                    get() {\n                        return default_;\n                    },\n                    set() {\n                    }\n                },\n                mode: {\n                    get() {\n                        return mode;\n                    },\n                    set(newMode) {\n                        if (!TrackEnums.TextTrackMode[newMode]) {\n                            return;\n                        }\n                        if (mode === newMode) {\n                            return;\n                        }\n                        mode = newMode;\n                        if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n                            loadTrack(this.src, this);\n                        }\n                        this.tech_.off('timeupdate', timeupdateHandler);\n                        if (mode !== 'disabled') {\n                            this.tech_.on('timeupdate', timeupdateHandler);\n                        }\n                        this.trigger('modechange');\n                    }\n                },\n                cues: {\n                    get() {\n                        if (!this.loaded_) {\n                            return null;\n                        }\n                        return cues;\n                    },\n                    set() {\n                    }\n                },\n                activeCues: {\n                    get() {\n                        if (!this.loaded_) {\n                            return null;\n                        }\n                        if (this.cues.length === 0) {\n                            return activeCues;\n                        }\n                        const ct = this.tech_.currentTime();\n                        const active = [];\n                        for (let i = 0, l = this.cues.length; i < l; i++) {\n                            const cue = this.cues[i];\n                            if (cue.startTime <= ct && cue.endTime >= ct) {\n                                active.push(cue);\n                            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n                                active.push(cue);\n                            }\n                        }\n                        changed = false;\n                        if (active.length !== this.activeCues_.length) {\n                            changed = true;\n                        } else {\n                            for (let i = 0; i < active.length; i++) {\n                                if (this.activeCues_.indexOf(active[i]) === -1) {\n                                    changed = true;\n                                }\n                            }\n                        }\n                        this.activeCues_ = active;\n                        activeCues.setCues_(this.activeCues_);\n                        return activeCues;\n                    },\n                    set() {\n                    }\n                }\n            });\n            if (settings.src) {\n                this.src = settings.src;\n                if (!this.preload_) {\n                    this.loaded_ = true;\n                }\n                if (this.preload_ || default_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n                    loadTrack(this.src, this);\n                }\n            } else {\n                this.loaded_ = true;\n            }\n        }\n        addCue(originalCue) {\n            let cue = originalCue;\n            if (vtt && !(originalCue instanceof vtt.VTTCue)) {\n                cue = new vtt.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n                for (const prop in originalCue) {\n                    if (!(prop in cue)) {\n                        cue[prop] = originalCue[prop];\n                    }\n                }\n                cue.id = originalCue.id;\n                cue.originalCue_ = originalCue;\n            }\n            const tracks = this.tech_.textTracks();\n            for (let i = 0; i < tracks.length; i++) {\n                if (tracks[i] !== this) {\n                    tracks[i].removeCue(cue);\n                }\n            }\n            this.cues_.push(cue);\n            this.cues.setCues_(this.cues_);\n        }\n        removeCue(removeCue) {\n            let i = this.cues_.length;\n            while (i--) {\n                const cue = this.cues_[i];\n                if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n                    this.cues_.splice(i, 1);\n                    this.cues.setCues_(this.cues_);\n                    break;\n                }\n            }\n        }\n    }\n    TextTrack.prototype.allowedEvents_ = { cuechange: 'cuechange' };\n    return TextTrack;\n});\ndefine('skylark-videojs/tracks/audio-track',[\n    './track-enums',\n    './track',\n    '../utils/merge-options'\n], function (TrackEnums, Track, merge) {\n    'use strict';\n    class AudioTrack extends Track {\n        constructor(options = {}) {\n            const settings = merge(options, { kind: TrackEnums.AudioTrackKind[options.kind] || '' });\n            super(settings);\n            let enabled = false;\n            Object.defineProperty(this, 'enabled', {\n                get() {\n                    return enabled;\n                },\n                set(newEnabled) {\n                    if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n                        return;\n                    }\n                    enabled = newEnabled;\n                    this.trigger('enabledchange');\n                }\n            });\n            if (settings.enabled) {\n                this.enabled = settings.enabled;\n            }\n            this.loaded_ = true;\n        }\n    }\n    return AudioTrack;\n});\ndefine('skylark-videojs/tracks/video-track',[\n    './track-enums',\n    './track',\n    '../utils/merge-options'\n], function (TrackEnums, Track, merge) {\n    'use strict';\n    class VideoTrack extends Track {\n        constructor(options = {}) {\n            const settings = merge(options, { kind: TrackEnums.VideoTrackKind[options.kind] || '' });\n            super(settings);\n            let selected = false;\n            Object.defineProperty(this, 'selected', {\n                get() {\n                    return selected;\n                },\n                set(newSelected) {\n                    if (typeof newSelected !== 'boolean' || newSelected === selected) {\n                        return;\n                    }\n                    selected = newSelected;\n                    this.trigger('selectedchange');\n                }\n            });\n            if (settings.selected) {\n                this.selected = settings.selected;\n            }\n        }\n    }\n    return VideoTrack;\n});\ndefine('skylark-videojs/tracks/html-track-element',[\n    '../event-target',\n    '../tracks/text-track'\n], function (EventTarget, TextTrack) {\n    'use strict';\n    const NONE = 0;\n    const LOADING = 1;\n    const LOADED = 2;\n    const ERROR = 3;\n    class HTMLTrackElement extends EventTarget {\n        constructor(options = {}) {\n            super();\n            let readyState;\n            const track = new TextTrack(options);\n            this.kind = track.kind;\n            this.src = track.src;\n            this.srclang = track.language;\n            this.label = track.label;\n            this.default = track.default;\n            Object.defineProperties(this, {\n                readyState: {\n                    get() {\n                        return readyState;\n                    }\n                },\n                track: {\n                    get() {\n                        return track;\n                    }\n                }\n            });\n            readyState = NONE;\n            track.addEventListener('loadeddata', () => {\n                readyState = LOADED;\n                this.trigger({\n                    type: 'load',\n                    target: this\n                });\n            });\n        }\n    }\n    HTMLTrackElement.prototype.allowedEvents_ = { load: 'load' };\n    HTMLTrackElement.NONE = NONE;\n    HTMLTrackElement.LOADING = LOADING;\n    HTMLTrackElement.LOADED = LOADED;\n    HTMLTrackElement.ERROR = ERROR;\n    return HTMLTrackElement;\n});\ndefine('skylark-videojs/tracks/track-types',[\n    './audio-track-list',\n    './video-track-list',\n    './text-track-list',\n    './html-track-element-list',\n    './text-track',\n    './audio-track',\n    './video-track',\n    './html-track-element'\n], function (AudioTrackList, VideoTrackList, TextTrackList, HtmlTrackElementList, TextTrack, AudioTrack, VideoTrack, HTMLTrackElement) {\n    'use strict';\n    const NORMAL = {\n        audio: {\n            ListClass: AudioTrackList,\n            TrackClass: AudioTrack,\n            capitalName: 'Audio'\n        },\n        video: {\n            ListClass: VideoTrackList,\n            TrackClass: VideoTrack,\n            capitalName: 'Video'\n        },\n        text: {\n            ListClass: TextTrackList,\n            TrackClass: TextTrack,\n            capitalName: 'Text'\n        }\n    };\n    Object.keys(NORMAL).forEach(function (type) {\n        NORMAL[type].getterName = `${ type }Tracks`;\n        NORMAL[type].privateName = `${ type }Tracks_`;\n    });\n    const REMOTE = {\n        remoteText: {\n            ListClass: TextTrackList,\n            TrackClass: TextTrack,\n            capitalName: 'RemoteText',\n            getterName: 'remoteTextTracks',\n            privateName: 'remoteTextTracks_'\n        },\n        remoteTextEl: {\n            ListClass: HtmlTrackElementList,\n            TrackClass: HTMLTrackElement,\n            capitalName: 'RemoteTextTrackEls',\n            getterName: 'remoteTextTrackEls',\n            privateName: 'remoteTextTrackEls_'\n        }\n    };\n    const ALL = Object.assign({}, NORMAL, REMOTE);\n    REMOTE.names = Object.keys(REMOTE);\n    NORMAL.names = Object.keys(NORMAL);\n    ALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n    return {\n        NORMAL,\n        REMOTE,\n        ALL\n    };\n});\ndefine('skylark-videojs/tech/tech',[\n    'skylark-langx-globals/window',\n    'skylark-langx-globals/document',\n    '../component',\n    '../utils/merge-options',\n    '../utils/fn',\n    '../utils/log',\n    '../utils/time-ranges',\n    '../utils/buffer',\n    '../media-error',\n    '../utils/obj',\n    '../tracks/track-types',\n    '../utils/string-cases',\n    'skylark-videojs-vtt'\n], function (window, document, Component, mergeOptions, Fn, log, timeRages, buffer, MediaError, obj, TRACK_TYPES, stringCases, vtt) {\n    'use strict';\n    function createTrackHelper(self, kind, label, language, options = {}) {\n        const tracks = self.textTracks();\n        options.kind = kind;\n        if (label) {\n            options.label = label;\n        }\n        if (language) {\n            options.language = language;\n        }\n        options.tech = self;\n        const track = new TRACK_TYPES.ALL.text.TrackClass(options);\n        tracks.addTrack(track);\n        return track;\n    }\n    class Tech extends Component {\n        constructor(options = {}, ready = function () {\n        }) {\n            options.reportTouchActivity = false;\n            super(null, options, ready);\n            this.hasStarted_ = false;\n            this.listenTo('playing', function () {\n                this.hasStarted_ = true;\n            });\n            this.listenTo('loadstart', function () {\n                this.hasStarted_ = false;\n            });\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                if (options && options[props.getterName]) {\n                    this[props.privateName] = options[props.getterName];\n                }\n            });\n            if (!this.featuresProgressEvents) {\n                this.manualProgressOn();\n            }\n            if (!this.featuresTimeupdateEvents) {\n                this.manualTimeUpdatesOn();\n            }\n            [\n                'Text',\n                'Audio',\n                'Video'\n            ].forEach(track => {\n                if (options[`native${ track }Tracks`] === false) {\n                    this[`featuresNative${ track }Tracks`] = false;\n                }\n            });\n            if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n                this.featuresNativeTextTracks = false;\n            } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n                this.featuresNativeTextTracks = true;\n            }\n            if (!this.featuresNativeTextTracks) {\n                this.emulateTextTracks();\n            }\n            this.preloadTextTracks = options.preloadTextTracks !== false;\n            this.autoRemoteTextTracks_ = new TRACK_TYPES.ALL.text.ListClass();\n            this.initTrackListeners();\n            if (!options.nativeControlsForTouch) {\n                this.emitTapEvents();\n            }\n            if (this.constructor) {\n                this.name_ = this.constructor.name || 'Unknown Tech';\n            }\n        }\n        triggerSourceset(src) {\n            if (!this.isReady_) {\n                this.listenToOnce('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n            }\n            this.trigger({\n                src,\n                type: 'sourceset'\n            });\n        }\n        manualProgressOn() {\n            this.listenTo('durationchange', this.listenToDurationChange);\n            this.manualProgress = true;\n            this.listenToOnce('ready', this.trackProgress);\n        }\n        manualProgressOff() {\n            this.manualProgress = false;\n            this.stopTrackingProgress();\n            this.unlistenTo('durationchange', this.listenToDurationChange);\n        }\n        trackProgress(event) {\n            this.stopTrackingProgress();\n            this.progressInterval = this.setInterval(Fn.bind(this, function () {\n                const numBufferedPercent = this.undefined();\n                if (this.bufferedPercent_ !== numBufferedPercent) {\n                    this.trigger('progress');\n                }\n                this.bufferedPercent_ = numBufferedPercent;\n                if (numBufferedPercent === 1) {\n                    this.stopTrackingProgress();\n                }\n            }), 500);\n        }\n        onDurationChange(event) {\n            this.duration_ = this.duration();\n        }\n        buffered() {\n            return timeRages.createTimeRange(0, 0);\n        }\n        bufferedPercent() {\n            return buffer.bufferedPercent(this.buffered(), this.duration_);\n        }\n        stopTrackingProgress() {\n            this.clearInterval(this.progressInterval);\n        }\n        manualTimeUpdatesOn() {\n            this.manualTimeUpdates = true;\n            this.listenTo('play', this.trackCurrentTime);\n            this.listenTo('pause', this.stopTrackingCurrentTime);\n        }\n        manualTimeUpdatesOff() {\n            this.manualTimeUpdates = false;\n            this.stopTrackingCurrentTime();\n            this.unlistenTo('play', this.trackCurrentTime);\n            this.unlistenTo('pause', this.stopTrackingCurrentTime);\n        }\n        trackCurrentTime() {\n            if (this.currentTimeInterval) {\n                this.stopTrackingCurrentTime();\n            }\n            this.currentTimeInterval = this.setInterval(function () {\n                this.trigger({\n                    type: 'timeupdate',\n                    target: this,\n                    manuallyTriggered: true\n                });\n            }, 250);\n        }\n        stopTrackingCurrentTime() {\n            this.clearInterval(this.currentTimeInterval);\n            this.trigger({\n                type: 'timeupdate',\n                target: this,\n                manuallyTriggered: true\n            });\n        }\n        dispose() {\n            this.clearTracks(TRACK_TYPES.NORMAL.names);\n            if (this.manualProgress) {\n                this.manualProgressOff();\n            }\n            if (this.manualTimeUpdates) {\n                this.manualTimeUpdatesOff();\n            }\n            super.dispose();\n        }\n        clearTracks(types) {\n            types = [].concat(types);\n            types.forEach(type => {\n                const list = this[`${ type }Tracks`]() || [];\n                let i = list.length;\n                while (i--) {\n                    const track = list[i];\n                    if (type === 'text') {\n                        this.removeRemoteTextTrack(track);\n                    }\n                    list.removeTrack(track);\n                }\n            });\n        }\n        cleanupAutoTextTracks() {\n            const list = this.autoRemoteTextTracks_ || [];\n            let i = list.length;\n            while (i--) {\n                const track = list[i];\n                this.removeRemoteTextTrack(track);\n            }\n        }\n        reset() {\n        }\n        crossOrigin() {\n        }\n        setCrossOrigin() {\n        }\n        error(err) {\n            if (err !== undefined) {\n                this.error_ = new MediaError(err);\n                this.trigger('error');\n            }\n            return this.error_;\n        }\n        played() {\n            if (this.hasStarted_) {\n                return timeRages.createTimeRange(0, 0);\n            }\n            return timeRages.createTimeRange();\n        }\n        play() {\n        }\n        setScrubbing() {\n        }\n        scrubbing() {\n        }\n        setCurrentTime() {\n            if (this.manualTimeUpdates) {\n                this.trigger({\n                    type: 'timeupdate',\n                    target: this,\n                    manuallyTriggered: true\n                });\n            }\n        }\n        initTrackListeners() {\n            TRACK_TYPES.NORMAL.names.forEach(name => {\n                const props = TRACK_TYPES.NORMAL[name];\n                const trackListChanges = () => {\n                    this.trigger(`${ name }trackchange`);\n                };\n                const tracks = this[props.getterName]();\n                tracks.addEventListener('removetrack', trackListChanges);\n                tracks.addEventListener('addtrack', trackListChanges);\n                this.listenTo('dispose', () => {\n                    tracks.removeEventListener('removetrack', trackListChanges);\n                    tracks.removeEventListener('addtrack', trackListChanges);\n                });\n            });\n        }\n        addWebVttScript_() {\n            if (window.WebVTT) {\n                return;\n            }\n            if (document.body.contains(this.el())) {\n                if (!this.options_['vtt.js'] && obj.isPlain(vtt) && Object.keys(vtt).length > 0) {\n                    this.trigger('vttjsloaded');\n                    return;\n                }\n                const script = document.createElement('script');\n                script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n                script.onload = () => {\n                    this.trigger('vttjsloaded');\n                };\n                script.onerror = () => {\n                    this.trigger('vttjserror');\n                };\n                this.listenTo('dispose', () => {\n                    script.onload = null;\n                    script.onerror = null;\n                });\n                window.WebVTT = true;\n                this.el().parentNode.appendChild(script);\n            } else {\n                this.ready(this.addWebVttScript_);\n            }\n        }\n        emulateTextTracks() {\n            const tracks = this.textTracks();\n            const remoteTracks = this.remoteTextTracks();\n            const handleAddTrack = e => tracks.addTrack(e.track);\n            const handleRemoveTrack = e => tracks.removeTrack(e.track);\n            remoteTracks.on('addtrack', handleAddTrack);\n            remoteTracks.on('removetrack', handleRemoveTrack);\n            this.addWebVttScript_();\n            const updateDisplay = () => this.trigger('texttrackchange');\n            const textTracksChanges = () => {\n                updateDisplay();\n                for (let i = 0; i < tracks.length; i++) {\n                    const track = tracks[i];\n                    track.removeEventListener('cuechange', updateDisplay);\n                    if (track.mode === 'showing') {\n                        track.addEventListener('cuechange', updateDisplay);\n                    }\n                }\n            };\n            textTracksChanges();\n            tracks.addEventListener('change', textTracksChanges);\n            tracks.addEventListener('addtrack', textTracksChanges);\n            tracks.addEventListener('removetrack', textTracksChanges);\n            this.listenTo('dispose', function () {\n                remoteTracks.off('addtrack', handleAddTrack);\n                remoteTracks.off('removetrack', handleRemoveTrack);\n                tracks.removeEventListener('change', textTracksChanges);\n                tracks.removeEventListener('addtrack', textTracksChanges);\n                tracks.removeEventListener('removetrack', textTracksChanges);\n                for (let i = 0; i < tracks.length; i++) {\n                    const track = tracks[i];\n                    track.removeEventListener('cuechange', updateDisplay);\n                }\n            });\n        }\n        addTextTrack(kind, label, language) {\n            if (!kind) {\n                throw new Error('TextTrack kind is required but was not provided');\n            }\n            return createTrackHelper(this, kind, label, language);\n        }\n        createRemoteTextTrack(options) {\n            const track = mergeOptions(options, { tech: this });\n            return new TRACK_TYPES.REMOTE.remoteTextEl.TrackClass(track);\n        }\n        addRemoteTextTrack(options = {}, manualCleanup) {\n            const htmlTrackElement = this.createRemoteTextTrack(options);\n            if (manualCleanup !== true && manualCleanup !== false) {\n                log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n                manualCleanup = true;\n            }\n            this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n            this.remoteTextTracks().addTrack(htmlTrackElement.track);\n            if (manualCleanup !== true) {\n                this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n            }\n            return htmlTrackElement;\n        }\n        removeRemoteTextTrack(track) {\n            const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n            this.remoteTextTrackEls().removeTrackElement_(trackElement);\n            this.remoteTextTracks().removeTrack(track);\n            this.autoRemoteTextTracks_.removeTrack(track);\n        }\n        getVideoPlaybackQuality() {\n            return {};\n        }\n        requestPictureInPicture() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                return PromiseClass.reject();\n            }\n        }\n        disablePictureInPicture() {\n            return true;\n        }\n        setDisablePictureInPicture() {\n        }\n        setPoster() {\n        }\n        playsinline() {\n        }\n        setPlaysinline() {\n        }\n        overrideNativeAudioTracks() {\n        }\n        overrideNativeVideoTracks() {\n        }\n        canPlayType() {\n            return '';\n        }\n        static canPlayType() {\n            return '';\n        }\n        static canPlaySource(srcObj, options) {\n            return Tech.canPlayType(srcObj.type);\n        }\n        static isTech(component) {\n            return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n        }\n        static registerTech(name, tech) {\n            if (!Tech.techs_) {\n                Tech.techs_ = {};\n            }\n            if (!Tech.isTech(tech)) {\n                throw new Error(`Tech ${ name } must be a Tech`);\n            }\n            if (!Tech.canPlayType) {\n                throw new Error('Techs must have a static canPlayType method on them');\n            }\n            if (!Tech.canPlaySource) {\n                throw new Error('Techs must have a static canPlaySource method on them');\n            }\n            name = stringCases.toTitleCase(name);\n            Tech.techs_[name] = tech;\n            Tech.techs_[stringCases.toLowerCase(name)] = tech;\n            if (name !== 'Tech') {\n                Tech.defaultTechOrder_.push(name);\n            }\n            return tech;\n        }\n        static getTech(name) {\n            if (!name) {\n                return;\n            }\n            if (Tech.techs_ && Tech.techs_[name]) {\n                return Tech.techs_[name];\n            }\n            name = stringCases.toTitleCase(name);\n            if (window && window.videojs && window.videojs[name]) {\n                log.warn(`The ${ name } tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n                return window.videojs[name];\n            }\n        }\n    }\n    TRACK_TYPES.ALL.names.forEach(function (name) {\n        const props = TRACK_TYPES.ALL[name];\n        Tech.prototype[props.getterName] = function () {\n            this[props.privateName] = this[props.privateName] || new props.ListClass();\n            return this[props.privateName];\n        };\n    });\n    Tech.prototype.featuresVolumeControl = true;\n    Tech.prototype.featuresMuteControl = true;\n    Tech.prototype.featuresFullscreenResize = false;\n    Tech.prototype.featuresPlaybackRate = false;\n    Tech.prototype.featuresProgressEvents = false;\n    Tech.prototype.featuresSourceset = false;\n    Tech.prototype.featuresTimeupdateEvents = false;\n    Tech.prototype.featuresNativeTextTracks = false;\n    Tech.withSourceHandlers = function (_Tech) {\n        _Tech.registerSourceHandler = function (handler, index) {\n            let handlers = _Tech.sourceHandlers;\n            if (!handlers) {\n                handlers = _Tech.sourceHandlers = [];\n            }\n            if (index === undefined) {\n                index = handlers.length;\n            }\n            handlers.splice(index, 0, handler);\n        };\n        _Tech.canPlayType = function (type) {\n            const handlers = _Tech.sourceHandlers || [];\n            let can;\n            for (let i = 0; i < handlers.length; i++) {\n                can = handlers[i].canPlayType(type);\n                if (can) {\n                    return can;\n                }\n            }\n            return '';\n        };\n        _Tech.selectSourceHandler = function (source, options) {\n            const handlers = _Tech.sourceHandlers || [];\n            let can;\n            for (let i = 0; i < handlers.length; i++) {\n                can = handlers[i].canHandleSource(source, options);\n                if (can) {\n                    return handlers[i];\n                }\n            }\n            return null;\n        };\n        _Tech.canPlaySource = function (srcObj, options) {\n            const sh = _Tech.selectSourceHandler(srcObj, options);\n            if (sh) {\n                return sh.canHandleSource(srcObj, options);\n            }\n            return '';\n        };\n        const deferrable = [\n            'seekable',\n            'seeking',\n            'duration'\n        ];\n        deferrable.forEach(function (fnName) {\n            const originalFn = this[fnName];\n            if (typeof originalFn !== 'function') {\n                return;\n            }\n            this[fnName] = function () {\n                if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n                    return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n                }\n                return originalFn.apply(this, arguments);\n            };\n        }, _Tech.prototype);\n        _Tech.prototype.setSource = function (source) {\n            let sh = _Tech.selectSourceHandler(source, this.options_);\n            if (!sh) {\n                if (_Tech.nativeSourceHandler) {\n                    sh = _Tech.nativeSourceHandler;\n                } else {\n                    log.error('No source handler found for the current source.');\n                }\n            }\n            this.disposeSourceHandler();\n            this.unlistenTo('dispose', this.disposeSourceHandler);\n            if (sh !== _Tech.nativeSourceHandler) {\n                this.currentSource_ = source;\n            }\n            this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n            this.listenToOnce('dispose', this.disposeSourceHandler);\n        };\n        _Tech.prototype.disposeSourceHandler = function () {\n            if (this.currentSource_) {\n                this.clearTracks([\n                    'audio',\n                    'video'\n                ]);\n                this.currentSource_ = null;\n            }\n            this.cleanupAutoTextTracks();\n            if (this.sourceHandler_) {\n                if (this.sourceHandler_.dispose) {\n                    this.sourceHandler_.dispose();\n                }\n                this.sourceHandler_ = null;\n            }\n        };\n    };\n    Component.registerComponent('Tech', Tech);\n    Tech.registerTech('Tech', Tech);\n    Tech.defaultTechOrder_ = [];\n    return Tech;\n});\ndefine('skylark-videojs/tech/middleware',[\n    '../utils/obj',\n    '../utils/string-cases'\n], function (obj, stringCases) {\n    'use strict';\n    const middlewares = {};\n    const middlewareInstances = {};\n    const TERMINATOR = {};\n    function use(type, middleware) {\n        middlewares[type] = middlewares[type] || [];\n        middlewares[type].push(middleware);\n    }\n    function getMiddleware(type) {\n        if (type) {\n            return middlewares[type];\n        }\n        return middlewares;\n    }\n    function setSource(player, src, next) {\n        player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n    }\n    function setTech(middleware, tech) {\n        middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n    }\n    function get(middleware, tech, method) {\n        return middleware.reduceRight(middlewareIterator(method), tech[method]());\n    }\n    function set(middleware, tech, method, arg) {\n        return tech[method](middleware.reduce(middlewareIterator(method), arg));\n    }\n    function mediate(middleware, tech, method, arg = null) {\n        const callMethod = 'call' + stringCases.toTitleCase(method);\n        const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n        const terminated = middlewareValue === TERMINATOR;\n        const returnValue = terminated ? null : tech[method](middlewareValue);\n        executeRight(middleware, method, returnValue, terminated);\n        return returnValue;\n    }\n    const allowedGetters = {\n        buffered: 1,\n        currentTime: 1,\n        duration: 1,\n        muted: 1,\n        played: 1,\n        paused: 1,\n        seekable: 1,\n        volume: 1\n    };\n    const allowedSetters = {\n        setCurrentTime: 1,\n        setMuted: 1,\n        setVolume: 1\n    };\n    const allowedMediators = {\n        play: 1,\n        pause: 1\n    };\n    function middlewareIterator(method) {\n        return (value, mw) => {\n            if (value === TERMINATOR) {\n                return TERMINATOR;\n            }\n            if (mw[method]) {\n                return mw[method](value);\n            }\n            return value;\n        };\n    }\n    function executeRight(mws, method, value, terminated) {\n        for (let i = mws.length - 1; i >= 0; i--) {\n            const mw = mws[i];\n            if (mw[method]) {\n                mw[method](terminated, value);\n            }\n        }\n    }\n    function clearCacheForPlayer(player) {\n        middlewareInstances[player.id()] = null;\n    }\n    function getOrCreateFactory(player, mwFactory) {\n        const mws = middlewareInstances[player.id()];\n        let mw = null;\n        if (mws === undefined || mws === null) {\n            mw = mwFactory(player);\n            middlewareInstances[player.id()] = [[\n                    mwFactory,\n                    mw\n                ]];\n            return mw;\n        }\n        for (let i = 0; i < mws.length; i++) {\n            const [mwf, mwi] = mws[i];\n            if (mwf !== mwFactory) {\n                continue;\n            }\n            mw = mwi;\n        }\n        if (mw === null) {\n            mw = mwFactory(player);\n            mws.push([\n                mwFactory,\n                mw\n            ]);\n        }\n        return mw;\n    }\n    function setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n        const [mwFactory, ...mwrest] = middleware;\n        if (typeof mwFactory === 'string') {\n            setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n        } else if (mwFactory) {\n            const mw = getOrCreateFactory(player, mwFactory);\n            if (!mw.setSource) {\n                acc.push(mw);\n                return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n            }\n            mw.setSource(obj.assign({}, src), function (err, _src) {\n                if (err) {\n                    return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n                }\n                acc.push(mw);\n                setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n            });\n        } else if (mwrest.length) {\n            setSourceHelper(src, mwrest, next, player, acc, lastRun);\n        } else if (lastRun) {\n            next(src, acc);\n        } else {\n            setSourceHelper(src, middlewares['*'], next, player, acc, true);\n        }\n    }\n    return {\n        TERMINATOR: TERMINATOR,\n        use: use,\n        getMiddleware: getMiddleware,\n        setSource: setSource,\n        setTech: setTech,\n        get: get,\n        set: set,\n        mediate: mediate,\n        allowedGetters: allowedGetters,\n        allowedSetters: allowedSetters,\n        allowedMediators: allowedMediators,\n        clearCacheForPlayer: clearCacheForPlayer\n    };\n});\ndefine('skylark-videojs/utils/mimetypes',['./url'], function (Url) {\n    'use strict';\n    const MimetypesKind = {\n        opus: 'video/ogg',\n        ogv: 'video/ogg',\n        mp4: 'video/mp4',\n        mov: 'video/mp4',\n        m4v: 'video/mp4',\n        mkv: 'video/x-matroska',\n        m4a: 'audio/mp4',\n        mp3: 'audio/mpeg',\n        aac: 'audio/aac',\n        caf: 'audio/x-caf',\n        flac: 'audio/flac',\n        oga: 'audio/ogg',\n        wav: 'audio/wav',\n        m3u8: 'application/x-mpegURL',\n        jpg: 'image/jpeg',\n        jpeg: 'image/jpeg',\n        gif: 'image/gif',\n        png: 'image/png',\n        svg: 'image/svg+xml',\n        webp: 'image/webp'\n    };\n    const getMimetype = function (src = '') {\n        const ext = Url.getFileExtension(src);\n        const mimetype = MimetypesKind[ext.toLowerCase()];\n        return mimetype || '';\n    };\n    const findMimetype = (player, src) => {\n        if (!src) {\n            return '';\n        }\n        if (player.cache_.source.src === src && player.cache_.source.type) {\n            return player.cache_.source.type;\n        }\n        const matchingSources = player.cache_.sources.filter(s => s.src === src);\n        if (matchingSources.length) {\n            return matchingSources[0].type;\n        }\n        const sources = player.$$('source');\n        for (let i = 0; i < sources.length; i++) {\n            const s = sources[i];\n            if (s.type && s.src && s.src === src) {\n                return s.type;\n            }\n        }\n        return getMimetype(src);\n    };\n    return {\n        MimetypesKind: MimetypesKind,\n        getMimetype: getMimetype,\n        findMimetype: findMimetype\n    };\n});\ndefine('skylark-videojs/utils/filter-source',[\n    './obj',\n    './mimetypes'\n], function (obj, mimetypes) {\n    'use strict';\n    const filterSource = function (src) {\n        if (Array.isArray(src)) {\n            let newsrc = [];\n            src.forEach(function (srcobj) {\n                srcobj = filterSource(srcobj);\n                if (Array.isArray(srcobj)) {\n                    newsrc = newsrc.concat(srcobj);\n                } else if (obj.isObject(srcobj)) {\n                    newsrc.push(srcobj);\n                }\n            });\n            src = newsrc;\n        } else if (typeof src === 'string' && src.trim()) {\n            src = [fixSource({ src })];\n        } else if (obj.isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n            src = [fixSource(src)];\n        } else {\n            src = [];\n        }\n        return src;\n    };\n    function fixSource(src) {\n        if (!src.type) {\n            const mimetype = mimetypes.getMimetype(src.src);\n            if (mimetype) {\n                src.type = mimetype;\n            }\n        }\n        return src;\n    }\n    return filterSource;\n});\ndefine('skylark-videojs/tech/loader',[\n    '../component',\n    './tech',\n    '../utils/string-cases',\n    '../utils/merge-options'\n], function (Component, Tech, stringCases, mergeOptions) {\n    'use strict';\n    class MediaLoader extends Component {\n        constructor(player, options, ready) {\n            const options_ = mergeOptions({ createEl: false }, options);\n            super(player, options_, ready);\n            if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n                for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n                    const techName = stringCases.toTitleCase(j[i]);\n                    let tech = Tech.getTech(techName);\n                    if (!techName) {\n                        tech = Component.getComponent(techName);\n                    }\n                    if (tech && tech.isSupported()) {\n                        player.loadTech_(techName);\n                        break;\n                    }\n                }\n            } else {\n                player.src(options.playerOptions.sources);\n            }\n        }\n    }\n    Component.registerComponent('MediaLoader', MediaLoader);\n    return MediaLoader;\n});\ndefine('skylark-videojs/clickable-component',[\n    './component',\n    './utils/dom',\n    './utils/log',\n    './utils/obj',\n    './utils/keycode'\n], function (Component, Dom, log, obj, keycode) {\n    'use strict';\n    class ClickableComponent extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.emitTapEvents();\n            this.enable();\n        }\n        createEl(tag = 'div', props = {}, attributes = {}) {\n            props = obj.assign({\n                innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n                className: this.buildCSSClass(),\n                tabIndex: 0\n            }, props);\n            if (tag === 'button') {\n                log.error(`Creating a ClickableComponent with an HTML element of ${ tag } is not supported; use a Button instead.`);\n            }\n            attributes = obj.assign({ role: 'button' }, attributes);\n            this.tabIndex_ = props.tabIndex;\n            const el = super.createEl(tag, props, attributes);\n            this.createControlTextEl(el);\n            return el;\n        }\n        dispose() {\n            this.controlTextEl_ = null;\n            super.dispose();\n        }\n        createControlTextEl(el) {\n            this.controlTextEl_ = Dom.createEl('span', { className: 'vjs-control-text' }, { 'aria-live': 'polite' });\n            if (el) {\n                el.appendChild(this.controlTextEl_);\n            }\n            this.controlText(this.controlText_, el);\n            return this.controlTextEl_;\n        }\n        controlText(text, el = this.el()) {\n            if (text === undefined) {\n                return this.controlText_ || 'Need Text';\n            }\n            const localizedText = this.localize(text);\n            this.controlText_ = text;\n            Dom.textContent(this.controlTextEl_, localizedText);\n            if (!this.nonIconControl) {\n                el.setAttribute('title', localizedText);\n            }\n        }\n        buildCSSClass() {\n            return `vjs-control vjs-button ${ super.buildCSSClass() }`;\n        }\n        enable() {\n            if (!this.enabled_) {\n                this.enabled_ = true;\n                this.removeClass('vjs-disabled');\n                this.el_.setAttribute('aria-disabled', 'false');\n                if (typeof this.tabIndex_ !== 'undefined') {\n                    this.el_.setAttribute('tabIndex', this.tabIndex_);\n                }\n                this.listenTo([\n                    'tap',\n                    'click'\n                ], this.handleClick);\n                this.listenTo('keydown', this.handleKeyDown);\n            }\n        }\n        disable() {\n            this.enabled_ = false;\n            this.addClass('vjs-disabled');\n            this.el_.setAttribute('aria-disabled', 'true');\n            if (typeof this.tabIndex_ !== 'undefined') {\n                this.el_.removeAttribute('tabIndex');\n            }\n            this.unlistenTo('mouseover', this.handleMouseOver);\n            this.unlistenTo('mouseout', this.handleMouseOut);\n            this.unlistenTo([\n                'tap',\n                'click'\n            ], this.handleClick);\n            this.unlistenTo('keydown', this.handleKeyDown);\n        }\n        handleLanguagechange() {\n            this.controlText(this.controlText_);\n        }\n        handleClick(event) {\n            if (this.options_.clickHandler) {\n                this.options_.clickHandler.call(this, arguments);\n            }\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.trigger('click');\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n    }\n    Component.registerComponent('ClickableComponent', ClickableComponent);\n    return ClickableComponent;\n});\ndefine('skylark-videojs/poster-image',[\n    './clickable-component',\n    './component',\n    './utils/fn',\n    './utils/dom',\n    './utils/promise',\n    './utils/browser'\n], function (ClickableComponent, Component, Fn, Dom, promise, browser) {\n    'use strict';\n    class PosterImage extends ClickableComponent {\n        constructor(player, options) {\n            super(player, options);\n            this.update();\n            this.listenTo(player,'posterchange',this.update);\n        }\n        dispose() {\n            this.unlistenTo(this.player(),'posterchange', this.update);\n            super.dispose();\n        }\n        createEl() {\n            const el = Dom.createEl('div', {\n                className: 'vjs-poster',\n                tabIndex: -1\n            });\n            return el;\n        }\n        update(event) {\n            const url = this.player().poster();\n            this.setSrc(url);\n            if (url) {\n                this.show();\n            } else {\n                this.hide();\n            }\n        }\n        setSrc(url) {\n            let backgroundImage = '';\n            if (url) {\n                backgroundImage = `url(\"${ url }\")`;\n            }\n            this.el_.style.backgroundImage = backgroundImage;\n        }\n        handleClick(event) {\n            if (!this.player_.controls()) {\n                return;\n            }\n            const sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n            if (this.player_.tech(true) && !((browser.IE_VERSION || browser.IS_EDGE) && sourceIsEncrypted)) {\n                this.player_.tech(true).focus();\n            }\n            if (this.player_.paused()) {\n                promise.silencePromise(this.player_.play());\n            } else {\n                this.player_.pause();\n            }\n        }\n    }\n    Component.registerComponent('PosterImage', PosterImage);\n    return PosterImage;\n});\ndefine('skylark-videojs/tracks/text-track-display',[\n    '../component',\n    '../utils/fn',\n    '../utils/dom'\n], function (Component, Fn, Dom) {\n    'use strict';\n    const darkGray = '#222';\n    const lightGray = '#ccc';\n    const fontMap = {\n        monospace: 'monospace',\n        sansSerif: 'sans-serif',\n        serif: 'serif',\n        monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n        monospaceSerif: '\"Courier New\", monospace',\n        proportionalSansSerif: 'sans-serif',\n        proportionalSerif: 'serif',\n        casual: '\"Comic Sans MS\", Impact, fantasy',\n        script: '\"Monotype Corsiva\", cursive',\n        smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n    };\n    function constructColor(color, opacity) {\n        let hex;\n        if (color.length === 4) {\n            hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n        } else if (color.length === 7) {\n            hex = color.slice(1);\n        } else {\n            throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n        }\n        return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n    }\n    function tryUpdateStyle(el, style, rule) {\n        try {\n            el.style[style] = rule;\n        } catch (e) {\n            return;\n        }\n    }\n    class TextTrackDisplay extends Component {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n            const updateDisplayHandler = Fn.bind(this, this.updateDisplay);\n            player.on('loadstart', Fn.bind(this, this.toggleDisplay));\n            player.on('texttrackchange', updateDisplayHandler);\n            player.on('loadedmetadata', Fn.bind(this, this.preselectTrack));\n            player.ready(Fn.bind(this, function () {\n                if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n                    this.hide();\n                    return;\n                }\n                player.on('fullscreenchange', updateDisplayHandler);\n                player.on('playerresize', updateDisplayHandler);\n                window.addEventListener('orientationchange', updateDisplayHandler);\n                player.on('dispose', () => window.removeEventListener('orientationchange', updateDisplayHandler));\n                const tracks = this.options_.playerOptions.tracks || [];\n                for (let i = 0; i < tracks.length; i++) {\n                    this.player_.addRemoteTextTrack(tracks[i], true);\n                }\n                this.preselectTrack();\n            }));\n        }\n        preselectTrack() {\n            const modes = {\n                captions: 1,\n                subtitles: 1\n            };\n            const trackList = this.player_.textTracks();\n            const userPref = this.player_.cache_.selectedLanguage;\n            let firstDesc;\n            let firstCaptions;\n            let preferredTrack;\n            for (let i = 0; i < trackList.length; i++) {\n                const track = trackList[i];\n                if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n                    if (track.kind === userPref.kind) {\n                        preferredTrack = track;\n                    } else if (!preferredTrack) {\n                        preferredTrack = track;\n                    }\n                } else if (userPref && !userPref.enabled) {\n                    preferredTrack = null;\n                    firstDesc = null;\n                    firstCaptions = null;\n                } else if (track.default) {\n                    if (track.kind === 'descriptions' && !firstDesc) {\n                        firstDesc = track;\n                    } else if (track.kind in modes && !firstCaptions) {\n                        firstCaptions = track;\n                    }\n                }\n            }\n            if (preferredTrack) {\n                preferredTrack.mode = 'showing';\n            } else if (firstCaptions) {\n                firstCaptions.mode = 'showing';\n            } else if (firstDesc) {\n                firstDesc.mode = 'showing';\n            }\n        }\n        toggleDisplay() {\n            if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n                this.hide();\n            } else {\n                this.show();\n            }\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-text-track-display' }, {\n                'aria-live': 'off',\n                'aria-atomic': 'true'\n            });\n        }\n        clearDisplay() {\n            if (typeof window.WebVTT === 'function') {\n                window.WebVTT.processCues(window, [], this.el_);\n            }\n        }\n        updateDisplay() {\n            const tracks = this.player_.textTracks();\n            const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n            this.clearDisplay();\n            if (allowMultipleShowingTracks) {\n                const showingTracks = [];\n                for (let i = 0; i < tracks.length; ++i) {\n                    const track = tracks[i];\n                    if (track.mode !== 'showing') {\n                        continue;\n                    }\n                    showingTracks.push(track);\n                }\n                this.updateForTrack(showingTracks);\n                return;\n            }\n            let descriptionsTrack = null;\n            let captionsSubtitlesTrack = null;\n            let i = tracks.length;\n            while (i--) {\n                const track = tracks[i];\n                if (track.mode === 'showing') {\n                    if (track.kind === 'descriptions') {\n                        descriptionsTrack = track;\n                    } else {\n                        captionsSubtitlesTrack = track;\n                    }\n                }\n            }\n            if (captionsSubtitlesTrack) {\n                if (this.getAttribute('aria-live') !== 'off') {\n                    this.setAttribute('aria-live', 'off');\n                }\n                this.updateForTrack(captionsSubtitlesTrack);\n            } else if (descriptionsTrack) {\n                if (this.getAttribute('aria-live') !== 'assertive') {\n                    this.setAttribute('aria-live', 'assertive');\n                }\n                this.updateForTrack(descriptionsTrack);\n            }\n        }\n        updateDisplayState(track) {\n            const overrides = this.player_.textTrackSettings.getValues();\n            const cues = track.activeCues;\n            let i = cues.length;\n            while (i--) {\n                const cue = cues[i];\n                if (!cue) {\n                    continue;\n                }\n                const cueDiv = cue.displayState;\n                if (overrides.color) {\n                    cueDiv.firstChild.style.color = overrides.color;\n                }\n                if (overrides.textOpacity) {\n                    tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n                }\n                if (overrides.backgroundColor) {\n                    cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n                }\n                if (overrides.backgroundOpacity) {\n                    tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n                }\n                if (overrides.windowColor) {\n                    if (overrides.windowOpacity) {\n                        tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n                    } else {\n                        cueDiv.style.backgroundColor = overrides.windowColor;\n                    }\n                }\n                if (overrides.edgeStyle) {\n                    if (overrides.edgeStyle === 'dropshadow') {\n                        cueDiv.firstChild.style.textShadow = `2px 2px 3px ${ darkGray }, 2px 2px 4px ${ darkGray }, 2px 2px 5px ${ darkGray }`;\n                    } else if (overrides.edgeStyle === 'raised') {\n                        cueDiv.firstChild.style.textShadow = `1px 1px ${ darkGray }, 2px 2px ${ darkGray }, 3px 3px ${ darkGray }`;\n                    } else if (overrides.edgeStyle === 'depressed') {\n                        cueDiv.firstChild.style.textShadow = `1px 1px ${ lightGray }, 0 1px ${ lightGray }, -1px -1px ${ darkGray }, 0 -1px ${ darkGray }`;\n                    } else if (overrides.edgeStyle === 'uniform') {\n                        cueDiv.firstChild.style.textShadow = `0 0 4px ${ darkGray }, 0 0 4px ${ darkGray }, 0 0 4px ${ darkGray }, 0 0 4px ${ darkGray }`;\n                    }\n                }\n                if (overrides.fontPercent && overrides.fontPercent !== 1) {\n                    const fontSize = window.parseFloat(cueDiv.style.fontSize);\n                    cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n                    cueDiv.style.height = 'auto';\n                    cueDiv.style.top = 'auto';\n                }\n                if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n                    if (overrides.fontFamily === 'small-caps') {\n                        cueDiv.firstChild.style.fontVariant = 'small-caps';\n                    } else {\n                        cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n                    }\n                }\n            }\n        }\n        updateForTrack(tracks) {\n            if (!Array.isArray(tracks)) {\n                tracks = [tracks];\n            }\n            if (typeof window.WebVTT !== 'function' || tracks.every(track => {\n                    return !track.activeCues;\n                })) {\n                return;\n            }\n            const cues = [];\n            for (let i = 0; i < tracks.length; ++i) {\n                const track = tracks[i];\n                for (let j = 0; j < track.activeCues.length; ++j) {\n                    cues.push(track.activeCues[j]);\n                }\n            }\n            window.WebVTT.processCues(window, cues, this.el_);\n            for (let i = 0; i < tracks.length; ++i) {\n                const track = tracks[i];\n                for (let j = 0; j < track.activeCues.length; ++j) {\n                    const cueEl = track.activeCues[j].displayState;\n                    Dom.addClass(cueEl, 'vjs-text-track-cue');\n                    Dom.addClass(cueEl, 'vjs-text-track-cue-' + (track.language ? track.language : i));\n                }\n                if (this.player_.textTrackSettings) {\n                    this.updateDisplayState(track);\n                }\n            }\n        }\n    }\n    \n    Component.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n\n    TextTrackDisplay.constructColor = constructColor;\n\n    return TextTrackDisplay;\n});\ndefine('skylark-videojs/loading-spinner',[\n    './component',\n    './utils/dom'\n], function (Component, dom) {\n    'use strict';\n    class LoadingSpinner extends Component {\n        createEl() {\n            const isAudio = this.player_.isAudio();\n            const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n            const controlText = dom.createEl('span', {\n                className: 'vjs-control-text',\n                innerHTML: this.localize('{1} is loading.', [playerType])\n            });\n            const el = super.createEl('div', {\n                className: 'vjs-loading-spinner',\n                dir: 'ltr'\n            });\n            el.appendChild(controlText);\n            return el;\n        }\n    }\n    Component.registerComponent('LoadingSpinner', LoadingSpinner);\n    return LoadingSpinner;\n});\ndefine('skylark-videojs/button',[\n    './clickable-component',\n    './component',\n    './utils/log',\n    './utils/obj',\n    './utils/keycode'\n], function (ClickableComponent, Component, log, obj, keycode) {\n    'use strict';\n    class Button extends ClickableComponent {\n        createEl(tag, props = {}, attributes = {}) {\n            tag = 'button';\n            props = obj.assign({\n                innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n                className: this.buildCSSClass()\n            }, props);\n            attributes = obj.assign({ type: 'button' }, attributes);\n            const el = Component.prototype.createEl.call(this, tag, props, attributes);\n            this.createControlTextEl(el);\n            return el;\n        }\n        addChild(child, options = {}) {\n            const className = this.constructor.name;\n            log.warn(`Adding an actionable (user controllable) child to a Button (${ className }) is not supported; use a ClickableComponent instead.`);\n            return Component.prototype.addChild.call(this, child, options);\n        }\n        enable() {\n            super.enable();\n            this.el_.removeAttribute('disabled');\n        }\n        disable() {\n            super.disable();\n            this.el_.setAttribute('disabled', 'disabled');\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n                event.stopPropagation();\n                return;\n            }\n            super.handleKeyDown(event);\n        }\n    }\n    Component.registerComponent('Button', Button);\n    return Button;\n});\ndefine('skylark-videojs/big-play-button',[\n    './button',\n    './component',\n    './utils/promise',\n    './utils/browser'\n], function (Button, Component, promise, browser) {\n    'use strict';\n    class BigPlayButton extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.mouseused_ = false;\n            this.listenTo('mousedown', this.handleMouseDown);\n        }\n        buildCSSClass() {\n            return 'vjs-big-play-button';\n        }\n        handleClick(event) {\n            const playPromise = this.player_.play();\n            if (this.mouseused_ && event.clientX && event.clientY) {\n                const sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n                promise.silencePromise(playPromise);\n                if (this.player_.tech(true) && !((browser.IE_VERSION || browser.IS_EDGE) && sourceIsEncrypted)) {\n                    this.player_.tech(true).focus();\n                }\n                return;\n            }\n            const cb = this.player_.getChild('controlBar');\n            const playToggle = cb && cb.getChild('playToggle');\n            if (!playToggle) {\n                this.player_.tech(true).focus();\n                return;\n            }\n            const playFocus = () => playToggle.focus();\n            if (promise.isPromise(playPromise)) {\n                playPromise.then(playFocus, () => {\n                });\n            } else {\n                this.setTimeout(playFocus, 1);\n            }\n        }\n        handleKeyDown(event) {\n            this.mouseused_ = false;\n            super.handleKeyDown(event);\n        }\n        handleMouseDown(event) {\n            this.mouseused_ = true;\n        }\n    }\n    BigPlayButton.prototype.controlText_ = 'Play Video';\n    Component.registerComponent('BigPlayButton', BigPlayButton);\n    return BigPlayButton;\n});\ndefine('skylark-videojs/close-button',[\n    './button',\n    './component',\n    './utils/keycode'\n], function (Button, Component, keycode) {\n    'use strict';\n    class CloseButton extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.controlText(options && options.controlText || this.localize('Close'));\n        }\n        buildCSSClass() {\n            return `vjs-close-button ${ super.buildCSSClass() }`;\n        }\n        handleClick(event) {\n            this.trigger({\n                type: 'close',\n                bubbles: false\n            });\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.trigger('click');\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n    }\n    Component.registerComponent('CloseButton', CloseButton);\n    return CloseButton;\n});\ndefine('skylark-videojs/control-bar/play-toggle',[\n    '../button',\n    '../component'\n], function (Button, Component) {\n    'use strict';\n    class PlayToggle extends Button {\n        constructor(player, options = {}) {\n            super(player, options);\n            options.replay = options.replay === undefined || options.replay;\n            this.listenTo(player, 'play', this.handlePlay);\n            this.listenTo(player, 'pause', this.handlePause);\n            if (options.replay) {\n                this.listenTo(player, 'ended', this.handleEnded);\n            }\n        }\n        buildCSSClass() {\n            return `vjs-play-control ${ super.buildCSSClass() }`;\n        }\n        handleClick(event) {\n            if (this.player_.paused()) {\n                this.player_.play();\n            } else {\n                this.player_.pause();\n            }\n        }\n        handleSeeked(event) {\n            this.removeClass('vjs-ended');\n            if (this.player_.paused()) {\n                this.handlePause(event);\n            } else {\n                this.handlePlay(event);\n            }\n        }\n        handlePlay(event) {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-paused');\n            this.addClass('vjs-playing');\n            this.controlText('Pause');\n        }\n        handlePause(event) {\n            this.removeClass('vjs-playing');\n            this.addClass('vjs-paused');\n            this.controlText('Play');\n        }\n        handleEnded(event) {\n            this.removeClass('vjs-playing');\n            this.addClass('vjs-ended');\n            this.controlText('Replay');\n            this.listenToOnce(this.player_, 'seeked', this.handleSeeked);\n        }\n    }\n    PlayToggle.prototype.controlText_ = 'Play';\n    Component.registerComponent('PlayToggle', PlayToggle);\n    return PlayToggle;\n});\ndefine('skylark-videojs/utils/format-time',[],function () {\n    'use strict';\n    const defaultImplementation = function (seconds, guide) {\n        seconds = seconds < 0 ? 0 : seconds;\n        let s = Math.floor(seconds % 60);\n        let m = Math.floor(seconds / 60 % 60);\n        let h = Math.floor(seconds / 3600);\n        const gm = Math.floor(guide / 60 % 60);\n        const gh = Math.floor(guide / 3600);\n        if (isNaN(seconds) || seconds === Infinity) {\n            h = m = s = '-';\n        }\n        h = h > 0 || gh > 0 ? h + ':' : '';\n        m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n        s = s < 10 ? '0' + s : s;\n        return h + m + s;\n    };\n    let implementation = defaultImplementation;\n    function setFormatTime(customImplementation) {\n        implementation = customImplementation;\n    }\n    function resetFormatTime() {\n        implementation = defaultImplementation;\n    }\n    function formatTime(seconds, guide = seconds) {\n        return implementation(seconds, guide);\n    }\n\n    formatTime.setFormatTime = setFormatTime;\n    formatTime.resetFormatTime = resetFormatTime;\n\n    return   formatTime;\n});\ndefine('skylark-videojs/control-bar/time-controls/time-display',[\n    'skylark-langx-globals/document',\n    '../../component',\n    '../../utils/dom',\n    '../../utils/format-time',\n    '../../utils/log'\n], function (document, Component, Dom, formatTime, log) {\n    'use strict';\n    class TimeDisplay extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, [\n                'timeupdate',\n                'ended'\n            ], this.updateContent);\n            this.updateTextNode_();\n        }\n        createEl() {\n            const className = this.buildCSSClass();\n            const el = super.createEl('div', {\n                className: `${ className } vjs-time-control vjs-control`,\n                innerHTML: `<span class=\"vjs-control-text\" role=\"presentation\">${ this.localize(this.labelText_) }\\u00a0</span>`\n            });\n            this.contentEl_ = Dom.createEl('span', { className: `${ className }-display` }, {\n                'aria-live': 'off',\n                'role': 'presentation'\n            });\n            el.appendChild(this.contentEl_);\n            return el;\n        }\n        dispose() {\n            this.contentEl_ = null;\n            this.textNode_ = null;\n            super.dispose();\n        }\n        updateTextNode_(time = 0) {\n            time = formatTime(time);\n            if (this.formattedTime_ === time) {\n                return;\n            }\n            this.formattedTime_ = time;\n            this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n                if (!this.contentEl_) {\n                    return;\n                }\n                let oldNode = this.textNode_;\n                if (oldNode && this.contentEl_.firstChild !== oldNode) {\n                    oldNode = null;\n                    log.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n                }\n                this.textNode_ = document.createTextNode(this.formattedTime_);\n                if (!this.textNode_) {\n                    return;\n                }\n                if (oldNode) {\n                    this.contentEl_.replaceChild(this.textNode_, oldNode);\n                } else {\n                    this.contentEl_.appendChild(this.textNode_);\n                }\n            });\n        }\n        updateContent(event) {\n        }\n    }\n    TimeDisplay.prototype.labelText_ = 'Time';\n    TimeDisplay.prototype.controlText_ = 'Time';\n    Component.registerComponent('TimeDisplay', TimeDisplay);\n    return TimeDisplay;\n});\ndefine('skylark-videojs/control-bar/time-controls/current-time-display',[\n    './time-display',\n    '../../component'\n], function (TimeDisplay, Component) {\n    'use strict';\n    class CurrentTimeDisplay extends TimeDisplay {\n        buildCSSClass() {\n            return 'vjs-current-time';\n        }\n        updateContent(event) {\n            let time;\n            if (this.player_.ended()) {\n                time = this.player_.duration();\n            } else {\n                time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n            }\n            this.updateTextNode_(time);\n        }\n    }\n    CurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n    CurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n    Component.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n    return CurrentTimeDisplay;\n});\ndefine('skylark-videojs/control-bar/time-controls/duration-display',[\n    './time-display',\n    '../../component'\n], function (TimeDisplay, Component) {\n    'use strict';\n    class DurationDisplay extends TimeDisplay {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, 'durationchange', this.updateContent);\n            this.listenTo(player, 'loadstart', this.updateContent);\n            this.listenTo(player, 'loadedmetadata', this.updateContent);\n        }\n        buildCSSClass() {\n            return 'vjs-duration';\n        }\n        updateContent(event) {\n            const duration = this.player_.duration();\n            this.updateTextNode_(duration);\n        }\n    }\n    DurationDisplay.prototype.labelText_ = 'Duration';\n    DurationDisplay.prototype.controlText_ = 'Duration';\n    Component.registerComponent('DurationDisplay', DurationDisplay);\n    return DurationDisplay;\n});\ndefine('skylark-videojs/control-bar/time-controls/time-divider',[\n    '../../component'\n], function (Component) {\n    'use strict';\n    class TimeDivider extends Component {\n        createEl() {\n            return super.createEl('div', {\n                className: 'vjs-time-control vjs-time-divider',\n                innerHTML: '<div><span>/</span></div>'\n            }, { 'aria-hidden': true });\n        }\n    }\n    Component.registerComponent('TimeDivider', TimeDivider);\n    return TimeDivider;\n});\ndefine('skylark-videojs/control-bar/time-controls/remaining-time-display',[\n    './time-display',\n    '../../component',\n    '../../utils/dom'\n], function (TimeDisplay, Component, Dom) {\n    'use strict';\n    class RemainingTimeDisplay extends TimeDisplay {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, 'durationchange', this.updateContent);\n        }\n        buildCSSClass() {\n            return 'vjs-remaining-time';\n        }\n        createEl() {\n            const el = super.createEl();\n            el.insertBefore(Dom.createEl('span', {}, { 'aria-hidden': true }, '-'), this.contentEl_);\n            return el;\n        }\n        updateContent(event) {\n            if (typeof this.player_.duration() !== 'number') {\n                return;\n            }\n            let time;\n            if (this.player_.ended()) {\n                time = 0;\n            } else if (this.player_.remainingTimeDisplay) {\n                time = this.player_.remainingTimeDisplay();\n            } else {\n                time = this.player_.remainingTime();\n            }\n            this.updateTextNode_(time);\n        }\n    }\n    RemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n    RemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n    Component.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n    return RemainingTimeDisplay;\n});\ndefine('skylark-videojs/control-bar/live-display',[\n    '../component',\n    '../utils/dom'\n], function (Component, Dom) {\n    'use strict';\n    class LiveDisplay extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.updateShowing();\n            this.listenTo(this.player(), 'durationchange', this.updateShowing);\n        }\n        createEl() {\n            const el = super.createEl('div', { className: 'vjs-live-control vjs-control' });\n            this.contentEl_ = Dom.createEl('div', {\n                className: 'vjs-live-display',\n                innerHTML: `<span class=\"vjs-control-text\">${ this.localize('Stream Type') }\\u00a0</span>${ this.localize('LIVE') }`\n            }, { 'aria-live': 'off' });\n            el.appendChild(this.contentEl_);\n            return el;\n        }\n        dispose() {\n            this.contentEl_ = null;\n            super.dispose();\n        }\n        updateShowing(event) {\n            if (this.player().duration() === Infinity) {\n                this.show();\n            } else {\n                this.hide();\n            }\n        }\n    }\n    Component.registerComponent('LiveDisplay', LiveDisplay);\n    return LiveDisplay;\n});\ndefine('skylark-videojs/control-bar/seek-to-live',[\n    '../button',\n    '../component',\n    '../utils/dom'\n], function (Button, Component, Dom) {\n    'use strict';\n    class SeekToLive extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.updateLiveEdgeStatus();\n            if (this.player_.liveTracker) {\n                this.listenTo(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n            }\n        }\n        createEl() {\n            const el = super.createEl('button', { className: 'vjs-seek-to-live-control vjs-control' });\n            this.textEl_ = Dom.createEl('span', {\n                className: 'vjs-seek-to-live-text',\n                innerHTML: this.localize('LIVE')\n            }, { 'aria-hidden': 'true' });\n            el.appendChild(this.textEl_);\n            return el;\n        }\n        updateLiveEdgeStatus() {\n            if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n                this.setAttribute('aria-disabled', true);\n                this.addClass('vjs-at-live-edge');\n                this.controlText('Seek to live, currently playing live');\n            } else {\n                this.setAttribute('aria-disabled', false);\n                this.removeClass('vjs-at-live-edge');\n                this.controlText('Seek to live, currently behind live');\n            }\n        }\n        handleClick() {\n            this.player_.liveTracker.seekToLiveEdge();\n        }\n        dispose() {\n            if (this.player_.liveTracker) {\n                this.unlistenTo(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n            }\n            this.textEl_ = null;\n            super.dispose();\n        }\n    }\n    SeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\n    Component.registerComponent('SeekToLive', SeekToLive);\n    return SeekToLive;\n});\ndefine('skylark-videojs/utils/clamp',[],function () {\n    'use strict';\n    const clamp = function (number, min, max) {\n        number = Number(number);\n        return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n    };\n    return clamp;\n});\ndefine('skylark-videojs/slider/slider',[\n    '../component',\n    '../utils/dom',\n    '../utils/obj',\n    '../utils/browser',\n    '../utils/clamp',\n    '../utils/keycode'\n], function (Component, Dom, obj, browser, clamp, keycode) {\n    'use strict';\n    class Slider extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.bar = this.getChild(this.options_.barName);\n            this.vertical(!!this.options_.vertical);\n            this.enable();\n        }\n        enabled() {\n            return this.enabled_;\n        }\n        enable() {\n            if (this.enabled()) {\n                return;\n            }\n            this.listenTo('mousedown', this.handleMouseDown);\n            this.listenTo('touchstart', this.handleMouseDown);\n            this.listenTo('keydown', this.handleKeyDown);\n            this.listenTo('click', this.handleClick);\n            this.listenTo(this.player_, 'controlsvisible', this.update);\n            if (this.playerEvent) {\n                this.listenTo(this.player_, this.playerEvent, this.update);\n            }\n            this.removeClass('disabled');\n            this.setAttribute('tabindex', 0);\n            this.enabled_ = true;\n        }\n        disable() {\n            if (!this.enabled()) {\n                return;\n            }\n            const doc = this.bar.el_.ownerDocument;\n            this.unlistenTo('mousedown', this.handleMouseDown);\n            this.unlistenTo('touchstart', this.handleMouseDown);\n            this.unlistenTo('keydown', this.handleKeyDown);\n            this.unlistenTo('click', this.handleClick);\n            this.unlistenTo(this.player_, 'controlsvisible', this.update);\n            this.unlistenTo(doc, 'mousemove', this.handleMouseMove);\n            this.unlistenTo(doc, 'mouseup', this.handleMouseUp);\n            this.unlistenTo(doc, 'touchmove', this.handleMouseMove);\n            this.unlistenTo(doc, 'touchend', this.handleMouseUp);\n            this.removeAttribute('tabindex');\n            this.addClass('disabled');\n            if (this.playerEvent) {\n                this.unlistenTo(this.player_, this.playerEvent, this.update);\n            }\n            this.enabled_ = false;\n        }\n        createEl(type, props = {}, attributes = {}) {\n            props.className = props.className + ' vjs-slider';\n            props = obj.assign({ tabIndex: 0 }, props);\n            attributes = obj.assign({\n                'role': 'slider',\n                'aria-valuenow': 0,\n                'aria-valuemin': 0,\n                'aria-valuemax': 100,\n                'tabIndex': 0\n            }, attributes);\n            return super.createEl(type, props, attributes);\n        }\n        handleMouseDown(event) {\n            const doc = this.bar.el_.ownerDocument;\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n            }\n            if (event.type === 'touchstart' && !browser.IS_CHROME) {\n                event.preventDefault();\n            }\n            Dom.blockTextSelection();\n            this.addClass('vjs-sliding');\n            this.trigger('slideractive');\n            this.listenTo(doc, 'mousemove', this.handleMouseMove);\n            this.listenTo(doc, 'mouseup', this.handleMouseUp);\n            this.listenTo(doc, 'touchmove', this.handleMouseMove);\n            this.listenTo(doc, 'touchend', this.handleMouseUp);\n            this.handleMouseMove(event);\n        }\n        handleMouseMove(event) {\n        }\n        handleMouseUp() {\n            const doc = this.bar.el_.ownerDocument;\n            Dom.unblockTextSelection();\n            this.removeClass('vjs-sliding');\n            this.trigger('sliderinactive');\n            this.unlistenTo(doc, 'mousemove', this.handleMouseMove);\n            this.unlistenTo(doc, 'mouseup', this.handleMouseUp);\n            this.unlistenTo(doc, 'touchmove', this.handleMouseMove);\n            this.unlistenTo(doc, 'touchend', this.handleMouseUp);\n            this.update();\n        }\n        update() {\n            if (!this.el_ || !this.bar) {\n                return;\n            }\n            const progress = this.getProgress();\n            if (progress === this.progress_) {\n                return progress;\n            }\n            this.progress_ = progress;\n            this.requestNamedAnimationFrame('Slider#update', () => {\n                const sizeKey = this.vertical() ? 'height' : 'width';\n                this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n            });\n            return progress;\n        }\n        getProgress() {\n            return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n        }\n        calculateDistance(event) {\n            const position = Dom.getPointerPosition(this.el_, event);\n            if (this.vertical()) {\n                return position.y;\n            }\n            return position.x;\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepBack();\n            } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepForward();\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n        handleClick(event) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n        vertical(bool) {\n            if (bool === undefined) {\n                return this.vertical_ || false;\n            }\n            this.vertical_ = !!bool;\n            if (this.vertical_) {\n                this.addClass('vjs-slider-vertical');\n            } else {\n                this.addClass('vjs-slider-horizontal');\n            }\n        }\n    }\n    Component.registerComponent('Slider', Slider);\n    return Slider;\n});\ndefine('skylark-videojs/control-bar/progress-control/load-progress-bar',[\n    'skylark-langx-globals/document',\n    '../../component',\n    '../../utils/dom',\n    '../../utils/clamp'\n], function (document,Component, Dom, clamp) {\n    'use strict';\n    const percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n    class LoadProgressBar extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.partEls_ = [];\n            this.listenTo(player, 'progress', this.update);\n        }\n        createEl() {\n            const el = super.createEl('div', { className: 'vjs-load-progress' });\n            const wrapper = Dom.createEl('span', { className: 'vjs-control-text' });\n            const loadedText = Dom.createEl('span', { textContent: this.localize('Loaded') });\n            const separator = document.createTextNode(': ');\n            this.percentageEl_ = Dom.createEl('span', {\n                className: 'vjs-control-text-loaded-percentage',\n                textContent: '0%'\n            });\n            el.appendChild(wrapper);\n            wrapper.appendChild(loadedText);\n            wrapper.appendChild(separator);\n            wrapper.appendChild(this.percentageEl_);\n            return el;\n        }\n        dispose() {\n            this.partEls_ = null;\n            this.percentageEl_ = null;\n            super.dispose();\n        }\n        update(event) {\n            this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n                const liveTracker = this.player_.liveTracker;\n                const buffered = this.player_.buffered();\n                const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n                const bufferedEnd = this.player_.bufferedEnd();\n                const children = this.partEls_;\n                const percent = percentify(bufferedEnd, duration);\n                if (this.percent_ !== percent) {\n                    this.el_.style.width = percent;\n                    Dom.textContent(this.percentageEl_, percent);\n                    this.percent_ = percent;\n                }\n                for (let i = 0; i < buffered.length; i++) {\n                    const start = buffered.start(i);\n                    const end = buffered.end(i);\n                    let part = children[i];\n                    if (!part) {\n                        part = this.el_.appendChild(Dom.createEl());\n                        children[i] = part;\n                    }\n                    if (part.dataset.start === start && part.dataset.end === end) {\n                        continue;\n                    }\n                    part.dataset.start = start;\n                    part.dataset.end = end;\n                    part.style.left = percentify(start, bufferedEnd);\n                    part.style.width = percentify(end - start, bufferedEnd);\n                }\n                for (let i = children.length; i > buffered.length; i--) {\n                    this.el_.removeChild(children[i - 1]);\n                }\n                children.length = buffered.length;\n            });\n        }\n    }\n    Component.registerComponent('LoadProgressBar', LoadProgressBar);\n    return LoadProgressBar;\n});\ndefine('skylark-videojs/control-bar/progress-control/time-tooltip',[\n    '../../component',\n    '../../utils/dom',\n    '../../utils/format-time',\n    '../../utils/fn'\n], function (Component, Dom, formatTime, Fn) {\n    'use strict';\n    class TimeTooltip extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.update = Fn.throttle(Fn.bind(this, this.update), Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-time-tooltip' }, { 'aria-hidden': 'true' });\n        }\n        update(seekBarRect, seekBarPoint, content) {\n            const tooltipRect = Dom.findPosition(this.el_);\n            const playerRect = Dom.getBoundingClientRect(this.player_.el());\n            const seekBarPointPx = seekBarRect.width * seekBarPoint;\n            if (!playerRect || !tooltipRect) {\n                return;\n            }\n            const spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n            const spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n            let pullTooltipBy = tooltipRect.width / 2;\n            if (spaceLeftOfPoint < pullTooltipBy) {\n                pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n            } else if (spaceRightOfPoint < pullTooltipBy) {\n                pullTooltipBy = spaceRightOfPoint;\n            }\n            if (pullTooltipBy < 0) {\n                pullTooltipBy = 0;\n            } else if (pullTooltipBy > tooltipRect.width) {\n                pullTooltipBy = tooltipRect.width;\n            }\n            pullTooltipBy = Math.round(pullTooltipBy);\n            this.el_.style.right = `-${ pullTooltipBy }px`;\n            this.write(content);\n        }\n        write(content) {\n            Dom.textContent(this.el_, content);\n        }\n        updateTime(seekBarRect, seekBarPoint, time, cb) {\n            this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n                let content;\n                const duration = this.player_.duration();\n                if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n                    const liveWindow = this.player_.liveTracker.liveWindow();\n                    const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n                    content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n                } else {\n                    content = formatTime(time, duration);\n                }\n                this.update(seekBarRect, seekBarPoint, content);\n                if (cb) {\n                    cb();\n                }\n            });\n        }\n    }\n    Component.registerComponent('TimeTooltip', TimeTooltip);\n    return TimeTooltip;\n});\ndefine('skylark-videojs/control-bar/progress-control/play-progress-bar',[\n    '../../component',\n    '../../utils/browser',\n    '../../utils/fn',\n    './time-tooltip'\n], function (Component, browser, Fn) {\n    'use strict';\n    class PlayProgressBar extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.update = Fn.throttle(Fn.bind(this, this.update), Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-play-progress vjs-slider-bar' }, { 'aria-hidden': 'true' });\n        }\n        update(seekBarRect, seekBarPoint) {\n            const timeTooltip = this.getChild('timeTooltip');\n            if (!timeTooltip) {\n                return;\n            }\n            const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n            timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n        }\n    }\n    PlayProgressBar.prototype.options_ = { children: [] };\n    if (!browser.IS_IOS && !browser.IS_ANDROID) {\n        PlayProgressBar.prototype.options_.children.push('timeTooltip');\n    }\n    Component.registerComponent('PlayProgressBar', PlayProgressBar);\n    return PlayProgressBar;\n});\ndefine('skylark-videojs/control-bar/progress-control/mouse-time-display',[\n    '../../component',\n    '../../utils/fn',\n    './time-tooltip'\n], function (Component, Fn) {\n    'use strict';\n    class MouseTimeDisplay extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.update = Fn.throttle(Fn.bind(this, this.update), Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-mouse-display' });\n        }\n        update(seekBarRect, seekBarPoint) {\n            const time = seekBarPoint * this.player_.duration();\n            this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n                this.el_.style.left = `${ seekBarRect.width * seekBarPoint }px`;\n            });\n        }\n    }\n    MouseTimeDisplay.prototype.options_ = { children: ['timeTooltip'] };\n    Component.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n    return MouseTimeDisplay;\n});\ndefine('skylark-videojs/control-bar/progress-control/seek-bar',[\n    'skylark-langx-globals/document',\n    '../../slider/slider',\n    '../../component',\n    '../../utils/browser',\n    '../../utils/dom',\n    '../../utils/fn',\n    '../../utils/format-time',\n    '../../utils/promise',\n    '../../utils/keycode',\n    './load-progress-bar',\n    './play-progress-bar',\n    './mouse-time-display'\n], function (document,Slider, Component, browser, Dom, Fn, formatTime, promise, keycode) {\n    'use strict';\n    const STEP_SECONDS = 5;\n    const PAGE_KEY_MULTIPLIER = 12;\n    class SeekBar extends Slider {\n        constructor(player, options) {\n            super(player, options);\n            this.setEventHandlers_();\n        }\n        setEventHandlers_() {\n            this.update_ = Fn.bind(this, this.update);\n            this.update = Fn.throttle(this.update_, Fn.UPDATE_REFRESH_INTERVAL);\n            this.listenTo(this.player_, [\n                'ended',\n                'durationchange',\n                'timeupdate'\n            ], this.update);\n            if (this.player_.liveTracker) {\n                this.listenTo(this.player_.liveTracker, 'liveedgechange', this.update);\n            }\n            this.updateInterval = null;\n            this.listenTo(this.player_, ['playing'], this.enableInterval_);\n            this.listenTo(this.player_, [\n                'ended',\n                'pause',\n                'waiting'\n            ], this.disableInterval_);\n            if ('hidden' in document && 'visibilityState' in document) {\n                this.listenTo(document, 'visibilitychange', this.toggleVisibility_);\n            }\n        }\n        toggleVisibility_(e) {\n            if (document.hidden) {\n                this.disableInterval_(e);\n            } else {\n                this.enableInterval_();\n                this.update();\n            }\n        }\n        enableInterval_() {\n            if (this.updateInterval) {\n                return;\n            }\n            this.updateInterval = this.setInterval(this.update, Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        disableInterval_(e) {\n            if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n                return;\n            }\n            if (!this.updateInterval) {\n                return;\n            }\n            this.clearInterval(this.updateInterval);\n            this.updateInterval = null;\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-progress-holder' }, { 'aria-label': this.localize('Progress Bar') });\n        }\n        update(event) {\n            const percent = super.update();\n            this.requestNamedAnimationFrame('SeekBar#update', () => {\n                const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n                const liveTracker = this.player_.liveTracker;\n                let duration = this.player_.duration();\n                if (liveTracker && liveTracker.isLive()) {\n                    duration = this.player_.liveTracker.liveCurrentTime();\n                }\n                if (this.percent_ !== percent) {\n                    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n                    this.percent_ = percent;\n                }\n                if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n                    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [\n                        formatTime(currentTime, duration),\n                        formatTime(duration, duration)\n                    ], '{1} of {2}'));\n                    this.currentTime_ = currentTime;\n                    this.duration_ = duration;\n                }\n                if (this.bar) {\n                    this.bar.update(Dom.getBoundingClientRect(this.el()), this.getProgress());\n                }\n            });\n            return percent;\n        }\n        getCurrentTime_() {\n            return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n        }\n        getPercent() {\n            const currentTime = this.getCurrentTime_();\n            let percent;\n            const liveTracker = this.player_.liveTracker;\n            if (liveTracker && liveTracker.isLive()) {\n                percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n                if (liveTracker.atLiveEdge()) {\n                    percent = 1;\n                }\n            } else {\n                percent = currentTime / this.player_.duration();\n            }\n            return percent;\n        }\n        handleMouseDown(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            event.stopPropagation();\n            this.player_.scrubbing(true);\n            this.videoWasPlaying = !this.player_.paused();\n            this.player_.pause();\n            super.handleMouseDown(event);\n        }\n        handleMouseMove(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            let newTime;\n            const distance = this.calculateDistance(event);\n            const liveTracker = this.player_.liveTracker;\n            if (!liveTracker || !liveTracker.isLive()) {\n                newTime = distance * this.player_.duration();\n                if (newTime === this.player_.duration()) {\n                    newTime = newTime - 0.1;\n                }\n            } else {\n                if (distance >= 0.99) {\n                    liveTracker.seekToLiveEdge();\n                    return;\n                }\n                const seekableStart = liveTracker.seekableStart();\n                const seekableEnd = liveTracker.liveCurrentTime();\n                newTime = seekableStart + distance * liveTracker.liveWindow();\n                if (newTime >= seekableEnd) {\n                    newTime = seekableEnd;\n                }\n                if (newTime <= seekableStart) {\n                    newTime = seekableStart + 0.1;\n                }\n                if (newTime === Infinity) {\n                    return;\n                }\n            }\n            this.player_.currentTime(newTime);\n        }\n        enable() {\n            super.enable();\n            const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n            if (!mouseTimeDisplay) {\n                return;\n            }\n            mouseTimeDisplay.show();\n        }\n        disable() {\n            super.disable();\n            const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n            if (!mouseTimeDisplay) {\n                return;\n            }\n            mouseTimeDisplay.hide();\n        }\n        handleMouseUp(event) {\n            super.handleMouseUp(event);\n            if (event) {\n                event.stopPropagation();\n            }\n            this.player_.scrubbing(false);\n            this.player_.trigger({\n                type: 'timeupdate',\n                target: this,\n                manuallyTriggered: true\n            });\n            if (this.videoWasPlaying) {\n                promise.silencePromise(this.player_.play());\n            } else {\n                this.update_();\n            }\n        }\n        stepForward() {\n            this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n        }\n        stepBack() {\n            this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n        }\n        handleAction(event) {\n            if (this.player_.paused()) {\n                this.player_.play();\n            } else {\n                this.player_.pause();\n            }\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.handleAction(event);\n            } else if (keycode.isEventKey(event, 'Home')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(0);\n            } else if (keycode.isEventKey(event, 'End')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(this.player_.duration());\n            } else if (/^[0-9]$/.test(keycode(event))) {\n                event.preventDefault();\n                event.stopPropagation();\n                const gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10 / 100;\n                this.player_.currentTime(this.player_.duration() * gotoFraction);\n            } else if (keycode.isEventKey(event, 'PgDn')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n            } else if (keycode.isEventKey(event, 'PgUp')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n        dispose() {\n            this.disableInterval_();\n            thisunlistenTo(this.player_, [\n                'ended',\n                'durationchange',\n                'timeupdate'\n            ], this.update);\n            if (this.player_.liveTracker) {\n                this.listenTo(this.player_.liveTracker, 'liveedgechange', this.update);\n            }\n            this.unlistenTo(this.player_, ['playing'], this.enableInterval_);\n            this.unlistenTo(this.player_, [\n                'ended',\n                'pause',\n                'waiting'\n            ], this.disableInterval_);\n            if ('hidden' in document && 'visibilityState' in document) {\n                this.unlistenTo(document, 'visibilitychange', this.toggleVisibility_);\n            }\n            super.dispose();\n        }\n    }\n    SeekBar.prototype.options_ = {\n        children: [\n            'loadProgressBar',\n            'playProgressBar'\n        ],\n        barName: 'playProgressBar'\n    };\n    if (!browser.IS_IOS && !browser.IS_ANDROID) {\n        SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n    }\n    Component.registerComponent('SeekBar', SeekBar);\n    return SeekBar;\n});\ndefine('skylark-videojs/control-bar/progress-control/progress-control',[\n    '../../component',\n    '../../utils/dom',\n    '../../utils/clamp',\n    '../../utils/fn',\n    './seek-bar'\n], function (Component, Dom, clamp, Fn) {\n    'use strict';\n    class ProgressControl extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.handleMouseMove = Fn.throttle(Fn.bind(this, this.handleMouseMove), Fn.UPDATE_REFRESH_INTERVAL);\n            this.throttledHandleMouseSeek = Fn.throttle(Fn.bind(this, this.handleMouseSeek), Fn.UPDATE_REFRESH_INTERVAL);\n            this.enable();\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-progress-control vjs-control' });\n        }\n        handleMouseMove(event) {\n            const seekBar = this.getChild('seekBar');\n            if (!seekBar) {\n                return;\n            }\n            const playProgressBar = seekBar.getChild('playProgressBar');\n            const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n            if (!playProgressBar && !mouseTimeDisplay) {\n                return;\n            }\n            const seekBarEl = seekBar.el();\n            const seekBarRect = Dom.findPosition(seekBarEl);\n            let seekBarPoint = Dom.getPointerPosition(seekBarEl, event).x;\n            seekBarPoint = clamp(seekBarPoint, 0, 1);\n            if (mouseTimeDisplay) {\n                mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n            }\n            if (playProgressBar) {\n                playProgressBar.update(seekBarRect, seekBar.getProgress());\n            }\n        }\n        handleMouseSeek(event) {\n            const seekBar = this.getChild('seekBar');\n            if (seekBar) {\n                seekBar.handleMouseMove(event);\n            }\n        }\n        enabled() {\n            return this.enabled_;\n        }\n        disable() {\n            this.children().forEach(child => child.disable && child.disable());\n            if (!this.enabled()) {\n                return;\n            }\n            this.unlistenTo([\n                'mousedown',\n                'touchstart'\n            ], this.handleMouseDown);\n            this.unlistenTo(this.el_, 'mousemove', this.handleMouseMove);\n            this.handleMouseUp();\n            this.addClass('disabled');\n            this.enabled_ = false;\n        }\n        enable() {\n            this.children().forEach(child => child.enable && child.enable());\n            if (this.enabled()) {\n                return;\n            }\n            this.listenTo([\n                'mousedown',\n                'touchstart'\n            ], this.handleMouseDown);\n            this.listenTo(this.el_, 'mousemove', this.handleMouseMove);\n            this.removeClass('disabled');\n            this.enabled_ = true;\n        }\n        handleMouseDown(event) {\n            const doc = this.el_.ownerDocument;\n            const seekBar = this.getChild('seekBar');\n            if (seekBar) {\n                seekBar.handleMouseDown(event);\n            }\n            this.listenTo(doc, 'mousemove', this.throttledHandleMouseSeek);\n            this.listenTo(doc, 'touchmove', this.throttledHandleMouseSeek);\n            this.listenTo(doc, 'mouseup', this.handleMouseUp);\n            this.listenTo(doc, 'touchend', this.handleMouseUp);\n        }\n        handleMouseUp(event) {\n            const doc = this.el_.ownerDocument;\n            const seekBar = this.getChild('seekBar');\n            if (seekBar) {\n                seekBar.handleMouseUp(event);\n            }\n            this.unlistenTo(doc, 'mousemove', this.throttledHandleMouseSeek);\n            this.unlistenTo(doc, 'touchmove', this.throttledHandleMouseSeek);\n            this.unlistenTo(doc, 'mouseup', this.handleMouseUp);\n            this.unlistenTo(doc, 'touchend', this.handleMouseUp);\n        }\n    }\n    ProgressControl.prototype.options_ = { children: ['seekBar'] };\n    Component.registerComponent('ProgressControl', ProgressControl);\n    return ProgressControl;\n});\ndefine('skylark-videojs/control-bar/picture-in-picture-toggle',[\n    'skylark-langx-globals/document',\n    '../button',\n    '../component'\n], function (document,Button, Component) {\n    'use strict';\n    class PictureInPictureToggle extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, [\n                'enterpictureinpicture',\n                'leavepictureinpicture'\n            ], this.handlePictureInPictureChange);\n            this.listenTo(player, [\n                'disablepictureinpicturechanged',\n                'loadedmetadata'\n            ], this.handlePictureInPictureEnabledChange);\n            this.disable();\n        }\n        buildCSSClass() {\n            return `vjs-picture-in-picture-control ${ super.buildCSSClass() }`;\n        }\n        handlePictureInPictureEnabledChange() {\n            if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n                this.enable();\n            } else {\n                this.disable();\n            }\n        }\n        handlePictureInPictureChange(event) {\n            if (this.player_.isInPictureInPicture()) {\n                this.controlText('Exit Picture-in-Picture');\n            } else {\n                this.controlText('Picture-in-Picture');\n            }\n            this.handlePictureInPictureEnabledChange();\n        }\n        handleClick(event) {\n            if (!this.player_.isInPictureInPicture()) {\n                this.player_.requestPictureInPicture();\n            } else {\n                this.player_.exitPictureInPicture();\n            }\n        }\n    }\n    PictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\n    Component.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n    return PictureInPictureToggle;\n});\ndefine('skylark-videojs/control-bar/fullscreen-toggle',[\n    'skylark-langx-globals/document',\n    '../button',\n    '../component',\n], function (document,Button, Component) {\n    'use strict';\n    class FullscreenToggle extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, 'fullscreenchange', this.handleFullscreenChange);\n            if (document[player.fsApi_.fullscreenEnabled] === false) {\n                this.disable();\n            }\n        }\n        buildCSSClass() {\n            return `vjs-fullscreen-control ${ super.buildCSSClass() }`;\n        }\n        handleFullscreenChange(event) {\n            if (this.player_.isFullscreen()) {\n                this.controlText('Non-Fullscreen');\n            } else {\n                this.controlText('Fullscreen');\n            }\n        }\n        handleClick(event) {\n            if (!this.player_.isFullscreen()) {\n                this.player_.requestFullscreen();\n            } else {\n                this.player_.exitFullscreen();\n            }\n        }\n    }\n    FullscreenToggle.prototype.controlText_ = 'Fullscreen';\n    Component.registerComponent('FullscreenToggle', FullscreenToggle);\n    return FullscreenToggle;\n});\ndefine('skylark-videojs/control-bar/volume-control/check-volume-support',[],function () {\n    'use strict';\n    const checkVolumeSupport = function (self, player) {\n        if (player.tech_ && !player.tech_.featuresVolumeControl) {\n            self.addClass('vjs-hidden');\n        }\n        self.listenTo(player, 'loadstart', function () {\n            if (!player.tech_.featuresVolumeControl) {\n                self.addClass('vjs-hidden');\n            } else {\n                self.removeClass('vjs-hidden');\n            }\n        });\n    };\n    return checkVolumeSupport;\n});\ndefine('skylark-videojs/control-bar/volume-control/volume-level',[\n    '../../component'\n], function (Component) {\n    'use strict';\n    class VolumeLevel extends Component {\n        createEl() {\n            return super.createEl('div', {\n                className: 'vjs-volume-level',\n                innerHTML: '<span class=\"vjs-control-text\"></span>'\n            });\n        }\n    }\n    Component.registerComponent('VolumeLevel', VolumeLevel);\n    return VolumeLevel;\n});\ndefine('skylark-videojs/control-bar/volume-control/volume-bar',[\n    '../../slider/slider',\n    '../../component',\n    '../../utils/dom',\n    './volume-level'\n], function (Slider, Component, Dom) {\n    'use strict';\n    class VolumeBar extends Slider {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo('slideractive', this.updateLastVolume_);\n            this.listenTo(player, 'volumechange', this.updateARIAAttributes);\n            player.ready(() => this.updateARIAAttributes());\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-volume-bar vjs-slider-bar' }, {\n                'aria-label': this.localize('Volume Level'),\n                'aria-live': 'polite'\n            });\n        }\n        handleMouseDown(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            super.handleMouseDown(event);\n        }\n        handleMouseMove(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            this.checkMuted();\n            this.player_.volume(this.calculateDistance(event));\n        }\n        checkMuted() {\n            if (this.player_.muted()) {\n                this.player_.muted(false);\n            }\n        }\n        getPercent() {\n            if (this.player_.muted()) {\n                return 0;\n            }\n            return this.player_.volume();\n        }\n        stepForward() {\n            this.checkMuted();\n            this.player_.volume(this.player_.volume() + 0.1);\n        }\n        stepBack() {\n            this.checkMuted();\n            this.player_.volume(this.player_.volume() - 0.1);\n        }\n        updateARIAAttributes(event) {\n            const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n            this.el_.setAttribute('aria-valuenow', ariaValue);\n            this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n        }\n        volumeAsPercentage_() {\n            return Math.round(this.player_.volume() * 100);\n        }\n        updateLastVolume_() {\n            const volumeBeforeDrag = this.player_.volume();\n            this.listenToOnce('sliderinactive', () => {\n                if (this.player_.volume() === 0) {\n                    this.player_.lastVolume_(volumeBeforeDrag);\n                }\n            });\n        }\n    }\n    VolumeBar.prototype.options_ = {\n        children: ['volumeLevel'],\n        barName: 'volumeLevel'\n    };\n    VolumeBar.prototype.playerEvent = 'volumechange';\n    Component.registerComponent('VolumeBar', VolumeBar);\n    return VolumeBar;\n});\ndefine('skylark-videojs/control-bar/volume-control/volume-control',[\n    '../../component',\n    './check-volume-support',\n    '../../utils/obj',\n    '../../utils/fn',\n    './volume-bar'\n], function (Component, checkVolumeSupport, obj, Fn) {\n    'use strict';\n    class VolumeControl extends Component {\n        constructor(player, options = {}) {\n            options.vertical = options.vertical || false;\n            if (typeof options.volumeBar === 'undefined' || obj.isPlain(options.volumeBar)) {\n                options.volumeBar = options.volumeBar || {};\n                options.volumeBar.vertical = options.vertical;\n            }\n            super(player, options);\n            checkVolumeSupport(this, player);\n            this.throttledHandleMouseMove = Fn.throttle(Fn.bind(this, this.handleMouseMove), Fn.UPDATE_REFRESH_INTERVAL);\n            this.listenTo('mousedown', this.handleMouseDown);\n            this.listenTo('touchstart', this.handleMouseDown);\n            this.listenTo(this.volumeBar, [\n                'focus',\n                'slideractive'\n            ], () => {\n                this.volumeBar.addClass('vjs-slider-active');\n                this.addClass('vjs-slider-active');\n                this.trigger('slideractive');\n            });\n            this.listenTo(this.volumeBar, [\n                'blur',\n                'sliderinactive'\n            ], () => {\n                this.volumeBar.removeClass('vjs-slider-active');\n                this.removeClass('vjs-slider-active');\n                this.trigger('sliderinactive');\n            });\n        }\n        createEl() {\n            let orientationClass = 'vjs-volume-horizontal';\n            if (this.options_.vertical) {\n                orientationClass = 'vjs-volume-vertical';\n            }\n            return super.createEl('div', { className: `vjs-volume-control vjs-control ${ orientationClass }` });\n        }\n        handleMouseDown(event) {\n            const doc = this.el_.ownerDocument;\n            this.listenTo(doc, 'mousemove', this.throttledHandleMouseMove);\n            this.listenTo(doc, 'touchmove', this.throttledHandleMouseMove);\n            this.listenTo(doc, 'mouseup', this.handleMouseUp);\n            this.listenTo(doc, 'touchend', this.handleMouseUp);\n        }\n        handleMouseUp(event) {\n            const doc = this.el_.ownerDocument;\n            this.unlistenTo(doc, 'mousemove', this.throttledHandleMouseMove);\n            this.unlistenTo(doc, 'touchmove', this.throttledHandleMouseMove);\n            this.unlistenTo(doc, 'mouseup', this.handleMouseUp);\n            this.unlistenTo(doc, 'touchend', this.handleMouseUp);\n        }\n        handleMouseMove(event) {\n            this.volumeBar.handleMouseMove(event);\n        }\n    }\n    VolumeControl.prototype.options_ = { children: ['volumeBar'] };\n    Component.registerComponent('VolumeControl', VolumeControl);\n    return VolumeControl;\n});\ndefine('skylark-videojs/control-bar/volume-control/check-mute-support',[],function () {\n    'use strict';\n    const checkMuteSupport = function (self, player) {\n        if (player.tech_ && !player.tech_.featuresMuteControl) {\n            self.addClass('vjs-hidden');\n        }\n        self.listenTo(player, 'loadstart', function () {\n            if (!player.tech_.featuresMuteControl) {\n                self.addClass('vjs-hidden');\n            } else {\n                self.removeClass('vjs-hidden');\n            }\n        });\n    };\n    return checkMuteSupport;\n});\ndefine('skylark-videojs/control-bar/mute-toggle',[\n    '../button',\n    '../component',\n    '../utils/dom',\n    './volume-control/check-mute-support',\n    '../utils/browser'\n], function (Button, Component, Dom, checkMuteSupport, browser) {\n    'use strict';\n    class MuteToggle extends Button {\n        constructor(player, options) {\n            super(player, options);\n            checkMuteSupport(this, player);\n            this.listenTo(player, [\n                'loadstart',\n                'volumechange'\n            ], this.update);\n        }\n        buildCSSClass() {\n            return `vjs-mute-control ${ super.buildCSSClass() }`;\n        }\n        handleClick(event) {\n            const vol = this.player_.volume();\n            const lastVolume = this.player_.lastVolume_();\n            if (vol === 0) {\n                const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n                this.player_.volume(volumeToSet);\n                this.player_.muted(false);\n            } else {\n                this.player_.muted(this.player_.muted() ? false : true);\n            }\n        }\n        update(event) {\n            this.updateIcon_();\n            this.updateControlText_();\n        }\n        updateIcon_() {\n            const vol = this.player_.volume();\n            let level = 3;\n            if (browser.IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n                this.player_.muted(this.player_.tech_.el_.muted);\n            }\n            if (vol === 0 || this.player_.muted()) {\n                level = 0;\n            } else if (vol < 0.33) {\n                level = 1;\n            } else if (vol < 0.67) {\n                level = 2;\n            }\n            for (let i = 0; i < 4; i++) {\n                Dom.removeClass(this.el_, `vjs-vol-${ i }`);\n            }\n            Dom.addClass(this.el_, `vjs-vol-${ level }`);\n        }\n        updateControlText_() {\n            const soundOff = this.player_.muted() || this.player_.volume() === 0;\n            const text = soundOff ? 'Unmute' : 'Mute';\n            if (this.controlText() !== text) {\n                this.controlText(text);\n            }\n        }\n    }\n    MuteToggle.prototype.controlText_ = 'Mute';\n    Component.registerComponent('MuteToggle', MuteToggle);\n    return MuteToggle;\n});\ndefine('skylark-videojs/control-bar/volume-panel',[\n    'skylark-langx-globals/document',\n    '../component',\n    '../utils/obj',\n    '../utils/events',\n    '../utils/fn',\n    '../utils/keycode',\n    './volume-control/volume-control',\n    './mute-toggle'\n], function (document, Component, obj, Events, Fn, keycode) {\n    'use strict';\n    class VolumePanel extends Component {\n        constructor(player, options = {}) {\n            if (typeof options.inline !== 'undefined') {\n                options.inline = options.inline;\n            } else {\n                options.inline = true;\n            }\n            if (typeof options.volumeControl === 'undefined' || obj.isPlain(options.volumeControl)) {\n                options.volumeControl = options.volumeControl || {};\n                options.volumeControl.vertical = !options.inline;\n            }\n            super(player, options);\n            this.listenTo(player, ['loadstart'], this.volumePanelState_);\n            this.listenTo(this.muteToggle, 'keyup', this.handleKeyPress);\n            this.listenTo(this.volumeControl, 'keyup', this.handleVolumeControlKeyUp);\n            this.listenTo('keydown', this.handleKeyPress);\n            this.listenTo('mouseover', this.handleMouseOver);\n            this.listenTo('mouseout', this.handleMouseOut);\n            this.listenTo(this.volumeControl, ['slideractive'], this.sliderActive_);\n            this.listenTo(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n        }\n        sliderActive_() {\n            this.addClass('vjs-slider-active');\n        }\n        sliderInactive_() {\n            this.removeClass('vjs-slider-active');\n        }\n        volumePanelState_() {\n            if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n                this.addClass('vjs-hidden');\n            }\n            if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n                this.addClass('vjs-mute-toggle-only');\n            }\n        }\n        createEl() {\n            let orientationClass = 'vjs-volume-panel-horizontal';\n            if (!this.options_.inline) {\n                orientationClass = 'vjs-volume-panel-vertical';\n            }\n            return super.createEl('div', { className: `vjs-volume-panel vjs-control ${ orientationClass }` });\n        }\n        dispose() {\n            this.handleMouseOut();\n            super.dispose();\n        }\n        handleVolumeControlKeyUp(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                this.muteToggle.focus();\n            }\n        }\n        handleMouseOver(event) {\n            this.addClass('vjs-hover');\n            Events.on(document, 'keyup', Fn.bind(this, this.handleKeyPress));\n        }\n        handleMouseOut(event) {\n            this.removeClass('vjs-hover');\n            Events.off(document, 'keyup', Fn.bind(this, this.handleKeyPress));\n        }\n        handleKeyPress(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                this.handleMouseOut();\n            }\n        }\n    }\n    VolumePanel.prototype.options_ = {\n        children: [\n            'muteToggle',\n            'volumeControl'\n        ]\n    };\n    Component.registerComponent('VolumePanel', VolumePanel);\n    return VolumePanel;\n});\ndefine('skylark-videojs/menu/menu',[\n    'skylark-langx-globals/document',\n    '../component',\n    '../utils/dom',\n    '../utils/fn',\n    '../utils/events',\n    '../utils/keycode'\n], function (document,Component, Dom, Fn, Events, keycode) {\n    'use strict';\n    class Menu extends Component {\n        constructor(player, options) {\n            super(player, options);\n            if (options) {\n                this.menuButton_ = options.menuButton;\n            }\n            this.focusedChild_ = -1;\n            this.listenTo('keydown', this.handleKeyDown);\n            this.boundHandleBlur_ = Fn.bind(this, this.handleBlur);\n            this.boundHandleTapClick_ = Fn.bind(this, this.handleTapClick);\n        }\n        addEventListenerForItem(component) {\n            if (!(component instanceof Component)) {\n                return;\n            }\n            this.listenTo(component, 'blur', this.boundHandleBlur_);\n            this.listenTo(component, [\n                'tap',\n                'click'\n            ], this.boundHandleTapClick_);\n        }\n        removeEventListenerForItem(component) {\n            if (!(component instanceof Component)) {\n                return;\n            }\n            this.unlistenTo(component, 'blur', this.boundHandleBlur_);\n            this.unlistenTo(component, [\n                'tap',\n                'click'\n            ], this.boundHandleTapClick_);\n        }\n        removeChild(component) {\n            if (typeof component === 'string') {\n                component = this.getChild(component);\n            }\n            this.removeEventListenerForItem(component);\n            super.removeChild(component);\n        }\n        addItem(component) {\n            const childComponent = this.addChild(component);\n            if (childComponent) {\n                this.addEventListenerForItem(childComponent);\n            }\n        }\n        createEl() {\n            const contentElType = this.options_.contentElType || 'ul';\n            this.contentEl_ = Dom.createEl(contentElType, { className: 'vjs-menu-content' });\n            this.contentEl_.setAttribute('role', 'menu');\n            const el = super.createEl('div', {\n                append: this.contentEl_,\n                className: 'vjs-menu'\n            });\n            el.appendChild(this.contentEl_);\n            Events.on(el, 'click', function (event) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            });\n            return el;\n        }\n        dispose() {\n            this.contentEl_ = null;\n            this.boundHandleBlur_ = null;\n            this.boundHandleTapClick_ = null;\n            super.dispose();\n        }\n        handleBlur(event) {\n            const relatedTarget = event.relatedTarget || document.activeElement;\n            if (!this.children().some(element => {\n                    return element.el() === relatedTarget;\n                })) {\n                const btn = this.menuButton_;\n                if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n                    btn.unpressButton();\n                }\n            }\n        }\n        handleTapClick(event) {\n            if (this.menuButton_) {\n                this.menuButton_.unpressButton();\n                const childComponents = this.children();\n                if (!Array.isArray(childComponents)) {\n                    return;\n                }\n                const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n                if (!foundComponent) {\n                    return;\n                }\n                if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n                    this.menuButton_.focus();\n                }\n            }\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepForward();\n            } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepBack();\n            }\n        }\n        stepForward() {\n            let stepChild = 0;\n            if (this.focusedChild_ !== undefined) {\n                stepChild = this.focusedChild_ + 1;\n            }\n            this.focus(stepChild);\n        }\n        stepBack() {\n            let stepChild = 0;\n            if (this.focusedChild_ !== undefined) {\n                stepChild = this.focusedChild_ - 1;\n            }\n            this.focus(stepChild);\n        }\n        focus(item = 0) {\n            const children = this.children().slice();\n            const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n            if (haveTitle) {\n                children.shift();\n            }\n            if (children.length > 0) {\n                if (item < 0) {\n                    item = 0;\n                } else if (item >= children.length) {\n                    item = children.length - 1;\n                }\n                this.focusedChild_ = item;\n                children[item].el_.focus();\n            }\n        }\n    }\n    Component.registerComponent('Menu', Menu);\n    return Menu;\n});\ndefine('skylark-videojs/menu/menu-button',[\n    '../button',\n    '../component',\n    './menu',\n    '../utils/dom',\n    '../utils/fn',\n    '../utils/events',\n    '../utils/string-cases',\n    '../utils/browser',\n    '../utils/keycode'\n], function (Button, Component, Menu, Dom, Fn, Events, stringCases, browser, keycode) {\n    'use strict';\n    class MenuButton extends Component {\n        constructor(player, options = {}) {\n            super(player, options);\n            this.menuButton_ = new Button(player, options);\n            this.menuButton_.controlText(this.controlText_);\n            this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n            const buttonClass = Button.prototype.buildCSSClass();\n            this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n            this.menuButton_.removeClass('vjs-control');\n            this.addChild(this.menuButton_);\n            this.update();\n            this.enabled_ = true;\n            this.listenTo(this.menuButton_, 'tap', this.handleClick);\n            this.listenTo(this.menuButton_, 'click', this.handleClick);\n            this.listenTo(this.menuButton_, 'keydown', this.handleKeyDown);\n            this.listenTo(this.menuButton_, 'mouseenter', () => {\n                this.addClass('vjs-hover');\n                this.menu.show();\n                Events.on(document, 'keyup', Fn.bind(this, this.handleMenuKeyUp));\n            });\n            this.listenTo('mouseleave', this.handleMouseLeave);\n            this.listenTo('keydown', this.handleSubmenuKeyDown);\n        }\n        update() {\n            const menu = this.createMenu();\n            if (this.menu) {\n                this.menu.dispose();\n                this.removeChild(this.menu);\n            }\n            this.menu = menu;\n            this.addChild(menu);\n            this.buttonPressed_ = false;\n            this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n            if (this.items && this.items.length <= this.hideThreshold_) {\n                this.hide();\n            } else {\n                this.show();\n            }\n        }\n        createMenu() {\n            const menu = new Menu(this.player_, { menuButton: this });\n            this.hideThreshold_ = 0;\n            if (this.options_.title) {\n                const titleEl = Dom.createEl('li', {\n                    className: 'vjs-menu-title',\n                    innerHTML: stringCases.toTitleCase(this.options_.title),\n                    tabIndex: -1\n                });\n                this.hideThreshold_ += 1;\n                const titleComponent = new Component(this.player_, { el: titleEl });\n                menu.addItem(titleComponent);\n            }\n            this.items = this.createItems();\n            if (this.items) {\n                for (let i = 0; i < this.items.length; i++) {\n                    menu.addItem(this.items[i]);\n                }\n            }\n            return menu;\n        }\n        createItems() {\n        }\n        createEl() {\n            return super.createEl('div', { className: this.buildWrapperCSSClass() }, {});\n        }\n        buildWrapperCSSClass() {\n            let menuButtonClass = 'vjs-menu-button';\n            if (this.options_.inline === true) {\n                menuButtonClass += '-inline';\n            } else {\n                menuButtonClass += '-popup';\n            }\n            const buttonClass = Button.prototype.buildCSSClass();\n            return `vjs-menu-button ${ menuButtonClass } ${ buttonClass } ${ super.buildCSSClass() }`;\n        }\n        buildCSSClass() {\n            let menuButtonClass = 'vjs-menu-button';\n            if (this.options_.inline === true) {\n                menuButtonClass += '-inline';\n            } else {\n                menuButtonClass += '-popup';\n            }\n            return `vjs-menu-button ${ menuButtonClass } ${ super.buildCSSClass() }`;\n        }\n        controlText(text, el = this.menuButton_.el()) {\n            return this.menuButton_.controlText(text, el);\n        }\n        dispose() {\n            this.handleMouseLeave();\n            super.dispose();\n        }\n        handleClick(event) {\n            if (this.buttonPressed_) {\n                this.unpressButton();\n            } else {\n                this.pressButton();\n            }\n        }\n        handleMouseLeave(event) {\n            this.removeClass('vjs-hover');\n            Events.off(document, 'keyup', Fn.bind(this, this.handleMenuKeyUp));\n        }\n        focus() {\n            this.menuButton_.focus();\n        }\n        blur() {\n            this.menuButton_.blur();\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n                if (this.buttonPressed_) {\n                    this.unpressButton();\n                }\n                if (!keycode.isEventKey(event, 'Tab')) {\n                    event.preventDefault();\n                    this.menuButton_.focus();\n                }\n            } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n                if (!this.buttonPressed_) {\n                    event.preventDefault();\n                    this.pressButton();\n                }\n            }\n        }\n        handleMenuKeyUp(event) {\n            if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n                this.removeClass('vjs-hover');\n            }\n        }\n        handleSubmenuKeyPress(event) {\n            this.handleSubmenuKeyDown(event);\n        }\n        handleSubmenuKeyDown(event) {\n            if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n                if (this.buttonPressed_) {\n                    this.unpressButton();\n                }\n                if (!keycode.isEventKey(event, 'Tab')) {\n                    event.preventDefault();\n                    this.menuButton_.focus();\n                }\n            } else {\n            }\n        }\n        pressButton() {\n            if (this.enabled_) {\n                this.buttonPressed_ = true;\n                this.menu.show();\n                this.menu.lockShowing();\n                this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n                if (browser.IS_IOS && Dom.isInFrame()) {\n                    return;\n                }\n                this.menu.focus();\n            }\n        }\n        unpressButton() {\n            if (this.enabled_) {\n                this.buttonPressed_ = false;\n                this.menu.unlockShowing();\n                this.menu.hide();\n                this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n            }\n        }\n        disable() {\n            this.unpressButton();\n            this.enabled_ = false;\n            this.addClass('vjs-disabled');\n            this.menuButton_.disable();\n        }\n        enable() {\n            this.enabled_ = true;\n            this.removeClass('vjs-disabled');\n            this.menuButton_.enable();\n        }\n    }\n    Component.registerComponent('MenuButton', MenuButton);\n    return MenuButton;\n});\ndefine('skylark-videojs/control-bar/track-button',[\n    '../menu/menu-button',\n    '../component',\n    '../utils/fn'\n], function (MenuButton, Component, Fn) {\n    'use strict';\n    class TrackButton extends MenuButton {\n        constructor(player, options) {\n            const tracks = options.tracks;\n            super(player, options);\n            if (this.items.length <= 1) {\n                this.hide();\n            }\n            if (!tracks) {\n                return;\n            }\n            const updateHandler = Fn.bind(this, this.update);\n            tracks.addEventListener('removetrack', updateHandler);\n            tracks.addEventListener('addtrack', updateHandler);\n            tracks.addEventListener('labelchange', updateHandler);\n            this.player_.on('ready', updateHandler);\n            this.player_.on('dispose', function () {\n                tracks.removeEventListener('removetrack', updateHandler);\n                tracks.removeEventListener('addtrack', updateHandler);\n                tracks.removeEventListener('labelchange', updateHandler);\n            });\n        }\n    }\n    Component.registerComponent('TrackButton', TrackButton);\n    return TrackButton;\n});\ndefine('skylark-videojs/menu/menu-keys',[],function () {\n    'use strict';\n    const MenuKeys = [\n        'Tab',\n        'Esc',\n        'Up',\n        'Down',\n        'Right',\n        'Left'\n    ];\n    return MenuKeys;\n});\ndefine('skylark-videojs/menu/menu-item',[\n    '../clickable-component',\n    '../component',\n    '../utils/obj',\n    './menu-keys',\n    '../utils/keycode'\n], function (ClickableComponent, Component, obj, MenuKeys, keycode) {\n    'use strict';\n    class MenuItem extends ClickableComponent {\n        constructor(player, options) {\n            super(player, options);\n            this.selectable = options.selectable;\n            this.isSelected_ = options.selected || false;\n            this.multiSelectable = options.multiSelectable;\n            this.selected(this.isSelected_);\n            if (this.selectable) {\n                if (this.multiSelectable) {\n                    this.el_.setAttribute('role', 'menuitemcheckbox');\n                } else {\n                    this.el_.setAttribute('role', 'menuitemradio');\n                }\n            } else {\n                this.el_.setAttribute('role', 'menuitem');\n            }\n        }\n        createEl(type, props, attrs) {\n            this.nonIconControl = true;\n            return super.createEl('li', obj.assign({\n                className: 'vjs-menu-item',\n                innerHTML: `<span class=\"vjs-menu-item-text\">${ this.localize(this.options_.label) }</span>`,\n                tabIndex: -1\n            }, props), attrs);\n        }\n        handleKeyDown(event) {\n            if (!MenuKeys.some(key => keycode.isEventKey(event, key))) {\n                super.handleKeyDown(event);\n            }\n        }\n        handleClick(event) {\n            this.selected(true);\n        }\n        selected(selected) {\n            if (this.selectable) {\n                if (selected) {\n                    this.addClass('vjs-selected');\n                    this.el_.setAttribute('aria-checked', 'true');\n                    this.controlText(', selected');\n                    this.isSelected_ = true;\n                } else {\n                    this.removeClass('vjs-selected');\n                    this.el_.setAttribute('aria-checked', 'false');\n                    this.controlText('');\n                    this.isSelected_ = false;\n                }\n            }\n        }\n    }\n    Component.registerComponent('MenuItem', MenuItem);\n    return MenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/text-track-menu-item',[\n    'skylark-langx-globals/document',\n    '../../menu/menu-item',\n    '../../component'\n], function (document,MenuItem, Component) {\n    'use strict';\n    class TextTrackMenuItem extends MenuItem {\n        constructor(player, options) {\n            const track = options.track;\n            const tracks = player.textTracks();\n            options.label = track.label || track.language || 'Unknown';\n            options.selected = track.mode === 'showing';\n            super(player, options);\n            this.track = track;\n            this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n            const changeHandler = (...args) => {\n                this.handleTracksChange.apply(this, args);\n            };\n            const selectedLanguageChangeHandler = (...args) => {\n                this.handleSelectedLanguageChange.apply(this, args);\n            };\n            player.on([\n                'loadstart',\n                'texttrackchange'\n            ], changeHandler);\n            tracks.addEventListener('change', changeHandler);\n            tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n            this.listenTo('dispose', function () {\n                player.off([\n                    'loadstart',\n                    'texttrackchange'\n                ], changeHandler);\n                tracks.removeEventListener('change', changeHandler);\n                tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n            });\n            if (tracks.onchange === undefined) {\n                let event;\n                this.listenTo([\n                    'tap',\n                    'click'\n                ], function () {\n                    if (typeof window.Event !== 'object') {\n                        try {\n                            event = new window.Event('change');\n                        } catch (err) {\n                        }\n                    }\n                    if (!event) {\n                        event = document.createEvent('Event');\n                        event.initEvent('change', true, true);\n                    }\n                    tracks.dispatchEvent(event);\n                });\n            }\n            this.handleTracksChange();\n        }\n        handleClick(event) {\n            const referenceTrack = this.track;\n            const tracks = this.player_.textTracks();\n            super.handleClick(event);\n            if (!tracks) {\n                return;\n            }\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                if (this.kinds.indexOf(track.kind) === -1) {\n                    continue;\n                }\n                if (track === referenceTrack) {\n                    if (track.mode !== 'showing') {\n                        track.mode = 'showing';\n                    }\n                } else if (track.mode !== 'disabled') {\n                    track.mode = 'disabled';\n                }\n            }\n        }\n        handleTracksChange(event) {\n            const shouldBeSelected = this.track.mode === 'showing';\n            if (shouldBeSelected !== this.isSelected_) {\n                this.selected(shouldBeSelected);\n            }\n        }\n        handleSelectedLanguageChange(event) {\n            if (this.track.mode === 'showing') {\n                const selectedLanguage = this.player_.cache_.selectedLanguage;\n                if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n                    return;\n                }\n                this.player_.cache_.selectedLanguage = {\n                    enabled: true,\n                    language: this.track.language,\n                    kind: this.track.kind\n                };\n            }\n        }\n        dispose() {\n            this.track = null;\n            super.dispose();\n        }\n    }\n    Component.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n    return TextTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/off-text-track-menu-item',[\n    './text-track-menu-item',\n    '../../component'\n], function (TextTrackMenuItem, Component) {\n    'use strict';\n    class OffTextTrackMenuItem extends TextTrackMenuItem {\n        constructor(player, options) {\n            options.track = {\n                player,\n                kind: options.kind,\n                kinds: options.kinds,\n                default: false,\n                mode: 'disabled'\n            };\n            if (!options.kinds) {\n                options.kinds = [options.kind];\n            }\n            if (options.label) {\n                options.track.label = options.label;\n            } else {\n                options.track.label = options.kinds.join(' and ') + ' off';\n            }\n            options.selectable = true;\n            options.multiSelectable = false;\n            super(player, options);\n        }\n        handleTracksChange(event) {\n            const tracks = this.player().textTracks();\n            let shouldBeSelected = true;\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                const track = tracks[i];\n                if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n                    shouldBeSelected = false;\n                    break;\n                }\n            }\n            if (shouldBeSelected !== this.isSelected_) {\n                this.selected(shouldBeSelected);\n            }\n        }\n        handleSelectedLanguageChange(event) {\n            const tracks = this.player().textTracks();\n            let allHidden = true;\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                const track = tracks[i];\n                if ([\n                        'captions',\n                        'descriptions',\n                        'subtitles'\n                    ].indexOf(track.kind) > -1 && track.mode === 'showing') {\n                    allHidden = false;\n                    break;\n                }\n            }\n            if (allHidden) {\n                this.player_.cache_.selectedLanguage = { enabled: false };\n            }\n        }\n    }\n    Component.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n    return OffTextTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/text-track-button',[\n    '../track-button',\n    '../../component',\n    './text-track-menu-item',\n    './off-text-track-menu-item'\n], function (TrackButton, Component, TextTrackMenuItem, OffTextTrackMenuItem) {\n    'use strict';\n    class TextTrackButton extends TrackButton {\n        constructor(player, options = {}) {\n            options.tracks = player.textTracks();\n            super(player, options);\n        }\n        createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n            let label;\n            if (this.label_) {\n                label = `${ this.label_ } off`;\n            }\n            items.push(new OffTextTrackMenuItem(this.player_, {\n                kinds: this.kinds_,\n                kind: this.kind_,\n                label\n            }));\n            this.hideThreshold_ += 1;\n            const tracks = this.player_.textTracks();\n            if (!Array.isArray(this.kinds_)) {\n                this.kinds_ = [this.kind_];\n            }\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                if (this.kinds_.indexOf(track.kind) > -1) {\n                    const item = new TrackMenuItem(this.player_, {\n                        track,\n                        kinds: this.kinds_,\n                        kind: this.kind_,\n                        selectable: true,\n                        multiSelectable: false\n                    });\n                    item.addClass(`vjs-${ track.kind }-menu-item`);\n                    items.push(item);\n                }\n            }\n            return items;\n        }\n    }\n    Component.registerComponent('TextTrackButton', TextTrackButton);\n    return TextTrackButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/chapters-track-menu-item',[\n    '../../menu/menu-item',\n    '../../component',\n    '../../utils/fn'\n], function (MenuItem, Component, Fn) {\n    'use strict';\n    class ChaptersTrackMenuItem extends MenuItem {\n        constructor(player, options) {\n            const track = options.track;\n            const cue = options.cue;\n            const currentTime = player.currentTime();\n            options.selectable = true;\n            options.multiSelectable = false;\n            options.label = cue.text;\n            options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n            super(player, options);\n            this.track = track;\n            this.cue = cue;\n            track.addEventListener('cuechange', Fn.bind(this, this.update));\n        }\n        handleClick(event) {\n            super.handleClick();\n            this.player_.currentTime(this.cue.startTime);\n            this.update(this.cue.startTime);\n        }\n        update(event) {\n            const cue = this.cue;\n            const currentTime = this.player_.currentTime();\n            this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n        }\n    }\n    Component.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n    return ChaptersTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/chapters-button',[\n    './text-track-button',\n    '../../component',\n    './chapters-track-menu-item',\n    '../../utils/string-cases'\n], function (TextTrackButton, Component, ChaptersTrackMenuItem, stringCases) {\n    'use strict';\n    class ChaptersButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n        }\n        buildCSSClass() {\n            return `vjs-chapters-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-chapters-button ${ super.buildWrapperCSSClass() }`;\n        }\n        update(event) {\n            if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n                this.setTrack(this.findChaptersTrack());\n            }\n            super.update();\n        }\n        setTrack(track) {\n            if (this.track_ === track) {\n                return;\n            }\n            if (!this.updateHandler_) {\n                this.updateHandler_ = this.update.bind(this);\n            }\n            if (this.track_) {\n                const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n                if (remoteTextTrackEl) {\n                    remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n                }\n                this.track_ = null;\n            }\n            this.track_ = track;\n            if (this.track_) {\n                this.track_.mode = 'hidden';\n                const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n                if (remoteTextTrackEl) {\n                    remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n                }\n            }\n        }\n        findChaptersTrack() {\n            const tracks = this.player_.textTracks() || [];\n            for (let i = tracks.length - 1; i >= 0; i--) {\n                const track = tracks[i];\n                if (track.kind === this.kind_) {\n                    return track;\n                }\n            }\n        }\n        getMenuCaption() {\n            if (this.track_ && this.track_.label) {\n                return this.track_.label;\n            }\n            return this.localize(stringCases.toTitleCase(this.kind_));\n        }\n        createMenu() {\n            this.options_.title = this.getMenuCaption();\n            return super.createMenu();\n        }\n        createItems() {\n            const items = [];\n            if (!this.track_) {\n                return items;\n            }\n            const cues = this.track_.cues;\n            if (!cues) {\n                return items;\n            }\n            for (let i = 0, l = cues.length; i < l; i++) {\n                const cue = cues[i];\n                const mi = new ChaptersTrackMenuItem(this.player_, {\n                    track: this.track_,\n                    cue\n                });\n                items.push(mi);\n            }\n            return items;\n        }\n    }\n    ChaptersButton.prototype.kind_ = 'chapters';\n    ChaptersButton.prototype.controlText_ = 'Chapters';\n    Component.registerComponent('ChaptersButton', ChaptersButton);\n    return ChaptersButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/descriptions-button',[\n    './text-track-button',\n    '../../component',\n    '../../utils/fn'\n], function (TextTrackButton, Component, Fn) {\n    'use strict';\n    class DescriptionsButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n            const tracks = player.textTracks();\n            const changeHandler = Fn.bind(this, this.handleTracksChange);\n            tracks.addEventListener('change', changeHandler);\n            this.listenTo('dispose', function () {\n                tracks.removeEventListener('change', changeHandler);\n            });\n        }\n        handleTracksChange(event) {\n            const tracks = this.player().textTracks();\n            let disabled = false;\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                const track = tracks[i];\n                if (track.kind !== this.kind_ && track.mode === 'showing') {\n                    disabled = true;\n                    break;\n                }\n            }\n            if (disabled) {\n                this.disable();\n            } else {\n                this.enable();\n            }\n        }\n        buildCSSClass() {\n            return `vjs-descriptions-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-descriptions-button ${ super.buildWrapperCSSClass() }`;\n        }\n    }\n    DescriptionsButton.prototype.kind_ = 'descriptions';\n    DescriptionsButton.prototype.controlText_ = 'Descriptions';\n    Component.registerComponent('DescriptionsButton', DescriptionsButton);\n    return DescriptionsButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/subtitles-button',[\n    './text-track-button',\n    '../../component'\n], function (TextTrackButton, Component) {\n    'use strict';\n    class SubtitlesButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n        }\n        buildCSSClass() {\n            return `vjs-subtitles-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-subtitles-button ${ super.buildWrapperCSSClass() }`;\n        }\n    }\n    SubtitlesButton.prototype.kind_ = 'subtitles';\n    SubtitlesButton.prototype.controlText_ = 'Subtitles';\n    Component.registerComponent('SubtitlesButton', SubtitlesButton);\n    return SubtitlesButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/caption-settings-menu-item',[\n    './text-track-menu-item',\n    '../../component'\n], function (TextTrackMenuItem, Component) {\n    'use strict';\n    class CaptionSettingsMenuItem extends TextTrackMenuItem {\n        constructor(player, options) {\n            options.track = {\n                player,\n                kind: options.kind,\n                label: options.kind + ' settings',\n                selectable: false,\n                default: false,\n                mode: 'disabled'\n            };\n            options.selectable = false;\n            options.name = 'CaptionSettingsMenuItem';\n            super(player, options);\n            this.addClass('vjs-texttrack-settings');\n            this.controlText(', opens ' + options.kind + ' settings dialog');\n        }\n        handleClick(event) {\n            this.player().getChild('textTrackSettings').open();\n        }\n    }\n    Component.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n    return CaptionSettingsMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/captions-button',[\n    './text-track-button',\n    '../../component',\n    './caption-settings-menu-item'\n], function (TextTrackButton, Component, CaptionSettingsMenuItem) {\n    'use strict';\n    class CaptionsButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n        }\n        buildCSSClass() {\n            return `vjs-captions-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-captions-button ${ super.buildWrapperCSSClass() }`;\n        }\n        createItems() {\n            const items = [];\n            if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n                items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n                this.hideThreshold_ += 1;\n            }\n            return super.createItems(items);\n        }\n    }\n    CaptionsButton.prototype.kind_ = 'captions';\n    CaptionsButton.prototype.controlText_ = 'Captions';\n    Component.registerComponent('CaptionsButton', CaptionsButton);\n    return CaptionsButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/subs-caps-menu-item',[\n    './text-track-menu-item',\n    '../../component',\n    '../../utils/obj'\n], function (TextTrackMenuItem, Component, obj) {\n    'use strict';\n    class SubsCapsMenuItem extends TextTrackMenuItem {\n        createEl(type, props, attrs) {\n            let innerHTML = `<span class=\"vjs-menu-item-text\">${ this.localize(this.options_.label) }`;\n            if (this.options_.track.kind === 'captions') {\n                innerHTML += `\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\n        <span class=\"vjs-control-text\"> ${ this.localize('Captions') }</span>\n      `;\n            }\n            innerHTML += '</span>';\n            const el = super.createEl(type, obj.assign({ innerHTML }, props), attrs);\n            return el;\n        }\n    }\n    Component.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n    return SubsCapsMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/subs-caps-button',[\n    './text-track-button',\n    '../../component',\n    './caption-settings-menu-item',\n    './subs-caps-menu-item',\n    '../../utils/string-cases'\n], function (TextTrackButton, Component, CaptionSettingsMenuItem, SubsCapsMenuItem, stringCases) {\n    'use strict';\n    class SubsCapsButton extends TextTrackButton {\n        constructor(player, options = {}) {\n            super(player, options);\n            this.label_ = 'subtitles';\n            if ([\n                    'en',\n                    'en-us',\n                    'en-ca',\n                    'fr-ca'\n                ].indexOf(this.player_.language_) > -1) {\n                this.label_ = 'captions';\n            }\n            this.menuButton_.controlText(stringCases.toTitleCase(this.label_));\n        }\n        buildCSSClass() {\n            return `vjs-subs-caps-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-subs-caps-button ${ super.buildWrapperCSSClass() }`;\n        }\n        createItems() {\n            let items = [];\n            if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n                items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n                this.hideThreshold_ += 1;\n            }\n            items = super.createItems(items, SubsCapsMenuItem);\n            return items;\n        }\n    }\n    SubsCapsButton.prototype.kinds_ = [\n        'captions',\n        'subtitles'\n    ];\n    SubsCapsButton.prototype.controlText_ = 'Subtitles';\n    Component.registerComponent('SubsCapsButton', SubsCapsButton);\n    return SubsCapsButton;\n});\ndefine('skylark-videojs/control-bar/audio-track-controls/audio-track-menu-item',[\n    '../../menu/menu-item',\n    '../../component',\n    '../../utils/obj'\n], function (MenuItem, Component, obj) {\n    'use strict';\n    class AudioTrackMenuItem extends MenuItem {\n        constructor(player, options) {\n            const track = options.track;\n            const tracks = player.audioTracks();\n            options.label = track.label || track.language || 'Unknown';\n            options.selected = track.enabled;\n            super(player, options);\n            this.track = track;\n            this.addClass(`vjs-${ track.kind }-menu-item`);\n            const changeHandler = (...args) => {\n                this.handleTracksChange.apply(this, args);\n            };\n            tracks.addEventListener('change', changeHandler);\n            this.listenTo('dispose', () => {\n                tracks.removeEventListener('change', changeHandler);\n            });\n        }\n        createEl(type, props, attrs) {\n            let innerHTML = `<span class=\"vjs-menu-item-text\">${ this.localize(this.options_.label) }`;\n            if (this.options_.track.kind === 'main-desc') {\n                innerHTML += `\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\n        <span class=\"vjs-control-text\"> ${ this.localize('Descriptions') }</span>\n      `;\n            }\n            innerHTML += '</span>';\n            const el = super.createEl(type, obj.assign({ innerHTML }, props), attrs);\n            return el;\n        }\n        handleClick(event) {\n            const tracks = this.player_.audioTracks();\n            super.handleClick(event);\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                track.enabled = track === this.track;\n            }\n        }\n        handleTracksChange(event) {\n            this.selected(this.track.enabled);\n        }\n    }\n    Component.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n    return AudioTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/audio-track-controls/audio-track-button',[\n    '../track-button',\n    '../../component',\n    './audio-track-menu-item'\n], function (TrackButton, Component, AudioTrackMenuItem) {\n    'use strict';\n    class AudioTrackButton extends TrackButton {\n        constructor(player, options = {}) {\n            options.tracks = player.audioTracks();\n            super(player, options);\n        }\n        buildCSSClass() {\n            return `vjs-audio-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-audio-button ${ super.buildWrapperCSSClass() }`;\n        }\n        createItems(items = []) {\n            this.hideThreshold_ = 1;\n            const tracks = this.player_.audioTracks();\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                items.push(new AudioTrackMenuItem(this.player_, {\n                    track,\n                    selectable: true,\n                    multiSelectable: false\n                }));\n            }\n            return items;\n        }\n    }\n    AudioTrackButton.prototype.controlText_ = 'Audio Track';\n    Component.registerComponent('AudioTrackButton', AudioTrackButton);\n    return AudioTrackButton;\n});\ndefine('skylark-videojs/control-bar/playback-rate-menu/playback-rate-menu-item',[\n    '../../menu/menu-item',\n    '../../component'\n], function (MenuItem, Component) {\n    'use strict';\n    class PlaybackRateMenuItem extends MenuItem {\n        constructor(player, options) {\n            const label = options.rate;\n            const rate = parseFloat(label, 10);\n            options.label = label;\n            options.selected = rate === 1;\n            options.selectable = true;\n            options.multiSelectable = false;\n            super(player, options);\n            this.label = label;\n            this.rate = rate;\n            this.listenTo(player, 'ratechange', this.update);\n        }\n        handleClick(event) {\n            super.handleClick();\n            this.player().playbackRate(this.rate);\n        }\n        update(event) {\n            this.selected(this.player().playbackRate() === this.rate);\n        }\n    }\n    PlaybackRateMenuItem.prototype.contentElType = 'button';\n    Component.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n    return PlaybackRateMenuItem;\n});\ndefine('skylark-videojs/control-bar/playback-rate-menu/playback-rate-menu-button',[\n    '../../menu/menu-button',\n    '../../menu/menu',\n    './playback-rate-menu-item',\n    '../../component',\n    '../../utils/dom'\n], function (MenuButton, Menu, PlaybackRateMenuItem, Component, Dom) {\n    'use strict';\n    class PlaybackRateMenuButton extends MenuButton {\n        constructor(player, options) {\n            super(player, options);\n            this.updateVisibility();\n            this.updateLabel();\n            this.listenTo(player, 'loadstart', this.updateVisibility);\n            this.listenTo(player, 'ratechange', this.updateLabel);\n        }\n        createEl() {\n            const el = super.createEl();\n            this.labelEl_ = Dom.createEl('div', {\n                className: 'vjs-playback-rate-value',\n                innerHTML: '1x'\n            });\n            el.appendChild(this.labelEl_);\n            return el;\n        }\n        dispose() {\n            this.labelEl_ = null;\n            super.dispose();\n        }\n        buildCSSClass() {\n            return `vjs-playback-rate ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-playback-rate ${ super.buildWrapperCSSClass() }`;\n        }\n        createMenu() {\n            const menu = new Menu(this.player());\n            const rates = this.playbackRates();\n            if (rates) {\n                for (let i = rates.length - 1; i >= 0; i--) {\n                    menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n                }\n            }\n            return menu;\n        }\n        updateARIAAttributes() {\n            this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n        }\n        handleClick(event) {\n            const currentRate = this.player().playbackRate();\n            const rates = this.playbackRates();\n            let newRate = rates[0];\n            for (let i = 0; i < rates.length; i++) {\n                if (rates[i] > currentRate) {\n                    newRate = rates[i];\n                    break;\n                }\n            }\n            this.player().playbackRate(newRate);\n        }\n        playbackRates() {\n            return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n        }\n        playbackRateSupported() {\n            return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n        }\n        updateVisibility(event) {\n            if (this.playbackRateSupported()) {\n                this.removeClass('vjs-hidden');\n            } else {\n                this.addClass('vjs-hidden');\n            }\n        }\n        updateLabel(event) {\n            if (this.playbackRateSupported()) {\n                this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n            }\n        }\n    }\n    PlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n    Component.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n    return PlaybackRateMenuButton;\n});\ndefine('skylark-videojs/control-bar/spacer-controls/spacer',[\n    '../../component'\n], function (Component) {\n    'use strict';\n    class Spacer extends Component {\n        buildCSSClass() {\n            return `vjs-spacer ${ super.buildCSSClass() }`;\n        }\n        createEl() {\n            return super.createEl('div', { className: this.buildCSSClass() });\n        }\n    }\n    Component.registerComponent('Spacer', Spacer);\n    return Spacer;\n});\ndefine('skylark-videojs/control-bar/spacer-controls/custom-control-spacer',[\n    './spacer',\n    '../../component'\n], function (Spacer, Component) {\n    'use strict';\n    class CustomControlSpacer extends Spacer {\n        buildCSSClass() {\n            return `vjs-custom-control-spacer ${ super.buildCSSClass() }`;\n        }\n        createEl() {\n            const el = super.createEl({ className: this.buildCSSClass() });\n            el.innerHTML = '\\xA0';\n            return el;\n        }\n    }\n    Component.registerComponent('CustomControlSpacer', CustomControlSpacer);\n    return CustomControlSpacer;\n});\ndefine('skylark-videojs/control-bar/control-bar',[\n    'skylark-langx-globals/document',\n    '../component',\n    './play-toggle',\n    './time-controls/current-time-display',\n    './time-controls/duration-display',\n    './time-controls/time-divider',\n    './time-controls/remaining-time-display',\n    './live-display',\n    './seek-to-live',\n    './progress-control/progress-control',\n    './picture-in-picture-toggle',\n    './fullscreen-toggle',\n    './volume-panel',\n    './text-track-controls/chapters-button',\n    './text-track-controls/descriptions-button',\n    './text-track-controls/subtitles-button',\n    './text-track-controls/captions-button',\n    './text-track-controls/subs-caps-button',\n    './audio-track-controls/audio-track-button',\n    './playback-rate-menu/playback-rate-menu-button',\n    './spacer-controls/custom-control-spacer'\n], function (document,Component) {\n    'use strict';\n    class ControlBar extends Component {\n        createEl() {\n            return super.createEl('div', {\n                className: 'vjs-control-bar',\n                dir: 'ltr'\n            });\n        }\n    }\n    ControlBar.prototype.options_ = {\n        children: [\n            'playToggle',\n            'volumePanel',\n            'currentTimeDisplay',\n            'timeDivider',\n            'durationDisplay',\n            'progressControl',\n            'liveDisplay',\n            'seekToLive',\n            'remainingTimeDisplay',\n            'customControlSpacer',\n            'playbackRateMenuButton',\n            'chaptersButton',\n            'descriptionsButton',\n            'subsCapsButton',\n            'audioTrackButton',\n            'fullscreenToggle'\n        ]\n    };\n    if ('exitPictureInPicture' in document) {\n        ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n    }\n    Component.registerComponent('ControlBar', ControlBar);\n    return ControlBar;\n});\ndefine('skylark-videojs/error-display',[\n    './component',\n    './modal-dialog'\n], function (Component, ModalDialog) {\n    'use strict';\n    class ErrorDisplay extends ModalDialog {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, 'error', this.open);\n        }\n        buildCSSClass() {\n            return `vjs-error-display ${ super.buildCSSClass() }`;\n        }\n        content() {\n            const error = this.player().error();\n            return error ? this.localize(error.message) : '';\n        }\n    }\n    ErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n        pauseOnOpen: false,\n        fillAlways: true,\n        temporary: false,\n        uncloseable: true\n    });\n    Component.registerComponent('ErrorDisplay', ErrorDisplay);\n    return ErrorDisplay;\n});\ndefine('skylark-videojs/tracks/text-track-settings',[\n    '../component',\n    '../modal-dialog',\n    '../utils/dom',\n    '../utils/fn',\n    '../utils/obj',\n    '../utils/log'\n], function (Component, ModalDialog, Dom, Fn, Obj, log) {\n    'use strict';\n    const LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n    const COLOR_BLACK = [\n        '#000',\n        'Black'\n    ];\n    const COLOR_BLUE = [\n        '#00F',\n        'Blue'\n    ];\n    const COLOR_CYAN = [\n        '#0FF',\n        'Cyan'\n    ];\n    const COLOR_GREEN = [\n        '#0F0',\n        'Green'\n    ];\n    const COLOR_MAGENTA = [\n        '#F0F',\n        'Magenta'\n    ];\n    const COLOR_RED = [\n        '#F00',\n        'Red'\n    ];\n    const COLOR_WHITE = [\n        '#FFF',\n        'White'\n    ];\n    const COLOR_YELLOW = [\n        '#FF0',\n        'Yellow'\n    ];\n    const OPACITY_OPAQUE = [\n        '1',\n        'Opaque'\n    ];\n    const OPACITY_SEMI = [\n        '0.5',\n        'Semi-Transparent'\n    ];\n    const OPACITY_TRANS = [\n        '0',\n        'Transparent'\n    ];\n    const selectConfigs = {\n        backgroundColor: {\n            selector: '.vjs-bg-color > select',\n            id: 'captions-background-color-%s',\n            label: 'Color',\n            options: [\n                COLOR_BLACK,\n                COLOR_WHITE,\n                COLOR_RED,\n                COLOR_GREEN,\n                COLOR_BLUE,\n                COLOR_YELLOW,\n                COLOR_MAGENTA,\n                COLOR_CYAN\n            ]\n        },\n        backgroundOpacity: {\n            selector: '.vjs-bg-opacity > select',\n            id: 'captions-background-opacity-%s',\n            label: 'Transparency',\n            options: [\n                OPACITY_OPAQUE,\n                OPACITY_SEMI,\n                OPACITY_TRANS\n            ]\n        },\n        color: {\n            selector: '.vjs-fg-color > select',\n            id: 'captions-foreground-color-%s',\n            label: 'Color',\n            options: [\n                COLOR_WHITE,\n                COLOR_BLACK,\n                COLOR_RED,\n                COLOR_GREEN,\n                COLOR_BLUE,\n                COLOR_YELLOW,\n                COLOR_MAGENTA,\n                COLOR_CYAN\n            ]\n        },\n        edgeStyle: {\n            selector: '.vjs-edge-style > select',\n            id: '%s',\n            label: 'Text Edge Style',\n            options: [\n                [\n                    'none',\n                    'None'\n                ],\n                [\n                    'raised',\n                    'Raised'\n                ],\n                [\n                    'depressed',\n                    'Depressed'\n                ],\n                [\n                    'uniform',\n                    'Uniform'\n                ],\n                [\n                    'dropshadow',\n                    'Dropshadow'\n                ]\n            ]\n        },\n        fontFamily: {\n            selector: '.vjs-font-family > select',\n            id: 'captions-font-family-%s',\n            label: 'Font Family',\n            options: [\n                [\n                    'proportionalSansSerif',\n                    'Proportional Sans-Serif'\n                ],\n                [\n                    'monospaceSansSerif',\n                    'Monospace Sans-Serif'\n                ],\n                [\n                    'proportionalSerif',\n                    'Proportional Serif'\n                ],\n                [\n                    'monospaceSerif',\n                    'Monospace Serif'\n                ],\n                [\n                    'casual',\n                    'Casual'\n                ],\n                [\n                    'script',\n                    'Script'\n                ],\n                [\n                    'small-caps',\n                    'Small Caps'\n                ]\n            ]\n        },\n        fontPercent: {\n            selector: '.vjs-font-percent > select',\n            id: 'captions-font-size-%s',\n            label: 'Font Size',\n            options: [\n                [\n                    '0.50',\n                    '50%'\n                ],\n                [\n                    '0.75',\n                    '75%'\n                ],\n                [\n                    '1.00',\n                    '100%'\n                ],\n                [\n                    '1.25',\n                    '125%'\n                ],\n                [\n                    '1.50',\n                    '150%'\n                ],\n                [\n                    '1.75',\n                    '175%'\n                ],\n                [\n                    '2.00',\n                    '200%'\n                ],\n                [\n                    '3.00',\n                    '300%'\n                ],\n                [\n                    '4.00',\n                    '400%'\n                ]\n            ],\n            default: 2,\n            parser: v => v === '1.00' ? null : Number(v)\n        },\n        textOpacity: {\n            selector: '.vjs-text-opacity > select',\n            id: 'captions-foreground-opacity-%s',\n            label: 'Transparency',\n            options: [\n                OPACITY_OPAQUE,\n                OPACITY_SEMI\n            ]\n        },\n        windowColor: {\n            selector: '.vjs-window-color > select',\n            id: 'captions-window-color-%s',\n            label: 'Color'\n        },\n        windowOpacity: {\n            selector: '.vjs-window-opacity > select',\n            id: 'captions-window-opacity-%s',\n            label: 'Transparency',\n            options: [\n                OPACITY_TRANS,\n                OPACITY_SEMI,\n                OPACITY_OPAQUE\n            ]\n        }\n    };\n    selectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n    function parseOptionValue(value, parser) {\n        if (parser) {\n            value = parser(value);\n        }\n        if (value && value !== 'none') {\n            return value;\n        }\n    }\n    function getSelectedOptionValue(el, parser) {\n        const value = el.options[el.options.selectedIndex].value;\n        return parseOptionValue(value, parser);\n    }\n    function setSelectedOption(el, value, parser) {\n        if (!value) {\n            return;\n        }\n        for (let i = 0; i < el.options.length; i++) {\n            if (parseOptionValue(el.options[i].value, parser) === value) {\n                el.selectedIndex = i;\n                break;\n            }\n        }\n    }\n    class TextTrackSettings extends ModalDialog {\n        constructor(player, options) {\n            options.temporary = false;\n            super(player, options);\n            this.updateDisplay = Fn.bind(this, this.updateDisplay);\n            this.fill();\n            this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n            this.endDialog = Dom.createEl('p', {\n                className: 'vjs-control-text',\n                textContent: this.localize('End of dialog window.')\n            });\n            this.el().appendChild(this.endDialog);\n            this.setDefaults();\n            if (options.persistTextTrackSettings === undefined) {\n                this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n            }\n            this.listenTo(this.$('.vjs-done-button'), 'click', () => {\n                this.saveSettings();\n                this.close();\n            });\n            this.listenTo(this.$('.vjs-default-button'), 'click', () => {\n                this.setDefaults();\n                this.updateDisplay();\n            });\n            Obj.each(selectConfigs, config => {\n                this.listenTo(this.$(config.selector), 'change', this.updateDisplay);\n            });\n            if (this.options_.persistTextTrackSettings) {\n                this.restoreSettings();\n            }\n        }\n        dispose() {\n            this.endDialog = null;\n            super.dispose();\n        }\n        createElSelect_(key, legendId = '', type = 'label') {\n            const config = selectConfigs[key];\n            const id = config.id.replace('%s', this.id_);\n            const selectLabelledbyIds = [\n                legendId,\n                id\n            ].join(' ').trim();\n            return [\n                `<${ type } id=\"${ id }\" class=\"${ type === 'label' ? 'vjs-label' : '' }\">`,\n                this.localize(config.label),\n                `</${ type }>`,\n                `<select aria-labelledby=\"${ selectLabelledbyIds }\">`\n            ].concat(config.options.map(o => {\n                const optionId = id + '-' + o[1].replace(/\\W+/g, '');\n                return [\n                    `<option id=\"${ optionId }\" value=\"${ o[0] }\" `,\n                    `aria-labelledby=\"${ selectLabelledbyIds } ${ optionId }\">`,\n                    this.localize(o[1]),\n                    '</option>'\n                ].join('');\n            })).concat('</select>').join('');\n        }\n        createElFgColor_() {\n            const legendId = `captions-text-legend-${ this.id_ }`;\n            return [\n                '<fieldset class=\"vjs-fg-color vjs-track-setting\">',\n                `<legend id=\"${ legendId }\">`,\n                this.localize('Text'),\n                '</legend>',\n                this.createElSelect_('color', legendId),\n                '<span class=\"vjs-text-opacity vjs-opacity\">',\n                this.createElSelect_('textOpacity', legendId),\n                '</span>',\n                '</fieldset>'\n            ].join('');\n        }\n        createElBgColor_() {\n            const legendId = `captions-background-${ this.id_ }`;\n            return [\n                '<fieldset class=\"vjs-bg-color vjs-track-setting\">',\n                `<legend id=\"${ legendId }\">`,\n                this.localize('Background'),\n                '</legend>',\n                this.createElSelect_('backgroundColor', legendId),\n                '<span class=\"vjs-bg-opacity vjs-opacity\">',\n                this.createElSelect_('backgroundOpacity', legendId),\n                '</span>',\n                '</fieldset>'\n            ].join('');\n        }\n        createElWinColor_() {\n            const legendId = `captions-window-${ this.id_ }`;\n            return [\n                '<fieldset class=\"vjs-window-color vjs-track-setting\">',\n                `<legend id=\"${ legendId }\">`,\n                this.localize('Window'),\n                '</legend>',\n                this.createElSelect_('windowColor', legendId),\n                '<span class=\"vjs-window-opacity vjs-opacity\">',\n                this.createElSelect_('windowOpacity', legendId),\n                '</span>',\n                '</fieldset>'\n            ].join('');\n        }\n        createElColors_() {\n            return Dom.createEl('div', {\n                className: 'vjs-track-settings-colors',\n                innerHTML: [\n                    this.createElFgColor_(),\n                    this.createElBgColor_(),\n                    this.createElWinColor_()\n                ].join('')\n            });\n        }\n        createElFont_() {\n            return Dom.createEl('div', {\n                className: 'vjs-track-settings-font',\n                innerHTML: [\n                    '<fieldset class=\"vjs-font-percent vjs-track-setting\">',\n                    this.createElSelect_('fontPercent', '', 'legend'),\n                    '</fieldset>',\n                    '<fieldset class=\"vjs-edge-style vjs-track-setting\">',\n                    this.createElSelect_('edgeStyle', '', 'legend'),\n                    '</fieldset>',\n                    '<fieldset class=\"vjs-font-family vjs-track-setting\">',\n                    this.createElSelect_('fontFamily', '', 'legend'),\n                    '</fieldset>'\n                ].join('')\n            });\n        }\n        createElControls_() {\n            const defaultsDescription = this.localize('restore all settings to the default values');\n            return Dom.createEl('div', {\n                className: 'vjs-track-settings-controls',\n                innerHTML: [\n                    `<button type=\"button\" class=\"vjs-default-button\" title=\"${ defaultsDescription }\">`,\n                    this.localize('Reset'),\n                    `<span class=\"vjs-control-text\"> ${ defaultsDescription }</span>`,\n                    '</button>',\n                    `<button type=\"button\" class=\"vjs-done-button\">${ this.localize('Done') }</button>`\n                ].join('')\n            });\n        }\n        content() {\n            return [\n                this.createElColors_(),\n                this.createElFont_(),\n                this.createElControls_()\n            ];\n        }\n        label() {\n            return this.localize('Caption Settings Dialog');\n        }\n        description() {\n            return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n        }\n        buildCSSClass() {\n            return super.buildCSSClass() + ' vjs-text-track-settings';\n        }\n        getValues() {\n            return Obj.reduce(selectConfigs, (accum, config, key) => {\n                const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n                if (value !== undefined) {\n                    accum[key] = value;\n                }\n                return accum;\n            }, {});\n        }\n        setValues(values) {\n            Obj.each(selectConfigs, (config, key) => {\n                setSelectedOption(this.$(config.selector), values[key], config.parser);\n            });\n        }\n        setDefaults() {\n            Obj.each(selectConfigs, config => {\n                const index = config.hasOwnProperty('default') ? config.default : 0;\n                this.$(config.selector).selectedIndex = index;\n            });\n        }\n        restoreSettings() {\n            let values;\n            try {\n                values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY));\n            } catch (err) {\n                log.warn(err);\n            }\n            if (values) {\n                this.setValues(values);\n            }\n        }\n        saveSettings() {\n            if (!this.options_.persistTextTrackSettings) {\n                return;\n            }\n            const values = this.getValues();\n            try {\n                if (Object.keys(values).length) {\n                    window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n                } else {\n                    window.localStorage.removeItem(LOCAL_STORAGE_KEY);\n                }\n            } catch (err) {\n                log.warn(err);\n            }\n        }\n        updateDisplay() {\n            const ttDisplay = this.player_.getChild('textTrackDisplay');\n            if (ttDisplay) {\n                ttDisplay.updateDisplay();\n            }\n        }\n        conditionalBlur_() {\n            this.previouslyActiveEl_ = null;\n            const cb = this.player_.controlBar;\n            const subsCapsBtn = cb && cb.subsCapsButton;\n            const ccBtn = cb && cb.captionsButton;\n            if (subsCapsBtn) {\n                subsCapsBtn.focus();\n            } else if (ccBtn) {\n                ccBtn.focus();\n            }\n        }\n    }\n    Component.registerComponent('TextTrackSettings', TextTrackSettings);\n    return TextTrackSettings;\n});\ndefine('skylark-videojs/resize-manager',[\n    './utils/fn',\n    './utils/events',\n    './utils/merge-options',\n    './component'\n], function ( Fn, Events, mergeOptions, Component) {\n    'use strict';\n    class ResizeManager extends Component {\n        constructor(player, options) {\n            let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver;\n            if (options.ResizeObserver === null) {\n                RESIZE_OBSERVER_AVAILABLE = false;\n            }\n            const options_ = mergeOptions({\n                createEl: !RESIZE_OBSERVER_AVAILABLE,\n                reportTouchActivity: false\n            }, options);\n            super(player, options_);\n            this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n            this.loadListener_ = null;\n            this.resizeObserver_ = null;\n            this.debouncedHandler_ = Fn.debounce(() => {\n                this.resizeHandler();\n            }, 100, false, this);\n            if (RESIZE_OBSERVER_AVAILABLE) {\n                this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n                this.resizeObserver_.observe(player.el());\n            } else {\n                this.loadListener_ = () => {\n                    if (!this.el_ || !this.el_.contentWindow) {\n                        return;\n                    }\n                    const debouncedHandler_ = this.debouncedHandler_;\n                    let unloadListener_ = this.unloadListener_ = function () {\n                        Events.off(this, 'resize', debouncedHandler_);\n                        Events.off(this, 'unload', unloadListener_);\n                        unloadListener_ = null;\n                    };\n                    Events.on(this.el_.contentWindow, 'unload', unloadListener_);\n                    Events.on(this.el_.contentWindow, 'resize', debouncedHandler_);\n                };\n                this.listenToOnce('load', this.loadListener_);\n            }\n        }\n        createEl() {\n            return super.createEl('iframe', {\n                className: 'vjs-resize-manager',\n                tabIndex: -1\n            }, { 'aria-hidden': 'true' });\n        }\n        resizeHandler() {\n            if (!this.player_ || !this.player_.trigger) {\n                return;\n            }\n            this.player_.trigger('playerresize');\n        }\n        dispose() {\n            if (this.debouncedHandler_) {\n                this.debouncedHandler_.cancel();\n            }\n            if (this.resizeObserver_) {\n                if (this.player_.el()) {\n                    this.resizeObserver_.unobserve(this.player_.el());\n                }\n                this.resizeObserver_.disconnect();\n            }\n            if (this.loadListener_) {\n                this.unlistenTo('load', this.loadListener_);\n            }\n            if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n                this.unloadListener_.call(this.el_.contentWindow);\n            }\n            this.ResizeObserver = null;\n            this.resizeObserver = null;\n            this.debouncedHandler_ = null;\n            this.loadListener_ = null;\n            super.dispose();\n        }\n    }\n    Component.registerComponent('ResizeManager', ResizeManager);\n    return ResizeManager;\n});\ndefine('skylark-videojs/live-tracker',[\n    './component',\n    './utils/merge-options',\n    './utils/browser',\n    './utils/fn'\n], function (Component, mergeOptions, browser,  Fn) {\n    'use strict';\n    const defaults = {\n        trackingThreshold: 30,\n        liveTolerance: 15\n    };\n    class LiveTracker extends Component {\n        constructor(player, options) {\n            const options_ = mergeOptions(defaults, options, { createEl: false });\n            super(player, options_);\n            this.reset_();\n            this.listenTo(this.player_, 'durationchange', this.handleDurationchange);\n            if (browser.IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n                this.listenTo(document, 'visibilitychange', this.handleVisibilityChange);\n            }\n        }\n        handleVisibilityChange() {\n            if (this.player_.duration() !== Infinity) {\n                return;\n            }\n            if (document.hidden) {\n                this.stopTracking();\n            } else {\n                this.startTracking();\n            }\n        }\n        trackLive_() {\n            const seekable = this.player_.seekable();\n            if (!seekable || !seekable.length) {\n                return;\n            }\n            const newTime = Number(window.performance.now().toFixed(4));\n            const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n            this.lastTime_ = newTime;\n            this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n            const liveCurrentTime = this.liveCurrentTime();\n            const currentTime = this.player_.currentTime();\n            let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n            if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n                isBehind = false;\n            }\n            if (isBehind !== this.behindLiveEdge_) {\n                this.behindLiveEdge_ = isBehind;\n                this.trigger('liveedgechange');\n            }\n        }\n        handleDurationchange() {\n            if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n                if (this.player_.options_.liveui) {\n                    this.player_.addClass('vjs-liveui');\n                }\n                this.startTracking();\n            } else {\n                this.player_.removeClass('vjs-liveui');\n                this.stopTracking();\n            }\n        }\n        startTracking() {\n            if (this.isTracking()) {\n                return;\n            }\n            if (!this.timeupdateSeen_) {\n                this.timeupdateSeen_ = this.player_.hasStarted();\n            }\n            this.trackingInterval_ = this.setInterval(this.trackLive_, Fn.UPDATE_REFRESH_INTERVAL);\n            this.trackLive_();\n            this.listenTo(this.player_, [\n                'play',\n                'pause'\n            ], this.trackLive_);\n            if (!this.timeupdateSeen_) {\n                this.listenToOnce(this.player_, 'play', this.handlePlay);\n                this.listenToOnce(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n            } else {\n                this.listenTo(this.player_, 'seeked', this.handleSeeked);\n            }\n        }\n        handleFirstTimeupdate() {\n            this.timeupdateSeen_ = true;\n            this.listenTo(this.player_, 'seeked', this.handleSeeked);\n        }\n        handleSeeked() {\n            const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n            this.seekedBehindLive_ = this.skipNextSeeked_ ? false : timeDiff > 2;\n            this.skipNextSeeked_ = false;\n            this.trackLive_();\n        }\n        handlePlay() {\n            this.listenToOnce(this.player_, 'timeupdate', this.seekToLiveEdge);\n        }\n        reset_() {\n            this.lastTime_ = -1;\n            this.pastSeekEnd_ = 0;\n            this.lastSeekEnd_ = -1;\n            this.behindLiveEdge_ = true;\n            this.timeupdateSeen_ = false;\n            this.seekedBehindLive_ = false;\n            this.skipNextSeeked_ = false;\n            this.clearInterval(this.trackingInterval_);\n            this.trackingInterval_ = null;\n\n            /*\n            this.unlistenTo(this.player_, [\n                'play',\n                'pause'\n            ], this.trackLive_);\n            this.unlistenTo(this.player_, 'seeked', this.handleSeeked);\n            this.unlistenTo(this.player_, 'play', this.handlePlay);\n            this.unlistenTo(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n            this.unlistenTo(this.player_, 'timeupdate', this.seekToLiveEdge);\n            */\n            this.unlistenTo(this.player_, [\n                'play',\n                'pause'\n            ], this.trackLive_);\n            this.unlistenTo(this.player_, 'seeked', this.handleSeeked);\n            this.unlistenTo(this.player_, 'play', this.handlePlay);\n            this.unlistenTo(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n            this.unlistenTo(this.player_, 'timeupdate', this.seekToLiveEdge);\n        }\n        stopTracking() {\n            if (!this.isTracking()) {\n                return;\n            }\n            this.reset_();\n            this.trigger('liveedgechange');\n        }\n        seekableEnd() {\n            const seekable = this.player_.seekable();\n            const seekableEnds = [];\n            let i = seekable ? seekable.length : 0;\n            while (i--) {\n                seekableEnds.push(seekable.end(i));\n            }\n            return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n        }\n        seekableStart() {\n            const seekable = this.player_.seekable();\n            const seekableStarts = [];\n            let i = seekable ? seekable.length : 0;\n            while (i--) {\n                seekableStarts.push(seekable.start(i));\n            }\n            return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n        }\n        liveWindow() {\n            const liveCurrentTime = this.liveCurrentTime();\n            if (liveCurrentTime === Infinity) {\n                return 0;\n            }\n            return liveCurrentTime - this.seekableStart();\n        }\n        isLive() {\n            return this.isTracking();\n        }\n        atLiveEdge() {\n            return !this.behindLiveEdge();\n        }\n        liveCurrentTime() {\n            return this.pastSeekEnd() + this.seekableEnd();\n        }\n        pastSeekEnd() {\n            const seekableEnd = this.seekableEnd();\n            if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n                this.pastSeekEnd_ = 0;\n            }\n            this.lastSeekEnd_ = seekableEnd;\n            return this.pastSeekEnd_;\n        }\n        behindLiveEdge() {\n            return this.behindLiveEdge_;\n        }\n        isTracking() {\n            return typeof this.trackingInterval_ === 'number';\n        }\n        seekToLiveEdge() {\n            this.seekedBehindLive_ = false;\n            if (this.atLiveEdge()) {\n                return;\n            }\n            this.skipNextSeeked_ = true;\n            this.player_.currentTime(this.liveCurrentTime());\n        }\n        dispose() {\n            this.unlistenTo(document, 'visibilitychange', this.handleVisibilityChange);\n            this.stopTracking();\n            super.dispose();\n        }\n    }\n    Component.registerComponent('LiveTracker', LiveTracker);\n    return LiveTracker;\n});\ndefine('skylark-videojs/tech/setup-sourceset',[\n    'skylark-langx-globals/document',\n    '../utils/merge-options',\n    '../utils/url'\n], function (document,mergeOptions, url) {\n    'use strict';\n    const sourcesetLoad = tech => {\n        const el = tech.el();\n        if (el.hasAttribute('src')) {\n            tech.triggerSourceset(el.src);\n            return true;\n        }\n        const sources = tech.$$('source');\n        const srcUrls = [];\n        let src = '';\n        if (!sources.length) {\n            return false;\n        }\n        for (let i = 0; i < sources.length; i++) {\n            const url = sources[i].src;\n            if (url && srcUrls.indexOf(url) === -1) {\n                srcUrls.push(url);\n            }\n        }\n        if (!srcUrls.length) {\n            return false;\n        }\n        if (srcUrls.length === 1) {\n            src = srcUrls[0];\n        }\n        tech.triggerSourceset(src);\n        return true;\n    };\n    const innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n        get() {\n            return this.cloneNode(true).innerHTML;\n        },\n        set(v) {\n            const dummy = document.createElement(this.nodeName.toLowerCase());\n            dummy.innerHTML = v;\n            const docFrag = document.createDocumentFragment();\n            while (dummy.childNodes.length) {\n                docFrag.appendChild(dummy.childNodes[0]);\n            }\n            this.innerText = '';\n            window.Element.prototype.appendChild.call(this, docFrag);\n            return this.innerHTML;\n        }\n    });\n    const getDescriptor = (priority, prop) => {\n        let descriptor = {};\n        for (let i = 0; i < priority.length; i++) {\n            descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n            if (descriptor && descriptor.set && descriptor.get) {\n                break;\n            }\n        }\n        descriptor.enumerable = true;\n        descriptor.configurable = true;\n        return descriptor;\n    };\n    const getInnerHTMLDescriptor = tech => getDescriptor([\n        tech.el(),\n        window.HTMLMediaElement.prototype,\n        window.Element.prototype,\n        innerHTMLDescriptorPolyfill\n    ], 'innerHTML');\n    const firstSourceWatch = function (tech) {\n        const el = tech.el();\n        if (el.resetSourceWatch_) {\n            return;\n        }\n        const old = {};\n        const innerDescriptor = getInnerHTMLDescriptor(tech);\n        const appendWrapper = appendFn => (...args) => {\n            const retval = appendFn.apply(el, args);\n            sourcesetLoad(tech);\n            return retval;\n        };\n        [\n            'append',\n            'appendChild',\n            'insertAdjacentHTML'\n        ].forEach(k => {\n            if (!el[k]) {\n                return;\n            }\n            old[k] = el[k];\n            el[k] = appendWrapper(old[k]);\n        });\n        Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, { set: appendWrapper(innerDescriptor.set) }));\n        el.resetSourceWatch_ = () => {\n            el.resetSourceWatch_ = null;\n            Object.keys(old).forEach(k => {\n                el[k] = old[k];\n            });\n            Object.defineProperty(el, 'innerHTML', innerDescriptor);\n        };\n        tech.one('sourceset', el.resetSourceWatch_);\n    };\n    const srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n        get() {\n            if (this.hasAttribute('src')) {\n                return url.getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n            }\n            return '';\n        },\n        set(v) {\n            window.Element.prototype.setAttribute.call(this, 'src', v);\n            return v;\n        }\n    });\n    const getSrcDescriptor = tech => getDescriptor([\n        tech.el(),\n        window.HTMLMediaElement.prototype,\n        srcDescriptorPolyfill\n    ], 'src');\n    const setupSourceset = function (tech) {\n        if (!tech.featuresSourceset) {\n            return;\n        }\n        const el = tech.el();\n        if (el.resetSourceset_) {\n            return;\n        }\n        const srcDescriptor = getSrcDescriptor(tech);\n        const oldSetAttribute = el.setAttribute;\n        const oldLoad = el.load;\n        Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n            set: v => {\n                const retval = srcDescriptor.set.call(el, v);\n                tech.triggerSourceset(el.src);\n                return retval;\n            }\n        }));\n        el.setAttribute = (n, v) => {\n            const retval = oldSetAttribute.call(el, n, v);\n            if (/src/i.test(n)) {\n                tech.triggerSourceset(el.src);\n            }\n            return retval;\n        };\n        el.load = () => {\n            const retval = oldLoad.call(el);\n            if (!sourcesetLoad(tech)) {\n                tech.triggerSourceset('');\n                firstSourceWatch(tech);\n            }\n            return retval;\n        };\n        if (el.currentSrc) {\n            tech.triggerSourceset(el.currentSrc);\n        } else if (!sourcesetLoad(tech)) {\n            firstSourceWatch(tech);\n        }\n        el.resetSourceset_ = () => {\n            el.resetSourceset_ = null;\n            el.load = oldLoad;\n            el.setAttribute = oldSetAttribute;\n            Object.defineProperty(el, 'src', srcDescriptor);\n            if (el.resetSourceWatch_) {\n                el.resetSourceWatch_();\n            }\n        };\n    };\n    return setupSourceset;\n});\ndefine('skylark-videojs/utils/define-lazy-property',[],function () {\n    'use strict';\n    const defineLazyProperty = function (obj, key, getValue, setter = true) {\n        const set = value => Object.defineProperty(obj, key, {\n            value,\n            enumerable: true,\n            writable: true\n        });\n        const options = {\n            configurable: true,\n            enumerable: true,\n            get() {\n                const value = getValue();\n                set(value);\n                return value;\n            }\n        };\n        if (setter) {\n            options.set = set;\n        }\n        return Object.defineProperty(obj, key, options);\n    };\n    return defineLazyProperty;\n});\ndefine('skylark-videojs/tech/html5',[\n    \"skylark-langx\",\n    'skylark-langx-globals/document',\n    \"skylark-domx-noder\",\n    './tech',\n    '../utils/dom',\n    '../utils/url',\n    '../utils/log',\n    '../utils/browser',\n    '../utils/obj',\n    '../utils/merge-options',\n    '../utils/string-cases',\n    '../tracks/track-types',\n    './setup-sourceset',\n    '../utils/define-lazy-property',\n    '../utils/promise'\n], function (\n    langx,\n    document,\n    noder,\n    Tech, \n    Dom, \n    Url, \n    log, \n    browser,  \n    obj, \n    mergeOptions, \n    stringCases, \n    TRACK_TYPES, \n    setupSourceset, \n    defineLazyProperty, \n    promise\n) {\n    'use strict';\n    const NORMAL = TRACK_TYPES.NORMAL,\n          REMOTE = TRACK_TYPES.REMOTE;\n\n    const NativeEvents = {\n            'abort' : 3,\n            'canplay' : 3,\n            'canplaythrough' : 3,\n            'disablepictureinpicturechanged':3,\n            'durationchange':3,\n            'emptied' : 3,\n            'ended':3,\n            'enterpictureinpicture':3,\n            'error' : 3,\n            'leavepictureinpicture':3,\n            'loadeddata' : 3,\n            'loadstart' : 3,\n            'loadedmetadata':3,\n            'pause' : 3,\n            'play':3,\n            'playing' : 3,\n            'posterchange':3,\n            'progress' : 3,\n            'ratechange':3,\n            'seeking' : 3,\n            'seeked' : 3,\n            'sourceset':3,\n            'stalled' : 3,\n            'suspend':3,\n            'textdata':3,\n            'texttrackchange':3,\n            'timeupdate':3,\n            'volumechange':3,\n            'waiting' : 3,\n\n    };\n    class Html5 extends Tech {\n\n        isNativeEvent(events) {\n            var ret  = super.isNativeEvent(events);\n            if (ret) {\n                return true;\n            }\n            if (langx.isString(events)) {\n                return !!NativeEvents[events];\n            } else if (langx.isArray(events)) {\n                for (var i=0; i<events.length; i++) {\n                    if (NativeEvents[events[i]]) {\n                        return true;\n                    }\n                }\n                return false;\n            }            \n\n        } \n\n        constructor(options, ready) {\n            super(options, ready);\n            const source = options.source;\n            let crossoriginTracks = false;\n            if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n                this.setSource(source);\n            } else {\n                this.handleLateInit_(this.el_);\n            }\n            if (options.enableSourceset) {\n                this.setupSourcesetHandling_();\n            }\n            this.isScrubbing_ = false;\n            if (this.el_.hasChildNodes()) {\n                const nodes = this.el_.childNodes;\n                let nodesLength = nodes.length;\n                const removeNodes = [];\n                while (nodesLength--) {\n                    const node = nodes[nodesLength];\n                    const nodeName = node.nodeName.toLowerCase();\n                    if (nodeName === 'track') {\n                        if (!this.featuresNativeTextTracks) {\n                            removeNodes.push(node);\n                        } else {\n                            this.remoteTextTrackEls().addTrackElement_(node);\n                            this.remoteTextTracks().addTrack(node.track);\n                            this.textTracks().addTrack(node.track);\n                            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && Url.isCrossOrigin(node.src)) {\n                                crossoriginTracks = true;\n                            }\n                        }\n                    }\n                }\n                for (let i = 0; i < removeNodes.length; i++) {\n                    this.el_.removeChild(removeNodes[i]);\n                }\n            }\n            this.proxyNativeTracks_();\n            if (this.featuresNativeTextTracks && crossoriginTracks) {\n                log.warn(\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n\" + 'This may prevent text tracks from loading.');\n            }\n            this.restoreMetadataTracksInIOSNativePlayer_();\n            if ((browser.TOUCH_ENABLED || browser.IS_IPHONE || browser.IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n                this.setControls(true);\n            }\n            this.proxyWebkitFullscreen_();\n            this.triggerReady();\n        }\n        dispose() {\n            if (this.el_ && this.el_.resetSourceset_) {\n                this.el_.resetSourceset_();\n            }\n            Html5.disposeMediaElement(this.el_);\n            this.options_ = null;\n            super.dispose();\n        }\n        setupSourcesetHandling_() {\n            setupSourceset(this);\n        }\n        restoreMetadataTracksInIOSNativePlayer_() {\n            const textTracks = this.textTracks();\n            let metadataTracksPreFullscreenState;\n            const takeMetadataTrackSnapshot = () => {\n                metadataTracksPreFullscreenState = [];\n                for (let i = 0; i < textTracks.length; i++) {\n                    const track = textTracks[i];\n                    if (track.kind === 'metadata') {\n                        metadataTracksPreFullscreenState.push({\n                            track,\n                            storedMode: track.mode\n                        });\n                    }\n                }\n            };\n            takeMetadataTrackSnapshot();\n            textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n            this.listenTo('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n            const restoreTrackMode = () => {\n                for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n                    const storedTrack = metadataTracksPreFullscreenState[i];\n                    if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n                        storedTrack.track.mode = storedTrack.storedMode;\n                    }\n                }\n                textTracks.removeEventListener('change', restoreTrackMode);\n            };\n            this.listenTo('webkitbeginfullscreen', () => {\n                textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.removeEventListener('change', restoreTrackMode);\n                textTracks.addEventListener('change', restoreTrackMode);\n            });\n            this.listenTo('webkitendfullscreen', () => {\n                textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.removeEventListener('change', restoreTrackMode);\n            });\n        }\n        overrideNative_(type, override) {\n            if (override !== this[`featuresNative${ type }Tracks`]) {\n                return;\n            }\n            const lowerCaseType = type.toLowerCase();\n            if (this[`${ lowerCaseType }TracksListeners_`]) {\n                Object.keys(this[`${ lowerCaseType }TracksListeners_`]).forEach(eventName => {\n                    const elTracks = this.el()[`${ lowerCaseType }Tracks`];\n                    elTracks.removeEventListener(eventName, this[`${ lowerCaseType }TracksListeners_`][eventName]);\n                });\n            }\n            this[`featuresNative${ type }Tracks`] = !override;\n            this[`${ lowerCaseType }TracksListeners_`] = null;\n            this.proxyNativeTracksForType_(lowerCaseType);\n        }\n        overrideNativeAudioTracks(override) {\n            this.overrideNative_('Audio', override);\n        }\n        overrideNativeVideoTracks(override) {\n            this.overrideNative_('Video', override);\n        }\n        proxyNativeTracksForType_(name) {\n            const props = NORMAL[name];\n            const elTracks = this.el()[props.getterName];\n            const techTracks = this[props.getterName]();\n            if (!this[`featuresNative${ props.capitalName }Tracks`] || !elTracks || !elTracks.addEventListener) {\n                return;\n            }\n            const listeners = {\n                change: e => {\n                    const event = {\n                        type: 'change',\n                        target: techTracks,\n                        currentTarget: techTracks,\n                        srcElement: techTracks\n                    };\n                    techTracks.trigger(event);\n                    if (name === 'text') {\n                        this[REMOTE.remoteText.getterName]().trigger(event);\n                    }\n                },\n                addtrack(e) {\n                    techTracks.addTrack(e.track);\n                },\n                removetrack(e) {\n                    techTracks.removeTrack(e.track);\n                }\n            };\n            const removeOldTracks = function () {\n                const removeTracks = [];\n                for (let i = 0; i < techTracks.length; i++) {\n                    let found = false;\n                    for (let j = 0; j < elTracks.length; j++) {\n                        if (elTracks[j] === techTracks[i]) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        removeTracks.push(techTracks[i]);\n                    }\n                }\n                while (removeTracks.length) {\n                    techTracks.removeTrack(removeTracks.shift());\n                }\n            };\n            this[props.getterName + 'Listeners_'] = listeners;\n            Object.keys(listeners).forEach(eventName => {\n                const listener = listeners[eventName];\n                elTracks.addEventListener(eventName, listener);\n                this.listenTo('dispose', e => elTracks.removeEventListener(eventName, listener));\n            });\n            this.listenTo('loadstart', removeOldTracks);\n            this.listenTo('dispose', e => this.unlistenTo('loadstart', removeOldTracks));\n        }\n        proxyNativeTracks_() {\n            NORMAL.names.forEach(name => {\n                this.proxyNativeTracksForType_(name);\n            });\n        }\n        createEl() {\n            let el = this.options_.tag;\n            if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n                if (el) {\n                    const clone = el.cloneNode(true);\n                    if (el.parentNode) {\n                        el.parentNode.insertBefore(clone, el);\n                    }\n                    Html5.disposeMediaElement(el);\n                    el = clone;\n                } else {\n                    el = document.createElement('video');\n                    const tagAttributes = this.options_.tag && Dom.getAttributes(this.options_.tag);\n                    const attributes = mergeOptions({}, tagAttributes);\n                    if (!browser.TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n                        delete attributes.controls;\n                    }\n                    Dom.setAttributes(el, obj.assign(attributes, {\n                        id: this.options_.techId,\n                        class: 'vjs-tech'\n                    }));\n                }\n                el.playerId = this.options_.playerId;\n            }\n            if (typeof this.options_.preload !== 'undefined') {\n                Dom.setAttribute(el, 'preload', this.options_.preload);\n            }\n            if (this.options_.disablePictureInPicture !== undefined) {\n                el.disablePictureInPicture = this.options_.disablePictureInPicture;\n            }\n            const settingsAttrs = [\n                'loop',\n                'muted',\n                'playsinline',\n                'autoplay'\n            ];\n            for (let i = 0; i < settingsAttrs.length; i++) {\n                const attr = settingsAttrs[i];\n                const value = this.options_[attr];\n                if (typeof value !== 'undefined') {\n                    if (value) {\n                        Dom.setAttribute(el, attr, attr);\n                    } else {\n                        Dom.removeAttribute(el, attr);\n                    }\n                    el[attr] = value;\n                }\n            }\n            return el;\n        }\n        handleLateInit_(el) {\n            if (el.networkState === 0 || el.networkState === 3) {\n                return;\n            }\n            if (el.readyState === 0) {\n                let loadstartFired = false;\n                const setLoadstartFired = function () {\n                    loadstartFired = true;\n                };\n                this.listenTo('loadstart', setLoadstartFired);\n                const triggerLoadstart = function () {\n                    if (!loadstartFired) {\n                        this.trigger('loadstart');\n                    }\n                };\n                this.listenTo('loadedmetadata', triggerLoadstart);\n                this.ready(function () {\n                    this.unlistenTo('loadstart', setLoadstartFired);\n                    this.unlistenTo('loadedmetadata', triggerLoadstart);\n                    if (!loadstartFired) {\n                        this.trigger('loadstart');\n                    }\n                });\n                return;\n            }\n            const eventsToTrigger = ['loadstart'];\n            eventsToTrigger.push('loadedmetadata');\n            if (el.readyState >= 2) {\n                eventsToTrigger.push('loadeddata');\n            }\n            if (el.readyState >= 3) {\n                eventsToTrigger.push('canplay');\n            }\n            if (el.readyState >= 4) {\n                eventsToTrigger.push('canplaythrough');\n            }\n            this.ready(function () {\n                eventsToTrigger.forEach(function (type) {\n                    this.trigger(type);\n                }, this);\n            });\n        }\n        setScrubbing(isScrubbing) {\n            this.isScrubbing_ = isScrubbing;\n        }\n        scrubbing() {\n            return this.isScrubbing_;\n        }\n        setCurrentTime(seconds) {\n            try {\n                if (this.isScrubbing_ && this.el_.fastSeek && browser.IS_ANY_SAFARI) {\n                    this.el_.fastSeek(seconds);\n                } else {\n                    this.el_.currentTime = seconds;\n                }\n            } catch (e) {\n                log(e, 'Video is not ready. (Video.js)');\n            }\n        }\n        duration() {\n            if (this.el_.duration === Infinity && browser.IS_ANDROID && browser.IS_CHROME && this.el_.currentTime === 0) {\n                const checkProgress = () => {\n                    if (this.el_.currentTime > 0) {\n                        if (this.el_.duration === Infinity) {\n                            this.trigger('durationchange');\n                        }\n                        this.unlistenTo('timeupdate', checkProgress);\n                    }\n                };\n                this.listenTo('timeupdate', checkProgress);\n                return NaN;\n            }\n            return this.el_.duration || NaN;\n        }\n        width() {\n            return this.el_.offsetWidth;\n        }\n        height() {\n            return this.el_.offsetHeight;\n        }\n        proxyWebkitFullscreen_() {\n            if (!('webkitDisplayingFullscreen' in this.el_)) {\n                return;\n            }\n            const endFn = function () {\n                this.trigger('fullscreenchange', { isFullscreen: false });\n            };\n            const beginFn = function () {\n                if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n                    this.listenToOnce('webkitendfullscreen', endFn);\n                    this.trigger('fullscreenchange', {\n                        isFullscreen: true,\n                        nativeIOSFullscreen: true\n                    });\n                }\n            };\n            this.listenTo('webkitbeginfullscreen', beginFn);\n            this.listenTo('dispose', () => {\n                this.unlistenTo('webkitbeginfullscreen', beginFn);\n                this.unlistenTo('webkitendfullscreen', endFn);\n            });\n        }\n        supportsFullScreen() {\n            if (typeof this.el_.webkitEnterFullScreen === 'function') {\n                const userAgent = window.navigator && window.navigator.userAgent || '';\n                if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        enterFullScreen() {\n            const video = this.el_;\n            if (video.paused && video.networkState <= video.HAVE_METADATA) {\n                promise.silencePromise(this.el_.play());\n                this.setTimeout(function () {\n                    video.pause();\n                    try {\n                        video.webkitEnterFullScreen();\n                    } catch (e) {\n                        this.trigger('fullscreenerror', e);\n                    }\n                }, 0);\n            } else {\n                try {\n                    video.webkitEnterFullScreen();\n                } catch (e) {\n                    this.trigger('fullscreenerror', e);\n                }\n            }\n        }\n        exitFullScreen() {\n            if (!this.el_.webkitDisplayingFullscreen) {\n                this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n                return;\n            }\n            //this.el_.webkitExitFullScreen();\n            noder.fullscreen(false);\n        }\n        requestPictureInPicture() {\n            return this.el_.requestPictureInPicture();\n        }\n        src(src) {\n            if (src === undefined) {\n                return this.el_.src;\n            }\n            this.setSrc(src);\n        }\n        reset() {\n            Html5.resetMediaElement(this.el_);\n        }\n        currentSrc() {\n            if (this.currentSource_) {\n                return this.currentSource_.src;\n            }\n            return this.el_.currentSrc;\n        }\n        setControls(val) {\n            this.el_.controls = !!val;\n        }\n        addTextTrack(kind, label, language) {\n            if (!this.featuresNativeTextTracks) {\n                return super.addTextTrack(kind, label, language);\n            }\n            return this.el_.addTextTrack(kind, label, language);\n        }\n        createRemoteTextTrack(options) {\n            if (!this.featuresNativeTextTracks) {\n                return super.createRemoteTextTrack(options);\n            }\n            const htmlTrackElement = document.createElement('track');\n            if (options.kind) {\n                htmlTrackElement.kind = options.kind;\n            }\n            if (options.label) {\n                htmlTrackElement.label = options.label;\n            }\n            if (options.language || options.srclang) {\n                htmlTrackElement.srclang = options.language || options.srclang;\n            }\n            if (options.default) {\n                htmlTrackElement.default = options.default;\n            }\n            if (options.id) {\n                htmlTrackElement.id = options.id;\n            }\n            if (options.src) {\n                htmlTrackElement.src = options.src;\n            }\n            return htmlTrackElement;\n        }\n        addRemoteTextTrack(options, manualCleanup) {\n            const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n            if (this.featuresNativeTextTracks) {\n                this.el().appendChild(htmlTrackElement);\n            }\n            return htmlTrackElement;\n        }\n        removeRemoteTextTrack(track) {\n            super.removeRemoteTextTrack(track);\n            if (this.featuresNativeTextTracks) {\n                const tracks = this.$$('track');\n                let i = tracks.length;\n                while (i--) {\n                    if (track === tracks[i] || track === tracks[i].track) {\n                        this.el().removeChild(tracks[i]);\n                    }\n                }\n            }\n        }\n        getVideoPlaybackQuality() {\n            if (typeof this.el().getVideoPlaybackQuality === 'function') {\n                return this.el().getVideoPlaybackQuality();\n            }\n            const videoPlaybackQuality = {};\n            if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n                videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n                videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n            }\n            if (window.performance && typeof window.performance.now === 'function') {\n                videoPlaybackQuality.creationTime = window.performance.now();\n            } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n                videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n            }\n            return videoPlaybackQuality;\n        }\n    }\n    defineLazyProperty(Html5, 'TEST_VID', function () {\n        if (!Dom.isReal()) {\n            return;\n        }\n        const video = document.createElement('video');\n        const track = document.createElement('track');\n        track.kind = 'captions';\n        track.srclang = 'en';\n        track.label = 'English';\n        video.appendChild(track);\n        return video;\n    });\n    Html5.isSupported = function () {\n        try {\n            Html5.TEST_VID.volume = 0.5;\n        } catch (e) {\n            return false;\n        }\n        return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n    };\n    Html5.canPlayType = function (type) {\n        return Html5.TEST_VID.canPlayType(type);\n    };\n    Html5.canPlaySource = function (srcObj, options) {\n        return Html5.canPlayType(srcObj.type);\n    };\n    Html5.canControlVolume = function () {\n        try {\n            const volume = Html5.TEST_VID.volume;\n            Html5.TEST_VID.volume = volume / 2 + 0.1;\n            return volume !== Html5.TEST_VID.volume;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canMuteVolume = function () {\n        try {\n            const muted = Html5.TEST_VID.muted;\n            Html5.TEST_VID.muted = !muted;\n            if (Html5.TEST_VID.muted) {\n                Dom.setAttribute(Html5.TEST_VID, 'muted', 'muted');\n            } else {\n                Dom.removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n            }\n            return muted !== Html5.TEST_VID.muted;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canControlPlaybackRate = function () {\n        if (browser.IS_ANDROID && browser.IS_CHROME && browser.CHROME_VERSION < 58) {\n            return false;\n        }\n        try {\n            const playbackRate = Html5.TEST_VID.playbackRate;\n            Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n            return playbackRate !== Html5.TEST_VID.playbackRate;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canOverrideAttributes = function () {\n        try {\n            const noop = () => {\n            };\n            Object.defineProperty(document.createElement('video'), 'src', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('audio'), 'src', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('video'), 'innerHTML', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n                get: noop,\n                set: noop\n            });\n        } catch (e) {\n            return false;\n        }\n        return true;\n    };\n    Html5.supportsNativeTextTracks = function () {\n        return browser.IS_ANY_SAFARI || browser.IS_IOS && browser.IS_CHROME;\n    };\n    Html5.supportsNativeVideoTracks = function () {\n        return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n    };\n    Html5.supportsNativeAudioTracks = function () {\n        return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n    };\n    Html5.Events = [\n        'loadstart',\n        'suspend',\n        'abort',\n        'error',\n        'emptied',\n        'stalled',\n        'loadedmetadata',\n        'loadeddata',\n        'canplay',\n        'canplaythrough',\n        'playing',\n        'waiting',\n        'seeking',\n        'seeked',\n        'ended',\n        'durationchange',\n        'timeupdate',\n        'progress',\n        'play',\n        'pause',\n        'ratechange',\n        'resize',\n        'volumechange'\n    ];\n    [\n        [\n            'featuresVolumeControl',\n            'canControlVolume'\n        ],\n        [\n            'featuresMuteControl',\n            'canMuteVolume'\n        ],\n        [\n            'featuresPlaybackRate',\n            'canControlPlaybackRate'\n        ],\n        [\n            'featuresSourceset',\n            'canOverrideAttributes'\n        ],\n        [\n            'featuresNativeTextTracks',\n            'supportsNativeTextTracks'\n        ],\n        [\n            'featuresNativeVideoTracks',\n            'supportsNativeVideoTracks'\n        ],\n        [\n            'featuresNativeAudioTracks',\n            'supportsNativeAudioTracks'\n        ]\n    ].forEach(function ([key, fn]) {\n        defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n    });\n    Html5.prototype.movingMediaElementInDOM = !browser.IS_IOS;\n    Html5.prototype.featuresFullscreenResize = true;\n    Html5.prototype.featuresProgressEvents = true;\n    Html5.prototype.featuresTimeupdateEvents = true;\n    let canPlayType;\n    Html5.patchCanPlayType = function () {\n        if (browser.ANDROID_VERSION >= 4 && !browser.IS_FIREFOX && !browser.IS_CHROME) {\n            canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n            Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n                const mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n                if (type && mpegurlRE.test(type)) {\n                    return 'maybe';\n                }\n                return canPlayType.call(this, type);\n            };\n        }\n    };\n    Html5.unpatchCanPlayType = function () {\n        const r = Html5.TEST_VID.constructor.prototype.canPlayType;\n        if (canPlayType) {\n            Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n        }\n        return r;\n    };\n    Html5.patchCanPlayType();\n    Html5.disposeMediaElement = function (el) {\n        if (!el) {\n            return;\n        }\n        if (el.parentNode) {\n            el.parentNode.removeChild(el);\n        }\n        while (el.hasChildNodes()) {\n            el.removeChild(el.firstChild);\n        }\n        el.removeAttribute('src');\n        if (typeof el.load === 'function') {\n            (function () {\n                try {\n                    el.load();\n                } catch (e) {\n                }\n            }());\n        }\n    };\n    Html5.resetMediaElement = function (el) {\n        if (!el) {\n            return;\n        }\n        const sources = el.querySelectorAll('source');\n        let i = sources.length;\n        while (i--) {\n            el.removeChild(sources[i]);\n        }\n        el.removeAttribute('src');\n        if (typeof el.load === 'function') {\n            (function () {\n                try {\n                    el.load();\n                } catch (e) {\n                }\n            }());\n        }\n    };\n    [\n        'muted',\n        'defaultMuted',\n        'autoplay',\n        'controls',\n        'loop',\n        'playsinline'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop] || this.el_.hasAttribute(prop);\n        };\n    });\n    [\n        'muted',\n        'defaultMuted',\n        'autoplay',\n        'loop',\n        'playsinline'\n    ].forEach(function (prop) {\n        Html5.prototype['set' + stringCases.toTitleCase(prop)] = function (v) {\n            this.el_[prop] = v;\n            if (v) {\n                this.el_.setAttribute(prop, prop);\n            } else {\n                this.el_.removeAttribute(prop);\n            }\n        };\n    });\n    [\n        'paused',\n        'currentTime',\n        'buffered',\n        'volume',\n        'poster',\n        'preload',\n        'error',\n        'seeking',\n        'seekable',\n        'ended',\n        'playbackRate',\n        'defaultPlaybackRate',\n        'disablePictureInPicture',\n        'played',\n        'networkState',\n        'readyState',\n        'videoWidth',\n        'videoHeight',\n        'crossOrigin'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop];\n        };\n    });\n    [\n        'volume',\n        'src',\n        'poster',\n        'preload',\n        'playbackRate',\n        'defaultPlaybackRate',\n        'disablePictureInPicture',\n        'crossOrigin'\n    ].forEach(function (prop) {\n        Html5.prototype['set' + stringCases.toTitleCase(prop)] = function (v) {\n            this.el_[prop] = v;\n        };\n    });\n    [\n        'pause',\n        'load',\n        'play'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop]();\n        };\n    });\n    Tech.withSourceHandlers(Html5);\n    Html5.nativeSourceHandler = {};\n    Html5.nativeSourceHandler.canPlayType = function (type) {\n        try {\n            return Html5.TEST_VID.canPlayType(type);\n        } catch (e) {\n            return '';\n        }\n    };\n    Html5.nativeSourceHandler.canHandleSource = function (source, options) {\n        if (source.type) {\n            return Html5.nativeSourceHandler.canPlayType(source.type);\n        } else if (source.src) {\n            const ext = Url.getFileExtension(source.src);\n            return Html5.nativeSourceHandler.canPlayType(`video/${ ext }`);\n        }\n        return '';\n    };\n    Html5.nativeSourceHandler.handleSource = function (source, tech, options) {\n        tech.setSrc(source.src);\n    };\n    Html5.nativeSourceHandler.dispose = function () {\n    };\n    Html5.registerSourceHandler(Html5.nativeSourceHandler);\n    Tech.registerTech('Html5', Html5);\n    return Html5;\n});\ndefine('skylark-videojs/player',[\n    'skylark-langx-globals/document',\n    'skylark-domx',\n    './component',\n    ///'./mixins/evented',\n    './utils/events',\n    './utils/dom',\n    './utils/fn',\n    './utils/guid',\n    './utils/browser',\n    './utils/log',\n    './utils/string-cases',\n    './utils/time-ranges',\n    './utils/buffer',\n    './utils/stylesheet',\n    './fullscreen-api',\n    './media-error',\n    './utils/safeParseTuple',\n    './utils/obj',\n    './utils/merge-options',\n    './utils/promise',\n    './tracks/text-track-list-converter',\n    './modal-dialog',\n    './tech/tech',\n    './tech/middleware',\n    './tracks/track-types',\n    './utils/filter-source',\n    './utils/mimetypes',\n    './utils/keycode',\n    './tech/loader',\n    './poster-image',\n    './tracks/text-track-display',\n    './loading-spinner',\n    './big-play-button',\n    './close-button',\n    './control-bar/control-bar',\n    './error-display',\n    './tracks/text-track-settings',\n    './resize-manager',\n    './live-tracker',\n    './tech/html5'\n], function (\n    document,\n    domx,\n    Component,\n    Events, \n    Dom, \n    Fn, \n    Guid, \n    browser, \n    log, \n    stringCases, \n    timeRages, \n    buffer, \n    stylesheet, \n    FullscreenApi, \n    MediaError, \n    safeParseTuple, \n    obj, \n    mergeOptions, \n    promise, \n    textTrackConverter, \n    ModalDialog, \n    Tech, \n    middleware, \n    TRACK_TYPES, \n    filterSource, \n    mimetypes, \n    keycode\n) {\n    'use strict';\n    const TECH_EVENTS_RETRIGGER = [\n        'progress',\n        'abort',\n        'suspend',\n        'emptied',\n        'stalled',\n        'loadedmetadata',\n        'loadeddata',\n        'timeupdate',\n        'resize',\n        'volumechange',\n        'texttrackchange'\n    ];\n    const TECH_EVENTS_QUEUE = {\n        canplay: 'CanPlay',\n        canplaythrough: 'CanPlayThrough',\n        playing: 'Playing',\n        seeked: 'Seeked'\n    };\n    const BREAKPOINT_ORDER = [\n        'tiny',\n        'xsmall',\n        'small',\n        'medium',\n        'large',\n        'xlarge',\n        'huge'\n    ];\n    const BREAKPOINT_CLASSES = {};\n    BREAKPOINT_ORDER.forEach(k => {\n        const v = k.charAt(0) === 'x' ? `x-${ k.substring(1) }` : k;\n        BREAKPOINT_CLASSES[k] = `vjs-layout-${ v }`;\n    });\n    const DEFAULT_BREAKPOINTS = {\n        tiny: 210,\n        xsmall: 320,\n        small: 425,\n        medium: 768,\n        large: 1440,\n        xlarge: 2560,\n        huge: Infinity\n    };\n    class Player extends Component {\n        constructor(tag, options, ready) {\n            tag.id = tag.id || options.id || `vjs_video_${ Guid.newGUID() }`;\n            options = obj.assign(Player.getTagSettings(tag), options);\n            options.initChildren = false;\n            options.createEl = false;\n            options.evented = false;\n            options.reportTouchActivity = false;\n            if (!options.language) {\n                if (typeof tag.closest === 'function') {\n                    const closest = tag.closest('[lang]');\n                    if (closest && closest.getAttribute) {\n                        options.language = closest.getAttribute('lang');\n                    }\n                } else {\n                    let element = tag;\n                    while (element && element.nodeType === 1) {\n                        if (Dom.getAttributes(element).hasOwnProperty('lang')) {\n                            options.language = element.getAttribute('lang');\n                            break;\n                        }\n                        element = element.parentNode;\n                    }\n                }\n            }\n            super(null, options, ready);\n            this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n            this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n            this.isFullscreen_ = false;\n            this.log = log.createLogger(this.id_);\n            this.fsApi_ = FullscreenApi;\n            this.isPosterFromTech_ = false;\n            this.queuedCallbacks_ = [];\n            this.isReady_ = false;\n            this.hasStarted_ = false;\n            this.userActive_ = false;\n            this.debugEnabled_ = false;\n            if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n                throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n            }\n            this.tag = tag;\n            this.tagAttributes = tag && Dom.getAttributes(tag);\n            this.language(this.options_.language);\n            if (options.languages) {\n                const languagesToLower = {};\n                Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n                    languagesToLower[name.toLowerCase()] = options.languages[name];\n                });\n                this.languages_ = languagesToLower;\n            } else {\n                this.languages_ = Player.prototype.options_.languages;\n            }\n            this.resetCache_();\n            this.poster_ = options.poster || '';\n            this.controls_ = !!options.controls;\n            tag.controls = false;\n            tag.removeAttribute('controls');\n            this.changingSrc_ = false;\n            this.playCallbacks_ = [];\n            this.playTerminatedQueue_ = [];\n            if (tag.hasAttribute('autoplay')) {\n                this.autoplay(true);\n            } else {\n                this.autoplay(this.options_.autoplay);\n            }\n            if (options.plugins) {\n                Object.keys(options.plugins).forEach(name => {\n                    if (typeof this[name] !== 'function') {\n                        throw new Error(`plugin \"${ name }\" does not exist`);\n                    }\n                });\n            }\n            this.scrubbing_ = false;\n            this.el_ = this.createEl();\n            //evented(this, { eventBusKey: 'el_' });\n            if (this.fsApi_.requestFullscreen) {\n                Events.on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n                this.listenTo(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n            }\n            if (this.fluid_) {\n                this.listenTo([\n                    'playerreset',\n                    'resize'\n                ], this.updateStyleEl_);\n            }\n            const playerOptionsCopy = mergeOptions(this.options_);\n            if (options.plugins) {\n                Object.keys(options.plugins).forEach(name => {\n                    this[name](options.plugins[name]);\n                });\n            }\n            if (options.debug) {\n                this.debug(true);\n            }\n            this.options_.playerOptions = playerOptionsCopy;\n            this.middleware_ = [];\n            this.initChildren();\n            this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n            if (this.controls()) {\n                this.addClass('vjs-controls-enabled');\n            } else {\n                this.addClass('vjs-controls-disabled');\n            }\n            this.el_.setAttribute('role', 'region');\n            if (this.isAudio()) {\n                this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n            } else {\n                this.el_.setAttribute('aria-label', this.localize('Video Player'));\n            }\n            if (this.isAudio()) {\n                this.addClass('vjs-audio');\n            }\n            if (this.flexNotSupported_()) {\n                this.addClass('vjs-no-flex');\n            }\n            if (browser.TOUCH_ENABLED) {\n                this.addClass('vjs-touch-enabled');\n            }\n            if (!browser.IS_IOS) {\n                this.addClass('vjs-workinghover');\n            }\n            Player.players[this.id_] = this;\n            const majorVersion = \"7\";\n            this.addClass(`vjs-v${ majorVersion }`);\n            this.userActive(true);\n            this.reportUserActivity();\n            this.listenToOnce('play', this.listenForUserActivity_);\n            this.listenTo('stageclick', this.handleStageClick_);\n            this.listenTo('keydown', this.handleKeyDown);\n            this.listenTo('languagechange', this.handleLanguagechange);\n            this.breakpoints(this.options_.breakpoints);\n            this.responsive(this.options_.responsive);\n        }\n        dispose() {\n            this.trigger('dispose');\n            this.unlistenTo('dispose');\n            Events.off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n            Events.off(document, 'keydown', this.boundFullWindowOnEscKey_);\n            if (this.styleEl_ && this.styleEl_.parentNode) {\n                this.styleEl_.parentNode.removeChild(this.styleEl_);\n                this.styleEl_ = null;\n            }\n            Player.players[this.id_] = null;\n            if (this.tag && this.tag.player) {\n                this.tag.player = null;\n            }\n            if (this.el_ && this.el_.player) {\n                this.el_.player = null;\n            }\n            if (this.tech_) {\n                this.tech_.dispose();\n                this.isPosterFromTech_ = false;\n                this.poster_ = '';\n            }\n            if (this.playerElIngest_) {\n                this.playerElIngest_ = null;\n            }\n            if (this.tag) {\n                this.tag = null;\n            }\n            middleware.clearCacheForPlayer(this);\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES[name];\n                const list = this[props.getterName]();\n                if (list && list.off) {\n                    list.off();\n                }\n            });\n            super.dispose();\n        }\n        createEl() {\n            let tag = this.tag;\n            let el;\n            let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n            const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n            if (playerElIngest) {\n                el = this.el_ = tag.parentNode;\n            } else if (!divEmbed) {\n                el = this.el_ = super.createEl('div');\n            }\n            const attrs = Dom.getAttributes(tag);\n            if (divEmbed) {\n                el = this.el_ = tag;\n                tag = this.tag = document.createElement('video');\n                while (el.children.length) {\n                    tag.appendChild(el.firstChild);\n                }\n                if (!Dom.hasClass(el, 'video-js')) {\n                    Dom.addClass(el, 'video-js');\n                }\n                el.appendChild(tag);\n                playerElIngest = this.playerElIngest_ = el;\n                Object.keys(el).forEach(k => {\n                    try {\n                        tag[k] = el[k];\n                    } catch (e) {\n                    }\n                });\n            }\n            tag.setAttribute('tabindex', '-1');\n            attrs.tabindex = '-1';\n            if (browser.IE_VERSION || browser.IS_CHROME && browser.IS_WINDOWS) {\n                tag.setAttribute('role', 'application');\n                attrs.role = 'application';\n            }\n            tag.removeAttribute('width');\n            tag.removeAttribute('height');\n            if ('width' in attrs) {\n                delete attrs.width;\n            }\n            if ('height' in attrs) {\n                delete attrs.height;\n            }\n            Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n                if (!(divEmbed && attr === 'class')) {\n                    el.setAttribute(attr, attrs[attr]);\n                }\n                if (divEmbed) {\n                    tag.setAttribute(attr, attrs[attr]);\n                }\n            });\n            tag.playerId = tag.id;\n            tag.id += '_html5_api';\n            tag.className = 'vjs-tech';\n            tag.player = el.player = this;\n            this.addClass('vjs-paused');\n            if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n                this.styleEl_ = stylesheet.createStyleElement('vjs-styles-dimensions');\n                const defaultsStyleEl = Dom.$('.vjs-styles-defaults');\n                const head = Dom.$('head');\n                head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n            }\n            this.fill_ = false;\n            this.fluid_ = false;\n            this.width(this.options_.width);\n            this.height(this.options_.height);\n            this.fill(this.options_.fill);\n            this.fluid(this.options_.fluid);\n            this.aspectRatio(this.options_.aspectRatio);\n            this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n            const links = tag.getElementsByTagName('a');\n            for (let i = 0; i < links.length; i++) {\n                const linkEl = links.item(i);\n                Dom.addClass(linkEl, 'vjs-hidden');\n                linkEl.setAttribute('hidden', 'hidden');\n            }\n            tag.initNetworkState_ = tag.networkState;\n            if (tag.parentNode && !playerElIngest) {\n                tag.parentNode.insertBefore(el, tag);\n            }\n            Dom.prependTo(tag, el);\n            this.children_.unshift(tag);\n            this.el_.setAttribute('lang', this.language_);\n            this.el_ = el;\n            return el;\n        }\n        crossOrigin(value) {\n            if (!value) {\n                return this.techGet_('crossOrigin');\n            }\n            if (value !== 'anonymous' && value !== 'use-credentials') {\n                log.warn(`crossOrigin must be \"anonymous\" or \"use-credentials\", given \"${ value }\"`);\n                return;\n            }\n            this.techCall_('setCrossOrigin', value);\n            return;\n        }\n        width(value) {\n            return this.dimension('width', value);\n        }\n        height(value) {\n            return this.dimension('height', value);\n        }\n        dimension(dimension, value) {\n            const privDimension = dimension + '_';\n            if (value === undefined) {\n                return this[privDimension] || 0;\n            }\n            if (value === '' || value === 'auto') {\n                this[privDimension] = undefined;\n                this.updateStyleEl_();\n                return;\n            }\n            const parsedVal = parseFloat(value);\n            if (isNaN(parsedVal)) {\n                log.error(`Improper value \"${ value }\" supplied for for ${ dimension }`);\n                return;\n            }\n            this[privDimension] = parsedVal;\n            this.updateStyleEl_();\n        }\n        fluid(bool) {\n            if (bool === undefined) {\n                return !!this.fluid_;\n            }\n            this.fluid_ = !!bool;\n            ///if (evented.isEvented(this)) {\n                this.unlistenTo([\n                    'playerreset',\n                    'resize'\n                ], this.updateStyleEl_);\n            ///}\n            if (bool) {\n                this.addClass('vjs-fluid');\n                this.fill(false);\n                ///evented.addEventedCallback(this, () => {\n                ///    this.listenTo([\n                ///        'playerreset',\n                ///        'resize'\n                ///    ], this.updateStyleEl_);\n                ///});\n            } else {\n                this.removeClass('vjs-fluid');\n            }\n            this.updateStyleEl_();\n        }\n        fill(bool) {\n            if (bool === undefined) {\n                return !!this.fill_;\n            }\n            this.fill_ = !!bool;\n            if (bool) {\n                this.addClass('vjs-fill');\n                this.fluid(false);\n            } else {\n                this.removeClass('vjs-fill');\n            }\n        }\n        aspectRatio(ratio) {\n            if (ratio === undefined) {\n                return this.aspectRatio_;\n            }\n            if (!/^\\d+\\:\\d+$/.test(ratio)) {\n                throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n            }\n            this.aspectRatio_ = ratio;\n            this.fluid(true);\n            this.updateStyleEl_();\n        }\n        updateStyleEl_() {\n            if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n                const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n                const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n                const techEl = this.tech_ && this.tech_.el();\n                if (techEl) {\n                    if (width >= 0) {\n                        techEl.width = width;\n                    }\n                    if (height >= 0) {\n                        techEl.height = height;\n                    }\n                }\n                return;\n            }\n            let width;\n            let height;\n            let aspectRatio;\n            let idClass;\n            if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n                aspectRatio = this.aspectRatio_;\n            } else if (this.videoWidth() > 0) {\n                aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n            } else {\n                aspectRatio = '16:9';\n            }\n            const ratioParts = aspectRatio.split(':');\n            const ratioMultiplier = ratioParts[1] / ratioParts[0];\n            if (this.width_ !== undefined) {\n                width = this.width_;\n            } else if (this.height_ !== undefined) {\n                width = this.height_ / ratioMultiplier;\n            } else {\n                width = this.videoWidth() || 300;\n            }\n            if (this.height_ !== undefined) {\n                height = this.height_;\n            } else {\n                height = width * ratioMultiplier;\n            }\n            if (/^[^a-zA-Z]/.test(this.id())) {\n                idClass = 'dimensions-' + this.id();\n            } else {\n                idClass = this.id() + '-dimensions';\n            }\n            this.addClass(idClass);\n            stylesheet.setTextContent(this.styleEl_, `\n      .${ idClass } {\n        width: ${ width }px;\n        height: ${ height }px;\n      }\n\n      .${ idClass }.vjs-fluid {\n        padding-top: ${ ratioMultiplier * 100 }%;\n      }\n    `);\n        }\n        loadTech_(techName, source) {\n            if (this.tech_) {\n                this.unloadTech_();\n            }\n            const titleTechName = stringCases.toTitleCase(techName);\n            const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n            if (titleTechName !== 'Html5' && this.tag) {\n                Tech.getTech('Html5').disposeMediaElement(this.tag);\n                this.tag.player = null;\n                this.tag = null;\n            }\n            this.techName_ = titleTechName;\n            this.isReady_ = false;\n            const autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n            const techOptions = {\n                source,\n                autoplay,\n                'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n                'playerId': this.id(),\n                'techId': `${ this.id() }_${ camelTechName }_api`,\n                'playsinline': this.options_.playsinline,\n                'preload': this.options_.preload,\n                'loop': this.options_.loop,\n                'disablePictureInPicture': this.options_.disablePictureInPicture,\n                'muted': this.options_.muted,\n                'poster': this.poster(),\n                'language': this.language(),\n                'playerElIngest': this.playerElIngest_ || false,\n                'vtt.js': this.options_['vtt.js'],\n                'canOverridePoster': !!this.options_.techCanOverridePoster,\n                'enableSourceset': this.options_.enableSourceset,\n                'Promise': this.options_.Promise\n            };\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                techOptions[props.getterName] = this[props.privateName];\n            });\n            obj.assign(techOptions, this.options_[titleTechName]);\n            obj.assign(techOptions, this.options_[camelTechName]);\n            obj.assign(techOptions, this.options_[techName.toLowerCase()]);\n            if (this.tag) {\n                techOptions.tag = this.tag;\n            }\n            if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n                techOptions.startTime = this.cache_.currentTime;\n            }\n            const TechClass = Tech.getTech(techName);\n            if (!TechClass) {\n                throw new Error(`No Tech named '${ titleTechName }' exists! '${ titleTechName }' should be registered using videojs.registerTech()'`);\n            }\n            this.tech_ = new TechClass(techOptions);\n            this.tech_.ready(Fn.bind(this, this.handleTechReady_), true);\n            textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n            TECH_EVENTS_RETRIGGER.forEach(event => {\n                this.listenTo(this.tech_, event, this[`handleTech${ stringCases.toTitleCase(event) }_`]);\n            });\n            Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n                this.listenTo(this.tech_, event, eventObj => {\n                    if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n                        this.queuedCallbacks_.push({\n                            callback: this[`handleTech${ TECH_EVENTS_QUEUE[event] }_`].bind(this),\n                            event: eventObj\n                        });\n                        return;\n                    }\n                    this[`handleTech${ TECH_EVENTS_QUEUE[event] }_`](eventObj);\n                });\n            });\n            this.listenTo(this.tech_, 'loadstart', this.handleTechLoadStart_);\n            this.listenTo(this.tech_, 'sourceset', this.handleTechSourceset_);\n            this.listenTo(this.tech_, 'waiting', this.handleTechWaiting_);\n            this.listenTo(this.tech_, 'ended', this.handleTechEnded_);\n            this.listenTo(this.tech_, 'seeking', this.handleTechSeeking_);\n            this.listenTo(this.tech_, 'play', this.handleTechPlay_);\n            this.listenTo(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n            this.listenTo(this.tech_, 'pause', this.handleTechPause_);\n            this.listenTo(this.tech_, 'durationchange', this.handleTechDurationChange_);\n            this.listenTo(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n            this.listenTo(this.tech_, 'fullscreenerror', this.handleTechFullscreenError_);\n            this.listenTo(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n            this.listenTo(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n            this.listenTo(this.tech_, 'error', this.handleTechError_);\n            this.listenTo(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n            this.listenTo(this.tech_, 'posterchange', this.handleTechPosterChange_);\n            this.listenTo(this.tech_, 'textdata', this.handleTechTextData_);\n            this.listenTo(this.tech_, 'ratechange', this.handleTechRateChange_);\n            this.usingNativeControls(this.techGet_('controls'));\n            if (this.controls() && !this.usingNativeControls()) {\n                this.addTechControlsListeners_();\n            }\n            if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n                Dom.prependTo(this.tech_.el(), this.el());\n            }\n            if (this.tag) {\n                this.tag.player = null;\n                this.tag = null;\n            }\n        }\n        unloadTech_() {\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                this[props.privateName] = this[props.getterName]();\n            });\n            this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n            this.isReady_ = false;\n            this.tech_.dispose();\n            this.tech_ = false;\n            if (this.isPosterFromTech_) {\n                this.poster_ = '';\n                this.trigger('posterchange');\n            }\n            this.isPosterFromTech_ = false;\n        }\n        tech(safety) {\n            if (safety === undefined) {\n                log.warn(\"Using the tech directly can be dangerous. I hope you know what you're doing.\\n\" + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n            }\n            return this.tech_;\n        }\n        addTechControlsListeners_() {\n            this.removeTechControlsListeners_();\n            this.listenTo(this.tech_, 'mouseup', this.handleTechClick_);\n            this.listenTo(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n            this.listenTo(this.tech_, 'touchstart', this.handleTechTouchStart_);\n            this.listenTo(this.tech_, 'touchmove', this.handleTechTouchMove_);\n            this.listenTo(this.tech_, 'touchend', this.handleTechTouchEnd_);\n            this.listenTo(this.tech_, 'tap', this.handleTechTap_);\n        }\n        removeTechControlsListeners_() {\n            this.unlistenTo(this.tech_, 'tap', this.handleTechTap_);\n            this.unlistenTo(this.tech_, 'touchstart', this.handleTechTouchStart_);\n            this.unlistenTo(this.tech_, 'touchmove', this.handleTechTouchMove_);\n            this.unlistenTo(this.tech_, 'touchend', this.handleTechTouchEnd_);\n            this.unlistenTo(this.tech_, 'mouseup', this.handleTechClick_);\n            this.unlistenTo(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n        }\n        handleTechReady_() {\n            this.triggerReady();\n            if (this.cache_.volume) {\n                this.techCall_('setVolume', this.cache_.volume);\n            }\n            this.handleTechPosterChange_();\n            this.handleTechDurationChange_();\n        }\n        handleTechLoadStart_() {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-seeking');\n            this.error(null);\n            this.handleTechDurationChange_();\n            if (!this.paused()) {\n                this.trigger('loadstart');\n                this.trigger('firstplay');\n            } else {\n                this.hasStarted(false);\n                this.trigger('loadstart');\n            }\n            this.manualAutoplay_(this.autoplay());\n        }\n        manualAutoplay_(type) {\n            if (!this.tech_ || typeof type !== 'string') {\n                return;\n            }\n            const muted = () => {\n                const previouslyMuted = this.muted();\n                this.muted(true);\n                const restoreMuted = () => {\n                    this.muted(previouslyMuted);\n                };\n                this.playTerminatedQueue_.push(restoreMuted);\n                const mutedPromise = this.play();\n                if (!promise.isPromise(mutedPromise)) {\n                    return;\n                }\n                return mutedPromise.catch(restoreMuted);\n            };\n            let promise;\n            if (type === 'any' && this.muted() !== true) {\n                promise = this.play();\n                if (promise.isPromise(promise)) {\n                    promise = promise.catch(muted);\n                }\n            } else if (type === 'muted' && this.muted() !== true) {\n                promise = muted();\n            } else {\n                promise = this.play();\n            }\n            if (!promise.isPromise(promise)) {\n                return;\n            }\n            return promise.then(() => {\n                this.trigger({\n                    type: 'autoplay-success',\n                    autoplay: type\n                });\n            }).catch(e => {\n                this.trigger({\n                    type: 'autoplay-failure',\n                    autoplay: type\n                });\n            });\n        }\n        updateSourceCaches_(srcObj = '') {\n            let src = srcObj;\n            let type = '';\n            if (typeof src !== 'string') {\n                src = srcObj.src;\n                type = srcObj.type;\n            }\n            this.cache_.source = this.cache_.source || {};\n            this.cache_.sources = this.cache_.sources || [];\n            if (src && !type) {\n                type = mimetypes.findMimetype(this, src);\n            }\n            this.cache_.source = mergeOptions({}, srcObj, {\n                src,\n                type\n            });\n            const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n            const sourceElSources = [];\n            const sourceEls = this.$$('source');\n            const matchingSourceEls = [];\n            for (let i = 0; i < sourceEls.length; i++) {\n                const sourceObj = Dom.getAttributes(sourceEls[i]);\n                sourceElSources.push(sourceObj);\n                if (sourceObj.src && sourceObj.src === src) {\n                    matchingSourceEls.push(sourceObj.src);\n                }\n            }\n            if (matchingSourceEls.length && !matchingSources.length) {\n                this.cache_.sources = sourceElSources;\n            } else if (!matchingSources.length) {\n                this.cache_.sources = [this.cache_.source];\n            }\n            this.cache_.src = src;\n        }\n        handleTechSourceset_(event) {\n            if (!this.changingSrc_) {\n                let updateSourceCaches = src => this.updateSourceCaches_(src);\n                const playerSrc = this.currentSource().src;\n                const eventSrc = event.src;\n                if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n                    if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n                        updateSourceCaches = () => {\n                        };\n                    }\n                }\n                updateSourceCaches(eventSrc);\n                if (!event.src) {\n                    this.tech_.any([\n                        'sourceset',\n                        'loadstart'\n                    ], e => {\n                        if (e.type === 'sourceset') {\n                            return;\n                        }\n                        const techSrc = this.techGet('currentSrc');\n                        this.lastSource_.tech = techSrc;\n                        this.updateSourceCaches_(techSrc);\n                    });\n                }\n            }\n            this.lastSource_ = {\n                player: this.currentSource().src,\n                tech: event.src\n            };\n            this.trigger({\n                src: event.src,\n                type: 'sourceset'\n            });\n        }\n        hasStarted(request) {\n            if (request === undefined) {\n                return this.hasStarted_;\n            }\n            if (request === this.hasStarted_) {\n                return;\n            }\n            this.hasStarted_ = request;\n            if (this.hasStarted_) {\n                this.addClass('vjs-has-started');\n                this.trigger('firstplay');\n            } else {\n                this.removeClass('vjs-has-started');\n            }\n        }\n        handleTechPlay_() {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-paused');\n            this.addClass('vjs-playing');\n            this.hasStarted(true);\n            this.trigger('play');\n        }\n        handleTechRateChange_() {\n            if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n                this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n                this.queuedCallbacks_ = [];\n            }\n            this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n            this.trigger('ratechange');\n        }\n        handleTechWaiting_() {\n            this.addClass('vjs-waiting');\n            this.trigger('waiting');\n            const timeWhenWaiting = this.currentTime();\n            const timeUpdateListener = () => {\n                if (timeWhenWaiting !== this.currentTime()) {\n                    this.removeClass('vjs-waiting');\n                    this.unlistenTo('timeupdate', timeUpdateListener);\n                }\n            };\n            this.listenTo('timeupdate', timeUpdateListener);\n        }\n        handleTechCanPlay_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('canplay');\n        }\n        handleTechCanPlayThrough_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('canplaythrough');\n        }\n        handleTechPlaying_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('playing');\n        }\n        handleTechSeeking_() {\n            this.addClass('vjs-seeking');\n            this.trigger('seeking');\n        }\n        handleTechSeeked_() {\n            this.removeClass('vjs-seeking');\n            this.removeClass('vjs-ended');\n            this.trigger('seeked');\n        }\n        handleTechFirstPlay_() {\n            if (this.options_.starttime) {\n                log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n                this.currentTime(this.options_.starttime);\n            }\n            this.addClass('vjs-has-started');\n            this.trigger('firstplay');\n        }\n        handleTechPause_() {\n            this.removeClass('vjs-playing');\n            this.addClass('vjs-paused');\n            this.trigger('pause');\n        }\n        handleTechEnded_() {\n            this.addClass('vjs-ended');\n            if (this.options_.loop) {\n                this.currentTime(0);\n                this.play();\n            } else if (!this.paused()) {\n                this.pause();\n            }\n            this.trigger('ended');\n        }\n        handleTechDurationChange_() {\n            this.duration(this.techGet_('duration'));\n        }\n        handleTechClick_(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            if (!this.controls_) {\n                return;\n            }\n            if (this.paused()) {\n                promise.silencePromise(this.play());\n            } else {\n                this.pause();\n            }\n        }\n        handleTechDoubleClick_(event) {\n            if (!this.controls_) {\n                return;\n            }\n            const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n            if (!inAllowedEls) {\n                if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n                    if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n                        this.options_.userActions.doubleClick.call(this, event);\n                    } else if (this.isFullscreen()) {\n                        this.exitFullscreen();\n                    } else {\n                        this.requestFullscreen();\n                    }\n                }\n            }\n        }\n        handleTechTap_() {\n            this.userActive(!this.userActive());\n        }\n        handleTechTouchStart_() {\n            this.userWasActive = this.userActive();\n        }\n        handleTechTouchMove_() {\n            if (this.userWasActive) {\n                this.reportUserActivity();\n            }\n        }\n        handleTechTouchEnd_(event) {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n        }\n        handleStageClick_() {\n            this.reportUserActivity();\n        }\n        toggleFullscreenClass_() {\n            if (this.isFullscreen()) {\n                this.addClass('vjs-fullscreen');\n            } else {\n                this.removeClass('vjs-fullscreen');\n            }\n        }\n        documentFullscreenChange_(e) {\n            const targetPlayer = e.target.player;\n            if (targetPlayer && targetPlayer !== this) {\n                return;\n            }\n            const el = this.el();\n            let isFs = document[this.fsApi_.fullscreenElement] === el;\n            if (!isFs && el.matches) {\n                isFs = el.matches(':' + this.fsApi_.fullscreen);\n            } else if (!isFs && el.msMatchesSelector) {\n                isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n            }\n            this.isFullscreen(isFs);\n        }\n        handleTechFullscreenChange_(event, data) {\n            if (data) {\n                if (data.nativeIOSFullscreen) {\n                    this.toggleClass('vjs-ios-native-fs');\n                }\n                this.isFullscreen(data.isFullscreen);\n            }\n        }\n        handleTechFullscreenError_(event, err) {\n            this.trigger('fullscreenerror', err);\n        }\n        togglePictureInPictureClass_() {\n            if (this.isInPictureInPicture()) {\n                this.addClass('vjs-picture-in-picture');\n            } else {\n                this.removeClass('vjs-picture-in-picture');\n            }\n        }\n        handleTechEnterPictureInPicture_(event) {\n            this.isInPictureInPicture(true);\n        }\n        handleTechLeavePictureInPicture_(event) {\n            this.isInPictureInPicture(false);\n        }\n        handleTechError_() {\n            const error = this.tech_.error();\n            this.error(error);\n        }\n        handleTechTextData_() {\n            let data = null;\n            if (arguments.length > 1) {\n                data = arguments[1];\n            }\n            this.trigger('textdata', data);\n        }\n        getCache() {\n            return this.cache_;\n        }\n        resetCache_() {\n            this.cache_ = {\n                currentTime: 0,\n                initTime: 0,\n                inactivityTimeout: this.options_.inactivityTimeout,\n                duration: NaN,\n                lastVolume: 1,\n                lastPlaybackRate: this.defaultPlaybackRate(),\n                media: null,\n                src: '',\n                source: {},\n                sources: [],\n                volume: 1\n            };\n        }\n        techCall_(method, arg) {\n            this.ready(function () {\n                if (method in middleware.allowedSetters) {\n                    return middleware.set(this.middleware_, this.tech_, method, arg);\n                } else if (method in middleware.allowedMediators) {\n                    return middleware.mediate(this.middleware_, this.tech_, method, arg);\n                }\n                try {\n                    if (this.tech_) {\n                        this.tech_[method](arg);\n                    }\n                } catch (e) {\n                    log(e);\n                    throw e;\n                }\n            }, true);\n        }\n        techGet_(method) {\n            if (!this.tech_ || !this.tech_.isReady_) {\n                return;\n            }\n            if (method in middleware.allowedGetters) {\n                return middleware.get(this.middleware_, this.tech_, method);\n            } else if (method in middleware.allowedMediators) {\n                return middleware.mediate(this.middleware_, this.tech_, method);\n            }\n            try {\n                return this.tech_[method]();\n            } catch (e) {\n                if (this.tech_[method] === undefined) {\n                    log(`Video.js: ${ method } method not defined for ${ this.techName_ } playback technology.`, e);\n                    throw e;\n                }\n                if (e.name === 'TypeError') {\n                    log(`Video.js: ${ method } unavailable on ${ this.techName_ } playback technology element.`, e);\n                    this.tech_.isReady_ = false;\n                    throw e;\n                }\n                log(e);\n                throw e;\n            }\n        }\n        play() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                return new PromiseClass(resolve => {\n                    this.play_(resolve);\n                });\n            }\n            return this.play_();\n        }\n        play_(callback = promise.silencePromise) {\n            this.playCallbacks_.push(callback);\n            const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n            if (this.waitToPlay_) {\n                this.unlistenTo([\n                    'ready',\n                    'loadstart'\n                ], this.waitToPlay_);\n                this.waitToPlay_ = null;\n            }\n            if (!this.isReady_ || !isSrcReady) {\n                this.waitToPlay_ = e => {\n                    this.play_();\n                };\n                this.listenToOnce([\n                    'ready',\n                    'loadstart'\n                ], this.waitToPlay_);\n                if (!isSrcReady && (browser.IS_ANY_SAFARI || browser.IS_IOS)) {\n                    this.load();\n                }\n                return;\n            }\n            const val = this.techGet_('play');\n            if (val === null) {\n                this.runPlayTerminatedQueue_();\n            } else {\n                this.runPlayCallbacks_(val);\n            }\n        }\n        runPlayTerminatedQueue_() {\n            const queue = this.playTerminatedQueue_.slice(0);\n            this.playTerminatedQueue_ = [];\n            queue.forEach(function (q) {\n                q();\n            });\n        }\n        runPlayCallbacks_(val) {\n            const callbacks = this.playCallbacks_.slice(0);\n            this.playCallbacks_ = [];\n            this.playTerminatedQueue_ = [];\n            callbacks.forEach(function (cb) {\n                cb(val);\n            });\n        }\n        pause() {\n            this.techCall_('pause');\n        }\n        paused() {\n            return this.techGet_('paused') === false ? false : true;\n        }\n        played() {\n            return this.techGet_('played') || timeRages.createTimeRange(0, 0);\n        }\n        scrubbing(isScrubbing) {\n            if (typeof isScrubbing === 'undefined') {\n                return this.scrubbing_;\n            }\n            this.scrubbing_ = !!isScrubbing;\n            this.techCall_('setScrubbing', this.scrubbing_);\n            if (isScrubbing) {\n                this.addClass('vjs-scrubbing');\n            } else {\n                this.removeClass('vjs-scrubbing');\n            }\n        }\n        currentTime(seconds) {\n            if (typeof seconds !== 'undefined') {\n                if (seconds < 0) {\n                    seconds = 0;\n                }\n                if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n                    this.cache_.initTime = seconds;\n                    this.unlistenTo('canplay', this.applyInitTime_);\n                    this.listenToOnce('canplay', this.applyInitTime_);\n                    return;\n                }\n                this.techCall_('setCurrentTime', seconds);\n                this.cache_.initTime = 0;\n                return;\n            }\n            this.cache_.currentTime = this.techGet_('currentTime') || 0;\n            return this.cache_.currentTime;\n        }\n        applyInitTime_() {\n            this.currentTime(this.cache_.initTime);\n        }\n        duration(seconds) {\n            if (seconds === undefined) {\n                return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n            }\n            seconds = parseFloat(seconds);\n            if (seconds < 0) {\n                seconds = Infinity;\n            }\n            if (seconds !== this.cache_.duration) {\n                this.cache_.duration = seconds;\n                if (seconds === Infinity) {\n                    this.addClass('vjs-live');\n                } else {\n                    this.removeClass('vjs-live');\n                }\n                if (!isNaN(seconds)) {\n                    this.trigger('durationchange');\n                }\n            }\n        }\n        remainingTime() {\n            return this.duration() - this.currentTime();\n        }\n        remainingTimeDisplay() {\n            return Math.floor(this.duration()) - Math.floor(this.currentTime());\n        }\n        buffered() {\n            let buffered = this.techGet_('buffered');\n            if (!buffered || !buffered.length) {\n                buffered = timeRages.createTimeRange(0, 0);\n            }\n            return buffered;\n        }\n        bufferedPercent() {\n            return buffer.bufferedPercent(this.buffered(), this.duration());\n        }\n        bufferedEnd() {\n            const buffered = this.buffered();\n            const duration = this.duration();\n            let end = buffered.end(buffered.length - 1);\n            if (end > duration) {\n                end = duration;\n            }\n            return end;\n        }\n        volume(percentAsDecimal) {\n            let vol;\n            if (percentAsDecimal !== undefined) {\n                vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n                this.cache_.volume = vol;\n                this.techCall_('setVolume', vol);\n                if (vol > 0) {\n                    this.lastVolume_(vol);\n                }\n                return;\n            }\n            vol = parseFloat(this.techGet_('volume'));\n            return isNaN(vol) ? 1 : vol;\n        }\n        muted(muted) {\n            if (muted !== undefined) {\n                this.techCall_('setMuted', muted);\n                return;\n            }\n            return this.techGet_('muted') || false;\n        }\n        defaultMuted(defaultMuted) {\n            if (defaultMuted !== undefined) {\n                return this.techCall_('setDefaultMuted', defaultMuted);\n            }\n            return this.techGet_('defaultMuted') || false;\n        }\n        lastVolume_(percentAsDecimal) {\n            if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n                this.cache_.lastVolume = percentAsDecimal;\n                return;\n            }\n            return this.cache_.lastVolume;\n        }\n        supportsFullScreen() {\n            return this.techGet_('supportsFullScreen') || false;\n        }\n        isFullscreen(isFS) {\n            if (isFS !== undefined) {\n                const oldValue = this.isFullscreen_;\n                this.isFullscreen_ = Boolean(isFS);\n                if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n                    this.trigger('fullscreenchange');\n                }\n                this.toggleFullscreenClass_();\n                return;\n            }\n            return this.isFullscreen_;\n        }\n        requestFullscreen(fullscreenOptions) {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                const self = this;\n                return new PromiseClass((resolve, reject) => {\n                    function offHandler() {\n                        self.off('fullscreenerror', errorHandler);\n                        self.off('fullscreenchange', changeHandler);\n                    }\n                    function changeHandler() {\n                        offHandler();\n                        resolve();\n                    }\n                    function errorHandler(e, err) {\n                        offHandler();\n                        reject(err);\n                    }\n                    self.one('fullscreenchange', changeHandler);\n                    self.one('fullscreenerror', errorHandler);\n                    const promise = self.requestFullscreenHelper_(fullscreenOptions);\n                    if (promise) {\n                        promise.then(offHandler, offHandler);\n                        return promise;\n                    }\n                });\n            }\n            return this.requestFullscreenHelper_();\n        }\n        requestFullscreenHelper_(fullscreenOptions) {\n            let fsOptions;\n            if (!this.fsApi_.prefixed) {\n                fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n                if (fullscreenOptions !== undefined) {\n                    fsOptions = fullscreenOptions;\n                }\n            }\n//            if (this.fsApi_.requestFullscreen) {\n//                const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n            if (domx.browser.support.fullscreen) {\n                const promise = domx.noder.fullscreen(this.el_);\n                if (promise) {\n                    promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n                }\n                return promise;\n            } else if (this.tech_.supportsFullScreen()) {\n                this.techCall_('enterFullScreen');\n            } else {\n                this.enterFullWindow();\n            }\n        }\n        exitFullscreen() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                const self = this;\n                return new PromiseClass((resolve, reject) => {\n                    function offHandler() {\n                        self.off('fullscreenerror', errorHandler);\n                        self.off('fullscreenchange', changeHandler);\n                    }\n                    function changeHandler() {\n                        offHandler();\n                        resolve();\n                    }\n                    function errorHandler(e, err) {\n                        offHandler();\n                        reject(err);\n                    }\n                    self.one('fullscreenchange', changeHandler);\n                    self.one('fullscreenerror', errorHandler);\n                    const promise = self.exitFullscreenHelper_();\n                    if (promise) {\n                        promise.then(offHandler, offHandler);\n                        return promise;\n                    }\n                });\n            }\n            return this.exitFullscreenHelper_();\n        }\n        exitFullscreenHelper_() {\n            if (this.fsApi_.requestFullscreen) {\n                //const promise = document[this.fsApi_.exitFullscreen]();\n                const promise = domx.noder.fullscreen(false);\n                if (promise) {\n                    promise.then(() => this.isFullscreen(false));\n                }\n                return promise;\n            } else if (this.tech_.supportsFullScreen()) {\n                this.techCall_('exitFullScreen');\n            } else {\n                this.exitFullWindow();\n            }\n        }\n        enterFullWindow() {\n            this.isFullscreen(true);\n            this.isFullWindow = true;\n            this.docOrigOverflow = document.documentElement.style.overflow;\n            Events.on(document, 'keydown', this.boundFullWindowOnEscKey_);\n            document.documentElement.style.overflow = 'hidden';\n            Dom.addClass(document.body, 'vjs-full-window');\n            this.trigger('enterFullWindow');\n        }\n        fullWindowOnEscKey(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                if (this.isFullscreen() === true) {\n                    this.exitFullscreen();\n                } else {\n                    this.exitFullWindow();\n                }\n            }\n        }\n        exitFullWindow() {\n            this.isFullscreen(false);\n            this.isFullWindow = false;\n            Events.off(document, 'keydown', this.boundFullWindowOnEscKey_);\n            document.documentElement.style.overflow = this.docOrigOverflow;\n            Dom.removeClass(document.body, 'vjs-full-window');\n            this.trigger('exitFullWindow');\n        }\n        disablePictureInPicture(value) {\n            if (value === undefined) {\n                return this.techGet_('disablePictureInPicture');\n            }\n            this.techCall_('setDisablePictureInPicture', value);\n            this.options_.disablePictureInPicture = value;\n            this.trigger('disablepictureinpicturechanged');\n        }\n        isInPictureInPicture(isPiP) {\n            if (isPiP !== undefined) {\n                this.isInPictureInPicture_ = !!isPiP;\n                this.togglePictureInPictureClass_();\n                return;\n            }\n            return !!this.isInPictureInPicture_;\n        }\n        requestPictureInPicture() {\n            if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n                return this.techGet_('requestPictureInPicture');\n            }\n        }\n        exitPictureInPicture() {\n            if ('pictureInPictureEnabled' in document) {\n                return document.exitPictureInPicture();\n            }\n        }\n        handleKeyDown(event) {\n            const {userActions} = this.options_;\n            if (!userActions || !userActions.hotkeys) {\n                return;\n            }\n            const excludeElement = el => {\n                const tagName = el.tagName.toLowerCase();\n                if (el.isContentEditable) {\n                    return true;\n                }\n                const allowedInputTypes = [\n                    'button',\n                    'checkbox',\n                    'hidden',\n                    'radio',\n                    'reset',\n                    'submit'\n                ];\n                if (tagName === 'input') {\n                    return allowedInputTypes.indexOf(el.type) === -1;\n                }\n                const excludedTags = ['textarea'];\n                return excludedTags.indexOf(tagName) !== -1;\n            };\n            if (excludeElement(this.el_.ownerDocument.activeElement)) {\n                return;\n            }\n            if (typeof userActions.hotkeys === 'function') {\n                userActions.hotkeys.call(this, event);\n            } else {\n                this.handleHotkeys(event);\n            }\n        }\n        handleHotkeys(event) {\n            const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n            const {fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'), muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'), playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')} = hotkeys;\n            if (fullscreenKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const FSToggle = Component.getComponent('FullscreenToggle');\n                if (document[this.fsApi_.fullscreenEnabled] !== false) {\n                    FSToggle.prototype.handleClick.call(this, event);\n                }\n            } else if (muteKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const MuteToggle = Component.getComponent('MuteToggle');\n                MuteToggle.prototype.handleClick.call(this, event);\n            } else if (playPauseKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const PlayToggle = Component.getComponent('PlayToggle');\n                PlayToggle.prototype.handleClick.call(this, event);\n            }\n        }\n        canPlayType(type) {\n            let can;\n            for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n                const techName = j[i];\n                let tech = Tech.getTech(techName);\n                if (!tech) {\n                    tech = Component.getComponent(techName);\n                }\n                if (!tech) {\n                    log.error(`The \"${ techName }\" tech is undefined. Skipped browser support check for that tech.`);\n                    continue;\n                }\n                if (tech.isSupported()) {\n                    can = tech.canPlayType(type);\n                    if (can) {\n                        return can;\n                    }\n                }\n            }\n            return '';\n        }\n        selectSource(sources) {\n            const techs = this.options_.techOrder.map(techName => {\n                return [\n                    techName,\n                    Tech.getTech(techName)\n                ];\n            }).filter(([techName, tech]) => {\n                if (tech) {\n                    return tech.isSupported();\n                }\n                log.error(`The \"${ techName }\" tech is undefined. Skipped browser support check for that tech.`);\n                return false;\n            });\n            const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n                let found;\n                outerArray.some(outerChoice => {\n                    return innerArray.some(innerChoice => {\n                        found = tester(outerChoice, innerChoice);\n                        if (found) {\n                            return true;\n                        }\n                    });\n                });\n                return found;\n            };\n            let foundSourceAndTech;\n            const flip = fn => (a, b) => fn(b, a);\n            const finder = ([techName, tech], source) => {\n                if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n                    return {\n                        source,\n                        tech: techName\n                    };\n                }\n            };\n            if (this.options_.sourceOrder) {\n                foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n            } else {\n                foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n            }\n            return foundSourceAndTech || false;\n        }\n        src(source) {\n            if (typeof source === 'undefined') {\n                return this.cache_.src || '';\n            }\n            const sources = filterSource(source);\n            if (!sources.length) {\n                this.setTimeout(function () {\n                    this.error({\n                        code: 4,\n                        message: this.localize(this.options_.notSupportedMessage)\n                    });\n                }, 0);\n                return;\n            }\n            this.changingSrc_ = true;\n            this.cache_.sources = sources;\n            this.updateSourceCaches_(sources[0]);\n            middleware.setSource(this, sources[0], (middlewareSource, mws) => {\n                this.middleware_ = mws;\n                this.cache_.sources = sources;\n                this.updateSourceCaches_(middlewareSource);\n                const err = this.src_(middlewareSource);\n                if (err) {\n                    if (sources.length > 1) {\n                        return this.src(sources.slice(1));\n                    }\n                    this.changingSrc_ = false;\n                    this.setTimeout(function () {\n                        this.error({\n                            code: 4,\n                            message: this.localize(this.options_.notSupportedMessage)\n                        });\n                    }, 0);\n                    this.triggerReady();\n                    return;\n                }\n                middleware.setTech(mws, this.tech_);\n            });\n        }\n        src_(source) {\n            const sourceTech = this.selectSource([source]);\n            if (!sourceTech) {\n                return true;\n            }\n            if (!stringCases.titleCaseEquals(sourceTech.tech, this.techName_)) {\n                this.changingSrc_ = true;\n                this.loadTech_(sourceTech.tech, sourceTech.source);\n                this.tech_.ready(() => {\n                    this.changingSrc_ = false;\n                });\n                return false;\n            }\n            this.ready(function () {\n                if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n                    this.techCall_('setSource', source);\n                } else {\n                    this.techCall_('src', source.src);\n                }\n                this.changingSrc_ = false;\n            }, true);\n            return false;\n        }\n        load() {\n            this.techCall_('load');\n        }\n        reset() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (this.paused() || !PromiseClass) {\n                this.doReset_();\n            } else {\n                const playPromise = this.play();\n                promise.silencePromise(playPromise.then(() => this.doReset_()));\n            }\n        }\n        doReset_() {\n            if (this.tech_) {\n                this.tech_.clearTracks('text');\n            }\n            this.resetCache_();\n            this.poster('');\n            this.loadTech_(this.options_.techOrder[0], null);\n            this.techCall_('reset');\n            this.resetControlBarUI_();\n            ///if (evented.isEvented(this)) {\n                this.trigger('playerreset');\n            ///}\n        }\n        resetControlBarUI_() {\n            this.resetProgressBar_();\n            this.resetPlaybackRate_();\n            this.resetVolumeBar_();\n        }\n        resetProgressBar_() {\n            this.currentTime(0);\n            const {durationDisplay, remainingTimeDisplay} = this.controlBar;\n            if (durationDisplay) {\n                durationDisplay.updateContent();\n            }\n            if (remainingTimeDisplay) {\n                remainingTimeDisplay.updateContent();\n            }\n        }\n        resetPlaybackRate_() {\n            this.playbackRate(this.defaultPlaybackRate());\n            this.handleTechRateChange_();\n        }\n        resetVolumeBar_() {\n            this.volume(1);\n            this.trigger('volumechange');\n        }\n        currentSources() {\n            const source = this.currentSource();\n            const sources = [];\n            if (Object.keys(source).length !== 0) {\n                sources.push(source);\n            }\n            return this.cache_.sources || sources;\n        }\n        currentSource() {\n            return this.cache_.source || {};\n        }\n        currentSrc() {\n            return this.currentSource() && this.currentSource().src || '';\n        }\n        currentType() {\n            return this.currentSource() && this.currentSource().type || '';\n        }\n        preload(value) {\n            if (value !== undefined) {\n                this.techCall_('setPreload', value);\n                this.options_.preload = value;\n                return;\n            }\n            return this.techGet_('preload');\n        }\n        autoplay(value) {\n            if (value === undefined) {\n                return this.options_.autoplay || false;\n            }\n            let techAutoplay;\n            if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n                this.options_.autoplay = value;\n                this.manualAutoplay_(value);\n                techAutoplay = false;\n            } else if (!value) {\n                this.options_.autoplay = false;\n            } else {\n                this.options_.autoplay = true;\n            }\n            techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n            if (this.tech_) {\n                this.techCall_('setAutoplay', techAutoplay);\n            }\n        }\n        playsinline(value) {\n            if (value !== undefined) {\n                this.techCall_('setPlaysinline', value);\n                this.options_.playsinline = value;\n                return this;\n            }\n            return this.techGet_('playsinline');\n        }\n        loop(value) {\n            if (value !== undefined) {\n                this.techCall_('setLoop', value);\n                this.options_.loop = value;\n                return;\n            }\n            return this.techGet_('loop');\n        }\n        poster(src) {\n            if (src === undefined) {\n                return this.poster_;\n            }\n            if (!src) {\n                src = '';\n            }\n            if (src === this.poster_) {\n                return;\n            }\n            this.poster_ = src;\n            this.techCall_('setPoster', src);\n            this.isPosterFromTech_ = false;\n            this.trigger('posterchange');\n        }\n        handleTechPosterChange_() {\n            if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n                const newPoster = this.tech_.poster() || '';\n                if (newPoster !== this.poster_) {\n                    this.poster_ = newPoster;\n                    this.isPosterFromTech_ = true;\n                    this.trigger('posterchange');\n                }\n            }\n        }\n        controls(bool) {\n            if (bool === undefined) {\n                return !!this.controls_;\n            }\n            bool = !!bool;\n            if (this.controls_ === bool) {\n                return;\n            }\n            this.controls_ = bool;\n            if (this.usingNativeControls()) {\n                this.techCall_('setControls', bool);\n            }\n            if (this.controls_) {\n                this.removeClass('vjs-controls-disabled');\n                this.addClass('vjs-controls-enabled');\n                this.trigger('controlsenabled');\n                if (!this.usingNativeControls()) {\n                    this.addTechControlsListeners_();\n                }\n            } else {\n                this.removeClass('vjs-controls-enabled');\n                this.addClass('vjs-controls-disabled');\n                this.trigger('controlsdisabled');\n                if (!this.usingNativeControls()) {\n                    this.removeTechControlsListeners_();\n                }\n            }\n        }\n        usingNativeControls(bool) {\n            if (bool === undefined) {\n                return !!this.usingNativeControls_;\n            }\n            bool = !!bool;\n            if (this.usingNativeControls_ === bool) {\n                return;\n            }\n            this.usingNativeControls_ = bool;\n            if (this.usingNativeControls_) {\n                this.addClass('vjs-using-native-controls');\n                this.trigger('usingnativecontrols');\n            } else {\n                this.removeClass('vjs-using-native-controls');\n                this.trigger('usingcustomcontrols');\n            }\n        }\n        error(err) {\n            if (err === undefined) {\n                return this.error_ || null;\n            }\n            if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n                const triggerSuppressedError = function () {\n                    this.error(err);\n                };\n                this.options_.suppressNotSupportedError = false;\n                this.any([\n                    'click',\n                    'touchstart'\n                ], triggerSuppressedError);\n                this.listenToOnce('loadstart', function () {\n                    this.unlistenTo([\n                        'click',\n                        'touchstart'\n                    ], triggerSuppressedError);\n                });\n                return;\n            }\n            if (err === null) {\n                this.error_ = err;\n                this.removeClass('vjs-error');\n                if (this.errorDisplay) {\n                    this.errorDisplay.close();\n                }\n                return;\n            }\n            this.error_ = new MediaError(err);\n            this.addClass('vjs-error');\n            log.error(`(CODE:${ this.error_.code } ${ MediaError.errorTypes[this.error_.code] })`, this.error_.message, this.error_);\n            this.trigger('error');\n            return;\n        }\n        reportUserActivity(event) {\n            this.userActivity_ = true;\n        }\n        userActive(bool) {\n            if (bool === undefined) {\n                return this.userActive_;\n            }\n            bool = !!bool;\n            if (bool === this.userActive_) {\n                return;\n            }\n            this.userActive_ = bool;\n            if (this.userActive_) {\n                this.userActivity_ = true;\n                this.removeClass('vjs-user-inactive');\n                this.addClass('vjs-user-active');\n                this.trigger('useractive');\n                return;\n            }\n            if (this.tech_) {\n                this.tech_.one('mousemove', function (e) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                });\n            }\n            this.userActivity_ = false;\n            this.removeClass('vjs-user-active');\n            this.addClass('vjs-user-inactive');\n            this.trigger('userinactive');\n        }\n        listenForUserActivity_() {\n            let mouseInProgress;\n            let lastMoveX;\n            let lastMoveY;\n            const handleActivity = Fn.bind(this, this.reportUserActivity);\n            const handleMouseMove = function (e) {\n                if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n                    lastMoveX = e.screenX;\n                    lastMoveY = e.screenY;\n                    handleActivity();\n                }\n            };\n            const handleMouseDown = function () {\n                handleActivity();\n                this.clearInterval(mouseInProgress);\n                mouseInProgress = this.setInterval(handleActivity, 250);\n            };\n            const handleMouseUpAndMouseLeave = function (event) {\n                handleActivity();\n                this.clearInterval(mouseInProgress);\n            };\n            this.listenTo('mousedown', handleMouseDown);\n            this.listenTo('mousemove', handleMouseMove);\n            this.listenTo('mouseup', handleMouseUpAndMouseLeave);\n            this.listenTo('mouseleave', handleMouseUpAndMouseLeave);\n            const controlBar = this.getChild('controlBar');\n            if (controlBar && !browser.IS_IOS && !browser.IS_ANDROID) {\n                this.listenTo(controlBar,'mouseenter', function (event) {\n                    this.cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n                    this.options_.inactivityTimeout = 0;\n                });\n                this.listenTo(controlBar,'mouseleave', function (event) {\n                    this.options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n                });\n            }\n            this.listenTo('keydown', handleActivity);\n            this.listenTo('keyup', handleActivity);\n            let inactivityTimeout;\n            this.setInterval(function () {\n                if (!this.userActivity_) {\n                    return;\n                }\n                this.userActivity_ = false;\n                this.userActive(true);\n                this.clearTimeout(inactivityTimeout);\n                const timeout = this.options_.inactivityTimeout;\n                if (timeout <= 0) {\n                    return;\n                }\n                inactivityTimeout = this.setTimeout(function () {\n                    if (!this.userActivity_) {\n                        this.userActive(false);\n                    }\n                }, timeout);\n            }, 250);\n        }\n        playbackRate(rate) {\n            if (rate !== undefined) {\n                this.techCall_('setPlaybackRate', rate);\n                return;\n            }\n            if (this.tech_ && this.tech_.featuresPlaybackRate) {\n                return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n            }\n            return 1;\n        }\n        defaultPlaybackRate(rate) {\n            if (rate !== undefined) {\n                return this.techCall_('setDefaultPlaybackRate', rate);\n            }\n            if (this.tech_ && this.tech_.featuresPlaybackRate) {\n                return this.techGet_('defaultPlaybackRate');\n            }\n            return 1;\n        }\n        isAudio(bool) {\n            if (bool !== undefined) {\n                this.isAudio_ = !!bool;\n                return;\n            }\n            return !!this.isAudio_;\n        }\n        addTextTrack(kind, label, language) {\n            if (this.tech_) {\n                return this.tech_.addTextTrack(kind, label, language);\n            }\n        }\n        addRemoteTextTrack(options, manualCleanup) {\n            if (this.tech_) {\n                return this.tech_.addRemoteTextTrack(options, manualCleanup);\n            }\n        }\n        removeRemoteTextTrack(obj = {}) {\n            let {track} = obj;\n            if (!track) {\n                track = obj;\n            }\n            if (this.tech_) {\n                return this.tech_.removeRemoteTextTrack(track);\n            }\n        }\n        getVideoPlaybackQuality() {\n            return this.techGet_('getVideoPlaybackQuality');\n        }\n        videoWidth() {\n            return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n        }\n        videoHeight() {\n            return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n        }\n        language(code) {\n            if (code === undefined) {\n                return this.language_;\n            }\n            if (this.language_ !== String(code).toLowerCase()) {\n                this.language_ = String(code).toLowerCase();\n                ///if (evented.isEvented(this)) {\n                    this.trigger('languagechange');\n                ///}\n            }\n        }\n        languages() {\n            return mergeOptions(Player.prototype.options_.languages, this.languages_);\n        }\n        toJSON() {\n            const options = mergeOptions(this.options_);\n            const tracks = options.tracks;\n            options.tracks = [];\n            for (let i = 0; i < tracks.length; i++) {\n                let track = tracks[i];\n                track = mergeOptions(track);\n                track.player = undefined;\n                options.tracks[i] = track;\n            }\n            return options;\n        }\n        createModal(content, options) {\n            options = options || {};\n            options.content = content || '';\n            const modal = new ModalDialog(this, options);\n            this.addChild(modal);\n            modal.on('dispose', () => {\n                this.removeChild(modal);\n            });\n            modal.open();\n            return modal;\n        }\n        updateCurrentBreakpoint_() {\n            if (!this.responsive()) {\n                return;\n            }\n            const currentBreakpoint = this.currentBreakpoint();\n            const currentWidth = this.currentWidth();\n            for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n                const candidateBreakpoint = BREAKPOINT_ORDER[i];\n                const maxWidth = this.breakpoints_[candidateBreakpoint];\n                if (currentWidth <= maxWidth) {\n                    if (currentBreakpoint === candidateBreakpoint) {\n                        return;\n                    }\n                    if (currentBreakpoint) {\n                        this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n                    }\n                    this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n                    this.breakpoint_ = candidateBreakpoint;\n                    break;\n                }\n            }\n        }\n        removeCurrentBreakpoint_() {\n            const className = this.currentBreakpointClass();\n            this.breakpoint_ = '';\n            if (className) {\n                this.removeClass(className);\n            }\n        }\n        breakpoints(breakpoints) {\n            if (breakpoints === undefined) {\n                return obj.assign(this.breakpoints_);\n            }\n            this.breakpoint_ = '';\n            this.breakpoints_ = obj.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n            this.updateCurrentBreakpoint_();\n            return obj.assign(this.breakpoints_);\n        }\n        responsive(value) {\n            if (value === undefined) {\n                return this.responsive_;\n            }\n            value = Boolean(value);\n            const current = this.responsive_;\n            if (value === current) {\n                return;\n            }\n            this.responsive_ = value;\n            if (value) {\n                this.listenTo('playerresize', this.updateCurrentBreakpoint_);\n                this.updateCurrentBreakpoint_();\n            } else {\n                this.unlistenTo('playerresize', this.updateCurrentBreakpoint_);\n                this.removeCurrentBreakpoint_();\n            }\n            return value;\n        }\n        currentBreakpoint() {\n            return this.breakpoint_;\n        }\n        currentBreakpointClass() {\n            return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n        }\n        loadMedia(media, ready) {\n            if (!media || typeof media !== 'object') {\n                return;\n            }\n            this.reset();\n            this.cache_.media = mergeOptions(media);\n            const {artwork, poster, src, textTracks} = this.cache_.media;\n            if (!artwork && poster) {\n                this.cache_.media.artwork = [{\n                        src: poster,\n                        type: mimetypes.getMimetype(poster)\n                    }];\n            }\n            if (src) {\n                this.src(src);\n            }\n            if (poster) {\n                this.poster(poster);\n            }\n            if (Array.isArray(textTracks)) {\n                textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n            }\n            this.ready(ready);\n        }\n        getMedia() {\n            if (!this.cache_.media) {\n                const poster = this.poster();\n                const src = this.currentSources();\n                const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n                    kind: tt.kind,\n                    label: tt.label,\n                    language: tt.language,\n                    src: tt.src\n                }));\n                const media = {\n                    src,\n                    textTracks\n                };\n                if (poster) {\n                    media.poster = poster;\n                    media.artwork = [{\n                            src: media.poster,\n                            type: mimetypes.getMimetype(media.poster)\n                        }];\n                }\n                return media;\n            }\n            return mergeOptions(this.cache_.media);\n        }\n        static getTagSettings(tag) {\n            const baseOptions = {\n                sources: [],\n                tracks: []\n            };\n            const tagOptions = Dom.getAttributes(tag);\n            const dataSetup = tagOptions['data-setup'];\n            if (Dom.hasClass(tag, 'vjs-fill')) {\n                tagOptions.fill = true;\n            }\n            if (Dom.hasClass(tag, 'vjs-fluid')) {\n                tagOptions.fluid = true;\n            }\n            if (dataSetup !== null) {\n                const [err, data] = safeParseTuple(dataSetup || '{}');\n                if (err) {\n                    log.error(err);\n                }\n                obj.assign(tagOptions, data);\n            }\n            obj.assign(baseOptions, tagOptions);\n            if (tag.hasChildNodes()) {\n                const children = tag.childNodes;\n                for (let i = 0, j = children.length; i < j; i++) {\n                    const child = children[i];\n                    const childName = child.nodeName.toLowerCase();\n                    if (childName === 'source') {\n                        baseOptions.sources.push(Dom.getAttributes(child));\n                    } else if (childName === 'track') {\n                        baseOptions.tracks.push(Dom.getAttributes(child));\n                    }\n                }\n            }\n            return baseOptions;\n        }\n        flexNotSupported_() {\n            const elem = document.createElement('i');\n            return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || 'msFlexOrder' in elem.style);\n        }\n        debug(enabled) {\n            if (enabled === undefined) {\n                return this.debugEnabled_;\n            }\n            if (enabled) {\n                this.trigger('debugon');\n                this.previousLogLevel_ = this.log.level;\n                this.log.level('debug');\n                this.debugEnabled_ = true;\n            } else {\n                this.trigger('debugoff');\n                this.log.level(this.previousLogLevel_);\n                this.previousLogLevel_ = undefined;\n                this.debugEnabled_ = false;\n            }\n        }\n    }\n    TRACK_TYPES.ALL.names.forEach(function (name) {\n        const props = TRACK_TYPES.ALL[name];\n        Player.prototype[props.getterName] = function () {\n            if (this.tech_) {\n                return this.tech_[props.getterName]();\n            }\n            this[props.privateName] = this[props.privateName] || new props.ListClass();\n            return this[props.privateName];\n        };\n    });\n    Player.prototype.crossorigin = Player.prototype.crossOrigin;\n    Player.players = {};\n    const navigator = window.navigator;\n    Player.prototype.options_ = {\n        techOrder: Tech.defaultTechOrder_,\n        html5: {},\n        inactivityTimeout: 2000,\n        playbackRates: [],\n        liveui: false,\n        children: [\n            'mediaLoader',\n            'posterImage',\n            'textTrackDisplay',\n            'loadingSpinner',\n            'bigPlayButton',\n            'liveTracker',\n            'controlBar',\n            'errorDisplay',\n            'textTrackSettings',\n            'resizeManager'\n        ],\n        language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n        languages: {},\n        notSupportedMessage: 'No compatible source was found for this media.',\n        fullscreen: { options: { navigationUI: 'hide' } },\n        breakpoints: {},\n        responsive: false\n    };\n    [\n        'ended',\n        'seeking',\n        'seekable',\n        'networkState',\n        'readyState'\n    ].forEach(function (fn) {\n        Player.prototype[fn] = function () {\n            return this.techGet_(fn);\n        };\n    });\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n        Player.prototype[`handleTech${ stringCases.toTitleCase(event) }_`] = function () {\n            return this.trigger(event);\n        };\n    });\n    Component.registerComponent('Player', Player);\n    return Player;\n});\ndefine('skylark-videojs/plugin',[\n    ///'./mixins/evented',\n    './mixins/stateful',\n    './utils/events',\n    './utils/fn',\n    './utils/log',\n    \"./event-target\",\n    './player'\n], function ( stateful, Events, Fn, log, EventTarget, Player) {\n    'use strict';\n    const BASE_PLUGIN_NAME = 'plugin';\n    const PLUGIN_CACHE_KEY = 'activePlugins_';\n    const pluginStorage = {};\n    const pluginExists = name => pluginStorage.hasOwnProperty(name);\n    const getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n    const markPluginAsActive = (player, name) => {\n        player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n        player[PLUGIN_CACHE_KEY][name] = true;\n    };\n    const triggerSetupEvent = (player, hash, before) => {\n        const eventName = (before ? 'before' : '') + 'pluginsetup';\n        player.trigger(eventName, hash);\n        player.trigger(eventName + ':' + hash.name, hash);\n    };\n    const createBasicPlugin = function (name, plugin) {\n        const basicPluginWrapper = function () {\n            triggerSetupEvent(this, {\n                name,\n                plugin,\n                instance: null\n            }, true);\n            const instance = plugin.apply(this, arguments);\n            markPluginAsActive(this, name);\n            triggerSetupEvent(this, {\n                name,\n                plugin,\n                instance\n            });\n            return instance;\n        };\n        Object.keys(plugin).forEach(function (prop) {\n            basicPluginWrapper[prop] = plugin[prop];\n        });\n        return basicPluginWrapper;\n    };\n    const createPluginFactory = (name, PluginSubClass) => {\n        PluginSubClass.prototype.name = name;\n        return function (...args) {\n            triggerSetupEvent(this, {\n                name,\n                plugin: PluginSubClass,\n                instance: null\n            }, true);\n            const instance = new PluginSubClass(...[\n                this,\n                ...args\n            ]);\n            this[name] = () => instance;\n            triggerSetupEvent(this, instance.getEventHash());\n            return instance;\n        };\n    };\n    class Plugin  extends EventTarget{\n        constructor(player) {\n            if (this.constructor === Plugin) {\n                throw new Error('Plugin must be sub-classed; not directly instantiated.');\n            }\n            this.player = player;\n            if (!this.log) {\n                this.log = this.player.log.createLogger(this.name);\n            }\n            ///evented(this);\n            ///delete this.trigger;\n            stateful(this, this.constructor.defaultState);\n            markPluginAsActive(player, this.name);\n            this.dispose = Fn.bind(this, this.dispose);\n            player.on('dispose', this.dispose);\n        }\n        version() {\n            return this.constructor.VERSION;\n        }\n        /*\n        getEventHash(hash = {}) {\n            hash.name = this.name;\n            hash.plugin = this.constructor;\n            hash.instance = this;\n            return hash;\n        }\n        trigger(event, hash = {}) {\n            return Events.trigger(this.eventBusEl_, event, this.getEventHash(hash));\n        }\n        */\n        handleStateChanged(e) {\n        }\n        dispose() {\n            const {name, player} = this;\n            this.trigger('dispose');\n            this.unlistenTo();\n            player.off('dispose', this.dispose);\n            player[PLUGIN_CACHE_KEY][name] = false;\n            this.player = this.state = null;\n            player[name] = createPluginFactory(name, pluginStorage[name]);\n        }\n        static isBasic(plugin) {\n            const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n            return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n        }\n        static registerPlugin(name, plugin) {\n            if (typeof name !== 'string') {\n                throw new Error(`Illegal plugin name, \"${ name }\", must be a string, was ${ typeof name }.`);\n            }\n            if (pluginExists(name)) {\n                log.warn(`A plugin named \"${ name }\" already exists. You may want to avoid re-registering plugins!`);\n            } else if (Player.prototype.hasOwnProperty(name)) {\n                throw new Error(`Illegal plugin name, \"${ name }\", cannot share a name with an existing player method!`);\n            }\n            if (typeof plugin !== 'function') {\n                throw new Error(`Illegal plugin for \"${ name }\", must be a function, was ${ typeof plugin }.`);\n            }\n            pluginStorage[name] = plugin;\n            if (name !== BASE_PLUGIN_NAME) {\n                if (Plugin.isBasic(plugin)) {\n                    Player.prototype[name] = createBasicPlugin(name, plugin);\n                } else {\n                    Player.prototype[name] = createPluginFactory(name, plugin);\n                }\n            }\n            return plugin;\n        }\n        static deregisterPlugin(name) {\n            if (name === BASE_PLUGIN_NAME) {\n                throw new Error('Cannot de-register base plugin.');\n            }\n            if (pluginExists(name)) {\n                delete pluginStorage[name];\n                delete Player.prototype[name];\n            }\n        }\n        static getPlugins(names = Object.keys(pluginStorage)) {\n            let result;\n            names.forEach(name => {\n                const plugin = getPlugin(name);\n                if (plugin) {\n                    result = result || {};\n                    result[name] = plugin;\n                }\n            });\n            return result;\n        }\n        static getPluginVersion(name) {\n            const plugin = getPlugin(name);\n            return plugin && plugin.VERSION || '';\n        }\n    }\n    Plugin.getPlugin = getPlugin;\n    Plugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n    Plugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n    Player.prototype.usingPlugin = function (name) {\n        return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n    };\n    Player.prototype.hasPlugin = function (name) {\n        return !!pluginExists(name);\n    };\n    return Plugin;\n});\ndefine('skylark-videojs/video',[\n    \"skylark-langx-globals/window\",\n    'skylark-net-http/xhr',\n    './setup',\n    './utils/stylesheet',\n    './component',\n    './event-target',\n    './utils/events',\n    './player',\n    './plugin',\n    './utils/merge-options',\n    './utils/fn',\n    './tracks/text-track',\n    './tracks/audio-track',\n    './tracks/video-track',\n    './utils/time-ranges',\n    './utils/format-time',\n    './utils/log',\n    './utils/dom',\n    './utils/browser',\n    './utils/url',\n    './utils/obj',\n    './utils/computed-style',\n    ///'./extend',\n    './tech/tech',\n    './tech/middleware',\n    './utils/define-lazy-property'\n], function (\n    window,\n    xhr,\n    setup, \n    stylesheet, \n    Component, \n    EventTarget, \n    Events, \n    Player, \n    Plugin, \n    mergeOptions, \n    Fn, \n    TextTrack, \n    AudioTrack, \n    VideoTrack, \n    timeRanges, \n    formatTime, \n    log, \n    Dom, \n    browser, \n    Url, \n    obj, \n    computedStyle, \n    ///extend, \n    Tech, \n    middleware, \n    defineLazyProperty\n) {\n    'use strict';\n\n    var middlewareUse = middleware.use,\n        TERMINATOR = middleware.TERMINATOR;\n\n\n    const normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n    function videojs(id, options, ready) {\n        let player = videojs.getPlayer(id);\n        if (player) {\n            if (options) {\n                log.warn(`Player \"${ id }\" is already initialised. Options will not be applied.`);\n            }\n            if (ready) {\n                player.ready(ready);\n            }\n            return player;\n        }\n        const el = typeof id === 'string' ? Dom.$('#' + normalizeId(id)) : id;\n        if (!Dom.isEl(el)) {\n            throw new TypeError('The element or ID supplied is not valid. (videojs)');\n        }\n        if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n            log.warn('The element supplied is not included in the DOM');\n        }\n        options = options || {};\n        videojs.hooks('beforesetup').forEach(hookFunction => {\n            const opts = hookFunction(el, mergeOptions(options));\n            if (!obj.isObject(opts) || Array.isArray(opts)) {\n                log.error('please return an object in beforesetup hooks');\n                return;\n            }\n            options = mergeOptions(options, opts);\n        });\n        const PlayerComponent = Component.getComponent('Player');\n        player = new PlayerComponent(el, options, ready);\n        videojs.hooks('setup').forEach(hookFunction => hookFunction(player));\n        return player;\n    }\n    videojs.hooks_ = {};\n    videojs.hooks = function (type, fn) {\n        videojs.hooks_[type] = videojs.hooks_[type] || [];\n        if (fn) {\n            videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n        }\n        return videojs.hooks_[type];\n    };\n    videojs.hook = function (type, fn) {\n        videojs.hooks(type, fn);\n    };\n    videojs.hookOnce = function (type, fn) {\n        videojs.hooks(type, [].concat(fn).map(original => {\n            const wrapper = (...args) => {\n                videojs.removeHook(type, wrapper);\n                return original(...args);\n            };\n            return wrapper;\n        }));\n    };\n    videojs.removeHook = function (type, fn) {\n        const index = videojs.hooks(type).indexOf(fn);\n        if (index <= -1) {\n            return false;\n        }\n        videojs.hooks_[type] = videojs.hooks_[type].slice();\n        videojs.hooks_[type].splice(index, 1);\n        return true;\n    };\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && Dom.isReal()) {\n        let style = Dom.$('.vjs-styles-defaults');\n        if (!style) {\n            style = stylesheet.createStyleElement('vjs-styles-defaults');\n            const head = Dom.$('head');\n            if (head) {\n                head.insertBefore(style, head.firstChild);\n            }\n            stylesheet.setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid {\n        padding-top: 56.25%\n      }\n    `);\n        }\n    }\n    setup.autoSetupTimeout(1, videojs);\n    videojs.VERSION = \"7.11.5\";\n    videojs.options = Player.prototype.options_;\n    videojs.getPlayers = () => Player.players;\n    videojs.getPlayer = id => {\n        const players = Player.players;\n        let tag;\n        if (typeof id === 'string') {\n            const nId = normalizeId(id);\n            const player = players[nId];\n            if (player) {\n                return player;\n            }\n            tag = Dom.$('#' + nId);\n        } else {\n            tag = id;\n        }\n        if (Dom.isEl(tag)) {\n            const {player, playerId} = tag;\n            if (player || players[playerId]) {\n                return player || players[playerId];\n            }\n        }\n    };\n    videojs.getAllPlayers = () => Object.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\n    videojs.players = Player.players;\n    videojs.getComponent = Component.getComponent;\n    videojs.registerComponent = (name, comp) => {\n        if (Tech.isTech(comp)) {\n            log.warn(`The ${ name } tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n        }\n        Component.registerComponent.call(Component, name, comp);\n    };\n    videojs.getTech = Tech.getTech;\n    videojs.registerTech = Tech.registerTech;\n    videojs.use = middlewareUse;\n    Object.defineProperty(videojs, 'middleware', {\n        value: {},\n        writeable: false,\n        enumerable: true\n    });\n    Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n        value: TERMINATOR,\n        writeable: false,\n        enumerable: true\n    });\n    videojs.browser = browser;\n    videojs.TOUCH_ENABLED = browser.TOUCH_ENABLED;\n    ///videojs.extend = extend;\n    videojs.mergeOptions = mergeOptions;\n    videojs.bind = Fn.bind;\n    videojs.registerPlugin = Plugin.registerPlugin;\n    videojs.deregisterPlugin = Plugin.deregisterPlugin;\n    videojs.plugin = (name, plugin) => {\n        log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n        return Plugin.registerPlugin(name, plugin);\n    };\n    videojs.getPlugins = Plugin.getPlugins;\n    videojs.getPlugin = Plugin.getPlugin;\n    videojs.getPluginVersion = Plugin.getPluginVersion;\n    videojs.addLanguage = function (code, data) {\n        code = ('' + code).toLowerCase();\n        videojs.options.languages = mergeOptions(videojs.options.languages, { [code]: data });\n        return videojs.options.languages[code];\n    };\n    videojs.log = log;\n    videojs.createLogger = log.createLogger;\n    videojs.createTimeRange = videojs.undefined = timeRanges.createTimeRanges;\n    videojs.formatTime = formatTime;\n    videojs.setFormatTime = formatTime.setFormatTime;\n    videojs.resetFormatTime = formatTime.resetFormatTime;\n    videojs.parseUrl = Url.parseUrl;\n    videojs.isCrossOrigin = Url.isCrossOrigin;\n    videojs.EventTarget = EventTarget;\n    videojs.on = Events.on;\n    videojs.one = Events.one;\n    videojs.off = Events.off;\n    videojs.trigger = Events.trigger;\n    videojs.xhr = xhr;\n    videojs.TextTrack = TextTrack;\n    videojs.AudioTrack = AudioTrack;\n    videojs.VideoTrack = VideoTrack;\n    [\n        'isEl',\n        'isTextNode',\n        'createEl',\n        'hasClass',\n        'addClass',\n        'removeClass',\n        'toggleClass',\n        'setAttributes',\n        'getAttributes',\n        'emptyEl',\n        'appendContent',\n        'insertContent'\n    ].forEach(k => {\n        videojs[k] = function () {\n            log.warn(`videojs.${ k }() is deprecated; use videojs.dom.${ k }() instead`);\n            return Dom[k].apply(null, arguments);\n        };\n    });\n    videojs.computedStyle = computedStyle;\n    videojs.dom = Dom;\n    videojs.url = Url;\n    videojs.defineLazyProperty = defineLazyProperty;\n    return videojs;\n});\ndefine('skylark-videojs/main',[\n\t'skylark-langx/skylark',\n    './video'\n//    '@videojs/http-streaming'\n], function (skylark,videojs) {\n    'use strict';\n\n    return skylark.attach(\"intg.videojs\",videojs);\n});\ndefine('skylark-videojs', ['skylark-videojs/main'], function (main) { return main; });\n\n"]}