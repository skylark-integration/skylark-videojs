{"version":3,"sources":["skylark-videojs.js"],"names":["define","skylark","types","objects","arrays","funcs","Deferred","Evented","http","each","mixin","noop","isArray","isFunction","isPlainObject","type","getAbsoluteUrl","url","a","document","createElement","href","Xhr","jsonpID","key","name","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","async","beforeSend","success","error","complete","context","global","accepts","script","json","xml","html","text","crossDomain","timeout","processData","cache","traditional","xhrFields","withCredentials","mimeToDataType","mime","split","test","appendQuery","query","replace","serializeData","options","data","param","toUpperCase","undefined","serialize","params","obj","scope","t","array","hash","value","add","this","push","encodeURIComponent","join","inherit","klassName","_request","args","_","self","xhr","XMLHttpRequest","call","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","deferred","contentType","indexOf","overrideMimeType","responseType","finish","onloadend","onabort","onprogress","ontimeout","result","status","startsWith","getResponseHeader","eval","responseText","responseXML","JSON","parse","response","reponse","e","reject","resolve","Error","statusText","evt","notify","open","toLowerCase","setRequestHeader","send","promise","abort","request","get","post","patch","put","del","init","forEach","defaultOptions","FullscreenApi","prefixed","apiMap","specApi","browserApi","i","length","history","createLogger","logByType","level","log","lvl","levels","lvlRegExp","RegExp","unshift","concat","splice","window","console","fn","info","Array","LogByTypeFactory","subname","all","off","debug","warn","DEFAULT","hasOwnProperty","filter","fname","historyItem","clear","disable","enable","langx","object","reduce","assign","isObject","isPlain","styler","css","isReal","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPOD","IOS_VERSION","match","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","version","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","Boolean","maxTouchPoints","DocumentTouch","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI","domx","fs","computedStyle","browser","isNonBlankString","str","trim","isEl","nodeType","createQuerier","method","selector","querySelector","ctx","findPosition","el","offsetParent","left","top","width","height","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","normalizeContent","content","map","createTextNode","noder","isElement","isInFrame","createEl","tagName","properties","attributes","append","textContent","prependTo","child","parent","prepend","hasClass","addClass","removeClass","toggleClass","toogleClass","setAttributes","attr","getAttributes","tag","knownBooleans","attrs","attrName","attrVal","getAttribute","setAttribute","removeAttribute","removeAttr","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","geom","pageRect","getPointerPosition","event","translated","x","y","item","nodeName","transform","values","slice","Number","position","boxTarget","target","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","Math","max","min","isTextNode","emptyEl","empty","appendContent","insertContent","isSingleLeftClick","button","buttons","$","finder","find","$$","findAll","Dom","videojs","_windowLoaded","autoSetup","vids","prototype","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","hasLoaded","createStyleElement","className","style","setTextContent","styleSheet","cssText","Obj","StatefulMixin","state","[object Object]","stateUpdates","changes","from","to","trigger","defaultState","handleStateChanged","on","_initialGuid","_guid","newGUID","resetGuidInTestsOnly","Guid","FakeWeakMap","WeakMap","vdata","floor","performance","now","Date","access","GUID","UPDATE_REFRESH_INTERVAL","bind","uid","guid","bound","throttle","debounce","toTitleCase","string","w","titleCaseEquals","str1","str2","mergeOptions","sources","source","Map","map_","has","callback","thisArg","Set","set_","eventer","Widget","stateful","DomData","Fn","stringCases","NativeEvents","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","submit","reset","fullscreenchange","fullscreenerror","blur","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","progress","textInput","tap","touchstart","touchmove","touchend","load","resize","select","scroll","unload","wheel","Component","events","isString","one","el_","isNativeEvent","super","listenTo","unlistenTo","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","name_","evented","handleLanguagechange","constructor","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","bubbles","dispose","removeChild","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","index","ret","contentEl_","names","acc","n","currentChild","getChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","contentEl","insertBefore","childFound","compEl","children","parentOptions","handleAdd","opts","playerOptions","newChild","addChild","workingChildren","Tech","Object","keys","some","wchild","c","isTech","sync","isReady_","readyQueue","classToCheck","classToAdd","classToRemove","classToToggle","predicate","attribute","num","skipListeners","dimension","widthOrHeight","val","pxIndex","parseInt","computedWidthOrHeight","isNaN","rule","currentDimension","stopPropagation","handleKeyDown","touchStart","firstTouch","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","preventDefault","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","delete","clearTimeout","interval","intervalId","supportsRaf_","requestAnimationFrame","set","cancelAnimationFrame","listenToOnce","idName","cancelName","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","every","registerComponent","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","old","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","documentElement","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","any","Emitter","Events","EventTarget","EVENT_MAP","dispatchEvent","queueTrigger","oldTimeout","size","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","start","end","createTimeRanges","timeRages","bufferedPercent","buffered","duration","bufferedDuration","createTimeRange","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","reviver","err","isPromise","then","silencePromise","trackToJson_","track","prop","cues","cue","startTime","endTime","textTracksToJson","tech","trackEls","trackObjs","trackEl","src","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","searchInput","hasKeyCode","search","String","foundNamedKey","codes","aliases","charCodeAt","isEventKey","nameOrCode","exports","backspace","tab","enter","shift","ctrl","alt","pause/break","caps lock","esc","space","page up","page down","home","up","right","down","insert","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","option","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","cmd","fromCharCode","title","alias","keycode","MODAL_CLASS_NAME","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","appendChild","buildCSSClass","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","localize","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","controls","show","conditionalFocus_","hide","conditionalBlur_","temporary","closeable_","close","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","closeButton","content_","activeEl","activeElement","playerEl","contains","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","tracks","tracks_","defineProperty","addTrack","labelchange_","rtrack","l","allowedEvents_","addtrack","removetrack","labelchange","disableOthers","list","enabled","changing_","enabledChange_","removeTrack","selected","selectedChange_","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","trackElements","trackElements_","addTrackElement_","trackElement","trackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","disabled","hidden","showing","trackProps","newLabel","parseUrl","props","addToBody","host","protocol","div","innerHTML","firstChild","details","location","getAbsoluteURL","getFileExtension","path","splitPathRe","pathParts","isCrossOrigin","winLoc","urlInfo","_Xhr","parseHeaders","row","initParams","uri","createXHR","_createXHR","called","errorFunc","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","useXDR","firefoxBugTakenEffect","getXml","isJson","getBody","rawRequest","getAllResponseHeaders","cors","XDomainRequest","stringify","onreadystatechange","onload","onerror","username","isEmpty","iterator","forEachArray","catch","vtt","TrackEnums","Track","XHR","merge","parseCues","srcContent","parser","WebVTT","Parser","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","tech_","responseBody","loaded_","TextTrack","settings","srclang","mode","default_","default","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","isDisposed","defineProperties","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","cuechange","newEnabled","newSelected","NONE","LOADED","HTMLTrackElement","LOADING","ERROR","AudioTrackList","VideoTrackList","TextTrackList","HtmlTrackElementList","AudioTrack","VideoTrack","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","buffer","TRACK_TYPES","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","emitTapEvents","triggerSourceset","listenToDurationChange","manualProgress","trackProgress","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","currentTimeInterval","manuallyTriggered","clearTracks","manualProgressOff","manualTimeUpdatesOff","removeRemoteTextTrack","error_","trackListChanges","addWebVttScript_","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","createTrackHelper","manualCleanup","htmlTrackElement","createRemoteTextTrack","remoteTextTrackEls","getTrackElementByTrack_","removeTrackElement_","PromiseClass","Promise","srcObj","canPlayType","techs_","canPlaySource","defaultTechOrder_","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","handlers","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","apply","arguments","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","cleanupAutoTextTracks","registerTech","middlewares","middlewareInstances","TERMINATOR","middlewareIterator","mw","setSourceHelper","middleware","next","lastRun","mwFactory","mwrest","mws","mwf","mwi","getOrCreateFactory","_src","use","getMiddleware","setTech","reduceRight","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","muted","played","seekable","volume","allowedSetters","setCurrentTime","setMuted","setVolume","allowedMediators","clearCacheForPlayer","Url","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","s","mimetypes","filterSource","newsrc","srcobj","fixSource","MediaLoader","j","techOrder","techName","getTech","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleMouseOver","handleMouseOut","clickHandler","PosterImage","update","poster","setSrc","backgroundImage","sourceIsEncrypted","usingPlugin","eme","sessions","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","modes","trackList","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","processCues","allowMultipleShowingTracks","clearDisplay","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","cueEl","updateDisplayState","dom","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","m","h","gm","gh","Infinity","implementation","formatTime","setFormatTime","customImplementation","resetFormatTime","TimeDisplay","updateContent","updateTextNode_","labelText_","textNode_","time","formattedTime_","requestNamedAnimationFrame","oldNode","replaceChild","CurrentTimeDisplay","ended","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","number","clamp","Slider","bar","barName","vertical","playerEvent","ownerDocument","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","getProgress","progress_","sizeKey","toFixed","getPercent","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","wrapper","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","round","write","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","updateTime","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","SeekBar","setEventHandlers_","update_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","getCurrentTime_","liveCurrentTime","currentTime_","seekableStart","videoWasPlaying","newTime","distance","calculateDistance","mouseTimeDisplay","handleAction","gotoFraction","thisunlistenTo","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","playProgressBar","seekBarEl","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","pictureInPictureEnabled","disablePictureInPicture","isInPictureInPicture","exitPictureInPicture","requestPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","checkVolumeSupport","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","volumePanelState_","muteToggle","handleKeyPress","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","removeEventListenerForItem","childComponent","addEventListenerForItem","contentElType","element","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","haveTitle","MenuButton","buttonClass","menu","handleMenuKeyUp","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","addItem","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","lockShowing","unlockShowing","TrackButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","allHidden","TextTrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","ControlBar","ErrorDisplay","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","legendId","selectLabelledbyIds","o","optionId","createElSelect_","createElFgColor_","createElBgColor_","createElWinColor_","defaultsDescription","createElColors_","createElFont_","createElControls_","accum","selectedIndex","setSelectedOption","localStorage","getItem","setValues","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","cancel","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","abs","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","trackLive_","handleFirstTimeupdate","timeDiff","skipNextSeeked_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","innerText","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","enumerable","configurable","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","getValue","setter","writable","setupSourceset","defineLazyProperty","canplay","canplaythrough","disablepictureinpicturechanged","durationchange","emptied","enterpictureinpicture","leavepictureinpicture","loadeddata","loadstart","loadedmetadata","playing","posterchange","ratechange","seeking","seeked","sourceset","stalled","suspend","textdata","texttrackchange","timeupdate","volumechange","waiting","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","nodesLength","removeNodes","node","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","triggerReady","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","override","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","overrideNative_","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","listener","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","class","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","webkitEnterFullScreen","HAVE_METADATA","webkitDisplayingFullscreen","webkitExitFullScreen","resetMediaElement","addTextTrack","getVideoPlaybackQuality","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","patchCanPlayType","unpatchCanPlayType","r","stylesheet","safeParseTuple","textTrackConverter","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","languagesToLower","getOwnPropertyNames","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","crossorigin","links","linkEl","techGet_","techCall_","privDimension","parsedVal","ratio","aspectRatio_","width_","height_","techEl","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","techOptions","playsinline","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","manualAutoplay_","previouslyMuted","restoreMuted","mutedPromise","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","updateSourceCaches_","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","starttime","inAllowedEls","userActions","doubleClick","userWasActive","cancelable","targetPlayer","isFs","matches","fullscreen","msMatchesSelector","initTime","inactivityTimeout","defaultPlaybackRate","media","play_","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","applyInitTime_","percentAsDecimal","defaultMuted","isFS","oldValue","toggleFullscreenClass_","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","fsOptions","supportsFullScreen","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","togglePictureInPictureClass_","hotkeys","isContentEditable","excludeElement","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","sourceOrder","b","flip","middlewareSource","src_","notSupportedMessage","sourceTech","selectSource","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","durationDisplay","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","modal","currentBreakpoint","currentWidth","candidateBreakpoint","maxWidth","breakpoints_","breakpoint_","currentBreakpointClass","updateCurrentBreakpoint_","responsive_","current","removeCurrentBreakpoint_","artwork","tt","currentSources","baseOptions","tagOptions","dataSetup","childName","elem","previousLogLevel_","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","instance","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","p","isBasic","registerPlugin","hasPlugin","setup","timeRanges","middlewareUse","normalizeId","getPlayer","TypeError","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","getAllPlayers","comp","writeable","deregisterPlugin","getPlugins","getPluginVersion","addLanguage","attach"],"mappings":"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","file":"../skylark-videojs.js","sourcesContent":["define('skylark-net-http/xhr',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-async/Deferred\",\r\n  \"skylark-langx-emitter/Evented\",\r\n  \"./http\"\r\n],function(skylark,types,objects,arrays,funcs,Deferred,Evented,http){\r\n\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: false,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            traditional : false,\r\n            \r\n            xhrFields : {\r\n                withCredentials : false\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                if (type(options.data) != \"string\") {\r\n                    options.data = param(options.data, options.traditional);\r\n                }\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n        \r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) {\r\n                  value = value();\r\n                }\r\n                if (value == null) {\r\n                  value = \"\";\r\n                }\r\n                this.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n            };\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                if (options.beforeSend) {\r\n                    options.beforeSend.call(this, xhr, options);\r\n                }                \r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = options.contentType || (isFormData ? false : 'application/x-www-form-urlencoded');\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                if (dataType == \"blob\" || dataType == \"arraybuffer\") {\r\n                    xhr.responseType = dataType;\r\n                }\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        //result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(xhr.responseText);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(xhr.responseText) ? null : JSON.parse(xhr.responseText);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = xhr.response; // new Blob([xhr.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            } else if (dataType == \"text\") {\r\n                                result = xhr.responseText;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n                \r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = value;\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    //xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest'); // del for s02\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn http.Xhr = Xhr;\t\r\n});\ndefine('skylark-videojs/fullscreen-api',[], function () {\n    'use strict';\n    const FullscreenApi = { prefixed: true };\n    const apiMap = [\n        [\n            'requestFullscreen',\n            'exitFullscreen',\n            'fullscreenElement',\n            'fullscreenEnabled',\n            'fullscreenchange',\n            'fullscreenerror',\n            'fullscreen'\n        ],\n        [\n            'webkitRequestFullscreen',\n            'webkitExitFullscreen',\n            'webkitFullscreenElement',\n            'webkitFullscreenEnabled',\n            'webkitfullscreenchange',\n            'webkitfullscreenerror',\n            '-webkit-full-screen'\n        ],\n        [\n            'mozRequestFullScreen',\n            'mozCancelFullScreen',\n            'mozFullScreenElement',\n            'mozFullScreenEnabled',\n            'mozfullscreenchange',\n            'mozfullscreenerror',\n            '-moz-full-screen'\n        ],\n        [\n            'msRequestFullscreen',\n            'msExitFullscreen',\n            'msFullscreenElement',\n            'msFullscreenEnabled',\n            'MSFullscreenChange',\n            'MSFullscreenError',\n            '-ms-fullscreen'\n        ]\n    ];\n    const specApi = apiMap[0];\n    let browserApi;\n    for (let i = 0; i < apiMap.length; i++) {\n        if (apiMap[i][1] in document) {\n            browserApi = apiMap[i];\n            break;\n        }\n    }\n    if (browserApi) {\n        for (let i = 0; i < browserApi.length; i++) {\n            FullscreenApi[specApi[i]] = browserApi[i];\n        }\n        FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n    }\n    return FullscreenApi;\n});\ndefine('skylark-videojs/utils/create-logger',[], function () {\n    'use strict';\n    let history = [];\n    const LogByTypeFactory = (name, log) => (type, level, args) => {\n        const lvl = log.levels[level];\n        const lvlRegExp = new RegExp(`^(${ lvl })$`);\n        if (type !== 'log') {\n            args.unshift(type.toUpperCase() + ':');\n        }\n        args.unshift(name + ':');\n        if (history) {\n            history.push([].concat(args));\n            const splice = history.length - 1000;\n            history.splice(0, splice > 0 ? splice : 0);\n        }\n        if (!window.console) {\n            return;\n        }\n        let fn = window.console[type];\n        if (!fn && type === 'debug') {\n            fn = window.console.info || window.console.log;\n        }\n        if (!fn || !lvl || !lvlRegExp.test(type)) {\n            return;\n        }\n        fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n    };\n    return function createLogger(name) {\n        let level = 'info';\n        let logByType;\n        const log = function (...args) {\n            logByType('log', level, args);\n        };\n        logByType = LogByTypeFactory(name, log);\n        log.createLogger = subname => createLogger(name + ': ' + subname);\n        log.levels = {\n            all: 'debug|log|warn|error',\n            off: '',\n            debug: 'debug|log|warn|error',\n            info: 'log|warn|error',\n            warn: 'warn|error',\n            error: 'error',\n            DEFAULT: level\n        };\n        log.level = lvl => {\n            if (typeof lvl === 'string') {\n                if (!log.levels.hasOwnProperty(lvl)) {\n                    throw new Error(`\"${ lvl }\" in not a valid log level`);\n                }\n                level = lvl;\n            }\n            return level;\n        };\n        log.history = () => history ? [].concat(history) : [];\n        log.history.filter = fname => {\n            return (history || []).filter(historyItem => {\n                return new RegExp(`.*${ fname }.*`).test(historyItem[0]);\n            });\n        };\n        log.history.clear = () => {\n            if (history) {\n                history.length = 0;\n            }\n        };\n        log.history.disable = () => {\n            if (history !== null) {\n                history.length = 0;\n                history = null;\n            }\n        };\n        log.history.enable = () => {\n            if (history === null) {\n                history = [];\n            }\n        };\n        log.error = (...args) => logByType('error', level, args);\n        log.warn = (...args) => logByType('warn', level, args);\n        log.debug = (...args) => logByType('debug', level, args);\n        return log;\n    };\n});\ndefine('skylark-videojs/utils/log',['./create-logger'], function (createLogger) {\n    'use strict';\n    const log = createLogger('VIDEOJS');\n    log.createLogger = createLogger;\n    return log;\n});\ndefine('skylark-videojs/utils/obj',[\n    \"skylark-langx\"\n],function (langx) {\n    'use strict';\n\n    /*\n    const toString = Object.prototype.toString;\n    const keys = function (object) {\n        return isObject(object) ? Object.keys(object) : [];\n    };\n    function each(object, fn) {\n        keys(object).forEach(key => fn(object[key], key));\n    }\n    function reduce(object, fn, initial = 0) {\n        return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n    }\n    function assign(target, ...sources) {\n        if (Object.assign) {\n            return Object.assign(target, ...sources);\n        }\n        sources.forEach(source => {\n            if (!source) {\n                return;\n            }\n            each(source, (value, key) => {\n                target[key] = value;\n            });\n        });\n        return target;\n    }\n    function isObject(value) {\n        return !!value && typeof value === 'object';\n    }\n    function isPlain(value) {\n        return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n    }\n\n    */\n    return {\n        each : function(object,fn) {\n            return langx.each(object,fn,true/*isForEach*/);\n        },\n        reduce: langx.reduce,\n        assign: langx.mixin,\n        isObject: langx.isObject,\n        isPlain: langx.isPlainObject\n    };\n});\ndefine('skylark-videojs/utils/computed-style',[\n    'skylark-langx-globals/window',\n    'skylark-domx-styler'\n], function (window,styler) {\n    'use strict';\n    function computedStyle(el, prop) {\n        if (!el || !prop) {\n            return '';\n        }\n        if (typeof window.getComputedStyle === 'function') {\n            const computedStyleValue = window.getComputedStyle(el);\n            return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n        }\n        return '';\n    }\n    ///return computedStyle;\n    return styler.css;\n\n});\ndefine('skylark-videojs/utils/browser',[\n    \"skylark-langx-globals/window\",\n    \"skylark-langx-globals/document\"\n], function (window,document) {\n    'use strict';\n\n    function isReal() {\n        return document === window.document;\n    }\n\n    const USER_AGENT = window.navigator && window.navigator.userAgent || '';\n    const webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\n    const appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n    const IS_IPOD = /iPod/i.test(USER_AGENT);\n    const IOS_VERSION = function () {\n        const match = USER_AGENT.match(/OS (\\d+)_/i);\n        if (match && match[1]) {\n            return match[1];\n        }\n        return null;\n    }();\n    const IS_ANDROID = /Android/i.test(USER_AGENT);\n    const ANDROID_VERSION = function () {\n        const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n        if (!match) {\n            return null;\n        }\n        const major = match[1] && parseFloat(match[1]);\n        const minor = match[2] && parseFloat(match[2]);\n        if (major && minor) {\n            return parseFloat(match[1] + '.' + match[2]);\n        } else if (major) {\n            return major;\n        }\n        return null;\n    }();\n    const IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n    const IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n    const IS_EDGE = /Edg/i.test(USER_AGENT);\n    const IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n    const CHROME_VERSION = function () {\n        const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n        if (match && match[2]) {\n            return parseFloat(match[2]);\n        }\n        return null;\n    }();\n    const IE_VERSION = function () {\n        const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n        let version = result && parseFloat(result[1]);\n        if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n            version = 11;\n        }\n        return version;\n    }();\n    const IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n    const IS_WINDOWS = /Windows/i.test(USER_AGENT);\n    const TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch));\n    const IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n    const IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n    const IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n    const IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n    return {\n        IS_IPOD: IS_IPOD,\n        IOS_VERSION: IOS_VERSION,\n        IS_ANDROID: IS_ANDROID,\n        ANDROID_VERSION: ANDROID_VERSION,\n        IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n        IS_FIREFOX: IS_FIREFOX,\n        IS_EDGE: IS_EDGE,\n        IS_CHROME: IS_CHROME,\n        CHROME_VERSION: CHROME_VERSION,\n        IE_VERSION: IE_VERSION,\n        IS_SAFARI: IS_SAFARI,\n        IS_WINDOWS: IS_WINDOWS,\n        TOUCH_ENABLED: TOUCH_ENABLED,\n        IS_IPAD: IS_IPAD,\n        IS_IPHONE: IS_IPHONE,\n        IS_IOS: IS_IOS,\n        IS_ANY_SAFARI: IS_ANY_SAFARI,\n\n        isReal\n    };\n});\ndefine('skylark-videojs/utils/dom',[\n    \"skylark-langx-globals/window\",\n    \"skylark-langx-globals/document\",   \n    \"skylark-domx\",\n    '../fullscreen-api',\n    './log',\n    './obj',\n    './computed-style',\n    './browser'\n], function (window,document,domx,fs, log, obj, computedStyle, browser) {\n    'use strict';\n    function isNonBlankString(str) {\n        return typeof str === 'string' && Boolean(str.trim());\n    }\n    function throwIfWhitespace(str) {\n        if (str.indexOf(' ') >= 0) {\n            throw new Error('class has illegal whitespace characters');\n        }\n    }\n    function classRegExp(className) {\n        return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n    }\n\n    function isEl(value) {\n        return obj.isObject(value) && value.nodeType === 1;\n    }\n    function isInFrame() {\n        try {\n            return window.parent !== window.self;\n        } catch (x) {\n            return true;\n        }\n    }\n    function createQuerier(method) {\n        return function (selector, context) {\n            if (!isNonBlankString(selector)) {\n                return document[method](null);\n            }\n            if (isNonBlankString(context)) {\n                context = document.querySelector(context);\n            }\n            const ctx = isEl(context) ? context : document;\n            return ctx[method] && ctx[method](selector);\n        };\n    }\n    function createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n        const el = document.createElement(tagName);\n        Object.getOwnPropertyNames(properties).forEach(function (propName) {\n            const val = properties[propName];\n            if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n                log.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + `createEl(type, properties, attributes). Attempting to set ${ propName } to ${ val }.`);\n                el.setAttribute(propName, val);\n            } else if (propName === 'textContent') {\n                textContent(el, val);\n            } else if (el[propName] !== val || propName === 'tabIndex') {\n                el[propName] = val;\n            }\n        });\n        Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n            el.setAttribute(attrName, attributes[attrName]);\n        });\n        if (content) {\n            appendContent(el, content);\n        }\n        return el;\n    }\n    function textContent(el, text) {\n        if (typeof el.textContent === 'undefined') {\n            el.innerText = text;\n        } else {\n            el.textContent = text;\n        }\n        return el;\n    }\n    function prependTo(child, parent) {\n        if (parent.firstChild) {\n            parent.insertBefore(child, parent.firstChild);\n        } else {\n            parent.appendChild(child);\n        }\n    }\n    function hasClass(element, classToCheck) {\n        throwIfWhitespace(classToCheck);\n        if (element.classList) {\n            return element.classList.contains(classToCheck);\n        }\n        return classRegExp(classToCheck).test(element.className);\n    }\n    function addClass(element, classToAdd) {\n        if (element.classList) {\n            element.classList.add(classToAdd);\n        } else if (!hasClass(element, classToAdd)) {\n            element.className = (element.className + ' ' + classToAdd).trim();\n        }\n        return element;\n    }\n    function removeClass(element, classToRemove) {\n        if (element.classList) {\n            element.classList.remove(classToRemove);\n        } else {\n            throwIfWhitespace(classToRemove);\n            element.className = element.className.split(/\\s+/).filter(function (c) {\n                return c !== classToRemove;\n            }).join(' ');\n        }\n        return element;\n    }\n    function toggleClass(element, classToToggle, predicate) {\n        const has = hasClass(element, classToToggle);\n        if (typeof predicate === 'function') {\n            predicate = predicate(element, classToToggle);\n        }\n        if (typeof predicate !== 'boolean') {\n            predicate = !has;\n        }\n        if (predicate === has) {\n            return;\n        }\n        if (predicate) {\n            addClass(element, classToToggle);\n        } else {\n            removeClass(element, classToToggle);\n        }\n        return element;\n    }\n    function setAttributes(el, attributes) {\n        Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n            const attrValue = attributes[attrName];\n            if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n                el.removeAttribute(attrName);\n            } else {\n                el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n            }\n        });\n    }\n    function getAttributes(tag) {\n        const obj = {};\n        const knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n        if (tag && tag.attributes && tag.attributes.length > 0) {\n            const attrs = tag.attributes;\n            for (let i = attrs.length - 1; i >= 0; i--) {\n                const attrName = attrs[i].name;\n                let attrVal = attrs[i].value;\n                if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n                    attrVal = attrVal !== null ? true : false;\n                }\n                obj[attrName] = attrVal;\n            }\n        }\n        return obj;\n    }\n    function getAttribute(el, attribute) {\n        return el.getAttribute(attribute);\n    }\n    function setAttribute(el, attribute, value) {\n        el.setAttribute(attribute, value);\n    }\n    function removeAttribute(el, attribute) {\n        el.removeAttribute(attribute);\n    }\n    function blockTextSelection() {\n        document.body.focus();\n        document.onselectstart = function () {\n            return false;\n        };\n    }\n    function unblockTextSelection() {\n        document.onselectstart = function () {\n            return true;\n        };\n    }\n    function getBoundingClientRect(el) {\n        if (el && el.getBoundingClientRect && el.parentNode) {\n            const rect = el.getBoundingClientRect();\n            const result = {};\n            [\n                'bottom',\n                'height',\n                'left',\n                'right',\n                'top',\n                'width'\n            ].forEach(k => {\n                if (rect[k] !== undefined) {\n                    result[k] = rect[k];\n                }\n            });\n            if (!result.height) {\n                result.height = parseFloat(computedStyle(el, 'height'));\n            }\n            if (!result.width) {\n                result.width = parseFloat(computedStyle(el, 'width'));\n            }\n            return result;\n        }\n    }\n    function findPosition(el) {\n        if (!el || el && !el.offsetParent) {\n            return {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0\n            };\n        }\n        const width = el.offsetWidth;\n        const height = el.offsetHeight;\n        let left = 0;\n        let top = 0;\n        while (el.offsetParent && el !== document[fs.fullscreenElement]) {\n            left += el.offsetLeft;\n            top += el.offsetTop;\n            el = el.offsetParent;\n        }\n        return {\n            left,\n            top,\n            width,\n            height\n        };\n    }\n    function getPointerPosition(el, event) {\n        const translated = {\n            x: 0,\n            y: 0\n        };\n        if (browser.IS_IOS) {\n            let item = el;\n            while (item && item.nodeName.toLowerCase() !== 'html') {\n                const transform = computedStyle(item, 'transform');\n                if (/^matrix/.test(transform)) {\n                    const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n                    translated.x += values[4];\n                    translated.y += values[5];\n                } else if (/^matrix3d/.test(transform)) {\n                    const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n                    translated.x += values[12];\n                    translated.y += values[13];\n                }\n                item = item.parentNode;\n            }\n        }\n        const position = {};\n        const boxTarget = findPosition(event.target);\n        const box = findPosition(el);\n        const boxW = box.width;\n        const boxH = box.height;\n        let offsetY = event.offsetY - (box.top - boxTarget.top);\n        let offsetX = event.offsetX - (box.left - boxTarget.left);\n        if (event.changedTouches) {\n            offsetX = event.changedTouches[0].pageX - box.left;\n            offsetY = event.changedTouches[0].pageY + box.top;\n            if (browser.IS_IOS) {\n                offsetX -= translated.x;\n                offsetY -= translated.y;\n            }\n        }\n        position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n        position.x = Math.max(0, Math.min(1, offsetX / boxW));\n        return position;\n    }\n    function isTextNode(value) {\n        return obj.isObject(value) && value.nodeType === 3;\n    }\n    function emptyEl(el) {\n        while (el.firstChild) {\n            el.removeChild(el.firstChild);\n        }\n        return el;\n    }\n    function normalizeContent(content) {\n        if (typeof content === 'function') {\n            content = content();\n        }\n        return (Array.isArray(content) ? content : [content]).map(value => {\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (isEl(value) || isTextNode(value)) {\n                return value;\n            }\n            if (typeof value === 'string' && /\\S/.test(value)) {\n                return document.createTextNode(value);\n            }\n        }).filter(value => value);\n    }\n    function appendContent(el, content) {\n        normalizeContent(content).forEach(node => el.appendChild(node));\n        return el;\n    }\n    function insertContent(el, content) {\n        return appendContent(emptyEl(el), content);\n    }\n    function isSingleLeftClick(event) {\n        if (event.button === undefined && event.buttons === undefined) {\n            return true;\n        }\n        if (event.button === 0 && event.buttons === undefined) {\n            return true;\n        }\n        if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n            return true;\n        }\n        if (event.button !== 0 || event.buttons !== 1) {\n            return false;\n        }\n        return true;\n    }\n    const $ = createQuerier('querySelector');\n    const $$ = createQuerier('querySelectorAll');\n    return {\n        isReal: browser.isReal,\n        isEl: domx.noder.isElement,// isEl,\n        isInFrame: domx.noder.isInFrame, //isInFrame,\n        createEl:  function (tagName = 'div', properties = {}, attributes = {}, content) { //createEl,\n            var el  = domx.noder.createElement(tagName,properties,attributes);\n            if (content) {\n                domx.noder.append(el,content)\n            }\n            return el;\n        }, \n        textContent: domx.data.text, //textContent,\n        prependTo: function (child, parent) { //prependTo,\n            domx.noder.prepend(parent,child);\n        },\n        hasClass: domx.styler.hasClass, //hasClass,\n        addClass: domx.styler.addClass,  //addClass,\n        removeClass: domx.styler.removeClass, //removeClass,\n        toggleClass: domx.styler.toogleClass, //toggleClass,\n        setAttributes: domx.data.attr, // setAttributes,\n        getAttributes: getAttributes,\n        getAttribute: domx.data.attr, //getAttribute,\n        setAttribute: domx.data.attr, //setAttribute,\n        removeAttribute: domx.data.removeAttr, //removeAttribute,\n        blockTextSelection: blockTextSelection,\n        unblockTextSelection: unblockTextSelection,\n        getBoundingClientRect: getBoundingClientRect,\n        findPosition: domx.geom.pageRect, //findPosition,\n        getPointerPosition: getPointerPosition,\n        isTextNode: domx.noder.isTextNode,// isTextNode,\n        emptyEl: domx.noder.empty, //emptyEl,\n        normalizeContent: normalizeContent,\n        appendContent: domx.noder.append,//appendContent,\n        insertContent: function(el,content) { //insertContent,\n            domx.noder.empty(el);\n            domx.noder.append(el,content);\n            return el;\n        },\n        isSingleLeftClick: isSingleLeftClick,\n        $: function(selector,context) {\n            context = context || document;\n            return domx.finder.find(context,selector);\n        },\n        $$: function(selector,context) {\n            context = context || document;\n            return domx.finder.findAll(context,selector);\n        }\n    };\n});\ndefine('skylark-videojs/setup',[\n    'skylark-langx-globals/document',\n    './utils/dom'\n], function (document,Dom) {\n    'use strict';\n    let _windowLoaded = false;\n    let videojs;\n    const autoSetup = function () {\n        if (!Dom.isReal() || videojs.options.autoSetup === false) {\n            return;\n        }\n        const vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n        const audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n        const divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n        const mediaEls = vids.concat(audios, divs);\n        if (mediaEls && mediaEls.length > 0) {\n            for (let i = 0, e = mediaEls.length; i < e; i++) {\n                const mediaEl = mediaEls[i];\n                if (mediaEl && mediaEl.getAttribute) {\n                    if (mediaEl.player === undefined) {\n                        const options = mediaEl.getAttribute('data-setup');\n                        if (options !== null) {\n                            videojs(mediaEl);\n                        }\n                    }\n                } else {\n                    autoSetupTimeout(1);\n                    break;\n                }\n            }\n        } else if (!_windowLoaded) {\n            autoSetupTimeout(1);\n        }\n    };\n    function autoSetupTimeout(wait, vjs) {\n        if (vjs) {\n            videojs = vjs;\n        }\n        window.setTimeout(autoSetup, wait);\n    }\n    function setWindowLoaded() {\n        _windowLoaded = true;\n        window.removeEventListener('load', setWindowLoaded);\n    }\n    if (Dom.isReal()) {\n        if (document.readyState === 'complete') {\n            setWindowLoaded();\n        } else {\n            window.addEventListener('load', setWindowLoaded);\n        }\n    }\n    const hasLoaded = function () {\n        return _windowLoaded;\n    };\n    return {\n        autoSetup,\n        autoSetupTimeout,\n        hasLoaded\n    };\n});\ndefine('skylark-videojs/utils/stylesheet',[\n    'skylark-langx-globals/document'\n], function (document) {\n    'use strict';\n    const createStyleElement = function (className) {\n        const style = document.createElement('style');\n        style.className = className;\n        return style;\n    };\n    const setTextContent = function (el, content) {\n        if (el.styleSheet) {\n            el.styleSheet.cssText = content;\n        } else {\n            el.textContent = content;\n        }\n    };\n    return {\n        createStyleElement: createStyleElement,\n        setTextContent: setTextContent\n    };\n});\ndefine('skylark-videojs/mixins/stateful',[\n    ///'./evented',\n    '../utils/obj'\n], function (Obj) {\n    'use strict';\n    const StatefulMixin = {\n        state: {},\n        setState(stateUpdates) {\n            if (typeof stateUpdates === 'function') {\n                stateUpdates = stateUpdates();\n            }\n            let changes;\n            Obj.each(stateUpdates, (value, key) => {\n                if (this.state[key] !== value) {\n                    changes = changes || {};\n                    changes[key] = {\n                        from: this.state[key],\n                        to: value\n                    };\n                }\n                this.state[key] = value;\n            });\n            //if (changes && evented.isEvented(this)) {\n            if (changes && this.trigger) {\n                this.trigger({\n                    changes,\n                    type: 'statechanged'\n                });\n            }\n            return changes;\n        }\n    };\n    function stateful(target, defaultState) {\n        Obj.assign(target, StatefulMixin);\n        target.state = Obj.assign({}, target.state, defaultState);\n        ///if (typeof target.handleStateChanged === 'function' && evented.isEvented(target)) {\n        if (typeof target.handleStateChanged === 'function' && target.on) {\n            target.on('statechanged', target.handleStateChanged);\n        }\n        return target;\n    }\n    return stateful;\n});\ndefine('skylark-videojs/utils/guid',[],function () {\n    'use strict';\n    const _initialGuid = 3;\n    let _guid = _initialGuid;\n    function newGUID() {\n        return _guid++;\n    }\n    function resetGuidInTestsOnly() {\n        _guid = _initialGuid;\n    }\n    return {\n        newGUID: newGUID,\n        resetGuidInTestsOnly: resetGuidInTestsOnly\n    };\n});\ndefine('skylark-videojs/utils/dom-data',[\n    './log',\n    './guid'\n], function (log, Guid) {\n    'use strict';\n    let FakeWeakMap;\n    if (!window.WeakMap) {\n        FakeWeakMap = class {\n            constructor() {\n                this.vdata = 'vdata' + Math.floor(window.performance && window.performance.now() || Date.now());\n                this.data = {};\n            }\n            set(key, value) {\n                const access = key[this.vdata] || Guid.newGUID();\n                if (!key[this.vdata]) {\n                    key[this.vdata] = access;\n                }\n                this.data[access] = value;\n                return this;\n            }\n            get(key) {\n                const access = key[this.vdata];\n                if (access) {\n                    return this.data[access];\n                }\n                log('We have no data for this element', key);\n                return undefined;\n            }\n            has(key) {\n                const access = key[this.vdata];\n                return access in this.data;\n            }\n            delete(key) {\n                const access = key[this.vdata];\n                if (access) {\n                    delete this.data[access];\n                    delete key[this.vdata];\n                }\n            }\n        };\n    }\n    return window.WeakMap ? new WeakMap() : new FakeWeakMap();\n});\ndefine('skylark-videojs/utils/fn',[\n    'skylark-langx-funcs',\n    './guid'\n], function (funcs,GUID) {\n    'use strict';\n    const UPDATE_REFRESH_INTERVAL = 30;\n    const bind = function (context, fn, uid) {\n        if (!fn.guid) {\n            fn.guid = GUID.newGUID();\n        }\n        const bound = fn.bind(context);\n        bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n        return bound;\n    };\n    const throttle = function (fn, wait) {\n        let last = window.performance.now();\n        const throttled = function (...args) {\n            const now = window.performance.now();\n            if (now - last >= wait) {\n                fn(...args);\n                last = now;\n            }\n        };\n        return throttled;\n    };\n    const debounce = function (func, wait, immediate, context = window) {\n        let timeout;\n        const cancel = () => {\n            context.clearTimeout(timeout);\n            timeout = null;\n        };\n        const debounced = function () {\n            const self = this;\n            const args = arguments;\n            let later = function () {\n                timeout = null;\n                later = null;\n                if (!immediate) {\n                    func.apply(self, args);\n                }\n            };\n            if (!timeout && immediate) {\n                func.apply(self, args);\n            }\n            context.clearTimeout(timeout);\n            timeout = context.setTimeout(later, wait);\n        };\n        debounced.cancel = cancel;\n        return debounced;\n    };\n    return {\n        UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n        bind: bind,\n        throttle: funcs.throttle, //throttle,\n        debounce: funcs.debounce //debounce\n    };\n});\ndefine('skylark-videojs/utils/string-cases',[],function () {\n    'use strict';\n    const toLowerCase = function (string) {\n        if (typeof string !== 'string') {\n            return string;\n        }\n        return string.replace(/./, w => w.toLowerCase());\n    };\n    const toTitleCase = function (string) {\n        if (typeof string !== 'string') {\n            return string;\n        }\n        return string.replace(/./, w => w.toUpperCase());\n    };\n    const titleCaseEquals = function (str1, str2) {\n        return toTitleCase(str1) === toTitleCase(str2);\n    };\n    return {\n        toLowerCase: toLowerCase,\n        toTitleCase: toTitleCase,\n        titleCaseEquals: titleCaseEquals\n    };\n});\ndefine('skylark-videojs/utils/merge-options',['./obj'], function (obj) {\n    'use strict';\n    function mergeOptions(...sources) {\n        const result = {};\n        sources.forEach(source => {\n            if (!source) {\n                return;\n            }\n            obj.each(source, (value, key) => {\n                if (!obj.isPlain(value)) {\n                    result[key] = value;\n                    return;\n                }\n                if (!obj.isPlain(result[key])) {\n                    result[key] = {};\n                }\n                result[key] = mergeOptions(result[key], value);\n            });\n        });\n        return result;\n    }\n    return mergeOptions;\n});\ndefine('skylark-videojs/utils/map',[], function () {\n    'use strict';\n    class MapSham {\n        constructor() {\n            this.map_ = {};\n        }\n        has(key) {\n            return key in this.map_;\n        }\n        delete(key) {\n            const has = this.has(key);\n            delete this.map_[key];\n            return has;\n        }\n        set(key, value) {\n            this.map_[key] = value;\n            return this;\n        }\n        forEach(callback, thisArg) {\n            for (const key in this.map_) {\n                callback.call(thisArg, this.map_[key], key, this);\n            }\n        }\n    }\n    return window.Map ? window.Map : MapSham;\n});\ndefine('skylark-videojs/utils/set',[], function () {\n    'use strict';\n    class SetSham {\n        constructor() {\n            this.set_ = {};\n        }\n        has(key) {\n            return key in this.set_;\n        }\n        delete(key) {\n            const has = this.has(key);\n            delete this.set_[key];\n            return has;\n        }\n        add(key) {\n            this.set_[key] = 1;\n            return this;\n        }\n        forEach(callback, thisArg) {\n            for (const key in this.set_) {\n                callback.call(thisArg, key, key, this);\n            }\n        }\n    }\n    return window.Set ? window.Set : SetSham;\n});\ndefine('skylark-videojs/component',[\n    \"skylark-langx\",\n    \"skylark-domx-eventer\",\n    \"skylark-widgets-base/Widget\",\n    ///'./mixins/evented',\n    './mixins/stateful',\n    './utils/dom',\n    './utils/dom-data',\n    './utils/fn',\n    './utils/guid',\n    './utils/string-cases',\n    './utils/merge-options',\n    './utils/computed-style',\n    './utils/map',\n    './utils/set'\n], function (langx,eventer,Widget, stateful, Dom, DomData, Fn, Guid, stringCases, mergeOptions, computedStyle, Map, Set) {\n    'use strict';\n\n    function isNativeEvent(el,events) {\n        if (langx.isString(events)) {\n            return el[\"on\"+ events] !== undefined;\n        } else if (langx.isArray(events)) {\n            for (var i=0; i<events.length; i++) {\n                if (el[\"on\"+ events[i]] !== undefined) {\n                    return true;\n                }\n            }\n            return events.length > 0;\n        }\n    }\n\n    const NativeEvents = {\n            \"drag\": 2, // DragEvent\n            \"dragend\": 2, // DragEvent\n            \"dragenter\": 2, // DragEvent\n            \"dragexit\": 2, // DragEvent\n            \"dragleave\": 2, // DragEvent\n            \"dragover\": 2, // DragEvent\n            \"dragstart\": 2, // DragEvent\n            \"drop\": 2, // DragEvent\n\n            \"abort\": 3, // Event\n            \"change\": 3, // Event\n            \"error\": 3, // Event\n            \"selectionchange\": 3, // Event\n            \"submit\": 3, // Event\n            \"reset\": 3, // Event\n            'fullscreenchange':3,\n            'fullscreenerror':3,\n\n/*\n            'disablepictureinpicturechanged':3,\n            'ended':3,\n            'enterpictureinpicture':3,\n            'durationchange':3,\n            'leavepictureinpicture':3,\n            'loadstart' : 3,\n            'loadedmetadata':3,\n            'pause' : 3,\n            'play':3,\n            'posterchange':3,\n            'ratechange':3,\n            'seeking' : 3,\n            'sourceset':3,\n            'suspend':3,\n            'textdata':3,\n            'texttrackchange':3,\n            'timeupdate':3,\n            'volumechange':3,\n            'waiting' : 3,\n*/\n\n\n            \"focus\": 4, // FocusEvent\n            \"blur\": 4, // FocusEvent\n            \"focusin\": 4, // FocusEvent\n            \"focusout\": 4, // FocusEvent\n\n            \"keydown\": 5, // KeyboardEvent\n            \"keypress\": 5, // KeyboardEvent\n            \"keyup\": 5, // KeyboardEvent\n\n            \"message\": 6, // MessageEvent\n\n            \"click\": 7, // MouseEvent\n            \"contextmenu\": 7, // MouseEvent\n            \"dblclick\": 7, // MouseEvent\n            \"mousedown\": 7, // MouseEvent\n            \"mouseup\": 7, // MouseEvent\n            \"mousemove\": 7, // MouseEvent\n            \"mouseover\": 7, // MouseEvent\n            \"mouseout\": 7, // MouseEvent\n            \"mouseenter\": 7, // MouseEvent\n            \"mouseleave\": 7, // MouseEvent\n\n\n            \"progress\" : 11, //ProgressEvent\n\n            \"textInput\": 12, // TextEvent\n\n            \"tap\": 13,\n            \"touchstart\": 13, // TouchEvent\n            \"touchmove\": 13, // TouchEvent\n            \"touchend\": 13, // TouchEvent\n\n            \"load\": 14, // UIEvent\n            \"resize\": 14, // UIEvent\n            \"select\": 14, // UIEvent\n            \"scroll\": 14, // UIEvent\n            \"unload\": 14, // UIEvent,\n\n            \"wheel\": 15, // WheelEvent\n\n    };\n\n    class Component extends Widget {\n        isNativeEvent(events) {\n            if (langx.isString(events)) {\n                return !!NativeEvents[events];\n            } else if (langx.isArray(events)) {\n                for (var i=0; i<events.length; i++) {\n                    if (NativeEvents[events[i]]) {\n                        return true;\n                    }\n                }\n                return false;\n            }            \n\n        }   \n\n        on(events, selector, data, callback, ctx, /*used internally*/ one) {\n            if (this.el_ && this.isNativeEvent(events)) {\n                eventer.on(this.el_,events,selector,data,callback,ctx,one);\n            } else {\n                super.on(events, selector, data, callback, ctx,  one);\n            }\n        }   \n\n        off(events, callback) {\n            if (this.el_ && this.isNativeEvent(events)) {\n                eventer.off(this.el_,events,callback);\n            } else {\n                super.off(events,callback);\n            }\n        }\n\n        listenTo (obj, event, callback, /*used internally*/ one) {\n            if (langx.isString(obj) || langx.isArray(obj)) {\n                one = callback;\n                callback = event;\n                event = obj;\n                if (this.el_ && this.isNativeEvent(event)) {\n                    eventer.on(this.el_,event,callback,this,one);\n                } else {\n                    this.on(event,callback,this,one);\n                }\n            } else {\n                if (obj.nodeType) {\n                    eventer.on(obj,event,callback,this,one)\n                } else {\n                    super.listenTo(obj,event,callback,one)\n                }                \n            }\n        }\n\n        unlistenTo(obj, event, callback) {\n            if (langx.isString(obj) || langx.isArray(obj)) {\n                callback = event;\n                event = obj;\n                if (this.el_ && this.isNativeEvent(event)) {\n                    eventer.off(this.el_,event,callback);\n                } else {\n                    this.off(event,callback);                   \n                }\n            } else {\n                if (obj.nodeType) {\n                    eventer.off(obj,event,callback)\n                } else {\n                    super.unlistenTo(obj,event,callback)\n                }\n            }\n        }\n\n        _create() {\n\n        }\n\n\n        _construct(player, options, ready) {\n            /*\n            var el;\n            if (options.el) {\n               el = options.el;\n            } else if (options.createEl !== false) {\n                el = this.createEl();\n            }\n            super(el);\n            */\n\n            if (!player && this.play) {\n                this.player_ = player = this;\n            } else {\n                this.player_ = player;\n            }\n            this.isDisposed_ = false;\n            this.parentComponent_ = null;\n            this.options_ = mergeOptions({}, this.options_);\n            options = this.options_ = mergeOptions(this.options_, options);\n            this.id_ = options.id || options.el && options.el.id;\n            if (!this.id_) {\n                const id = player && player.id && player.id() || 'no_player';\n                this.id_ = `${ id }_component_${ Guid.newGUID() }`;\n            }\n            this.name_ = options.name || null;\n            if (options.el) {\n               this.el_ = options.el;\n            } else if (options.createEl !== false) {\n                this.el_ = this.createEl();\n            }\n            //this.el_ = this._elm;\n\n            if (options.evented !== false) {\n                ///evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n                this.handleLanguagechange = this.handleLanguagechange.bind(this);\n                ///this.listenTo(this.player_, 'languagechange', this.handleLanguagechange);\n                this.listenTo(this.player_, 'languagechange', this.handleLanguagechange);\n            }\n\n\n            stateful(this, this.constructor.defaultState);\n            this.children_ = [];\n            this.childIndex_ = {};\n            this.childNameIndex_ = {};\n            this.setTimeoutIds_ = new Set();\n            this.setIntervalIds_ = new Set();\n            this.rafIds_ = new Set();\n            this.namedRafs_ = new Map();\n            this.clearingTimersOnDispose_ = false;\n            if (options.initChildren !== false) {\n                this.initChildren();\n            }\n            this.ready(ready);\n            if (options.reportTouchActivity !== false) {\n                this.enableTouchActivity();\n            }\n        }\n        dispose() {\n            if (this.isDisposed_) {\n                return;\n            }\n            if (this.readyQueue_) {\n                this.readyQueue_.length = 0;\n            }\n            this.trigger({\n                type: 'dispose',\n                bubbles: false\n            });\n            this.isDisposed_ = true;\n            if (this.children_) {\n                for (let i = this.children_.length - 1; i >= 0; i--) {\n                    if (this.children_[i].dispose) {\n                        this.children_[i].dispose();\n                    }\n                }\n            }\n            this.children_ = null;\n            this.childIndex_ = null;\n            this.childNameIndex_ = null;\n            this.parentComponent_ = null;\n            if (this.el_) {\n                if (this.el_.parentNode) {\n                    this.el_.parentNode.removeChild(this.el_);\n                }\n                ///if (DomData.has(this.el_)) {\n                ///    DomData.delete(this.el_);\n                ///}\n                eventer.clear(this.el_);\n                this.el_ = null;\n            }\n            this.player_ = null;\n        }\n        isDisposed() {\n            return Boolean(this.isDisposed_);\n        }\n        player() {\n            return this.player_;\n        }\n        options(obj) {\n            if (!obj) {\n                return this.options_;\n            }\n            this.options_ = mergeOptions(this.options_, obj);\n            return this.options_;\n        }\n        el() {\n            return this.el_;\n        }\n        createEl(tagName, properties, attributes) {\n            return Dom.createEl(tagName, properties, attributes);\n        }\n        localize(string, tokens, defaultValue = string) {\n            const code = this.player_.language && this.player_.language();\n            const languages = this.player_.languages && this.player_.languages();\n            const language = languages && languages[code];\n            const primaryCode = code && code.split('-')[0];\n            const primaryLang = languages && languages[primaryCode];\n            let localizedString = defaultValue;\n            if (language && language[string]) {\n                localizedString = language[string];\n            } else if (primaryLang && primaryLang[string]) {\n                localizedString = primaryLang[string];\n            }\n            if (tokens) {\n                localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n                    const value = tokens[index - 1];\n                    let ret = value;\n                    if (typeof value === 'undefined') {\n                        ret = match;\n                    }\n                    return ret;\n                });\n            }\n            return localizedString;\n        }\n        handleLanguagechange() {\n        }\n        contentEl() {\n            return this.contentEl_ || this.el_;\n        }\n        id() {\n            return this.id_;\n        }\n        name() {\n            return this.name_;\n        }\n        children() {\n            return this.children_;\n        }\n        getChildById(id) {\n            return this.childIndex_[id];\n        }\n        getChild(name) {\n            if (!name) {\n                return;\n            }\n            return this.childNameIndex_[name];\n        }\n        getDescendant(...names) {\n            names = names.reduce((acc, n) => acc.concat(n), []);\n            let currentChild = this;\n            for (let i = 0; i < names.length; i++) {\n                currentChild = currentChild.getChild(names[i]);\n                if (!currentChild || !currentChild.getChild) {\n                    return;\n                }\n            }\n            return currentChild;\n        }\n        addChild(child, options = {}, index = this.children_.length) {\n            let component;\n            let componentName;\n            if (typeof child === 'string') {\n                componentName = stringCases.toTitleCase(child);\n                const componentClassName = options.componentClass || componentName;\n                options.name = componentName;\n                const ComponentClass = Component.getComponent(componentClassName);\n                if (!ComponentClass) {\n                    throw new Error(`Component ${ componentClassName } does not exist`);\n                }\n                if (typeof ComponentClass !== 'function') {\n                    return null;\n                }\n                component = new ComponentClass(this.player_ || this, options);\n            } else {\n                component = child;\n            }\n            if (component.parentComponent_) {\n                component.parentComponent_.removeChild(component);\n            }\n            this.children_.splice(index, 0, component);\n            component.parentComponent_ = this;\n            if (typeof component.id === 'function') {\n                this.childIndex_[component.id()] = component;\n            }\n            componentName = componentName || component.name && stringCases.toTitleCase(component.name());\n            if (componentName) {\n                this.childNameIndex_[componentName] = component;\n                this.childNameIndex_[stringCases.toLowerCase(componentName)] = component;\n            }\n            if (typeof component.el === 'function' && component.el()) {\n                let refNode = null;\n                if (this.children_[index + 1]) {\n                    if (this.children_[index + 1].el_) {\n                        refNode = this.children_[index + 1].el_;\n                    } else if (Dom.isEl(this.children_[index + 1])) {\n                        refNode = this.children_[index + 1];\n                    }\n                }\n                this.contentEl().insertBefore(component.el(), refNode);\n            }\n            return component;\n        }\n        removeChild(component) {\n            if (typeof component === 'string') {\n                component = this.getChild(component);\n            }\n            if (!component || !this.children_) {\n                return;\n            }\n            let childFound = false;\n            for (let i = this.children_.length - 1; i >= 0; i--) {\n                if (this.children_[i] === component) {\n                    childFound = true;\n                    this.children_.splice(i, 1);\n                    break;\n                }\n            }\n            if (!childFound) {\n                return;\n            }\n            component.parentComponent_ = null;\n            this.childIndex_[component.id()] = null;\n            this.childNameIndex_[stringCases.toTitleCase(component.name())] = null;\n            this.childNameIndex_[stringCases.toLowerCase(component.name())] = null;\n            const compEl = component.el();\n            if (compEl && compEl.parentNode === this.contentEl()) {\n                this.contentEl().removeChild(component.el());\n            }\n        }\n        initChildren() {\n            const children = this.options_.children;\n            if (children) {\n                const parentOptions = this.options_;\n                const handleAdd = child => {\n                    const name = child.name;\n                    let opts = child.opts;\n                    if (parentOptions[name] !== undefined) {\n                        opts = parentOptions[name];\n                    }\n                    if (opts === false) {\n                        return;\n                    }\n                    if (opts === true) {\n                        opts = {};\n                    }\n                    opts.playerOptions = this.options_.playerOptions;\n                    const newChild = this.addChild(name, opts);\n                    if (newChild) {\n                        this[name] = newChild;\n                    }\n                };\n                let workingChildren;\n                const Tech = Component.getComponent('Tech');\n                if (Array.isArray(children)) {\n                    workingChildren = children;\n                } else {\n                    workingChildren = Object.keys(children);\n                }\n                workingChildren.concat(Object.keys(this.options_).filter(function (child) {\n                    return !workingChildren.some(function (wchild) {\n                        if (typeof wchild === 'string') {\n                            return child === wchild;\n                        }\n                        return child === wchild.name;\n                    });\n                })).map(child => {\n                    let name;\n                    let opts;\n                    if (typeof child === 'string') {\n                        name = child;\n                        opts = children[name] || this.options_[name] || {};\n                    } else {\n                        name = child.name;\n                        opts = child;\n                    }\n                    return {\n                        name,\n                        opts\n                    };\n                }).filter(child => {\n                    const c = Component.getComponent(child.opts.componentClass || stringCases.toTitleCase(child.name));\n                    return c && !Tech.isTech(c);\n                }).forEach(handleAdd);\n            }\n        }\n        buildCSSClass() {\n            return '';\n        }\n        ready(fn, sync = false) {\n            if (!fn) {\n                return;\n            }\n            if (!this.isReady_) {\n                this.readyQueue_ = this.readyQueue_ || [];\n                this.readyQueue_.push(fn);\n                return;\n            }\n            if (sync) {\n                fn.call(this);\n            } else {\n                this.setTimeout(fn, 1);\n            }\n        }\n        triggerReady() {\n            this.isReady_ = true;\n            this.setTimeout(function () {\n                const readyQueue = this.readyQueue_;\n                this.readyQueue_ = [];\n                if (readyQueue && readyQueue.length > 0) {\n                    readyQueue.forEach(function (fn) {\n                        fn.call(this);\n                    }, this);\n                }\n                this.trigger('ready');\n            }, 1);\n        }\n        $(selector, context) {\n            return Dom.$(selector, context || this.contentEl());\n        }\n        $$(selector, context) {\n            return Dom.$$(selector, context || this.contentEl());\n        }\n        hasClass(classToCheck) {\n            return Dom.hasClass(this.el_, classToCheck);\n        }\n        addClass(classToAdd) {\n            Dom.addClass(this.el_, classToAdd);\n        }\n        removeClass(classToRemove) {\n            Dom.removeClass(this.el_, classToRemove);\n        }\n        toggleClass(classToToggle, predicate) {\n            Dom.toggleClass(this.el_, classToToggle, predicate);\n        }\n        show() {\n            this.removeClass('vjs-hidden');\n        }\n        hide() {\n            this.addClass('vjs-hidden');\n        }\n        lockShowing() {\n            this.addClass('vjs-lock-showing');\n        }\n        unlockShowing() {\n            this.removeClass('vjs-lock-showing');\n        }\n        getAttribute(attribute) {\n            return Dom.getAttribute(this.el_, attribute);\n        }\n        setAttribute(attribute, value) {\n            Dom.setAttribute(this.el_, attribute, value);\n        }\n        removeAttribute(attribute) {\n            Dom.removeAttribute(this.el_, attribute);\n        }\n        width(num, skipListeners) {\n            return this.dimension('width', num, skipListeners);\n        }\n        height(num, skipListeners) {\n            return this.dimension('height', num, skipListeners);\n        }\n        dimensions(width, height) {\n            this.width(width, true);\n            this.height(height);\n        }\n        dimension(widthOrHeight, num, skipListeners) {\n            if (num !== undefined) {\n                if (num === null || num !== num) {\n                    num = 0;\n                }\n                if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n                    this.el_.style[widthOrHeight] = num;\n                } else if (num === 'auto') {\n                    this.el_.style[widthOrHeight] = '';\n                } else {\n                    this.el_.style[widthOrHeight] = num + 'px';\n                }\n                if (!skipListeners) {\n                    this.trigger('componentresize');\n                }\n                return;\n            }\n            if (!this.el_) {\n                return 0;\n            }\n            const val = this.el_.style[widthOrHeight];\n            const pxIndex = val.indexOf('px');\n            if (pxIndex !== -1) {\n                return parseInt(val.slice(0, pxIndex), 10);\n            }\n            return parseInt(this.el_['offset' + stringCases.toTitleCase(widthOrHeight)], 10);\n        }\n        currentDimension(widthOrHeight) {\n            let computedWidthOrHeight = 0;\n            if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n                throw new Error('currentDimension only accepts width or height value');\n            }\n            computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n            computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n            if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n                const rule = `offset${ stringCases.toTitleCase(widthOrHeight) }`;\n                computedWidthOrHeight = this.el_[rule];\n            }\n            return computedWidthOrHeight;\n        }\n        currentDimensions() {\n            return {\n                width: this.currentDimension('width'),\n                height: this.currentDimension('height')\n            };\n        }\n        currentWidth() {\n            return this.currentDimension('width');\n        }\n        currentHeight() {\n            return this.currentDimension('height');\n        }\n        focus() {\n            this.el_.focus();\n        }\n        blur() {\n            this.el_.blur();\n        }\n        handleKeyDown(event) {\n            if (this.player_) {\n                event.stopPropagation();\n                this.player_.handleKeyDown(event);\n            }\n        }\n        handleKeyPress(event) {\n            this.handleKeyDown(event);\n        }\n        emitTapEvents() {\n            let touchStart = 0;\n            let firstTouch = null;\n            const tapMovementThreshold = 10;\n            const touchTimeThreshold = 200;\n            let couldBeTap;\n            this.listenTo('touchstart', function (event) {\n                if (event.touches.length === 1) {\n                    firstTouch = {\n                        pageX: event.touches[0].pageX,\n                        pageY: event.touches[0].pageY\n                    };\n                    touchStart = window.performance.now();\n                    couldBeTap = true;\n                }\n            });\n            this.listenTo('touchmove', function (event) {\n                if (event.touches.length > 1) {\n                    couldBeTap = false;\n                } else if (firstTouch) {\n                    const xdiff = event.touches[0].pageX - firstTouch.pageX;\n                    const ydiff = event.touches[0].pageY - firstTouch.pageY;\n                    const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n                    if (touchDistance > tapMovementThreshold) {\n                        couldBeTap = false;\n                    }\n                }\n            });\n            const noTap = function () {\n                couldBeTap = false;\n            };\n            this.listenTo('touchleave', noTap);\n            this.listenTo('touchcancel', noTap);\n            this.listenTo('touchend', function (event) {\n                firstTouch = null;\n                if (couldBeTap === true) {\n                    const touchTime = window.performance.now() - touchStart;\n                    if (touchTime < touchTimeThreshold) {\n                        event.preventDefault();\n                        this.trigger('tap');\n                    }\n                }\n            });\n        }\n        enableTouchActivity() {\n            if (!this.player() || !this.player().reportUserActivity) {\n                return;\n            }\n            const report = Fn.bind(this.player(), this.player().reportUserActivity);\n            let touchHolding;\n            this.listenTo('touchstart', function () {\n                report();\n                this.clearInterval(touchHolding);\n                touchHolding = this.setInterval(report, 250);\n            });\n            const touchEnd = function (event) {\n                report();\n                this.clearInterval(touchHolding);\n            };\n            this.listenTo('touchmove', report);\n            this.listenTo('touchend', touchEnd);\n            this.listenTo('touchcancel', touchEnd);\n        }\n        setTimeout(fn, timeout) {\n            var timeoutId, disposeFn;\n            fn = Fn.bind(this, fn);\n            this.clearTimersOnDispose_();\n            timeoutId = window.setTimeout(() => {\n                if (this.setTimeoutIds_.has(timeoutId)) {\n                    this.setTimeoutIds_.delete(timeoutId);\n                }\n                fn();\n            }, timeout);\n            this.setTimeoutIds_.add(timeoutId);\n            return timeoutId;\n        }\n        clearTimeout(timeoutId) {\n            if (this.setTimeoutIds_.has(timeoutId)) {\n                this.setTimeoutIds_.delete(timeoutId);\n                window.clearTimeout(timeoutId);\n            }\n            return timeoutId;\n        }\n        setInterval(fn, interval) {\n            fn = Fn.bind(this, fn);\n            this.clearTimersOnDispose_();\n            const intervalId = window.setInterval(fn, interval);\n            this.setIntervalIds_.add(intervalId);\n            return intervalId;\n        }\n        clearInterval(intervalId) {\n            if (this.setIntervalIds_.has(intervalId)) {\n                this.setIntervalIds_.delete(intervalId);\n                window.clearInterval(intervalId);\n            }\n            return intervalId;\n        }\n        requestAnimationFrame(fn) {\n            if (!this.supportsRaf_) {\n                return this.setTimeout(fn, 1000 / 60);\n            }\n            this.clearTimersOnDispose_();\n            var id;\n            fn = Fn.bind(this, fn);\n            id = window.requestAnimationFrame(() => {\n                if (this.rafIds_.has(id)) {\n                    this.rafIds_.delete(id);\n                }\n                fn();\n            });\n            this.rafIds_.add(id);\n            return id;\n        }\n        requestNamedAnimationFrame(name, fn) {\n            if (this.namedRafs_.has(name)) {\n                return;\n            }\n            this.clearTimersOnDispose_();\n            fn = Fn.bind(this, fn);\n            const id = this.requestAnimationFrame(() => {\n                fn();\n                if (this.namedRafs_.has(name)) {\n                    this.namedRafs_.delete(name);\n                }\n            });\n            this.namedRafs_.set(name, id);\n            return name;\n        }\n        cancelNamedAnimationFrame(name) {\n            if (!this.namedRafs_.has(name)) {\n                return;\n            }\n            this.cancelAnimationFrame(this.namedRafs_.get(name));\n            this.namedRafs_.delete(name);\n        }\n        cancelAnimationFrame(id) {\n            if (!this.supportsRaf_) {\n                return this.clearTimeout(id);\n            }\n            if (this.rafIds_.has(id)) {\n                this.rafIds_.delete(id);\n                window.cancelAnimationFrame(id);\n            }\n            return id;\n        }\n        clearTimersOnDispose_() {\n            if (this.clearingTimersOnDispose_) {\n                return;\n            }\n            this.clearingTimersOnDispose_ = true;\n            this.listenToOnce('dispose', () => {\n                [\n                    [\n                        'namedRafs_',\n                        'cancelNamedAnimationFrame'\n                    ],\n                    [\n                        'rafIds_',\n                        'cancelAnimationFrame'\n                    ],\n                    [\n                        'setTimeoutIds_',\n                        'clearTimeout'\n                    ],\n                    [\n                        'setIntervalIds_',\n                        'clearInterval'\n                    ]\n                ].forEach(([idName, cancelName]) => {\n                    this[idName].forEach((val, key) => this[cancelName](key));\n                });\n                this.clearingTimersOnDispose_ = false;\n            });\n        }\n        static registerComponent(name, ComponentToRegister) {\n            if (typeof name !== 'string' || !name) {\n                throw new Error(`Illegal component name, \"${ name }\"; must be a non-empty string.`);\n            }\n            const Tech = Component.getComponent('Tech');\n            const isTech = Tech && Tech.isTech(ComponentToRegister);\n            const isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n            if (isTech || !isComp) {\n                let reason;\n                if (isTech) {\n                    reason = 'techs must be registered using Tech.registerTech()';\n                } else {\n                    reason = 'must be a Component subclass';\n                }\n                throw new Error(`Illegal component, \"${ name }\"; ${ reason }.`);\n            }\n            name = stringCases.toTitleCase(name);\n            if (!Component.components_) {\n                Component.components_ = {};\n            }\n            const Player = Component.getComponent('Player');\n            if (name === 'Player' && Player && Player.players) {\n                const players = Player.players;\n                const playerNames = Object.keys(players);\n                if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n                    throw new Error('Can not register Player component after player has been created.');\n                }\n            }\n            Component.components_[name] = ComponentToRegister;\n            Component.components_[stringCases.toLowerCase(name)] = ComponentToRegister;\n            return ComponentToRegister;\n        }\n        static getComponent(name) {\n            if (!name || !Component.components_) {\n                return;\n            }\n            return Component.components_[name];\n        }\n    }\n    Component.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n    Component.registerComponent('Component', Component);\n    return Component;\n});\ndefine('skylark-videojs/utils/events',[\n    'skylark-langx-globals/document',\n    \"skylark-domx\",\n    './dom-data',\n    './guid',\n    './log'\n], function (document, domx, DomData, Guid, log) {\n    'use strict';\n    function _cleanUpEvents(elem, type) {\n        if (!DomData.has(elem)) {\n            return;\n        }\n        const data = DomData.get(elem);\n        if (data.handlers[type].length === 0) {\n            delete data.handlers[type];\n            if (elem.removeEventListener) {\n                elem.removeEventListener(type, data.dispatcher, false);\n            } else if (elem.detachEvent) {\n                elem.detachEvent('on' + type, data.dispatcher);\n            }\n        }\n        if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n            delete data.handlers;\n            delete data.dispatcher;\n            delete data.disabled;\n        }\n        if (Object.getOwnPropertyNames(data).length === 0) {\n            DomData.delete(elem);\n        }\n    }\n    function _handleMultipleEvents(fn, elem, types, callback) {\n        types.forEach(function (type) {\n            fn(elem, type, callback);\n        });\n    }\n    function fixEvent(event) {\n        if (event.fixed_) {\n            return event;\n        }\n        function returnTrue() {\n            return true;\n        }\n        function returnFalse() {\n            return false;\n        }\n        if (!event || !event.isPropagationStopped) {\n            const old = event || window.event;\n            event = {};\n            for (const key in old) {\n                if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n                    if (!(key === 'returnValue' && old.preventDefault)) {\n                        event[key] = old[key];\n                    }\n                }\n            }\n            if (!event.target) {\n                event.target = event.srcElement || document;\n            }\n            if (!event.relatedTarget) {\n                event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n            }\n            event.preventDefault = function () {\n                if (old.preventDefault) {\n                    old.preventDefault();\n                }\n                event.returnValue = false;\n                old.returnValue = false;\n                event.defaultPrevented = true;\n            };\n            event.defaultPrevented = false;\n            event.stopPropagation = function () {\n                if (old.stopPropagation) {\n                    old.stopPropagation();\n                }\n                event.cancelBubble = true;\n                old.cancelBubble = true;\n                event.isPropagationStopped = returnTrue;\n            };\n            event.isPropagationStopped = returnFalse;\n            event.stopImmediatePropagation = function () {\n                if (old.stopImmediatePropagation) {\n                    old.stopImmediatePropagation();\n                }\n                event.isImmediatePropagationStopped = returnTrue;\n                event.stopPropagation();\n            };\n            event.isImmediatePropagationStopped = returnFalse;\n            if (event.clientX !== null && event.clientX !== undefined) {\n                const doc = document.documentElement;\n                const body = document.body;\n                event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n                event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n            }\n            event.which = event.charCode || event.keyCode;\n            if (event.button !== null && event.button !== undefined) {\n                event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n            }\n        }\n        event.fixed_ = true;\n        return event;\n    }\n    let _supportsPassive;\n    const supportsPassive = function () {\n        if (typeof _supportsPassive !== 'boolean') {\n            _supportsPassive = false;\n            try {\n                const opts = Object.defineProperty({}, 'passive', {\n                    get() {\n                        _supportsPassive = true;\n                    }\n                });\n                window.addEventListener('test', null, opts);\n                window.removeEventListener('test', null, opts);\n            } catch (e) {\n            }\n        }\n        return _supportsPassive;\n    };\n    const passiveEvents = [\n        'touchstart',\n        'touchmove'\n    ];\n    function on(elem, type, fn) {\n        if (Array.isArray(type)) {\n            return _handleMultipleEvents(on, elem, type, fn);\n        }\n        if (!DomData.has(elem)) {\n            DomData.set(elem, {});\n        }\n        const data = DomData.get(elem);\n        if (!data.handlers) {\n            data.handlers = {};\n        }\n        if (!data.handlers[type]) {\n            data.handlers[type] = [];\n        }\n        if (!fn.guid) {\n            fn.guid = Guid.newGUID();\n        }\n        data.handlers[type].push(fn);\n        if (!data.dispatcher) {\n            data.disabled = false;\n            data.dispatcher = function (event, hash) {\n                if (data.disabled) {\n                    return;\n                }\n                event = fixEvent(event);\n                const handlers = data.handlers[event.type];\n                if (handlers) {\n                    const handlersCopy = handlers.slice(0);\n                    for (let m = 0, n = handlersCopy.length; m < n; m++) {\n                        if (event.isImmediatePropagationStopped()) {\n                            break;\n                        } else {\n                            try {\n                                handlersCopy[m].call(elem, event, hash);\n                            } catch (e) {\n                                log.error(e);\n                            }\n                        }\n                    }\n                }\n            };\n        }\n        if (data.handlers[type].length === 1) {\n            if (elem.addEventListener) {\n                let options = false;\n                if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n                    options = { passive: true };\n                }\n                elem.addEventListener(type, data.dispatcher, options);\n            } else if (elem.attachEvent) {\n                elem.attachEvent('on' + type, data.dispatcher);\n            }\n        }\n    }\n    function off(elem, type, fn) {\n        if (!DomData.has(elem)) {\n            return;\n        }\n        const data = DomData.get(elem);\n        if (!data.handlers) {\n            return;\n        }\n        if (Array.isArray(type)) {\n            return _handleMultipleEvents(off, elem, type, fn);\n        }\n        const removeType = function (el, t) {\n            data.handlers[t] = [];\n            _cleanUpEvents(el, t);\n        };\n        if (type === undefined) {\n            for (const t in data.handlers) {\n                if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n                    removeType(elem, t);\n                }\n            }\n            return;\n        }\n        const handlers = data.handlers[type];\n        if (!handlers) {\n            return;\n        }\n        if (!fn) {\n            removeType(elem, type);\n            return;\n        }\n        if (fn.guid) {\n            for (let n = 0; n < handlers.length; n++) {\n                if (handlers[n].guid === fn.guid) {\n                    handlers.splice(n--, 1);\n                }\n            }\n        }\n        _cleanUpEvents(elem, type);\n    }\n    function trigger(elem, event, hash) {\n        const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n        const parent = elem.parentNode || elem.ownerDocument;\n        if (typeof event === 'string') {\n            event = {\n                type: event,\n                target: elem\n            };\n        } else if (!event.target) {\n            event.target = elem;\n        }\n        event = fixEvent(event);\n        if (elemData.dispatcher) {\n            elemData.dispatcher.call(elem, event, hash);\n        }\n        if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n            trigger.call(null, parent, event, hash);\n        } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n            if (!DomData.has(event.target)) {\n                DomData.set(event.target, {});\n            }\n            const targetData = DomData.get(event.target);\n            if (event.target[event.type]) {\n                targetData.disabled = true;\n                if (typeof event.target[event.type] === 'function') {\n                    event.target[event.type]();\n                }\n                targetData.disabled = false;\n            }\n        }\n        return !event.defaultPrevented;\n    }\n    function one(elem, type, fn) {\n        if (Array.isArray(type)) {\n            return _handleMultipleEvents(one, elem, type, fn);\n        }\n        const func = function () {\n            off(elem, type, func);\n            fn.apply(this, arguments);\n        };\n        func.guid = fn.guid = fn.guid || Guid.newGUID();\n        on(elem, type, func);\n    }\n    function any(elem, type, fn) {\n        const func = function () {\n            off(elem, type, func);\n            fn.apply(this, arguments);\n        };\n        func.guid = fn.guid = fn.guid || Guid.newGUID();\n        on(elem, type, func);\n    }\n    return {\n        fixEvent: fixEvent,\n        on: domx.eventer.on, //on,\n        off: domx.eventer.off, //off,\n        trigger: domx.eventer.trigger, //trigger,\n        one: domx.eventer.one, //one,\n        any: domx.eventer.one //any\n    };\n});\ndefine('skylark-videojs/event-target',[\n    \"skylark-langx-events/Emitter\",\n    './utils/events'\n], function (Emitter,Events) {\n    'use strict';\n\n    /*\n    const EventTarget = function () {\n    };\n    EventTarget.prototype.allowedEvents_ = {};\n    EventTarget.prototype.on = function (type, fn) {\n        const ael = this.addEventListener;\n        this.addEventListener = () => {\n        };\n        Events.on(this, type, fn);\n        this.addEventListener = ael;\n    };\n    EventTarget.prototype.addEventListener = EventTarget.prototype.on;\n    EventTarget.prototype.off = function (type, fn) {\n        Events.off(this, type, fn);\n    };\n    EventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n    EventTarget.prototype.one = function (type, fn) {\n        const ael = this.addEventListener;\n        this.addEventListener = () => {\n        };\n        Events.one(this, type, fn);\n        this.addEventListener = ael;\n    };\n    EventTarget.prototype.any = function (type, fn) {\n        const ael = this.addEventListener;\n        this.addEventListener = () => {\n        };\n        Events.any(this, type, fn);\n        this.addEventListener = ael;\n    };\n    EventTarget.prototype.trigger = function (event) {\n        const type = event.type || event;\n        if (typeof event === 'string') {\n            event = { type };\n        }\n        event = Events.fixEvent(event);\n        if (this.allowedEvents_[type] && this['on' + type]) {\n            this['on' + type](event);\n        }\n        Events.trigger(this, event);\n    };\n    EventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n    */\n\n    var EventTarget = Emitter.inherit({});\n    EventTarget.prototype.addEventListener = EventTarget.prototype.on;\n    EventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n    EventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n    EventTarget.prototype.any = EventTarget.prototype.one;\n\n    let EVENT_MAP;\n    EventTarget.prototype.queueTrigger = function (event) {\n        if (!EVENT_MAP) {\n            EVENT_MAP = new Map();\n        }\n        const type = event.type || event;\n        let map = EVENT_MAP.get(this);\n        if (!map) {\n            map = new Map();\n            EVENT_MAP.set(this, map);\n        }\n        const oldTimeout = map.get(type);\n        map.delete(type);\n        window.clearTimeout(oldTimeout);\n        const timeout = window.setTimeout(() => {\n            if (map.size === 0) {\n                map = null;\n                EVENT_MAP.delete(this);\n            }\n            this.trigger(event);\n        }, 0);\n        map.set(type, timeout);\n    };\n\n    return EventTarget;\n});\ndefine('skylark-videojs/utils/time-ranges',[],function () {\n    'use strict';\n    function rangeCheck(fnName, index, maxIndex) {\n        if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n            throw new Error(`Failed to execute '${ fnName }' on 'TimeRanges': The index provided (${ index }) is non-numeric or out of bounds (0-${ maxIndex }).`);\n        }\n    }\n    function getRange(fnName, valueIndex, ranges, rangeIndex) {\n        rangeCheck(fnName, rangeIndex, ranges.length - 1);\n        return ranges[rangeIndex][valueIndex];\n    }\n    function createTimeRangesObj(ranges) {\n        if (ranges === undefined || ranges.length === 0) {\n            return {\n                length: 0,\n                start() {\n                    throw new Error('This TimeRanges object is empty');\n                },\n                end() {\n                    throw new Error('This TimeRanges object is empty');\n                }\n            };\n        }\n        return {\n            length: ranges.length,\n            start: getRange.bind(null, 'start', 0, ranges),\n            end: getRange.bind(null, 'end', 1, ranges)\n        };\n    }\n    function createTimeRanges(start, end) {\n        if (Array.isArray(start)) {\n            return createTimeRangesObj(start);\n        } else if (start === undefined || end === undefined) {\n            return createTimeRangesObj();\n        }\n        return createTimeRangesObj([[\n                start,\n                end\n            ]]);\n    }\n    return {\n        createTimeRanges: createTimeRanges,\n        createTimeRanges\n    };\n});\ndefine('skylark-videojs/utils/buffer',['./time-ranges'], function (timeRages) {\n    'use strict';\n    function bufferedPercent(buffered, duration) {\n        let bufferedDuration = 0;\n        let start;\n        let end;\n        if (!duration) {\n            return 0;\n        }\n        if (!buffered || !buffered.length) {\n            buffered = timeRages.createTimeRange(0, 0);\n        }\n        for (let i = 0; i < buffered.length; i++) {\n            start = buffered.start(i);\n            end = buffered.end(i);\n            if (end > duration) {\n                end = duration;\n            }\n            bufferedDuration += end - start;\n        }\n        return bufferedDuration / duration;\n    }\n    return { bufferedPercent: bufferedPercent };\n});\ndefine('skylark-videojs/media-error',['./utils/obj'], function (obj) {\n    'use strict';\n    function MediaError(value) {\n        if (value instanceof MediaError) {\n            return value;\n        }\n        if (typeof value === 'number') {\n            this.code = value;\n        } else if (typeof value === 'string') {\n            this.message = value;\n        } else if (obj.isObject(value)) {\n            if (typeof value.code === 'number') {\n                this.code = value.code;\n            }\n            obj.assign(this, value);\n        }\n        if (!this.message) {\n            this.message = MediaError.defaultMessages[this.code] || '';\n        }\n    }\n    MediaError.prototype.code = 0;\n    MediaError.prototype.message = '';\n    MediaError.prototype.status = null;\n    MediaError.errorTypes = [\n        'MEDIA_ERR_CUSTOM',\n        'MEDIA_ERR_ABORTED',\n        'MEDIA_ERR_NETWORK',\n        'MEDIA_ERR_DECODE',\n        'MEDIA_ERR_SRC_NOT_SUPPORTED',\n        'MEDIA_ERR_ENCRYPTED'\n    ];\n    MediaError.defaultMessages = {\n        1: 'You aborted the media playback',\n        2: 'A network error caused the media download to fail part-way.',\n        3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n        4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n        5: 'The media is encrypted and we do not have the keys to decrypt it.'\n    };\n    for (let errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n        MediaError[MediaError.errorTypes[errNum]] = errNum;\n        MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n    }\n    return MediaError;\n});\ndefine('skylark-videojs/utils/safeParseTuple',[],function(){\r\n\tfunction safeParseTuple(obj, reviver) {\r\n\t    var json\r\n\t    var error = null\r\n\r\n\t    try {\r\n\t        json = JSON.parse(obj, reviver)\r\n\t    } catch (err) {\r\n\t        error = err\r\n\t    }\r\n\r\n\t    return [error, json]\r\n\t}\r\n\r\n\treturn \tsafeParseTuple;\r\n});\r\n\r\n\ndefine('skylark-videojs/utils/promise',[],function () {\n    'use strict';\n    function isPromise(value) {\n        return value !== undefined && value !== null && typeof value.then === 'function';\n    }\n    function silencePromise(value) {\n        if (isPromise(value)) {\n            value.then(null, e => {\n            });\n        }\n    }\n    return {\n        isPromise: isPromise,\n        silencePromise: silencePromise\n    };\n});\ndefine('skylark-videojs/tracks/text-track-list-converter',[],function () {\n    'use strict';\n    const trackToJson_ = function (track) {\n        const ret = [\n            'kind',\n            'label',\n            'language',\n            'id',\n            'inBandMetadataTrackDispatchType',\n            'mode',\n            'src'\n        ].reduce((acc, prop, i) => {\n            if (track[prop]) {\n                acc[prop] = track[prop];\n            }\n            return acc;\n        }, {\n            cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n                return {\n                    startTime: cue.startTime,\n                    endTime: cue.endTime,\n                    text: cue.text,\n                    id: cue.id\n                };\n            })\n        });\n        return ret;\n    };\n    const textTracksToJson = function (tech) {\n        const trackEls = tech.$$('track');\n        const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n        const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n            const json = trackToJson_(trackEl.track);\n            if (trackEl.src) {\n                json.src = trackEl.src;\n            }\n            return json;\n        });\n        return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n            return trackObjs.indexOf(track) === -1;\n        }).map(trackToJson_));\n    };\n    const jsonToTextTracks = function (json, tech) {\n        json.forEach(function (track) {\n            const addedTrack = tech.addRemoteTextTrack(track).track;\n            if (!track.src && track.cues) {\n                track.cues.forEach(cue => addedTrack.addCue(cue));\n            }\n        });\n        return tech.textTracks();\n    };\n    return {\n        textTracksToJson,\n        jsonToTextTracks,\n        trackToJson_\n    };\n});\ndefine('skylark-videojs/utils/keycode',[],function(){\r\n  // Source: http://jsfiddle.net/vWx8V/\r\n  // http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\r\n\r\n  /**\r\n   * Conenience method returns corresponding value for given keyName or keyCode.\r\n   *\r\n   * @param {Mixed} keyCode {Number} or keyName {String}\r\n   * @return {Mixed}\r\n   * @api public\r\n   */\r\n\r\n  function keyCode(searchInput) {\r\n    // Keyboard Events\r\n    if (searchInput && 'object' === typeof searchInput) {\r\n      var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\r\n      if (hasKeyCode) searchInput = hasKeyCode\r\n    }\r\n\r\n    // Numbers\r\n    if ('number' === typeof searchInput) return names[searchInput]\r\n\r\n    // Everything else (cast to string)\r\n    var search = String(searchInput)\r\n\r\n    // check codes\r\n    var foundNamedKey = codes[search.toLowerCase()]\r\n    if (foundNamedKey) return foundNamedKey\r\n\r\n    // check aliases\r\n    var foundNamedKey = aliases[search.toLowerCase()]\r\n    if (foundNamedKey) return foundNamedKey\r\n\r\n    // weird character?\r\n    if (search.length === 1) return search.charCodeAt(0)\r\n\r\n    return undefined\r\n  }\r\n\r\n  /**\r\n   * Compares a keyboard event with a given keyCode or keyName.\r\n   *\r\n   * @param {Event} event Keyboard event that should be tested\r\n   * @param {Mixed} keyCode {Number} or keyName {String}\r\n   * @return {Boolean}\r\n   * @api public\r\n   */\r\n  keyCode.isEventKey = function isEventKey(event, nameOrCode) {\r\n    if (event && 'object' === typeof event) {\r\n      var keyCode = event.which || event.keyCode || event.charCode\r\n      if (keyCode === null || keyCode === undefined) { return false; }\r\n      if (typeof nameOrCode === 'string') {\r\n        // check codes\r\n        var foundNamedKey = codes[nameOrCode.toLowerCase()]\r\n        if (foundNamedKey) { return foundNamedKey === keyCode; }\r\n      \r\n        // check aliases\r\n        var foundNamedKey = aliases[nameOrCode.toLowerCase()]\r\n        if (foundNamedKey) { return foundNamedKey === keyCode; }\r\n      } else if (typeof nameOrCode === 'number') {\r\n        return nameOrCode === keyCode;\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  var exports = keyCode;\r\n\r\n  /**\r\n   * Get by name\r\n   *\r\n   *   exports.code['enter'] // => 13\r\n   */\r\n\r\n  var codes = exports.code = exports.codes = {\r\n    'backspace': 8,\r\n    'tab': 9,\r\n    'enter': 13,\r\n    'shift': 16,\r\n    'ctrl': 17,\r\n    'alt': 18,\r\n    'pause/break': 19,\r\n    'caps lock': 20,\r\n    'esc': 27,\r\n    'space': 32,\r\n    'page up': 33,\r\n    'page down': 34,\r\n    'end': 35,\r\n    'home': 36,\r\n    'left': 37,\r\n    'up': 38,\r\n    'right': 39,\r\n    'down': 40,\r\n    'insert': 45,\r\n    'delete': 46,\r\n    'command': 91,\r\n    'left command': 91,\r\n    'right command': 93,\r\n    'numpad *': 106,\r\n    'numpad +': 107,\r\n    'numpad -': 109,\r\n    'numpad .': 110,\r\n    'numpad /': 111,\r\n    'num lock': 144,\r\n    'scroll lock': 145,\r\n    'my computer': 182,\r\n    'my calculator': 183,\r\n    ';': 186,\r\n    '=': 187,\r\n    ',': 188,\r\n    '-': 189,\r\n    '.': 190,\r\n    '/': 191,\r\n    '`': 192,\r\n    '[': 219,\r\n    '\\\\': 220,\r\n    ']': 221,\r\n    \"'\": 222\r\n  }\r\n\r\n  // Helper aliases\r\n\r\n  var aliases = exports.aliases = {\r\n    'windows': 91,\r\n    '⇧': 16,\r\n    '⌥': 18,\r\n    '⌃': 17,\r\n    '⌘': 91,\r\n    'ctl': 17,\r\n    'control': 17,\r\n    'option': 18,\r\n    'pause': 19,\r\n    'break': 19,\r\n    'caps': 20,\r\n    'return': 13,\r\n    'escape': 27,\r\n    'spc': 32,\r\n    'spacebar': 32,\r\n    'pgup': 33,\r\n    'pgdn': 34,\r\n    'ins': 45,\r\n    'del': 46,\r\n    'cmd': 91\r\n  }\r\n\r\n  /*!\r\n   * Programatically add the following\r\n   */\r\n\r\n  // lower case chars\r\n  for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\r\n\r\n  // numbers\r\n  for (var i = 48; i < 58; i++) codes[i - 48] = i\r\n\r\n  // function keys\r\n  for (i = 1; i < 13; i++) codes['f'+i] = i + 111\r\n\r\n  // numpad keys\r\n  for (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\r\n\r\n  /**\r\n   * Get by code\r\n   *\r\n   *   exports.name[13] // => 'Enter'\r\n   */\r\n\r\n  var names = exports.names = exports.title = {} // title for backward compat\r\n\r\n  // Create reverse mapping\r\n  for (i in codes) names[codes[i]] = i\r\n\r\n  // Add aliases\r\n  for (var alias in aliases) {\r\n    codes[alias] = aliases[alias]\r\n  }\r\n\r\n  return exports;\r\n\r\n});\ndefine('skylark-videojs/modal-dialog',[\n    'skylark-langx-globals/document',\n    './utils/dom',\n    './component',\n    './utils/keycode'\n], function (document,Dom, Component, keycode) {\n    'use strict';\n    const MODAL_CLASS_NAME = 'vjs-modal-dialog';\n    class ModalDialog extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n            this.closeable(!this.options_.uncloseable);\n            this.content(this.options_.content);\n            this.contentEl_ = Dom.createEl('div', { className: `${ MODAL_CLASS_NAME }-content` }, { role: 'document' });\n            this.descEl_ = Dom.createEl('p', {\n                className: `${ MODAL_CLASS_NAME }-description vjs-control-text`,\n                id: this.el().getAttribute('aria-describedby')\n            });\n            Dom.textContent(this.descEl_, this.description());\n            this.el_.appendChild(this.descEl_);\n            this.el_.appendChild(this.contentEl_);\n        }\n        createEl() {\n            return super.createEl('div', {\n                className: this.buildCSSClass(),\n                tabIndex: -1\n            }, {\n                'aria-describedby': `${ this.id() }_description`,\n                'aria-hidden': 'true',\n                'aria-label': this.label(),\n                'role': 'dialog'\n            });\n        }\n        dispose() {\n            this.contentEl_ = null;\n            this.descEl_ = null;\n            this.previouslyActiveEl_ = null;\n            super.dispose();\n        }\n        buildCSSClass() {\n            return `${ MODAL_CLASS_NAME } vjs-hidden ${ super.buildCSSClass() }`;\n        }\n        label() {\n            return this.localize(this.options_.label || 'Modal Window');\n        }\n        description() {\n            let desc = this.options_.description || this.localize('This is a modal window.');\n            if (this.closeable()) {\n                desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n            }\n            return desc;\n        }\n        open() {\n            if (!this.opened_) {\n                const player = this.player();\n                this.trigger('beforemodalopen');\n                this.opened_ = true;\n                if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n                    this.fill();\n                }\n                this.wasPlaying_ = !player.paused();\n                if (this.options_.pauseOnOpen && this.wasPlaying_) {\n                    player.pause();\n                }\n                this.listenTo('keydown', this.handleKeyDown);\n                this.hadControls_ = player.controls();\n                player.controls(false);\n                this.show();\n                this.conditionalFocus_();\n                this.el().setAttribute('aria-hidden', 'false');\n                this.trigger('modalopen');\n                this.hasBeenOpened_ = true;\n            }\n        }\n        opened(value) {\n            if (typeof value === 'boolean') {\n                this[value ? 'open' : 'close']();\n            }\n            return this.opened_;\n        }\n        close() {\n            if (!this.opened_) {\n                return;\n            }\n            const player = this.player();\n            this.trigger('beforemodalclose');\n            this.opened_ = false;\n            if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n                player.play();\n            }\n            this.unlistenTo('keydown', this.handleKeyDown);\n            if (this.hadControls_) {\n                player.controls(true);\n            }\n            this.hide();\n            this.el().setAttribute('aria-hidden', 'true');\n            this.trigger('modalclose');\n            this.conditionalBlur_();\n            if (this.options_.temporary) {\n                this.dispose();\n            }\n        }\n        closeable(value) {\n            if (typeof value === 'boolean') {\n                const closeable = this.closeable_ = !!value;\n                let close = this.getChild('closeButton');\n                if (closeable && !close) {\n                    const temp = this.contentEl_;\n                    this.contentEl_ = this.el_;\n                    close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n                    this.contentEl_ = temp;\n                    this.listenTo(close, 'close', this.close);\n                }\n                if (!closeable && close) {\n                    this.unlistenTo(close, 'close', this.close);\n                    this.removeChild(close);\n                    close.dispose();\n                }\n            }\n            return this.closeable_;\n        }\n        fill() {\n            this.fillWith(this.content());\n        }\n        fillWith(content) {\n            const contentEl = this.contentEl();\n            const parentEl = contentEl.parentNode;\n            const nextSiblingEl = contentEl.nextSibling;\n            this.trigger('beforemodalfill');\n            this.hasBeenFilled_ = true;\n            parentEl.removeChild(contentEl);\n            this.empty();\n            Dom.insertContent(contentEl, content);\n            this.trigger('modalfill');\n            if (nextSiblingEl) {\n                parentEl.insertBefore(contentEl, nextSiblingEl);\n            } else {\n                parentEl.appendChild(contentEl);\n            }\n            const closeButton = this.getChild('closeButton');\n            if (closeButton) {\n                parentEl.appendChild(closeButton.el_);\n            }\n        }\n        empty() {\n            this.trigger('beforemodalempty');\n            Dom.emptyEl(this.contentEl());\n            this.trigger('modalempty');\n        }\n        content(value) {\n            if (typeof value !== 'undefined') {\n                this.content_ = value;\n            }\n            return this.content_;\n        }\n        conditionalFocus_() {\n            const activeEl = document.activeElement;\n            const playerEl = this.player_.el_;\n            this.previouslyActiveEl_ = null;\n            if (playerEl.contains(activeEl) || playerEl === activeEl) {\n                this.previouslyActiveEl_ = activeEl;\n                this.focus();\n            }\n        }\n        conditionalBlur_() {\n            if (this.previouslyActiveEl_) {\n                this.previouslyActiveEl_.focus();\n                this.previouslyActiveEl_ = null;\n            }\n        }\n        handleKeyDown(event) {\n            event.stopPropagation();\n            if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n                event.preventDefault();\n                this.close();\n                return;\n            }\n            if (!keycode.isEventKey(event, 'Tab')) {\n                return;\n            }\n            const focusableEls = this.focusableEls_();\n            const activeEl = this.el_.querySelector(':focus');\n            let focusIndex;\n            for (let i = 0; i < focusableEls.length; i++) {\n                if (activeEl === focusableEls[i]) {\n                    focusIndex = i;\n                    break;\n                }\n            }\n            if (document.activeElement === this.el_) {\n                focusIndex = 0;\n            }\n            if (event.shiftKey && focusIndex === 0) {\n                focusableEls[focusableEls.length - 1].focus();\n                event.preventDefault();\n            } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n                focusableEls[0].focus();\n                event.preventDefault();\n            }\n        }\n        focusableEls_() {\n            const allChildren = this.el_.querySelectorAll('*');\n            return Array.prototype.filter.call(allChildren, child => {\n                return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || (child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement) || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n            });\n        }\n    }\n    ModalDialog.prototype.options_ = {\n        pauseOnOpen: true,\n        temporary: true\n    };\n    Component.registerComponent('ModalDialog', ModalDialog);\n    return ModalDialog;\n});\ndefine('skylark-videojs/tracks/track-list',[\n    '../event-target'\n    ///'../mixins/evented'\n], function (EventTarget) {\n    'use strict';\n    class TrackList extends EventTarget {\n        constructor(tracks = []) {\n            super();\n            this.tracks_ = [];\n            Object.defineProperty(this, 'length', {\n                get() {\n                    return this.tracks_.length;\n                }\n            });\n            for (let i = 0; i < tracks.length; i++) {\n                this.addTrack(tracks[i]);\n            }\n        }\n        addTrack(track) {\n            const index = this.tracks_.length;\n            if (!('' + index in this)) {\n                Object.defineProperty(this, index, {\n                    get() {\n                        return this.tracks_[index];\n                    }\n                });\n            }\n            if (this.tracks_.indexOf(track) === -1) {\n                this.tracks_.push(track);\n                this.trigger({\n                    track,\n                    type: 'addtrack',\n                    target: this\n                });\n            }\n            track.labelchange_ = () => {\n                this.trigger({\n                    track,\n                    type: 'labelchange',\n                    target: this\n                });\n            };\n            ///if (evented.isEvented(track)) {\n            if (track.addEventListener) {\n                track.addEventListener('labelchange', track.labelchange_);\n            }\n        }\n        removeTrack(rtrack) {\n            let track;\n            for (let i = 0, l = this.length; i < l; i++) {\n                if (this[i] === rtrack) {\n                    track = this[i];\n                    if (track.off) {\n                        track.off();\n                    }\n                    this.tracks_.splice(i, 1);\n                    break;\n                }\n            }\n            if (!track) {\n                return;\n            }\n            this.trigger({\n                track,\n                type: 'removetrack',\n                target: this\n            });\n        }\n        getTrackById(id) {\n            let result = null;\n            for (let i = 0, l = this.length; i < l; i++) {\n                const track = this[i];\n                if (track.id === id) {\n                    result = track;\n                    break;\n                }\n            }\n            return result;\n        }\n    }\n    TrackList.prototype.allowedEvents_ = {\n        change: 'change',\n        addtrack: 'addtrack',\n        removetrack: 'removetrack',\n        labelchange: 'labelchange'\n    };\n    for (const event in TrackList.prototype.allowedEvents_) {\n        TrackList.prototype['on' + event] = null;\n    }\n    return TrackList;\n});\ndefine('skylark-videojs/tracks/audio-track-list',[\n    './track-list'\n], function (TrackList) {\n    'use strict';\n    const disableOthers = function (list, track) {\n        for (let i = 0; i < list.length; i++) {\n            if (!Object.keys(list[i]).length || track.id === list[i].id) {\n                continue;\n            }\n            list[i].enabled = false;\n        }\n    };\n    class AudioTrackList extends TrackList {\n        constructor(tracks = []) {\n            for (let i = tracks.length - 1; i >= 0; i--) {\n                if (tracks[i].enabled) {\n                    disableOthers(tracks, tracks[i]);\n                    break;\n                }\n            }\n            super(tracks);\n            this.changing_ = false;\n        }\n        addTrack(track) {\n            if (track.enabled) {\n                disableOthers(this, track);\n            }\n            super.addTrack(track);\n            if (!track.addEventListener) {\n                return;\n            }\n            track.enabledChange_ = () => {\n                if (this.changing_) {\n                    return;\n                }\n                this.changing_ = true;\n                disableOthers(this, track);\n                this.changing_ = false;\n                this.trigger('change');\n            };\n            track.addEventListener('enabledchange', track.enabledChange_);\n        }\n        removeTrack(rtrack) {\n            super.removeTrack(rtrack);\n            if (rtrack.removeEventListener && rtrack.enabledChange_) {\n                rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n                rtrack.enabledChange_ = null;\n            }\n        }\n    }\n    return AudioTrackList;\n});\ndefine('skylark-videojs/tracks/video-track-list',['./track-list'], function (TrackList) {\n    'use strict';\n    const disableOthers = function (list, track) {\n        for (let i = 0; i < list.length; i++) {\n            if (!Object.keys(list[i]).length || track.id === list[i].id) {\n                continue;\n            }\n            list[i].selected = false;\n        }\n    };\n    class VideoTrackList extends TrackList {\n        constructor(tracks = []) {\n            for (let i = tracks.length - 1; i >= 0; i--) {\n                if (tracks[i].selected) {\n                    disableOthers(tracks, tracks[i]);\n                    break;\n                }\n            }\n            super(tracks);\n            this.changing_ = false;\n            Object.defineProperty(this, 'selectedIndex', {\n                get() {\n                    for (let i = 0; i < this.length; i++) {\n                        if (this[i].selected) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                },\n                set() {\n                }\n            });\n        }\n        addTrack(track) {\n            if (track.selected) {\n                disableOthers(this, track);\n            }\n            super.addTrack(track);\n            if (!track.addEventListener) {\n                return;\n            }\n            track.selectedChange_ = () => {\n                if (this.changing_) {\n                    return;\n                }\n                this.changing_ = true;\n                disableOthers(this, track);\n                this.changing_ = false;\n                this.trigger('change');\n            };\n            track.addEventListener('selectedchange', track.selectedChange_);\n        }\n        removeTrack(rtrack) {\n            super.removeTrack(rtrack);\n            if (rtrack.removeEventListener && rtrack.selectedChange_) {\n                rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n                rtrack.selectedChange_ = null;\n            }\n        }\n    }\n    return VideoTrackList;\n});\ndefine('skylark-videojs/tracks/text-track-list',[\n    './track-list'\n], function (TrackList) {\n\n    'use strict';\n    \n    class TextTrackList extends TrackList {\n        addTrack(track) {\n            super.addTrack(track);\n            if (!this.queueChange_) {\n                this.queueChange_ = () => this.queueTrigger('change');\n            }\n            if (!this.triggerSelectedlanguagechange) {\n                this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n            }\n            track.addEventListener('modechange', this.queueChange_);\n            const nonLanguageTextTrackKind = [\n                'metadata',\n                'chapters'\n            ];\n            if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n                track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n            }\n        }\n        removeTrack(rtrack) {\n            super.removeTrack(rtrack);\n            if (rtrack.removeEventListener) {\n                if (this.queueChange_) {\n                    rtrack.removeEventListener('modechange', this.queueChange_);\n                }\n                if (this.selectedlanguagechange_) {\n                    rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n                }\n            }\n        }\n    }\n\n    return TextTrackList;\n});\ndefine('skylark-videojs/tracks/html-track-element-list',[],function () {\n    'use strict';\n    class HtmlTrackElementList {\n        constructor(trackElements = []) {\n            this.trackElements_ = [];\n            Object.defineProperty(this, 'length', {\n                get() {\n                    return this.trackElements_.length;\n                }\n            });\n            for (let i = 0, length = trackElements.length; i < length; i++) {\n                this.addTrackElement_(trackElements[i]);\n            }\n        }\n        addTrackElement_(trackElement) {\n            const index = this.trackElements_.length;\n            if (!('' + index in this)) {\n                Object.defineProperty(this, index, {\n                    get() {\n                        return this.trackElements_[index];\n                    }\n                });\n            }\n            if (this.trackElements_.indexOf(trackElement) === -1) {\n                this.trackElements_.push(trackElement);\n            }\n        }\n        getTrackElementByTrack_(track) {\n            let trackElement_;\n            for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n                if (track === this.trackElements_[i].track) {\n                    trackElement_ = this.trackElements_[i];\n                    break;\n                }\n            }\n            return trackElement_;\n        }\n        removeTrackElement_(trackElement) {\n            for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n                if (trackElement === this.trackElements_[i]) {\n                    if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n                        this.trackElements_[i].track.off();\n                    }\n                    if (typeof this.trackElements_[i].off === 'function') {\n                        this.trackElements_[i].off();\n                    }\n                    this.trackElements_.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n    return HtmlTrackElementList;\n});\ndefine('skylark-videojs/tracks/text-track-cue-list',[],function () {\n    'use strict';\n    class TextTrackCueList {\n        constructor(cues) {\n            TextTrackCueList.prototype.setCues_.call(this, cues);\n            Object.defineProperty(this, 'length', {\n                get() {\n                    return this.length_;\n                }\n            });\n        }\n        setCues_(cues) {\n            const oldLength = this.length || 0;\n            let i = 0;\n            const l = cues.length;\n            this.cues_ = cues;\n            this.length_ = cues.length;\n            const defineProp = function (index) {\n                if (!('' + index in this)) {\n                    Object.defineProperty(this, '' + index, {\n                        get() {\n                            return this.cues_[index];\n                        }\n                    });\n                }\n            };\n            if (oldLength < l) {\n                i = oldLength;\n                for (; i < l; i++) {\n                    defineProp.call(this, i);\n                }\n            }\n        }\n        getCueById(id) {\n            let result = null;\n            for (let i = 0, l = this.length; i < l; i++) {\n                const cue = this[i];\n                if (cue.id === id) {\n                    result = cue;\n                    break;\n                }\n            }\n            return result;\n        }\n    }\n    return TextTrackCueList;\n});\ndefine('skylark-videojs/tracks/track-enums',[],function () {\n    'use strict';\n    const VideoTrackKind = {\n        alternative: 'alternative',\n        captions: 'captions',\n        main: 'main',\n        sign: 'sign',\n        subtitles: 'subtitles',\n        commentary: 'commentary'\n    };\n    const AudioTrackKind = {\n        'alternative': 'alternative',\n        'descriptions': 'descriptions',\n        'main': 'main',\n        'main-desc': 'main-desc',\n        'translation': 'translation',\n        'commentary': 'commentary'\n    };\n    const TextTrackKind = {\n        subtitles: 'subtitles',\n        captions: 'captions',\n        descriptions: 'descriptions',\n        chapters: 'chapters',\n        metadata: 'metadata'\n    };\n    const TextTrackMode = {\n        disabled: 'disabled',\n        hidden: 'hidden',\n        showing: 'showing'\n    };\n    return {\n        VideoTrackKind: VideoTrackKind,\n        AudioTrackKind: AudioTrackKind,\n        TextTrackKind: TextTrackKind,\n        TextTrackMode: TextTrackMode\n    };\n});\ndefine('skylark-videojs/tracks/track',[\n    '../utils/guid',\n    '../event-target'\n], function (Guid, EventTarget) {\n    'use strict';\n    class Track extends EventTarget {\n        constructor(options = {}) {\n            super();\n            const trackProps = {\n                id: options.id || 'vjs_track_' + Guid.newGUID(),\n                kind: options.kind || '',\n                language: options.language || ''\n            };\n            let label = options.label || '';\n            for (const key in trackProps) {\n                Object.defineProperty(this, key, {\n                    get() {\n                        return trackProps[key];\n                    },\n                    set() {\n                    }\n                });\n            }\n            Object.defineProperty(this, 'label', {\n                get() {\n                    return label;\n                },\n                set(newLabel) {\n                    if (newLabel !== label) {\n                        label = newLabel;\n                        this.trigger('labelchange');\n                    }\n                }\n            });\n        }\n    }\n    return Track;\n});\ndefine('skylark-videojs/utils/url',[\n    'skylark-langx-globals/document'\n], function (document) {\n    'use strict';\n    const parseUrl = function (url) {\n        const props = [\n            'protocol',\n            'hostname',\n            'port',\n            'pathname',\n            'search',\n            'hash',\n            'host'\n        ];\n        let a = document.createElement('a');\n        a.href = url;\n        const addToBody = a.host === '' && a.protocol !== 'file:';\n        let div;\n        if (addToBody) {\n            div = document.createElement('div');\n            div.innerHTML = `<a href=\"${ url }\"></a>`;\n            a = div.firstChild;\n            div.setAttribute('style', 'display:none; position:absolute;');\n            document.body.appendChild(div);\n        }\n        const details = {};\n        for (let i = 0; i < props.length; i++) {\n            details[props[i]] = a[props[i]];\n        }\n        if (details.protocol === 'http:') {\n            details.host = details.host.replace(/:80$/, '');\n        }\n        if (details.protocol === 'https:') {\n            details.host = details.host.replace(/:443$/, '');\n        }\n        if (!details.protocol) {\n            details.protocol = window.location.protocol;\n        }\n        if (addToBody) {\n            document.body.removeChild(div);\n        }\n        return details;\n    };\n    const getAbsoluteURL = function (url) {\n        if (!url.match(/^https?:\\/\\//)) {\n            const div = document.createElement('div');\n            div.innerHTML = `<a href=\"${ url }\">x</a>`;\n            url = div.firstChild.href;\n        }\n        return url;\n    };\n    const getFileExtension = function (path) {\n        if (typeof path === 'string') {\n            const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n            const pathParts = splitPathRe.exec(path);\n            if (pathParts) {\n                return pathParts.pop().toLowerCase();\n            }\n        }\n        return '';\n    };\n    const isCrossOrigin = function (url, winLoc = window.location) {\n        const urlInfo = parseUrl(url);\n        const srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n        const crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n        return crossOrigin;\n    };\n    return {\n        parseUrl: parseUrl,\n        getAbsoluteURL: getAbsoluteURL,\n        getFileExtension: getFileExtension,\n        isCrossOrigin: isCrossOrigin\n    };\n});\ndefine('skylark-videojs/utils/xhr',[\r\n\t\"skylark-langx-globals/window\",\r\n\t\"skylark-langx-objects\",\r\n\t\"skylark-langx-types\",\r\n\t\"skylark-net-http/Xhr\"\r\n],function(window,objects,types,_Xhr){\r\n\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * @license\r\n\t * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\r\n\t * Copyright (c) 2014 David Björklund\r\n\t * Available under the MIT license\r\n\t * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\r\n\t */\r\n\r\n\tvar parseHeaders = function(headers) {\r\n\t    var result = {};\r\n\r\n\t    if (!headers) {\r\n\t        return result;\r\n\t    }\r\n\r\n\t    headers.trim().split('\\n').forEach(function(row) {\r\n\t        var index = row.indexOf(':');\r\n\t        var key = row.slice(0, index).trim().toLowerCase();\r\n\t        var value = row.slice(index + 1).trim();\r\n\r\n\t        if (typeof(result[key]) === 'undefined') {\r\n\t          result[key] = value\r\n\t        } else if (Array.isArray(result[key])) {\r\n\t          result[key].push(value)\r\n\t        } else {\r\n\t          result[key] = [ result[key], value ]\r\n\t        }\r\n\t    });\r\n\r\n\t    return result;\r\n\t};\r\n\r\n\r\n\tcreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\r\n\tcreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\r\n\r\n\tforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\r\n\t    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\r\n\t        options = initParams(uri, options, callback)\r\n\t        options.method = method.toUpperCase()\r\n\t        return _createXHR(options)\r\n\t    }\r\n\t})\r\n\r\n\tfunction forEachArray(array, iterator) {\r\n\t    for (var i = 0; i < array.length; i++) {\r\n\t        iterator(array[i])\r\n\t    }\r\n\t}\r\n\r\n\tfunction isEmpty(obj){\r\n\t    for(var i in obj){\r\n\t        if(obj.hasOwnProperty(i)) return false\r\n\t    }\r\n\t    return true\r\n\t}\r\n\r\n\tfunction initParams(uri, options, callback) {\r\n\t    var params = uri\r\n\r\n\t    if (types.isFunction(options)) {\r\n\t        callback = options\r\n\t        if (typeof uri === \"string\") {\r\n\t            params = {uri:uri}\r\n\t        }\r\n\t    } else {\r\n\t        params = objects.mixin({}, options, {uri: uri})\r\n\t    }\r\n\r\n\t    params.callback = callback\r\n\t    return params\r\n\t}\r\n\r\n\tfunction createXHR(uri, options, callback) {\r\n\t    options = initParams(uri, options, callback)\r\n\t    return _createXHR(options)\r\n\t}\r\n\r\n\tfunction _createXHR(options) {\r\n\t    if(typeof options.callback === \"undefined\"){\r\n\t        throw new Error(\"callback argument missing\")\r\n\t    }\r\n\r\n\t    var called = false\r\n\t    var callback = function cbOnce(err, response, body){\r\n\t        if(!called){\r\n\t            called = true\r\n\t            options.callback(err, response, body)\r\n\t        }\r\n\t    }\r\n\r\n\t    function readystatechange() {\r\n\t        if (xhr.readyState === 4) {\r\n\t            setTimeout(loadFunc, 0)\r\n\t        }\r\n\t    }\r\n\r\n\t    function getBody() {\r\n\t        // Chrome with requestType=blob throws errors arround when even testing access to responseText\r\n\t        var body = undefined\r\n\r\n\t        if (xhr.response) {\r\n\t            body = xhr.response\r\n\t        } else {\r\n\t            body = xhr.responseText || getXml(xhr)\r\n\t        }\r\n\r\n\t        if (isJson) {\r\n\t            try {\r\n\t                body = JSON.parse(body)\r\n\t            } catch (e) {}\r\n\t        }\r\n\r\n\t        return body\r\n\t    }\r\n\r\n\t    function errorFunc(evt) {\r\n\t        clearTimeout(timeoutTimer)\r\n\t        if(!(evt instanceof Error)){\r\n\t            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\r\n\t        }\r\n\t        evt.statusCode = 0\r\n\t        return callback(evt, failureResponse)\r\n\t    }\r\n\r\n\t    // will load the data & process the response in a special response object\r\n\t    function loadFunc() {\r\n\t        if (aborted) return\r\n\t        var status\r\n\t        clearTimeout(timeoutTimer)\r\n\t        if(options.useXDR && xhr.status===undefined) {\r\n\t            //IE8 CORS GET successful response doesn't have a status field, but body is fine\r\n\t            status = 200\r\n\t        } else {\r\n\t            status = (xhr.status === 1223 ? 204 : xhr.status)\r\n\t        }\r\n\t        var response = failureResponse\r\n\t        var err = null\r\n\r\n\t        if (status !== 0){\r\n\t            response = {\r\n\t                body: getBody(),\r\n\t                statusCode: status,\r\n\t                method: method,\r\n\t                headers: {},\r\n\t                url: uri,\r\n\t                rawRequest: xhr\r\n\t            }\r\n\t            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\r\n\t                response.headers = parseHeaders(xhr.getAllResponseHeaders())\r\n\t            }\r\n\t        } else {\r\n\t            err = new Error(\"Internal XMLHttpRequest Error\")\r\n\t        }\r\n\t        return callback(err, response, response.body)\r\n\t    }\r\n\r\n\t    var xhr = options.xhr || null\r\n\r\n\t    if (!xhr) {\r\n\t        if (options.cors || options.useXDR) {\r\n\t            xhr = new createXHR.XDomainRequest()\r\n\t        }else{\r\n\t            xhr = new createXHR.XMLHttpRequest()\r\n\t        }\r\n\t    }\r\n\r\n\t    var key\r\n\t    var aborted\r\n\t    var uri = xhr.url = options.uri || options.url\r\n\t    var method = xhr.method = options.method || \"GET\"\r\n\t    var body = options.body || options.data\r\n\t    var headers = xhr.headers = options.headers || {}\r\n\t    var sync = !!options.sync\r\n\t    var isJson = false\r\n\t    var timeoutTimer\r\n\t    var failureResponse = {\r\n\t        body: undefined,\r\n\t        headers: {},\r\n\t        statusCode: 0,\r\n\t        method: method,\r\n\t        url: uri,\r\n\t        rawRequest: xhr\r\n\t    }\r\n\r\n\t    if (\"json\" in options && options.json !== false) {\r\n\t        isJson = true\r\n\t        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\r\n\t        if (method !== \"GET\" && method !== \"HEAD\") {\r\n\t            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\r\n\t            body = JSON.stringify(options.json === true ? body : options.json)\r\n\t        }\r\n\t    }\r\n\r\n\t    xhr.onreadystatechange = readystatechange\r\n\t    xhr.onload = loadFunc\r\n\t    xhr.onerror = errorFunc\r\n\t    // IE9 must have onprogress be set to a unique function.\r\n\t    xhr.onprogress = function () {\r\n\t        // IE must die\r\n\t    }\r\n\t    xhr.onabort = function(){\r\n\t        aborted = true;\r\n\t    }\r\n\t    xhr.ontimeout = errorFunc\r\n\t    xhr.open(method, uri, !sync, options.username, options.password)\r\n\t    //has to be after open\r\n\t    if(!sync) {\r\n\t        xhr.withCredentials = !!options.withCredentials\r\n\t    }\r\n\t    // Cannot set timeout with sync request\r\n\t    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\r\n\t    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\r\n\t    if (!sync && options.timeout > 0 ) {\r\n\t        timeoutTimer = setTimeout(function(){\r\n\t            if (aborted) return\r\n\t            aborted = true//IE9 may still call readystatechange\r\n\t            xhr.abort(\"timeout\")\r\n\t            var e = new Error(\"XMLHttpRequest timeout\")\r\n\t            e.code = \"ETIMEDOUT\"\r\n\t            errorFunc(e)\r\n\t        }, options.timeout )\r\n\t    }\r\n\r\n\t    if (xhr.setRequestHeader) {\r\n\t        for(key in headers){\r\n\t            if(headers.hasOwnProperty(key)){\r\n\t                xhr.setRequestHeader(key, headers[key])\r\n\t            }\r\n\t        }\r\n\t    } else if (options.headers && !isEmpty(options.headers)) {\r\n\t        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\r\n\t    }\r\n\r\n\t    if (\"responseType\" in options) {\r\n\t        xhr.responseType = options.responseType\r\n\t    }\r\n\r\n\t    if (\"beforeSend\" in options &&\r\n\t        typeof options.beforeSend === \"function\"\r\n\t    ) {\r\n\t        options.beforeSend(xhr)\r\n\t    }\r\n\r\n\t    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\r\n\t    // XMLHttpRequest spec says to pass null as body to indicate no body\r\n\t    // See https://github.com/naugtur/xhr/issues/100.\r\n\t    xhr.send(body || null)\r\n\r\n\t    return xhr\r\n\r\n\r\n\t}\r\n\r\n\tfunction getXml(xhr) {\r\n\t    // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\r\n\t    // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\r\n\t    try {\r\n\t        if (xhr.responseType === \"document\") {\r\n\t            return xhr.responseXML\r\n\t        }\r\n\t        var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\r\n\t        if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\r\n\t            return xhr.responseXML\r\n\t        }\r\n\t    } catch (e) {}\r\n\r\n\t    return null\r\n\t}\r\n\r\n\tfunction noop() {}\r\n\r\n\t//return createXHR;\r\n\r\n\r\n\treturn function(uri, options, callback) {\r\n\t    options = initParams(uri, options, callback);\r\n\r\n\t    var x =  _Xhr.request(options.uri,options).then(function(result){\r\n\t    \toptions.callback(null,x,result)\r\n\t    }).catch(function(e,status){\r\n\t    \toptions.callback(e,status);\r\n\t    });\r\n\r\n\t    return x;\r\n\r\n\t};\r\n\r\n\r\n});\ndefine('skylark-videojs/tracks/text-track',[\n    'skylark-videojs-vtt',\n    './text-track-cue-list',\n    '../utils/fn',\n    './track-enums',\n    '../utils/log',\n    './track',\n    '../utils/url',\n    '../utils/xhr',\n    '../utils/merge-options'\n], function (vtt,TextTrackCueList, Fn, TrackEnums, log, Track, url, XHR, merge) {\n    'use strict';\n    const parseCues = function (srcContent, track) {\n        const parser = new vtt.WebVTT.Parser(window, vtt, vtt.WebVTT.StringDecoder());\n        const errors = [];\n        parser.oncue = function (cue) {\n            track.addCue(cue);\n        };\n        parser.onparsingerror = function (error) {\n            errors.push(error);\n        };\n        parser.onflush = function () {\n            track.trigger({\n                type: 'loadeddata',\n                target: track\n            });\n        };\n        parser.parse(srcContent);\n        if (errors.length > 0) {\n            if (window.console && window.console.groupCollapsed) {\n                window.console.groupCollapsed(`Text Track parsing errors for ${ track.src }`);\n            }\n            errors.forEach(error => log.error(error));\n            if (window.console && window.console.groupEnd) {\n                window.console.groupEnd();\n            }\n        }\n        parser.flush();\n    };\n    const loadTrack = function (src, track) {\n        const opts = { uri: src };\n        const crossOrigin = url.isCrossOrigin(src);\n        if (crossOrigin) {\n            opts.cors = crossOrigin;\n        }\n        const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n        if (withCredentials) {\n            opts.withCredentials = withCredentials;\n        }\n        XHR(opts, Fn.bind(this, function (err, response, responseBody) {\n            if (err) {\n                return log.error(err, response);\n            }\n            track.loaded_ = true;\n            if (typeof vtt.WebVTT !== 'function') {\n                if (track.tech_) {\n                    track.tech_.any([\n                        'vttjsloaded',\n                        'vttjserror'\n                    ], event => {\n                        if (event.type === 'vttjserror') {\n                            log.error(`vttjs failed to load, stopping trying to process ${ track.src }`);\n                            return;\n                        }\n                        return parseCues(responseBody, track);\n                    });\n                }\n            } else {\n                parseCues(responseBody, track);\n            }\n        }));\n    };\n    class TextTrack extends Track {\n        constructor(options = {}) {\n            if (!options.tech) {\n                throw new Error('A tech was not provided.');\n            }\n            const settings = merge(options, {\n                kind: TrackEnums.TextTrackKind[options.kind] || 'subtitles',\n                language: options.language || options.srclang || ''\n            });\n            let mode = TrackEnums.TextTrackMode[settings.mode] || 'disabled';\n            const default_ = settings.default;\n            if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n                mode = 'hidden';\n            }\n            super(settings);\n            this.tech_ = settings.tech;\n            this.cues_ = [];\n            this.activeCues_ = [];\n            this.preload_ = this.tech_.preloadTextTracks !== false;\n            const cues = new TextTrackCueList(this.cues_);\n            const activeCues = new TextTrackCueList(this.activeCues_);\n            let changed = false;\n            const timeupdateHandler = Fn.bind(this, function () {\n                if (!this.tech_.isReady_ || this.tech_.isDisposed()) {\n                    return;\n                }\n                this.activeCues = this.activeCues;\n                if (changed) {\n                    this.trigger('cuechange');\n                    changed = false;\n                }\n            });\n            const disposeHandler = () => {\n                this.tech_.off('timeupdate', timeupdateHandler);\n            };\n            this.tech_.one('dispose', disposeHandler);\n            if (mode !== 'disabled') {\n                this.tech_.on('timeupdate', timeupdateHandler);\n            }\n            Object.defineProperties(this, {\n                default: {\n                    get() {\n                        return default_;\n                    },\n                    set() {\n                    }\n                },\n                mode: {\n                    get() {\n                        return mode;\n                    },\n                    set(newMode) {\n                        if (!TrackEnums.TextTrackMode[newMode]) {\n                            return;\n                        }\n                        if (mode === newMode) {\n                            return;\n                        }\n                        mode = newMode;\n                        if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n                            loadTrack(this.src, this);\n                        }\n                        this.tech_.off('timeupdate', timeupdateHandler);\n                        if (mode !== 'disabled') {\n                            this.tech_.on('timeupdate', timeupdateHandler);\n                        }\n                        this.trigger('modechange');\n                    }\n                },\n                cues: {\n                    get() {\n                        if (!this.loaded_) {\n                            return null;\n                        }\n                        return cues;\n                    },\n                    set() {\n                    }\n                },\n                activeCues: {\n                    get() {\n                        if (!this.loaded_) {\n                            return null;\n                        }\n                        if (this.cues.length === 0) {\n                            return activeCues;\n                        }\n                        const ct = this.tech_.currentTime();\n                        const active = [];\n                        for (let i = 0, l = this.cues.length; i < l; i++) {\n                            const cue = this.cues[i];\n                            if (cue.startTime <= ct && cue.endTime >= ct) {\n                                active.push(cue);\n                            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n                                active.push(cue);\n                            }\n                        }\n                        changed = false;\n                        if (active.length !== this.activeCues_.length) {\n                            changed = true;\n                        } else {\n                            for (let i = 0; i < active.length; i++) {\n                                if (this.activeCues_.indexOf(active[i]) === -1) {\n                                    changed = true;\n                                }\n                            }\n                        }\n                        this.activeCues_ = active;\n                        activeCues.setCues_(this.activeCues_);\n                        return activeCues;\n                    },\n                    set() {\n                    }\n                }\n            });\n            if (settings.src) {\n                this.src = settings.src;\n                if (!this.preload_) {\n                    this.loaded_ = true;\n                }\n                if (this.preload_ || default_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n                    loadTrack(this.src, this);\n                }\n            } else {\n                this.loaded_ = true;\n            }\n        }\n        addCue(originalCue) {\n            let cue = originalCue;\n            if (vtt && !(originalCue instanceof vtt.VTTCue)) {\n                cue = new vtt.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n                for (const prop in originalCue) {\n                    if (!(prop in cue)) {\n                        cue[prop] = originalCue[prop];\n                    }\n                }\n                cue.id = originalCue.id;\n                cue.originalCue_ = originalCue;\n            }\n            const tracks = this.tech_.textTracks();\n            for (let i = 0; i < tracks.length; i++) {\n                if (tracks[i] !== this) {\n                    tracks[i].removeCue(cue);\n                }\n            }\n            this.cues_.push(cue);\n            this.cues.setCues_(this.cues_);\n        }\n        removeCue(removeCue) {\n            let i = this.cues_.length;\n            while (i--) {\n                const cue = this.cues_[i];\n                if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n                    this.cues_.splice(i, 1);\n                    this.cues.setCues_(this.cues_);\n                    break;\n                }\n            }\n        }\n    }\n    TextTrack.prototype.allowedEvents_ = { cuechange: 'cuechange' };\n    return TextTrack;\n});\ndefine('skylark-videojs/tracks/audio-track',[\n    './track-enums',\n    './track',\n    '../utils/merge-options'\n], function (TrackEnums, Track, merge) {\n    'use strict';\n    class AudioTrack extends Track {\n        constructor(options = {}) {\n            const settings = merge(options, { kind: TrackEnums.AudioTrackKind[options.kind] || '' });\n            super(settings);\n            let enabled = false;\n            Object.defineProperty(this, 'enabled', {\n                get() {\n                    return enabled;\n                },\n                set(newEnabled) {\n                    if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n                        return;\n                    }\n                    enabled = newEnabled;\n                    this.trigger('enabledchange');\n                }\n            });\n            if (settings.enabled) {\n                this.enabled = settings.enabled;\n            }\n            this.loaded_ = true;\n        }\n    }\n    return AudioTrack;\n});\ndefine('skylark-videojs/tracks/video-track',[\n    './track-enums',\n    './track',\n    '../utils/merge-options'\n], function (TrackEnums, Track, merge) {\n    'use strict';\n    class VideoTrack extends Track {\n        constructor(options = {}) {\n            const settings = merge(options, { kind: TrackEnums.VideoTrackKind[options.kind] || '' });\n            super(settings);\n            let selected = false;\n            Object.defineProperty(this, 'selected', {\n                get() {\n                    return selected;\n                },\n                set(newSelected) {\n                    if (typeof newSelected !== 'boolean' || newSelected === selected) {\n                        return;\n                    }\n                    selected = newSelected;\n                    this.trigger('selectedchange');\n                }\n            });\n            if (settings.selected) {\n                this.selected = settings.selected;\n            }\n        }\n    }\n    return VideoTrack;\n});\ndefine('skylark-videojs/tracks/html-track-element',[\n    '../event-target',\n    '../tracks/text-track'\n], function (EventTarget, TextTrack) {\n    'use strict';\n    const NONE = 0;\n    const LOADING = 1;\n    const LOADED = 2;\n    const ERROR = 3;\n    class HTMLTrackElement extends EventTarget {\n        constructor(options = {}) {\n            super();\n            let readyState;\n            const track = new TextTrack(options);\n            this.kind = track.kind;\n            this.src = track.src;\n            this.srclang = track.language;\n            this.label = track.label;\n            this.default = track.default;\n            Object.defineProperties(this, {\n                readyState: {\n                    get() {\n                        return readyState;\n                    }\n                },\n                track: {\n                    get() {\n                        return track;\n                    }\n                }\n            });\n            readyState = NONE;\n            track.addEventListener('loadeddata', () => {\n                readyState = LOADED;\n                this.trigger({\n                    type: 'load',\n                    target: this\n                });\n            });\n        }\n    }\n    HTMLTrackElement.prototype.allowedEvents_ = { load: 'load' };\n    HTMLTrackElement.NONE = NONE;\n    HTMLTrackElement.LOADING = LOADING;\n    HTMLTrackElement.LOADED = LOADED;\n    HTMLTrackElement.ERROR = ERROR;\n    return HTMLTrackElement;\n});\ndefine('skylark-videojs/tracks/track-types',[\n    './audio-track-list',\n    './video-track-list',\n    './text-track-list',\n    './html-track-element-list',\n    './text-track',\n    './audio-track',\n    './video-track',\n    './html-track-element'\n], function (AudioTrackList, VideoTrackList, TextTrackList, HtmlTrackElementList, TextTrack, AudioTrack, VideoTrack, HTMLTrackElement) {\n    'use strict';\n    const NORMAL = {\n        audio: {\n            ListClass: AudioTrackList,\n            TrackClass: AudioTrack,\n            capitalName: 'Audio'\n        },\n        video: {\n            ListClass: VideoTrackList,\n            TrackClass: VideoTrack,\n            capitalName: 'Video'\n        },\n        text: {\n            ListClass: TextTrackList,\n            TrackClass: TextTrack,\n            capitalName: 'Text'\n        }\n    };\n    Object.keys(NORMAL).forEach(function (type) {\n        NORMAL[type].getterName = `${ type }Tracks`;\n        NORMAL[type].privateName = `${ type }Tracks_`;\n    });\n    const REMOTE = {\n        remoteText: {\n            ListClass: TextTrackList,\n            TrackClass: TextTrack,\n            capitalName: 'RemoteText',\n            getterName: 'remoteTextTracks',\n            privateName: 'remoteTextTracks_'\n        },\n        remoteTextEl: {\n            ListClass: HtmlTrackElementList,\n            TrackClass: HTMLTrackElement,\n            capitalName: 'RemoteTextTrackEls',\n            getterName: 'remoteTextTrackEls',\n            privateName: 'remoteTextTrackEls_'\n        }\n    };\n    const ALL = Object.assign({}, NORMAL, REMOTE);\n    REMOTE.names = Object.keys(REMOTE);\n    NORMAL.names = Object.keys(NORMAL);\n    ALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n    return {\n        NORMAL,\n        REMOTE,\n        ALL\n    };\n});\ndefine('skylark-videojs/tech/tech',[\n    'skylark-langx-globals/window',\n    'skylark-langx-globals/document',\n    '../component',\n    '../utils/merge-options',\n    '../utils/fn',\n    '../utils/log',\n    '../utils/time-ranges',\n    '../utils/buffer',\n    '../media-error',\n    '../utils/obj',\n    '../tracks/track-types',\n    '../utils/string-cases',\n    'skylark-videojs-vtt'\n], function (window, document, Component, mergeOptions, Fn, log, timeRages, buffer, MediaError, obj, TRACK_TYPES, stringCases, vtt) {\n    'use strict';\n    function createTrackHelper(self, kind, label, language, options = {}) {\n        const tracks = self.textTracks();\n        options.kind = kind;\n        if (label) {\n            options.label = label;\n        }\n        if (language) {\n            options.language = language;\n        }\n        options.tech = self;\n        const track = new TRACK_TYPES.ALL.text.TrackClass(options);\n        tracks.addTrack(track);\n        return track;\n    }\n    class Tech extends Component {\n        constructor(options = {}, ready = function () {\n        }) {\n            options.reportTouchActivity = false;\n            super(null, options, ready);\n            this.hasStarted_ = false;\n            this.listenTo('playing', function () {\n                this.hasStarted_ = true;\n            });\n            this.listenTo('loadstart', function () {\n                this.hasStarted_ = false;\n            });\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                if (options && options[props.getterName]) {\n                    this[props.privateName] = options[props.getterName];\n                }\n            });\n            if (!this.featuresProgressEvents) {\n                this.manualProgressOn();\n            }\n            if (!this.featuresTimeupdateEvents) {\n                this.manualTimeUpdatesOn();\n            }\n            [\n                'Text',\n                'Audio',\n                'Video'\n            ].forEach(track => {\n                if (options[`native${ track }Tracks`] === false) {\n                    this[`featuresNative${ track }Tracks`] = false;\n                }\n            });\n            if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n                this.featuresNativeTextTracks = false;\n            } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n                this.featuresNativeTextTracks = true;\n            }\n            if (!this.featuresNativeTextTracks) {\n                this.emulateTextTracks();\n            }\n            this.preloadTextTracks = options.preloadTextTracks !== false;\n            this.autoRemoteTextTracks_ = new TRACK_TYPES.ALL.text.ListClass();\n            this.initTrackListeners();\n            if (!options.nativeControlsForTouch) {\n                this.emitTapEvents();\n            }\n            if (this.constructor) {\n                this.name_ = this.constructor.name || 'Unknown Tech';\n            }\n        }\n        triggerSourceset(src) {\n            if (!this.isReady_) {\n                this.listenToOnce('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n            }\n            this.trigger({\n                src,\n                type: 'sourceset'\n            });\n        }\n        manualProgressOn() {\n            this.listenTo('durationchange', this.listenToDurationChange);\n            this.manualProgress = true;\n            this.listenToOnce('ready', this.trackProgress);\n        }\n        manualProgressOff() {\n            this.manualProgress = false;\n            this.stopTrackingProgress();\n            this.unlistenTo('durationchange', this.listenToDurationChange);\n        }\n        trackProgress(event) {\n            this.stopTrackingProgress();\n            this.progressInterval = this.setInterval(Fn.bind(this, function () {\n                const numBufferedPercent = this.undefined();\n                if (this.bufferedPercent_ !== numBufferedPercent) {\n                    this.trigger('progress');\n                }\n                this.bufferedPercent_ = numBufferedPercent;\n                if (numBufferedPercent === 1) {\n                    this.stopTrackingProgress();\n                }\n            }), 500);\n        }\n        onDurationChange(event) {\n            this.duration_ = this.duration();\n        }\n        buffered() {\n            return timeRages.createTimeRange(0, 0);\n        }\n        bufferedPercent() {\n            return buffer.bufferedPercent(this.buffered(), this.duration_);\n        }\n        stopTrackingProgress() {\n            this.clearInterval(this.progressInterval);\n        }\n        manualTimeUpdatesOn() {\n            this.manualTimeUpdates = true;\n            this.listenTo('play', this.trackCurrentTime);\n            this.listenTo('pause', this.stopTrackingCurrentTime);\n        }\n        manualTimeUpdatesOff() {\n            this.manualTimeUpdates = false;\n            this.stopTrackingCurrentTime();\n            this.unlistenTo('play', this.trackCurrentTime);\n            this.unlistenTo('pause', this.stopTrackingCurrentTime);\n        }\n        trackCurrentTime() {\n            if (this.currentTimeInterval) {\n                this.stopTrackingCurrentTime();\n            }\n            this.currentTimeInterval = this.setInterval(function () {\n                this.trigger({\n                    type: 'timeupdate',\n                    target: this,\n                    manuallyTriggered: true\n                });\n            }, 250);\n        }\n        stopTrackingCurrentTime() {\n            this.clearInterval(this.currentTimeInterval);\n            this.trigger({\n                type: 'timeupdate',\n                target: this,\n                manuallyTriggered: true\n            });\n        }\n        dispose() {\n            this.clearTracks(TRACK_TYPES.NORMAL.names);\n            if (this.manualProgress) {\n                this.manualProgressOff();\n            }\n            if (this.manualTimeUpdates) {\n                this.manualTimeUpdatesOff();\n            }\n            super.dispose();\n        }\n        clearTracks(types) {\n            types = [].concat(types);\n            types.forEach(type => {\n                const list = this[`${ type }Tracks`]() || [];\n                let i = list.length;\n                while (i--) {\n                    const track = list[i];\n                    if (type === 'text') {\n                        this.removeRemoteTextTrack(track);\n                    }\n                    list.removeTrack(track);\n                }\n            });\n        }\n        cleanupAutoTextTracks() {\n            const list = this.autoRemoteTextTracks_ || [];\n            let i = list.length;\n            while (i--) {\n                const track = list[i];\n                this.removeRemoteTextTrack(track);\n            }\n        }\n        reset() {\n        }\n        crossOrigin() {\n        }\n        setCrossOrigin() {\n        }\n        error(err) {\n            if (err !== undefined) {\n                this.error_ = new MediaError(err);\n                this.trigger('error');\n            }\n            return this.error_;\n        }\n        played() {\n            if (this.hasStarted_) {\n                return timeRages.createTimeRange(0, 0);\n            }\n            return timeRages.createTimeRange();\n        }\n        play() {\n        }\n        setScrubbing() {\n        }\n        scrubbing() {\n        }\n        setCurrentTime() {\n            if (this.manualTimeUpdates) {\n                this.trigger({\n                    type: 'timeupdate',\n                    target: this,\n                    manuallyTriggered: true\n                });\n            }\n        }\n        initTrackListeners() {\n            TRACK_TYPES.NORMAL.names.forEach(name => {\n                const props = TRACK_TYPES.NORMAL[name];\n                const trackListChanges = () => {\n                    this.trigger(`${ name }trackchange`);\n                };\n                const tracks = this[props.getterName]();\n                tracks.addEventListener('removetrack', trackListChanges);\n                tracks.addEventListener('addtrack', trackListChanges);\n                this.listenTo('dispose', () => {\n                    tracks.removeEventListener('removetrack', trackListChanges);\n                    tracks.removeEventListener('addtrack', trackListChanges);\n                });\n            });\n        }\n        addWebVttScript_() {\n            if (window.WebVTT) {\n                return;\n            }\n            if (document.body.contains(this.el())) {\n                if (!this.options_['vtt.js'] && obj.isPlain(vtt) && Object.keys(vtt).length > 0) {\n                    this.trigger('vttjsloaded');\n                    return;\n                }\n                const script = document.createElement('script');\n                script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n                script.onload = () => {\n                    this.trigger('vttjsloaded');\n                };\n                script.onerror = () => {\n                    this.trigger('vttjserror');\n                };\n                this.listenTo('dispose', () => {\n                    script.onload = null;\n                    script.onerror = null;\n                });\n                window.WebVTT = true;\n                this.el().parentNode.appendChild(script);\n            } else {\n                this.ready(this.addWebVttScript_);\n            }\n        }\n        emulateTextTracks() {\n            const tracks = this.textTracks();\n            const remoteTracks = this.remoteTextTracks();\n            const handleAddTrack = e => tracks.addTrack(e.track);\n            const handleRemoveTrack = e => tracks.removeTrack(e.track);\n            remoteTracks.on('addtrack', handleAddTrack);\n            remoteTracks.on('removetrack', handleRemoveTrack);\n            this.addWebVttScript_();\n            const updateDisplay = () => this.trigger('texttrackchange');\n            const textTracksChanges = () => {\n                updateDisplay();\n                for (let i = 0; i < tracks.length; i++) {\n                    const track = tracks[i];\n                    track.removeEventListener('cuechange', updateDisplay);\n                    if (track.mode === 'showing') {\n                        track.addEventListener('cuechange', updateDisplay);\n                    }\n                }\n            };\n            textTracksChanges();\n            tracks.addEventListener('change', textTracksChanges);\n            tracks.addEventListener('addtrack', textTracksChanges);\n            tracks.addEventListener('removetrack', textTracksChanges);\n            this.listenTo('dispose', function () {\n                remoteTracks.off('addtrack', handleAddTrack);\n                remoteTracks.off('removetrack', handleRemoveTrack);\n                tracks.removeEventListener('change', textTracksChanges);\n                tracks.removeEventListener('addtrack', textTracksChanges);\n                tracks.removeEventListener('removetrack', textTracksChanges);\n                for (let i = 0; i < tracks.length; i++) {\n                    const track = tracks[i];\n                    track.removeEventListener('cuechange', updateDisplay);\n                }\n            });\n        }\n        addTextTrack(kind, label, language) {\n            if (!kind) {\n                throw new Error('TextTrack kind is required but was not provided');\n            }\n            return createTrackHelper(this, kind, label, language);\n        }\n        createRemoteTextTrack(options) {\n            const track = mergeOptions(options, { tech: this });\n            return new TRACK_TYPES.REMOTE.remoteTextEl.TrackClass(track);\n        }\n        addRemoteTextTrack(options = {}, manualCleanup) {\n            const htmlTrackElement = this.createRemoteTextTrack(options);\n            if (manualCleanup !== true && manualCleanup !== false) {\n                log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n                manualCleanup = true;\n            }\n            this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n            this.remoteTextTracks().addTrack(htmlTrackElement.track);\n            if (manualCleanup !== true) {\n                this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n            }\n            return htmlTrackElement;\n        }\n        removeRemoteTextTrack(track) {\n            const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n            this.remoteTextTrackEls().removeTrackElement_(trackElement);\n            this.remoteTextTracks().removeTrack(track);\n            this.autoRemoteTextTracks_.removeTrack(track);\n        }\n        getVideoPlaybackQuality() {\n            return {};\n        }\n        requestPictureInPicture() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                return PromiseClass.reject();\n            }\n        }\n        disablePictureInPicture() {\n            return true;\n        }\n        setDisablePictureInPicture() {\n        }\n        setPoster() {\n        }\n        playsinline() {\n        }\n        setPlaysinline() {\n        }\n        overrideNativeAudioTracks() {\n        }\n        overrideNativeVideoTracks() {\n        }\n        canPlayType() {\n            return '';\n        }\n        static canPlayType() {\n            return '';\n        }\n        static canPlaySource(srcObj, options) {\n            return Tech.canPlayType(srcObj.type);\n        }\n        static isTech(component) {\n            return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n        }\n        static registerTech(name, tech) {\n            if (!Tech.techs_) {\n                Tech.techs_ = {};\n            }\n            if (!Tech.isTech(tech)) {\n                throw new Error(`Tech ${ name } must be a Tech`);\n            }\n            if (!Tech.canPlayType) {\n                throw new Error('Techs must have a static canPlayType method on them');\n            }\n            if (!Tech.canPlaySource) {\n                throw new Error('Techs must have a static canPlaySource method on them');\n            }\n            name = stringCases.toTitleCase(name);\n            Tech.techs_[name] = tech;\n            Tech.techs_[stringCases.toLowerCase(name)] = tech;\n            if (name !== 'Tech') {\n                Tech.defaultTechOrder_.push(name);\n            }\n            return tech;\n        }\n        static getTech(name) {\n            if (!name) {\n                return;\n            }\n            if (Tech.techs_ && Tech.techs_[name]) {\n                return Tech.techs_[name];\n            }\n            name = stringCases.toTitleCase(name);\n            if (window && window.videojs && window.videojs[name]) {\n                log.warn(`The ${ name } tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n                return window.videojs[name];\n            }\n        }\n    }\n    TRACK_TYPES.ALL.names.forEach(function (name) {\n        const props = TRACK_TYPES.ALL[name];\n        Tech.prototype[props.getterName] = function () {\n            this[props.privateName] = this[props.privateName] || new props.ListClass();\n            return this[props.privateName];\n        };\n    });\n    Tech.prototype.featuresVolumeControl = true;\n    Tech.prototype.featuresMuteControl = true;\n    Tech.prototype.featuresFullscreenResize = false;\n    Tech.prototype.featuresPlaybackRate = false;\n    Tech.prototype.featuresProgressEvents = false;\n    Tech.prototype.featuresSourceset = false;\n    Tech.prototype.featuresTimeupdateEvents = false;\n    Tech.prototype.featuresNativeTextTracks = false;\n    Tech.withSourceHandlers = function (_Tech) {\n        _Tech.registerSourceHandler = function (handler, index) {\n            let handlers = _Tech.sourceHandlers;\n            if (!handlers) {\n                handlers = _Tech.sourceHandlers = [];\n            }\n            if (index === undefined) {\n                index = handlers.length;\n            }\n            handlers.splice(index, 0, handler);\n        };\n        _Tech.canPlayType = function (type) {\n            const handlers = _Tech.sourceHandlers || [];\n            let can;\n            for (let i = 0; i < handlers.length; i++) {\n                can = handlers[i].canPlayType(type);\n                if (can) {\n                    return can;\n                }\n            }\n            return '';\n        };\n        _Tech.selectSourceHandler = function (source, options) {\n            const handlers = _Tech.sourceHandlers || [];\n            let can;\n            for (let i = 0; i < handlers.length; i++) {\n                can = handlers[i].canHandleSource(source, options);\n                if (can) {\n                    return handlers[i];\n                }\n            }\n            return null;\n        };\n        _Tech.canPlaySource = function (srcObj, options) {\n            const sh = _Tech.selectSourceHandler(srcObj, options);\n            if (sh) {\n                return sh.canHandleSource(srcObj, options);\n            }\n            return '';\n        };\n        const deferrable = [\n            'seekable',\n            'seeking',\n            'duration'\n        ];\n        deferrable.forEach(function (fnName) {\n            const originalFn = this[fnName];\n            if (typeof originalFn !== 'function') {\n                return;\n            }\n            this[fnName] = function () {\n                if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n                    return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n                }\n                return originalFn.apply(this, arguments);\n            };\n        }, _Tech.prototype);\n        _Tech.prototype.setSource = function (source) {\n            let sh = _Tech.selectSourceHandler(source, this.options_);\n            if (!sh) {\n                if (_Tech.nativeSourceHandler) {\n                    sh = _Tech.nativeSourceHandler;\n                } else {\n                    log.error('No source handler found for the current source.');\n                }\n            }\n            this.disposeSourceHandler();\n            this.unlistenTo('dispose', this.disposeSourceHandler);\n            if (sh !== _Tech.nativeSourceHandler) {\n                this.currentSource_ = source;\n            }\n            this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n            this.listenToOnce('dispose', this.disposeSourceHandler);\n        };\n        _Tech.prototype.disposeSourceHandler = function () {\n            if (this.currentSource_) {\n                this.clearTracks([\n                    'audio',\n                    'video'\n                ]);\n                this.currentSource_ = null;\n            }\n            this.cleanupAutoTextTracks();\n            if (this.sourceHandler_) {\n                if (this.sourceHandler_.dispose) {\n                    this.sourceHandler_.dispose();\n                }\n                this.sourceHandler_ = null;\n            }\n        };\n    };\n    Component.registerComponent('Tech', Tech);\n    Tech.registerTech('Tech', Tech);\n    Tech.defaultTechOrder_ = [];\n    return Tech;\n});\ndefine('skylark-videojs/tech/middleware',[\n    '../utils/obj',\n    '../utils/string-cases'\n], function (obj, stringCases) {\n    'use strict';\n    const middlewares = {};\n    const middlewareInstances = {};\n    const TERMINATOR = {};\n    function use(type, middleware) {\n        middlewares[type] = middlewares[type] || [];\n        middlewares[type].push(middleware);\n    }\n    function getMiddleware(type) {\n        if (type) {\n            return middlewares[type];\n        }\n        return middlewares;\n    }\n    function setSource(player, src, next) {\n        player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n    }\n    function setTech(middleware, tech) {\n        middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n    }\n    function get(middleware, tech, method) {\n        return middleware.reduceRight(middlewareIterator(method), tech[method]());\n    }\n    function set(middleware, tech, method, arg) {\n        return tech[method](middleware.reduce(middlewareIterator(method), arg));\n    }\n    function mediate(middleware, tech, method, arg = null) {\n        const callMethod = 'call' + stringCases.toTitleCase(method);\n        const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n        const terminated = middlewareValue === TERMINATOR;\n        const returnValue = terminated ? null : tech[method](middlewareValue);\n        executeRight(middleware, method, returnValue, terminated);\n        return returnValue;\n    }\n    const allowedGetters = {\n        buffered: 1,\n        currentTime: 1,\n        duration: 1,\n        muted: 1,\n        played: 1,\n        paused: 1,\n        seekable: 1,\n        volume: 1\n    };\n    const allowedSetters = {\n        setCurrentTime: 1,\n        setMuted: 1,\n        setVolume: 1\n    };\n    const allowedMediators = {\n        play: 1,\n        pause: 1\n    };\n    function middlewareIterator(method) {\n        return (value, mw) => {\n            if (value === TERMINATOR) {\n                return TERMINATOR;\n            }\n            if (mw[method]) {\n                return mw[method](value);\n            }\n            return value;\n        };\n    }\n    function executeRight(mws, method, value, terminated) {\n        for (let i = mws.length - 1; i >= 0; i--) {\n            const mw = mws[i];\n            if (mw[method]) {\n                mw[method](terminated, value);\n            }\n        }\n    }\n    function clearCacheForPlayer(player) {\n        middlewareInstances[player.id()] = null;\n    }\n    function getOrCreateFactory(player, mwFactory) {\n        const mws = middlewareInstances[player.id()];\n        let mw = null;\n        if (mws === undefined || mws === null) {\n            mw = mwFactory(player);\n            middlewareInstances[player.id()] = [[\n                    mwFactory,\n                    mw\n                ]];\n            return mw;\n        }\n        for (let i = 0; i < mws.length; i++) {\n            const [mwf, mwi] = mws[i];\n            if (mwf !== mwFactory) {\n                continue;\n            }\n            mw = mwi;\n        }\n        if (mw === null) {\n            mw = mwFactory(player);\n            mws.push([\n                mwFactory,\n                mw\n            ]);\n        }\n        return mw;\n    }\n    function setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n        const [mwFactory, ...mwrest] = middleware;\n        if (typeof mwFactory === 'string') {\n            setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n        } else if (mwFactory) {\n            const mw = getOrCreateFactory(player, mwFactory);\n            if (!mw.setSource) {\n                acc.push(mw);\n                return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n            }\n            mw.setSource(obj.assign({}, src), function (err, _src) {\n                if (err) {\n                    return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n                }\n                acc.push(mw);\n                setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n            });\n        } else if (mwrest.length) {\n            setSourceHelper(src, mwrest, next, player, acc, lastRun);\n        } else if (lastRun) {\n            next(src, acc);\n        } else {\n            setSourceHelper(src, middlewares['*'], next, player, acc, true);\n        }\n    }\n    return {\n        TERMINATOR: TERMINATOR,\n        use: use,\n        getMiddleware: getMiddleware,\n        setSource: setSource,\n        setTech: setTech,\n        get: get,\n        set: set,\n        mediate: mediate,\n        allowedGetters: allowedGetters,\n        allowedSetters: allowedSetters,\n        allowedMediators: allowedMediators,\n        clearCacheForPlayer: clearCacheForPlayer\n    };\n});\ndefine('skylark-videojs/utils/mimetypes',['./url'], function (Url) {\n    'use strict';\n    const MimetypesKind = {\n        opus: 'video/ogg',\n        ogv: 'video/ogg',\n        mp4: 'video/mp4',\n        mov: 'video/mp4',\n        m4v: 'video/mp4',\n        mkv: 'video/x-matroska',\n        m4a: 'audio/mp4',\n        mp3: 'audio/mpeg',\n        aac: 'audio/aac',\n        caf: 'audio/x-caf',\n        flac: 'audio/flac',\n        oga: 'audio/ogg',\n        wav: 'audio/wav',\n        m3u8: 'application/x-mpegURL',\n        jpg: 'image/jpeg',\n        jpeg: 'image/jpeg',\n        gif: 'image/gif',\n        png: 'image/png',\n        svg: 'image/svg+xml',\n        webp: 'image/webp'\n    };\n    const getMimetype = function (src = '') {\n        const ext = Url.getFileExtension(src);\n        const mimetype = MimetypesKind[ext.toLowerCase()];\n        return mimetype || '';\n    };\n    const findMimetype = (player, src) => {\n        if (!src) {\n            return '';\n        }\n        if (player.cache_.source.src === src && player.cache_.source.type) {\n            return player.cache_.source.type;\n        }\n        const matchingSources = player.cache_.sources.filter(s => s.src === src);\n        if (matchingSources.length) {\n            return matchingSources[0].type;\n        }\n        const sources = player.$$('source');\n        for (let i = 0; i < sources.length; i++) {\n            const s = sources[i];\n            if (s.type && s.src && s.src === src) {\n                return s.type;\n            }\n        }\n        return getMimetype(src);\n    };\n    return {\n        MimetypesKind: MimetypesKind,\n        getMimetype: getMimetype,\n        findMimetype: findMimetype\n    };\n});\ndefine('skylark-videojs/utils/filter-source',[\n    './obj',\n    './mimetypes'\n], function (obj, mimetypes) {\n    'use strict';\n    const filterSource = function (src) {\n        if (Array.isArray(src)) {\n            let newsrc = [];\n            src.forEach(function (srcobj) {\n                srcobj = filterSource(srcobj);\n                if (Array.isArray(srcobj)) {\n                    newsrc = newsrc.concat(srcobj);\n                } else if (obj.isObject(srcobj)) {\n                    newsrc.push(srcobj);\n                }\n            });\n            src = newsrc;\n        } else if (typeof src === 'string' && src.trim()) {\n            src = [fixSource({ src })];\n        } else if (obj.isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n            src = [fixSource(src)];\n        } else {\n            src = [];\n        }\n        return src;\n    };\n    function fixSource(src) {\n        if (!src.type) {\n            const mimetype = mimetypes.getMimetype(src.src);\n            if (mimetype) {\n                src.type = mimetype;\n            }\n        }\n        return src;\n    }\n    return filterSource;\n});\ndefine('skylark-videojs/tech/loader',[\n    '../component',\n    './tech',\n    '../utils/string-cases',\n    '../utils/merge-options'\n], function (Component, Tech, stringCases, mergeOptions) {\n    'use strict';\n    class MediaLoader extends Component {\n        constructor(player, options, ready) {\n            const options_ = mergeOptions({ createEl: false }, options);\n            super(player, options_, ready);\n            if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n                for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n                    const techName = stringCases.toTitleCase(j[i]);\n                    let tech = Tech.getTech(techName);\n                    if (!techName) {\n                        tech = Component.getComponent(techName);\n                    }\n                    if (tech && tech.isSupported()) {\n                        player.loadTech_(techName);\n                        break;\n                    }\n                }\n            } else {\n                player.src(options.playerOptions.sources);\n            }\n        }\n    }\n    Component.registerComponent('MediaLoader', MediaLoader);\n    return MediaLoader;\n});\ndefine('skylark-videojs/clickable-component',[\n    './component',\n    './utils/dom',\n    './utils/log',\n    './utils/obj',\n    './utils/keycode'\n], function (Component, Dom, log, obj, keycode) {\n    'use strict';\n    class ClickableComponent extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.emitTapEvents();\n            this.enable();\n        }\n        createEl(tag = 'div', props = {}, attributes = {}) {\n            props = obj.assign({\n                innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n                className: this.buildCSSClass(),\n                tabIndex: 0\n            }, props);\n            if (tag === 'button') {\n                log.error(`Creating a ClickableComponent with an HTML element of ${ tag } is not supported; use a Button instead.`);\n            }\n            attributes = obj.assign({ role: 'button' }, attributes);\n            this.tabIndex_ = props.tabIndex;\n            const el = super.createEl(tag, props, attributes);\n            this.createControlTextEl(el);\n            return el;\n        }\n        dispose() {\n            this.controlTextEl_ = null;\n            super.dispose();\n        }\n        createControlTextEl(el) {\n            this.controlTextEl_ = Dom.createEl('span', { className: 'vjs-control-text' }, { 'aria-live': 'polite' });\n            if (el) {\n                el.appendChild(this.controlTextEl_);\n            }\n            this.controlText(this.controlText_, el);\n            return this.controlTextEl_;\n        }\n        controlText(text, el = this.el()) {\n            if (text === undefined) {\n                return this.controlText_ || 'Need Text';\n            }\n            const localizedText = this.localize(text);\n            this.controlText_ = text;\n            Dom.textContent(this.controlTextEl_, localizedText);\n            if (!this.nonIconControl) {\n                el.setAttribute('title', localizedText);\n            }\n        }\n        buildCSSClass() {\n            return `vjs-control vjs-button ${ super.buildCSSClass() }`;\n        }\n        enable() {\n            if (!this.enabled_) {\n                this.enabled_ = true;\n                this.removeClass('vjs-disabled');\n                this.el_.setAttribute('aria-disabled', 'false');\n                if (typeof this.tabIndex_ !== 'undefined') {\n                    this.el_.setAttribute('tabIndex', this.tabIndex_);\n                }\n                this.listenTo([\n                    'tap',\n                    'click'\n                ], this.handleClick);\n                this.listenTo('keydown', this.handleKeyDown);\n            }\n        }\n        disable() {\n            this.enabled_ = false;\n            this.addClass('vjs-disabled');\n            this.el_.setAttribute('aria-disabled', 'true');\n            if (typeof this.tabIndex_ !== 'undefined') {\n                this.el_.removeAttribute('tabIndex');\n            }\n            this.unlistenTo('mouseover', this.handleMouseOver);\n            this.unlistenTo('mouseout', this.handleMouseOut);\n            this.unlistenTo([\n                'tap',\n                'click'\n            ], this.handleClick);\n            this.unlistenTo('keydown', this.handleKeyDown);\n        }\n        handleLanguagechange() {\n            this.controlText(this.controlText_);\n        }\n        handleClick(event) {\n            if (this.options_.clickHandler) {\n                this.options_.clickHandler.call(this, arguments);\n            }\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.trigger('click');\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n    }\n    Component.registerComponent('ClickableComponent', ClickableComponent);\n    return ClickableComponent;\n});\ndefine('skylark-videojs/poster-image',[\n    './clickable-component',\n    './component',\n    './utils/fn',\n    './utils/dom',\n    './utils/promise',\n    './utils/browser'\n], function (ClickableComponent, Component, Fn, Dom, promise, browser) {\n    'use strict';\n    class PosterImage extends ClickableComponent {\n        constructor(player, options) {\n            super(player, options);\n            this.update();\n            this.listenTo(player,'posterchange',this.update);\n        }\n        dispose() {\n            this.unlistenTo(this.player(),'posterchange', this.update);\n            super.dispose();\n        }\n        createEl() {\n            const el = Dom.createEl('div', {\n                className: 'vjs-poster',\n                tabIndex: -1\n            });\n            return el;\n        }\n        update(event) {\n            const url = this.player().poster();\n            this.setSrc(url);\n            if (url) {\n                this.show();\n            } else {\n                this.hide();\n            }\n        }\n        setSrc(url) {\n            let backgroundImage = '';\n            if (url) {\n                backgroundImage = `url(\"${ url }\")`;\n            }\n            this.el_.style.backgroundImage = backgroundImage;\n        }\n        handleClick(event) {\n            if (!this.player_.controls()) {\n                return;\n            }\n            const sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n            if (this.player_.tech(true) && !((browser.IE_VERSION || browser.IS_EDGE) && sourceIsEncrypted)) {\n                this.player_.tech(true).focus();\n            }\n            if (this.player_.paused()) {\n                promise.silencePromise(this.player_.play());\n            } else {\n                this.player_.pause();\n            }\n        }\n    }\n    Component.registerComponent('PosterImage', PosterImage);\n    return PosterImage;\n});\ndefine('skylark-videojs/tracks/text-track-display',[\n    '../component',\n    '../utils/fn',\n    '../utils/dom'\n], function (Component, Fn, Dom) {\n    'use strict';\n    const darkGray = '#222';\n    const lightGray = '#ccc';\n    const fontMap = {\n        monospace: 'monospace',\n        sansSerif: 'sans-serif',\n        serif: 'serif',\n        monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n        monospaceSerif: '\"Courier New\", monospace',\n        proportionalSansSerif: 'sans-serif',\n        proportionalSerif: 'serif',\n        casual: '\"Comic Sans MS\", Impact, fantasy',\n        script: '\"Monotype Corsiva\", cursive',\n        smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n    };\n    function constructColor(color, opacity) {\n        let hex;\n        if (color.length === 4) {\n            hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n        } else if (color.length === 7) {\n            hex = color.slice(1);\n        } else {\n            throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n        }\n        return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n    }\n    function tryUpdateStyle(el, style, rule) {\n        try {\n            el.style[style] = rule;\n        } catch (e) {\n            return;\n        }\n    }\n    class TextTrackDisplay extends Component {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n            const updateDisplayHandler = Fn.bind(this, this.updateDisplay);\n            player.on('loadstart', Fn.bind(this, this.toggleDisplay));\n            player.on('texttrackchange', updateDisplayHandler);\n            player.on('loadedmetadata', Fn.bind(this, this.preselectTrack));\n            player.ready(Fn.bind(this, function () {\n                if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n                    this.hide();\n                    return;\n                }\n                player.on('fullscreenchange', updateDisplayHandler);\n                player.on('playerresize', updateDisplayHandler);\n                window.addEventListener('orientationchange', updateDisplayHandler);\n                player.on('dispose', () => window.removeEventListener('orientationchange', updateDisplayHandler));\n                const tracks = this.options_.playerOptions.tracks || [];\n                for (let i = 0; i < tracks.length; i++) {\n                    this.player_.addRemoteTextTrack(tracks[i], true);\n                }\n                this.preselectTrack();\n            }));\n        }\n        preselectTrack() {\n            const modes = {\n                captions: 1,\n                subtitles: 1\n            };\n            const trackList = this.player_.textTracks();\n            const userPref = this.player_.cache_.selectedLanguage;\n            let firstDesc;\n            let firstCaptions;\n            let preferredTrack;\n            for (let i = 0; i < trackList.length; i++) {\n                const track = trackList[i];\n                if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n                    if (track.kind === userPref.kind) {\n                        preferredTrack = track;\n                    } else if (!preferredTrack) {\n                        preferredTrack = track;\n                    }\n                } else if (userPref && !userPref.enabled) {\n                    preferredTrack = null;\n                    firstDesc = null;\n                    firstCaptions = null;\n                } else if (track.default) {\n                    if (track.kind === 'descriptions' && !firstDesc) {\n                        firstDesc = track;\n                    } else if (track.kind in modes && !firstCaptions) {\n                        firstCaptions = track;\n                    }\n                }\n            }\n            if (preferredTrack) {\n                preferredTrack.mode = 'showing';\n            } else if (firstCaptions) {\n                firstCaptions.mode = 'showing';\n            } else if (firstDesc) {\n                firstDesc.mode = 'showing';\n            }\n        }\n        toggleDisplay() {\n            if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n                this.hide();\n            } else {\n                this.show();\n            }\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-text-track-display' }, {\n                'aria-live': 'off',\n                'aria-atomic': 'true'\n            });\n        }\n        clearDisplay() {\n            if (typeof window.WebVTT === 'function') {\n                window.WebVTT.processCues(window, [], this.el_);\n            }\n        }\n        updateDisplay() {\n            const tracks = this.player_.textTracks();\n            const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n            this.clearDisplay();\n            if (allowMultipleShowingTracks) {\n                const showingTracks = [];\n                for (let i = 0; i < tracks.length; ++i) {\n                    const track = tracks[i];\n                    if (track.mode !== 'showing') {\n                        continue;\n                    }\n                    showingTracks.push(track);\n                }\n                this.updateForTrack(showingTracks);\n                return;\n            }\n            let descriptionsTrack = null;\n            let captionsSubtitlesTrack = null;\n            let i = tracks.length;\n            while (i--) {\n                const track = tracks[i];\n                if (track.mode === 'showing') {\n                    if (track.kind === 'descriptions') {\n                        descriptionsTrack = track;\n                    } else {\n                        captionsSubtitlesTrack = track;\n                    }\n                }\n            }\n            if (captionsSubtitlesTrack) {\n                if (this.getAttribute('aria-live') !== 'off') {\n                    this.setAttribute('aria-live', 'off');\n                }\n                this.updateForTrack(captionsSubtitlesTrack);\n            } else if (descriptionsTrack) {\n                if (this.getAttribute('aria-live') !== 'assertive') {\n                    this.setAttribute('aria-live', 'assertive');\n                }\n                this.updateForTrack(descriptionsTrack);\n            }\n        }\n        updateDisplayState(track) {\n            const overrides = this.player_.textTrackSettings.getValues();\n            const cues = track.activeCues;\n            let i = cues.length;\n            while (i--) {\n                const cue = cues[i];\n                if (!cue) {\n                    continue;\n                }\n                const cueDiv = cue.displayState;\n                if (overrides.color) {\n                    cueDiv.firstChild.style.color = overrides.color;\n                }\n                if (overrides.textOpacity) {\n                    tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n                }\n                if (overrides.backgroundColor) {\n                    cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n                }\n                if (overrides.backgroundOpacity) {\n                    tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n                }\n                if (overrides.windowColor) {\n                    if (overrides.windowOpacity) {\n                        tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n                    } else {\n                        cueDiv.style.backgroundColor = overrides.windowColor;\n                    }\n                }\n                if (overrides.edgeStyle) {\n                    if (overrides.edgeStyle === 'dropshadow') {\n                        cueDiv.firstChild.style.textShadow = `2px 2px 3px ${ darkGray }, 2px 2px 4px ${ darkGray }, 2px 2px 5px ${ darkGray }`;\n                    } else if (overrides.edgeStyle === 'raised') {\n                        cueDiv.firstChild.style.textShadow = `1px 1px ${ darkGray }, 2px 2px ${ darkGray }, 3px 3px ${ darkGray }`;\n                    } else if (overrides.edgeStyle === 'depressed') {\n                        cueDiv.firstChild.style.textShadow = `1px 1px ${ lightGray }, 0 1px ${ lightGray }, -1px -1px ${ darkGray }, 0 -1px ${ darkGray }`;\n                    } else if (overrides.edgeStyle === 'uniform') {\n                        cueDiv.firstChild.style.textShadow = `0 0 4px ${ darkGray }, 0 0 4px ${ darkGray }, 0 0 4px ${ darkGray }, 0 0 4px ${ darkGray }`;\n                    }\n                }\n                if (overrides.fontPercent && overrides.fontPercent !== 1) {\n                    const fontSize = window.parseFloat(cueDiv.style.fontSize);\n                    cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n                    cueDiv.style.height = 'auto';\n                    cueDiv.style.top = 'auto';\n                }\n                if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n                    if (overrides.fontFamily === 'small-caps') {\n                        cueDiv.firstChild.style.fontVariant = 'small-caps';\n                    } else {\n                        cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n                    }\n                }\n            }\n        }\n        updateForTrack(tracks) {\n            if (!Array.isArray(tracks)) {\n                tracks = [tracks];\n            }\n            if (typeof window.WebVTT !== 'function' || tracks.every(track => {\n                    return !track.activeCues;\n                })) {\n                return;\n            }\n            const cues = [];\n            for (let i = 0; i < tracks.length; ++i) {\n                const track = tracks[i];\n                for (let j = 0; j < track.activeCues.length; ++j) {\n                    cues.push(track.activeCues[j]);\n                }\n            }\n            window.WebVTT.processCues(window, cues, this.el_);\n            for (let i = 0; i < tracks.length; ++i) {\n                const track = tracks[i];\n                for (let j = 0; j < track.activeCues.length; ++j) {\n                    const cueEl = track.activeCues[j].displayState;\n                    Dom.addClass(cueEl, 'vjs-text-track-cue');\n                    Dom.addClass(cueEl, 'vjs-text-track-cue-' + (track.language ? track.language : i));\n                }\n                if (this.player_.textTrackSettings) {\n                    this.updateDisplayState(track);\n                }\n            }\n        }\n    }\n    \n    Component.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n\n    TextTrackDisplay.constructColor = constructColor;\n\n    return TextTrackDisplay;\n});\ndefine('skylark-videojs/loading-spinner',[\n    './component',\n    './utils/dom'\n], function (Component, dom) {\n    'use strict';\n    class LoadingSpinner extends Component {\n        createEl() {\n            const isAudio = this.player_.isAudio();\n            const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n            const controlText = dom.createEl('span', {\n                className: 'vjs-control-text',\n                innerHTML: this.localize('{1} is loading.', [playerType])\n            });\n            const el = super.createEl('div', {\n                className: 'vjs-loading-spinner',\n                dir: 'ltr'\n            });\n            el.appendChild(controlText);\n            return el;\n        }\n    }\n    Component.registerComponent('LoadingSpinner', LoadingSpinner);\n    return LoadingSpinner;\n});\ndefine('skylark-videojs/button',[\n    './clickable-component',\n    './component',\n    './utils/log',\n    './utils/obj',\n    './utils/keycode'\n], function (ClickableComponent, Component, log, obj, keycode) {\n    'use strict';\n    class Button extends ClickableComponent {\n        createEl(tag, props = {}, attributes = {}) {\n            tag = 'button';\n            props = obj.assign({\n                innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n                className: this.buildCSSClass()\n            }, props);\n            attributes = obj.assign({ type: 'button' }, attributes);\n            const el = Component.prototype.createEl.call(this, tag, props, attributes);\n            this.createControlTextEl(el);\n            return el;\n        }\n        addChild(child, options = {}) {\n            const className = this.constructor.name;\n            log.warn(`Adding an actionable (user controllable) child to a Button (${ className }) is not supported; use a ClickableComponent instead.`);\n            return Component.prototype.addChild.call(this, child, options);\n        }\n        enable() {\n            super.enable();\n            this.el_.removeAttribute('disabled');\n        }\n        disable() {\n            super.disable();\n            this.el_.setAttribute('disabled', 'disabled');\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n                event.stopPropagation();\n                return;\n            }\n            super.handleKeyDown(event);\n        }\n    }\n    Component.registerComponent('Button', Button);\n    return Button;\n});\ndefine('skylark-videojs/big-play-button',[\n    './button',\n    './component',\n    './utils/promise',\n    './utils/browser'\n], function (Button, Component, promise, browser) {\n    'use strict';\n    class BigPlayButton extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.mouseused_ = false;\n            this.listenTo('mousedown', this.handleMouseDown);\n        }\n        buildCSSClass() {\n            return 'vjs-big-play-button';\n        }\n        handleClick(event) {\n            const playPromise = this.player_.play();\n            if (this.mouseused_ && event.clientX && event.clientY) {\n                const sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n                promise.silencePromise(playPromise);\n                if (this.player_.tech(true) && !((browser.IE_VERSION || browser.IS_EDGE) && sourceIsEncrypted)) {\n                    this.player_.tech(true).focus();\n                }\n                return;\n            }\n            const cb = this.player_.getChild('controlBar');\n            const playToggle = cb && cb.getChild('playToggle');\n            if (!playToggle) {\n                this.player_.tech(true).focus();\n                return;\n            }\n            const playFocus = () => playToggle.focus();\n            if (promise.isPromise(playPromise)) {\n                playPromise.then(playFocus, () => {\n                });\n            } else {\n                this.setTimeout(playFocus, 1);\n            }\n        }\n        handleKeyDown(event) {\n            this.mouseused_ = false;\n            super.handleKeyDown(event);\n        }\n        handleMouseDown(event) {\n            this.mouseused_ = true;\n        }\n    }\n    BigPlayButton.prototype.controlText_ = 'Play Video';\n    Component.registerComponent('BigPlayButton', BigPlayButton);\n    return BigPlayButton;\n});\ndefine('skylark-videojs/close-button',[\n    './button',\n    './component',\n    './utils/keycode'\n], function (Button, Component, keycode) {\n    'use strict';\n    class CloseButton extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.controlText(options && options.controlText || this.localize('Close'));\n        }\n        buildCSSClass() {\n            return `vjs-close-button ${ super.buildCSSClass() }`;\n        }\n        handleClick(event) {\n            this.trigger({\n                type: 'close',\n                bubbles: false\n            });\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.trigger('click');\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n    }\n    Component.registerComponent('CloseButton', CloseButton);\n    return CloseButton;\n});\ndefine('skylark-videojs/control-bar/play-toggle',[\n    '../button',\n    '../component'\n], function (Button, Component) {\n    'use strict';\n    class PlayToggle extends Button {\n        constructor(player, options = {}) {\n            super(player, options);\n            options.replay = options.replay === undefined || options.replay;\n            this.listenTo(player, 'play', this.handlePlay);\n            this.listenTo(player, 'pause', this.handlePause);\n            if (options.replay) {\n                this.listenTo(player, 'ended', this.handleEnded);\n            }\n        }\n        buildCSSClass() {\n            return `vjs-play-control ${ super.buildCSSClass() }`;\n        }\n        handleClick(event) {\n            if (this.player_.paused()) {\n                this.player_.play();\n            } else {\n                this.player_.pause();\n            }\n        }\n        handleSeeked(event) {\n            this.removeClass('vjs-ended');\n            if (this.player_.paused()) {\n                this.handlePause(event);\n            } else {\n                this.handlePlay(event);\n            }\n        }\n        handlePlay(event) {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-paused');\n            this.addClass('vjs-playing');\n            this.controlText('Pause');\n        }\n        handlePause(event) {\n            this.removeClass('vjs-playing');\n            this.addClass('vjs-paused');\n            this.controlText('Play');\n        }\n        handleEnded(event) {\n            this.removeClass('vjs-playing');\n            this.addClass('vjs-ended');\n            this.controlText('Replay');\n            this.listenToOnce(this.player_, 'seeked', this.handleSeeked);\n        }\n    }\n    PlayToggle.prototype.controlText_ = 'Play';\n    Component.registerComponent('PlayToggle', PlayToggle);\n    return PlayToggle;\n});\ndefine('skylark-videojs/utils/format-time',[],function () {\n    'use strict';\n    const defaultImplementation = function (seconds, guide) {\n        seconds = seconds < 0 ? 0 : seconds;\n        let s = Math.floor(seconds % 60);\n        let m = Math.floor(seconds / 60 % 60);\n        let h = Math.floor(seconds / 3600);\n        const gm = Math.floor(guide / 60 % 60);\n        const gh = Math.floor(guide / 3600);\n        if (isNaN(seconds) || seconds === Infinity) {\n            h = m = s = '-';\n        }\n        h = h > 0 || gh > 0 ? h + ':' : '';\n        m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n        s = s < 10 ? '0' + s : s;\n        return h + m + s;\n    };\n    let implementation = defaultImplementation;\n    function setFormatTime(customImplementation) {\n        implementation = customImplementation;\n    }\n    function resetFormatTime() {\n        implementation = defaultImplementation;\n    }\n    function formatTime(seconds, guide = seconds) {\n        return implementation(seconds, guide);\n    }\n\n    formatTime.setFormatTime = setFormatTime;\n    formatTime.resetFormatTime = resetFormatTime;\n\n    return   formatTime;\n});\ndefine('skylark-videojs/control-bar/time-controls/time-display',[\n    'skylark-langx-globals/document',\n    '../../component',\n    '../../utils/dom',\n    '../../utils/format-time',\n    '../../utils/log'\n], function (document, Component, Dom, formatTime, log) {\n    'use strict';\n    class TimeDisplay extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, [\n                'timeupdate',\n                'ended'\n            ], this.updateContent);\n            this.updateTextNode_();\n        }\n        createEl() {\n            const className = this.buildCSSClass();\n            const el = super.createEl('div', {\n                className: `${ className } vjs-time-control vjs-control`,\n                innerHTML: `<span class=\"vjs-control-text\" role=\"presentation\">${ this.localize(this.labelText_) }\\u00a0</span>`\n            });\n            this.contentEl_ = Dom.createEl('span', { className: `${ className }-display` }, {\n                'aria-live': 'off',\n                'role': 'presentation'\n            });\n            el.appendChild(this.contentEl_);\n            return el;\n        }\n        dispose() {\n            this.contentEl_ = null;\n            this.textNode_ = null;\n            super.dispose();\n        }\n        updateTextNode_(time = 0) {\n            time = formatTime(time);\n            if (this.formattedTime_ === time) {\n                return;\n            }\n            this.formattedTime_ = time;\n            this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n                if (!this.contentEl_) {\n                    return;\n                }\n                let oldNode = this.textNode_;\n                if (oldNode && this.contentEl_.firstChild !== oldNode) {\n                    oldNode = null;\n                    log.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n                }\n                this.textNode_ = document.createTextNode(this.formattedTime_);\n                if (!this.textNode_) {\n                    return;\n                }\n                if (oldNode) {\n                    this.contentEl_.replaceChild(this.textNode_, oldNode);\n                } else {\n                    this.contentEl_.appendChild(this.textNode_);\n                }\n            });\n        }\n        updateContent(event) {\n        }\n    }\n    TimeDisplay.prototype.labelText_ = 'Time';\n    TimeDisplay.prototype.controlText_ = 'Time';\n    Component.registerComponent('TimeDisplay', TimeDisplay);\n    return TimeDisplay;\n});\ndefine('skylark-videojs/control-bar/time-controls/current-time-display',[\n    './time-display',\n    '../../component'\n], function (TimeDisplay, Component) {\n    'use strict';\n    class CurrentTimeDisplay extends TimeDisplay {\n        buildCSSClass() {\n            return 'vjs-current-time';\n        }\n        updateContent(event) {\n            let time;\n            if (this.player_.ended()) {\n                time = this.player_.duration();\n            } else {\n                time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n            }\n            this.updateTextNode_(time);\n        }\n    }\n    CurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n    CurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n    Component.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n    return CurrentTimeDisplay;\n});\ndefine('skylark-videojs/control-bar/time-controls/duration-display',[\n    './time-display',\n    '../../component'\n], function (TimeDisplay, Component) {\n    'use strict';\n    class DurationDisplay extends TimeDisplay {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, 'durationchange', this.updateContent);\n            this.listenTo(player, 'loadstart', this.updateContent);\n            this.listenTo(player, 'loadedmetadata', this.updateContent);\n        }\n        buildCSSClass() {\n            return 'vjs-duration';\n        }\n        updateContent(event) {\n            const duration = this.player_.duration();\n            this.updateTextNode_(duration);\n        }\n    }\n    DurationDisplay.prototype.labelText_ = 'Duration';\n    DurationDisplay.prototype.controlText_ = 'Duration';\n    Component.registerComponent('DurationDisplay', DurationDisplay);\n    return DurationDisplay;\n});\ndefine('skylark-videojs/control-bar/time-controls/time-divider',[\n    '../../component'\n], function (Component) {\n    'use strict';\n    class TimeDivider extends Component {\n        createEl() {\n            return super.createEl('div', {\n                className: 'vjs-time-control vjs-time-divider',\n                innerHTML: '<div><span>/</span></div>'\n            }, { 'aria-hidden': true });\n        }\n    }\n    Component.registerComponent('TimeDivider', TimeDivider);\n    return TimeDivider;\n});\ndefine('skylark-videojs/control-bar/time-controls/remaining-time-display',[\n    './time-display',\n    '../../component',\n    '../../utils/dom'\n], function (TimeDisplay, Component, Dom) {\n    'use strict';\n    class RemainingTimeDisplay extends TimeDisplay {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, 'durationchange', this.updateContent);\n        }\n        buildCSSClass() {\n            return 'vjs-remaining-time';\n        }\n        createEl() {\n            const el = super.createEl();\n            el.insertBefore(Dom.createEl('span', {}, { 'aria-hidden': true }, '-'), this.contentEl_);\n            return el;\n        }\n        updateContent(event) {\n            if (typeof this.player_.duration() !== 'number') {\n                return;\n            }\n            let time;\n            if (this.player_.ended()) {\n                time = 0;\n            } else if (this.player_.remainingTimeDisplay) {\n                time = this.player_.remainingTimeDisplay();\n            } else {\n                time = this.player_.remainingTime();\n            }\n            this.updateTextNode_(time);\n        }\n    }\n    RemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n    RemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n    Component.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n    return RemainingTimeDisplay;\n});\ndefine('skylark-videojs/control-bar/live-display',[\n    '../component',\n    '../utils/dom'\n], function (Component, Dom) {\n    'use strict';\n    class LiveDisplay extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.updateShowing();\n            this.listenTo(this.player(), 'durationchange', this.updateShowing);\n        }\n        createEl() {\n            const el = super.createEl('div', { className: 'vjs-live-control vjs-control' });\n            this.contentEl_ = Dom.createEl('div', {\n                className: 'vjs-live-display',\n                innerHTML: `<span class=\"vjs-control-text\">${ this.localize('Stream Type') }\\u00a0</span>${ this.localize('LIVE') }`\n            }, { 'aria-live': 'off' });\n            el.appendChild(this.contentEl_);\n            return el;\n        }\n        dispose() {\n            this.contentEl_ = null;\n            super.dispose();\n        }\n        updateShowing(event) {\n            if (this.player().duration() === Infinity) {\n                this.show();\n            } else {\n                this.hide();\n            }\n        }\n    }\n    Component.registerComponent('LiveDisplay', LiveDisplay);\n    return LiveDisplay;\n});\ndefine('skylark-videojs/control-bar/seek-to-live',[\n    '../button',\n    '../component',\n    '../utils/dom'\n], function (Button, Component, Dom) {\n    'use strict';\n    class SeekToLive extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.updateLiveEdgeStatus();\n            if (this.player_.liveTracker) {\n                this.listenTo(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n            }\n        }\n        createEl() {\n            const el = super.createEl('button', { className: 'vjs-seek-to-live-control vjs-control' });\n            this.textEl_ = Dom.createEl('span', {\n                className: 'vjs-seek-to-live-text',\n                innerHTML: this.localize('LIVE')\n            }, { 'aria-hidden': 'true' });\n            el.appendChild(this.textEl_);\n            return el;\n        }\n        updateLiveEdgeStatus() {\n            if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n                this.setAttribute('aria-disabled', true);\n                this.addClass('vjs-at-live-edge');\n                this.controlText('Seek to live, currently playing live');\n            } else {\n                this.setAttribute('aria-disabled', false);\n                this.removeClass('vjs-at-live-edge');\n                this.controlText('Seek to live, currently behind live');\n            }\n        }\n        handleClick() {\n            this.player_.liveTracker.seekToLiveEdge();\n        }\n        dispose() {\n            if (this.player_.liveTracker) {\n                this.unlistenTo(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n            }\n            this.textEl_ = null;\n            super.dispose();\n        }\n    }\n    SeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\n    Component.registerComponent('SeekToLive', SeekToLive);\n    return SeekToLive;\n});\ndefine('skylark-videojs/utils/clamp',[],function () {\n    'use strict';\n    const clamp = function (number, min, max) {\n        number = Number(number);\n        return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n    };\n    return clamp;\n});\ndefine('skylark-videojs/slider/slider',[\n    '../component',\n    '../utils/dom',\n    '../utils/obj',\n    '../utils/browser',\n    '../utils/clamp',\n    '../utils/keycode'\n], function (Component, Dom, obj, browser, clamp, keycode) {\n    'use strict';\n    class Slider extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.bar = this.getChild(this.options_.barName);\n            this.vertical(!!this.options_.vertical);\n            this.enable();\n        }\n        enabled() {\n            return this.enabled_;\n        }\n        enable() {\n            if (this.enabled()) {\n                return;\n            }\n            this.listenTo('mousedown', this.handleMouseDown);\n            this.listenTo('touchstart', this.handleMouseDown);\n            this.listenTo('keydown', this.handleKeyDown);\n            this.listenTo('click', this.handleClick);\n            this.listenTo(this.player_, 'controlsvisible', this.update);\n            if (this.playerEvent) {\n                this.listenTo(this.player_, this.playerEvent, this.update);\n            }\n            this.removeClass('disabled');\n            this.setAttribute('tabindex', 0);\n            this.enabled_ = true;\n        }\n        disable() {\n            if (!this.enabled()) {\n                return;\n            }\n            const doc = this.bar.el_.ownerDocument;\n            this.unlistenTo('mousedown', this.handleMouseDown);\n            this.unlistenTo('touchstart', this.handleMouseDown);\n            this.unlistenTo('keydown', this.handleKeyDown);\n            this.unlistenTo('click', this.handleClick);\n            this.unlistenTo(this.player_, 'controlsvisible', this.update);\n            this.unlistenTo(doc, 'mousemove', this.handleMouseMove);\n            this.unlistenTo(doc, 'mouseup', this.handleMouseUp);\n            this.unlistenTo(doc, 'touchmove', this.handleMouseMove);\n            this.unlistenTo(doc, 'touchend', this.handleMouseUp);\n            this.removeAttribute('tabindex');\n            this.addClass('disabled');\n            if (this.playerEvent) {\n                this.unlistenTo(this.player_, this.playerEvent, this.update);\n            }\n            this.enabled_ = false;\n        }\n        createEl(type, props = {}, attributes = {}) {\n            props.className = props.className + ' vjs-slider';\n            props = obj.assign({ tabIndex: 0 }, props);\n            attributes = obj.assign({\n                'role': 'slider',\n                'aria-valuenow': 0,\n                'aria-valuemin': 0,\n                'aria-valuemax': 100,\n                'tabIndex': 0\n            }, attributes);\n            return super.createEl(type, props, attributes);\n        }\n        handleMouseDown(event) {\n            const doc = this.bar.el_.ownerDocument;\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n            }\n            if (event.type === 'touchstart' && !browser.IS_CHROME) {\n                event.preventDefault();\n            }\n            Dom.blockTextSelection();\n            this.addClass('vjs-sliding');\n            this.trigger('slideractive');\n            this.listenTo(doc, 'mousemove', this.handleMouseMove);\n            this.listenTo(doc, 'mouseup', this.handleMouseUp);\n            this.listenTo(doc, 'touchmove', this.handleMouseMove);\n            this.listenTo(doc, 'touchend', this.handleMouseUp);\n            this.handleMouseMove(event);\n        }\n        handleMouseMove(event) {\n        }\n        handleMouseUp() {\n            const doc = this.bar.el_.ownerDocument;\n            Dom.unblockTextSelection();\n            this.removeClass('vjs-sliding');\n            this.trigger('sliderinactive');\n            this.unlistenTo(doc, 'mousemove', this.handleMouseMove);\n            this.unlistenTo(doc, 'mouseup', this.handleMouseUp);\n            this.unlistenTo(doc, 'touchmove', this.handleMouseMove);\n            this.unlistenTo(doc, 'touchend', this.handleMouseUp);\n            this.update();\n        }\n        update() {\n            if (!this.el_ || !this.bar) {\n                return;\n            }\n            const progress = this.getProgress();\n            if (progress === this.progress_) {\n                return progress;\n            }\n            this.progress_ = progress;\n            this.requestNamedAnimationFrame('Slider#update', () => {\n                const sizeKey = this.vertical() ? 'height' : 'width';\n                this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n            });\n            return progress;\n        }\n        getProgress() {\n            return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n        }\n        calculateDistance(event) {\n            const position = Dom.getPointerPosition(this.el_, event);\n            if (this.vertical()) {\n                return position.y;\n            }\n            return position.x;\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepBack();\n            } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepForward();\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n        handleClick(event) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n        vertical(bool) {\n            if (bool === undefined) {\n                return this.vertical_ || false;\n            }\n            this.vertical_ = !!bool;\n            if (this.vertical_) {\n                this.addClass('vjs-slider-vertical');\n            } else {\n                this.addClass('vjs-slider-horizontal');\n            }\n        }\n    }\n    Component.registerComponent('Slider', Slider);\n    return Slider;\n});\ndefine('skylark-videojs/control-bar/progress-control/load-progress-bar',[\n    'skylark-langx-globals/document',\n    '../../component',\n    '../../utils/dom',\n    '../../utils/clamp'\n], function (document,Component, Dom, clamp) {\n    'use strict';\n    const percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n    class LoadProgressBar extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.partEls_ = [];\n            this.listenTo(player, 'progress', this.update);\n        }\n        createEl() {\n            const el = super.createEl('div', { className: 'vjs-load-progress' });\n            const wrapper = Dom.createEl('span', { className: 'vjs-control-text' });\n            const loadedText = Dom.createEl('span', { textContent: this.localize('Loaded') });\n            const separator = document.createTextNode(': ');\n            this.percentageEl_ = Dom.createEl('span', {\n                className: 'vjs-control-text-loaded-percentage',\n                textContent: '0%'\n            });\n            el.appendChild(wrapper);\n            wrapper.appendChild(loadedText);\n            wrapper.appendChild(separator);\n            wrapper.appendChild(this.percentageEl_);\n            return el;\n        }\n        dispose() {\n            this.partEls_ = null;\n            this.percentageEl_ = null;\n            super.dispose();\n        }\n        update(event) {\n            this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n                const liveTracker = this.player_.liveTracker;\n                const buffered = this.player_.buffered();\n                const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n                const bufferedEnd = this.player_.bufferedEnd();\n                const children = this.partEls_;\n                const percent = percentify(bufferedEnd, duration);\n                if (this.percent_ !== percent) {\n                    this.el_.style.width = percent;\n                    Dom.textContent(this.percentageEl_, percent);\n                    this.percent_ = percent;\n                }\n                for (let i = 0; i < buffered.length; i++) {\n                    const start = buffered.start(i);\n                    const end = buffered.end(i);\n                    let part = children[i];\n                    if (!part) {\n                        part = this.el_.appendChild(Dom.createEl());\n                        children[i] = part;\n                    }\n                    if (part.dataset.start === start && part.dataset.end === end) {\n                        continue;\n                    }\n                    part.dataset.start = start;\n                    part.dataset.end = end;\n                    part.style.left = percentify(start, bufferedEnd);\n                    part.style.width = percentify(end - start, bufferedEnd);\n                }\n                for (let i = children.length; i > buffered.length; i--) {\n                    this.el_.removeChild(children[i - 1]);\n                }\n                children.length = buffered.length;\n            });\n        }\n    }\n    Component.registerComponent('LoadProgressBar', LoadProgressBar);\n    return LoadProgressBar;\n});\ndefine('skylark-videojs/control-bar/progress-control/time-tooltip',[\n    '../../component',\n    '../../utils/dom',\n    '../../utils/format-time',\n    '../../utils/fn'\n], function (Component, Dom, formatTime, Fn) {\n    'use strict';\n    class TimeTooltip extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.update = Fn.throttle(Fn.bind(this, this.update), Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-time-tooltip' }, { 'aria-hidden': 'true' });\n        }\n        update(seekBarRect, seekBarPoint, content) {\n            const tooltipRect = Dom.findPosition(this.el_);\n            const playerRect = Dom.getBoundingClientRect(this.player_.el());\n            const seekBarPointPx = seekBarRect.width * seekBarPoint;\n            if (!playerRect || !tooltipRect) {\n                return;\n            }\n            const spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n            const spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n            let pullTooltipBy = tooltipRect.width / 2;\n            if (spaceLeftOfPoint < pullTooltipBy) {\n                pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n            } else if (spaceRightOfPoint < pullTooltipBy) {\n                pullTooltipBy = spaceRightOfPoint;\n            }\n            if (pullTooltipBy < 0) {\n                pullTooltipBy = 0;\n            } else if (pullTooltipBy > tooltipRect.width) {\n                pullTooltipBy = tooltipRect.width;\n            }\n            pullTooltipBy = Math.round(pullTooltipBy);\n            this.el_.style.right = `-${ pullTooltipBy }px`;\n            this.write(content);\n        }\n        write(content) {\n            Dom.textContent(this.el_, content);\n        }\n        updateTime(seekBarRect, seekBarPoint, time, cb) {\n            this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n                let content;\n                const duration = this.player_.duration();\n                if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n                    const liveWindow = this.player_.liveTracker.liveWindow();\n                    const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n                    content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n                } else {\n                    content = formatTime(time, duration);\n                }\n                this.update(seekBarRect, seekBarPoint, content);\n                if (cb) {\n                    cb();\n                }\n            });\n        }\n    }\n    Component.registerComponent('TimeTooltip', TimeTooltip);\n    return TimeTooltip;\n});\ndefine('skylark-videojs/control-bar/progress-control/play-progress-bar',[\n    '../../component',\n    '../../utils/browser',\n    '../../utils/fn',\n    './time-tooltip'\n], function (Component, browser, Fn) {\n    'use strict';\n    class PlayProgressBar extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.update = Fn.throttle(Fn.bind(this, this.update), Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-play-progress vjs-slider-bar' }, { 'aria-hidden': 'true' });\n        }\n        update(seekBarRect, seekBarPoint) {\n            const timeTooltip = this.getChild('timeTooltip');\n            if (!timeTooltip) {\n                return;\n            }\n            const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n            timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n        }\n    }\n    PlayProgressBar.prototype.options_ = { children: [] };\n    if (!browser.IS_IOS && !browser.IS_ANDROID) {\n        PlayProgressBar.prototype.options_.children.push('timeTooltip');\n    }\n    Component.registerComponent('PlayProgressBar', PlayProgressBar);\n    return PlayProgressBar;\n});\ndefine('skylark-videojs/control-bar/progress-control/mouse-time-display',[\n    '../../component',\n    '../../utils/fn',\n    './time-tooltip'\n], function (Component, Fn) {\n    'use strict';\n    class MouseTimeDisplay extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.update = Fn.throttle(Fn.bind(this, this.update), Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-mouse-display' });\n        }\n        update(seekBarRect, seekBarPoint) {\n            const time = seekBarPoint * this.player_.duration();\n            this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n                this.el_.style.left = `${ seekBarRect.width * seekBarPoint }px`;\n            });\n        }\n    }\n    MouseTimeDisplay.prototype.options_ = { children: ['timeTooltip'] };\n    Component.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n    return MouseTimeDisplay;\n});\ndefine('skylark-videojs/control-bar/progress-control/seek-bar',[\n    'skylark-langx-globals/document',\n    '../../slider/slider',\n    '../../component',\n    '../../utils/browser',\n    '../../utils/dom',\n    '../../utils/fn',\n    '../../utils/format-time',\n    '../../utils/promise',\n    '../../utils/keycode',\n    './load-progress-bar',\n    './play-progress-bar',\n    './mouse-time-display'\n], function (document,Slider, Component, browser, Dom, Fn, formatTime, promise, keycode) {\n    'use strict';\n    const STEP_SECONDS = 5;\n    const PAGE_KEY_MULTIPLIER = 12;\n    class SeekBar extends Slider {\n        constructor(player, options) {\n            super(player, options);\n            this.setEventHandlers_();\n        }\n        setEventHandlers_() {\n            this.update_ = Fn.bind(this, this.update);\n            this.update = Fn.throttle(this.update_, Fn.UPDATE_REFRESH_INTERVAL);\n            this.listenTo(this.player_, [\n                'ended',\n                'durationchange',\n                'timeupdate'\n            ], this.update);\n            if (this.player_.liveTracker) {\n                this.listenTo(this.player_.liveTracker, 'liveedgechange', this.update);\n            }\n            this.updateInterval = null;\n            this.listenTo(this.player_, ['playing'], this.enableInterval_);\n            this.listenTo(this.player_, [\n                'ended',\n                'pause',\n                'waiting'\n            ], this.disableInterval_);\n            if ('hidden' in document && 'visibilityState' in document) {\n                this.listenTo(document, 'visibilitychange', this.toggleVisibility_);\n            }\n        }\n        toggleVisibility_(e) {\n            if (document.hidden) {\n                this.disableInterval_(e);\n            } else {\n                this.enableInterval_();\n                this.update();\n            }\n        }\n        enableInterval_() {\n            if (this.updateInterval) {\n                return;\n            }\n            this.updateInterval = this.setInterval(this.update, Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        disableInterval_(e) {\n            if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n                return;\n            }\n            if (!this.updateInterval) {\n                return;\n            }\n            this.clearInterval(this.updateInterval);\n            this.updateInterval = null;\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-progress-holder' }, { 'aria-label': this.localize('Progress Bar') });\n        }\n        update(event) {\n            const percent = super.update();\n            this.requestNamedAnimationFrame('SeekBar#update', () => {\n                const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n                const liveTracker = this.player_.liveTracker;\n                let duration = this.player_.duration();\n                if (liveTracker && liveTracker.isLive()) {\n                    duration = this.player_.liveTracker.liveCurrentTime();\n                }\n                if (this.percent_ !== percent) {\n                    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n                    this.percent_ = percent;\n                }\n                if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n                    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [\n                        formatTime(currentTime, duration),\n                        formatTime(duration, duration)\n                    ], '{1} of {2}'));\n                    this.currentTime_ = currentTime;\n                    this.duration_ = duration;\n                }\n                if (this.bar) {\n                    this.bar.update(Dom.getBoundingClientRect(this.el()), this.getProgress());\n                }\n            });\n            return percent;\n        }\n        getCurrentTime_() {\n            return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n        }\n        getPercent() {\n            const currentTime = this.getCurrentTime_();\n            let percent;\n            const liveTracker = this.player_.liveTracker;\n            if (liveTracker && liveTracker.isLive()) {\n                percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n                if (liveTracker.atLiveEdge()) {\n                    percent = 1;\n                }\n            } else {\n                percent = currentTime / this.player_.duration();\n            }\n            return percent;\n        }\n        handleMouseDown(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            event.stopPropagation();\n            this.player_.scrubbing(true);\n            this.videoWasPlaying = !this.player_.paused();\n            this.player_.pause();\n            super.handleMouseDown(event);\n        }\n        handleMouseMove(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            let newTime;\n            const distance = this.calculateDistance(event);\n            const liveTracker = this.player_.liveTracker;\n            if (!liveTracker || !liveTracker.isLive()) {\n                newTime = distance * this.player_.duration();\n                if (newTime === this.player_.duration()) {\n                    newTime = newTime - 0.1;\n                }\n            } else {\n                if (distance >= 0.99) {\n                    liveTracker.seekToLiveEdge();\n                    return;\n                }\n                const seekableStart = liveTracker.seekableStart();\n                const seekableEnd = liveTracker.liveCurrentTime();\n                newTime = seekableStart + distance * liveTracker.liveWindow();\n                if (newTime >= seekableEnd) {\n                    newTime = seekableEnd;\n                }\n                if (newTime <= seekableStart) {\n                    newTime = seekableStart + 0.1;\n                }\n                if (newTime === Infinity) {\n                    return;\n                }\n            }\n            this.player_.currentTime(newTime);\n        }\n        enable() {\n            super.enable();\n            const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n            if (!mouseTimeDisplay) {\n                return;\n            }\n            mouseTimeDisplay.show();\n        }\n        disable() {\n            super.disable();\n            const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n            if (!mouseTimeDisplay) {\n                return;\n            }\n            mouseTimeDisplay.hide();\n        }\n        handleMouseUp(event) {\n            super.handleMouseUp(event);\n            if (event) {\n                event.stopPropagation();\n            }\n            this.player_.scrubbing(false);\n            this.player_.trigger({\n                type: 'timeupdate',\n                target: this,\n                manuallyTriggered: true\n            });\n            if (this.videoWasPlaying) {\n                promise.silencePromise(this.player_.play());\n            } else {\n                this.update_();\n            }\n        }\n        stepForward() {\n            this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n        }\n        stepBack() {\n            this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n        }\n        handleAction(event) {\n            if (this.player_.paused()) {\n                this.player_.play();\n            } else {\n                this.player_.pause();\n            }\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.handleAction(event);\n            } else if (keycode.isEventKey(event, 'Home')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(0);\n            } else if (keycode.isEventKey(event, 'End')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(this.player_.duration());\n            } else if (/^[0-9]$/.test(keycode(event))) {\n                event.preventDefault();\n                event.stopPropagation();\n                const gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10 / 100;\n                this.player_.currentTime(this.player_.duration() * gotoFraction);\n            } else if (keycode.isEventKey(event, 'PgDn')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n            } else if (keycode.isEventKey(event, 'PgUp')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n        dispose() {\n            this.disableInterval_();\n            thisunlistenTo(this.player_, [\n                'ended',\n                'durationchange',\n                'timeupdate'\n            ], this.update);\n            if (this.player_.liveTracker) {\n                this.listenTo(this.player_.liveTracker, 'liveedgechange', this.update);\n            }\n            this.unlistenTo(this.player_, ['playing'], this.enableInterval_);\n            this.unlistenTo(this.player_, [\n                'ended',\n                'pause',\n                'waiting'\n            ], this.disableInterval_);\n            if ('hidden' in document && 'visibilityState' in document) {\n                this.unlistenTo(document, 'visibilitychange', this.toggleVisibility_);\n            }\n            super.dispose();\n        }\n    }\n    SeekBar.prototype.options_ = {\n        children: [\n            'loadProgressBar',\n            'playProgressBar'\n        ],\n        barName: 'playProgressBar'\n    };\n    if (!browser.IS_IOS && !browser.IS_ANDROID) {\n        SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n    }\n    Component.registerComponent('SeekBar', SeekBar);\n    return SeekBar;\n});\ndefine('skylark-videojs/control-bar/progress-control/progress-control',[\n    '../../component',\n    '../../utils/dom',\n    '../../utils/clamp',\n    '../../utils/fn',\n    './seek-bar'\n], function (Component, Dom, clamp, Fn) {\n    'use strict';\n    class ProgressControl extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.handleMouseMove = Fn.throttle(Fn.bind(this, this.handleMouseMove), Fn.UPDATE_REFRESH_INTERVAL);\n            this.throttledHandleMouseSeek = Fn.throttle(Fn.bind(this, this.handleMouseSeek), Fn.UPDATE_REFRESH_INTERVAL);\n            this.enable();\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-progress-control vjs-control' });\n        }\n        handleMouseMove(event) {\n            const seekBar = this.getChild('seekBar');\n            if (!seekBar) {\n                return;\n            }\n            const playProgressBar = seekBar.getChild('playProgressBar');\n            const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n            if (!playProgressBar && !mouseTimeDisplay) {\n                return;\n            }\n            const seekBarEl = seekBar.el();\n            const seekBarRect = Dom.findPosition(seekBarEl);\n            let seekBarPoint = Dom.getPointerPosition(seekBarEl, event).x;\n            seekBarPoint = clamp(seekBarPoint, 0, 1);\n            if (mouseTimeDisplay) {\n                mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n            }\n            if (playProgressBar) {\n                playProgressBar.update(seekBarRect, seekBar.getProgress());\n            }\n        }\n        handleMouseSeek(event) {\n            const seekBar = this.getChild('seekBar');\n            if (seekBar) {\n                seekBar.handleMouseMove(event);\n            }\n        }\n        enabled() {\n            return this.enabled_;\n        }\n        disable() {\n            this.children().forEach(child => child.disable && child.disable());\n            if (!this.enabled()) {\n                return;\n            }\n            this.unlistenTo([\n                'mousedown',\n                'touchstart'\n            ], this.handleMouseDown);\n            this.unlistenTo(this.el_, 'mousemove', this.handleMouseMove);\n            this.handleMouseUp();\n            this.addClass('disabled');\n            this.enabled_ = false;\n        }\n        enable() {\n            this.children().forEach(child => child.enable && child.enable());\n            if (this.enabled()) {\n                return;\n            }\n            this.listenTo([\n                'mousedown',\n                'touchstart'\n            ], this.handleMouseDown);\n            this.listenTo(this.el_, 'mousemove', this.handleMouseMove);\n            this.removeClass('disabled');\n            this.enabled_ = true;\n        }\n        handleMouseDown(event) {\n            const doc = this.el_.ownerDocument;\n            const seekBar = this.getChild('seekBar');\n            if (seekBar) {\n                seekBar.handleMouseDown(event);\n            }\n            this.listenTo(doc, 'mousemove', this.throttledHandleMouseSeek);\n            this.listenTo(doc, 'touchmove', this.throttledHandleMouseSeek);\n            this.listenTo(doc, 'mouseup', this.handleMouseUp);\n            this.listenTo(doc, 'touchend', this.handleMouseUp);\n        }\n        handleMouseUp(event) {\n            const doc = this.el_.ownerDocument;\n            const seekBar = this.getChild('seekBar');\n            if (seekBar) {\n                seekBar.handleMouseUp(event);\n            }\n            this.unlistenTo(doc, 'mousemove', this.throttledHandleMouseSeek);\n            this.unlistenTo(doc, 'touchmove', this.throttledHandleMouseSeek);\n            this.unlistenTo(doc, 'mouseup', this.handleMouseUp);\n            this.unlistenTo(doc, 'touchend', this.handleMouseUp);\n        }\n    }\n    ProgressControl.prototype.options_ = { children: ['seekBar'] };\n    Component.registerComponent('ProgressControl', ProgressControl);\n    return ProgressControl;\n});\ndefine('skylark-videojs/control-bar/picture-in-picture-toggle',[\n    'skylark-langx-globals/document',\n    '../button',\n    '../component'\n], function (document,Button, Component) {\n    'use strict';\n    class PictureInPictureToggle extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, [\n                'enterpictureinpicture',\n                'leavepictureinpicture'\n            ], this.handlePictureInPictureChange);\n            this.listenTo(player, [\n                'disablepictureinpicturechanged',\n                'loadedmetadata'\n            ], this.handlePictureInPictureEnabledChange);\n            this.disable();\n        }\n        buildCSSClass() {\n            return `vjs-picture-in-picture-control ${ super.buildCSSClass() }`;\n        }\n        handlePictureInPictureEnabledChange() {\n            if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n                this.enable();\n            } else {\n                this.disable();\n            }\n        }\n        handlePictureInPictureChange(event) {\n            if (this.player_.isInPictureInPicture()) {\n                this.controlText('Exit Picture-in-Picture');\n            } else {\n                this.controlText('Picture-in-Picture');\n            }\n            this.handlePictureInPictureEnabledChange();\n        }\n        handleClick(event) {\n            if (!this.player_.isInPictureInPicture()) {\n                this.player_.requestPictureInPicture();\n            } else {\n                this.player_.exitPictureInPicture();\n            }\n        }\n    }\n    PictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\n    Component.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n    return PictureInPictureToggle;\n});\ndefine('skylark-videojs/control-bar/fullscreen-toggle',[\n    'skylark-langx-globals/document',\n    '../button',\n    '../component',\n], function (document,Button, Component) {\n    'use strict';\n    class FullscreenToggle extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, 'fullscreenchange', this.handleFullscreenChange);\n            if (document[player.fsApi_.fullscreenEnabled] === false) {\n                this.disable();\n            }\n        }\n        buildCSSClass() {\n            return `vjs-fullscreen-control ${ super.buildCSSClass() }`;\n        }\n        handleFullscreenChange(event) {\n            if (this.player_.isFullscreen()) {\n                this.controlText('Non-Fullscreen');\n            } else {\n                this.controlText('Fullscreen');\n            }\n        }\n        handleClick(event) {\n            if (!this.player_.isFullscreen()) {\n                this.player_.requestFullscreen();\n            } else {\n                this.player_.exitFullscreen();\n            }\n        }\n    }\n    FullscreenToggle.prototype.controlText_ = 'Fullscreen';\n    Component.registerComponent('FullscreenToggle', FullscreenToggle);\n    return FullscreenToggle;\n});\ndefine('skylark-videojs/control-bar/volume-control/check-volume-support',[],function () {\n    'use strict';\n    const checkVolumeSupport = function (self, player) {\n        if (player.tech_ && !player.tech_.featuresVolumeControl) {\n            self.addClass('vjs-hidden');\n        }\n        self.listenTo(player, 'loadstart', function () {\n            if (!player.tech_.featuresVolumeControl) {\n                self.addClass('vjs-hidden');\n            } else {\n                self.removeClass('vjs-hidden');\n            }\n        });\n    };\n    return checkVolumeSupport;\n});\ndefine('skylark-videojs/control-bar/volume-control/volume-level',[\n    '../../component'\n], function (Component) {\n    'use strict';\n    class VolumeLevel extends Component {\n        createEl() {\n            return super.createEl('div', {\n                className: 'vjs-volume-level',\n                innerHTML: '<span class=\"vjs-control-text\"></span>'\n            });\n        }\n    }\n    Component.registerComponent('VolumeLevel', VolumeLevel);\n    return VolumeLevel;\n});\ndefine('skylark-videojs/control-bar/volume-control/volume-bar',[\n    '../../slider/slider',\n    '../../component',\n    '../../utils/dom',\n    './volume-level'\n], function (Slider, Component, Dom) {\n    'use strict';\n    class VolumeBar extends Slider {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo('slideractive', this.updateLastVolume_);\n            this.listenTo(player, 'volumechange', this.updateARIAAttributes);\n            player.ready(() => this.updateARIAAttributes());\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-volume-bar vjs-slider-bar' }, {\n                'aria-label': this.localize('Volume Level'),\n                'aria-live': 'polite'\n            });\n        }\n        handleMouseDown(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            super.handleMouseDown(event);\n        }\n        handleMouseMove(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            this.checkMuted();\n            this.player_.volume(this.calculateDistance(event));\n        }\n        checkMuted() {\n            if (this.player_.muted()) {\n                this.player_.muted(false);\n            }\n        }\n        getPercent() {\n            if (this.player_.muted()) {\n                return 0;\n            }\n            return this.player_.volume();\n        }\n        stepForward() {\n            this.checkMuted();\n            this.player_.volume(this.player_.volume() + 0.1);\n        }\n        stepBack() {\n            this.checkMuted();\n            this.player_.volume(this.player_.volume() - 0.1);\n        }\n        updateARIAAttributes(event) {\n            const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n            this.el_.setAttribute('aria-valuenow', ariaValue);\n            this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n        }\n        volumeAsPercentage_() {\n            return Math.round(this.player_.volume() * 100);\n        }\n        updateLastVolume_() {\n            const volumeBeforeDrag = this.player_.volume();\n            this.listenToOnce('sliderinactive', () => {\n                if (this.player_.volume() === 0) {\n                    this.player_.lastVolume_(volumeBeforeDrag);\n                }\n            });\n        }\n    }\n    VolumeBar.prototype.options_ = {\n        children: ['volumeLevel'],\n        barName: 'volumeLevel'\n    };\n    VolumeBar.prototype.playerEvent = 'volumechange';\n    Component.registerComponent('VolumeBar', VolumeBar);\n    return VolumeBar;\n});\ndefine('skylark-videojs/control-bar/volume-control/volume-control',[\n    '../../component',\n    './check-volume-support',\n    '../../utils/obj',\n    '../../utils/fn',\n    './volume-bar'\n], function (Component, checkVolumeSupport, obj, Fn) {\n    'use strict';\n    class VolumeControl extends Component {\n        constructor(player, options = {}) {\n            options.vertical = options.vertical || false;\n            if (typeof options.volumeBar === 'undefined' || obj.isPlain(options.volumeBar)) {\n                options.volumeBar = options.volumeBar || {};\n                options.volumeBar.vertical = options.vertical;\n            }\n            super(player, options);\n            checkVolumeSupport(this, player);\n            this.throttledHandleMouseMove = Fn.throttle(Fn.bind(this, this.handleMouseMove), Fn.UPDATE_REFRESH_INTERVAL);\n            this.listenTo('mousedown', this.handleMouseDown);\n            this.listenTo('touchstart', this.handleMouseDown);\n            this.listenTo(this.volumeBar, [\n                'focus',\n                'slideractive'\n            ], () => {\n                this.volumeBar.addClass('vjs-slider-active');\n                this.addClass('vjs-slider-active');\n                this.trigger('slideractive');\n            });\n            this.listenTo(this.volumeBar, [\n                'blur',\n                'sliderinactive'\n            ], () => {\n                this.volumeBar.removeClass('vjs-slider-active');\n                this.removeClass('vjs-slider-active');\n                this.trigger('sliderinactive');\n            });\n        }\n        createEl() {\n            let orientationClass = 'vjs-volume-horizontal';\n            if (this.options_.vertical) {\n                orientationClass = 'vjs-volume-vertical';\n            }\n            return super.createEl('div', { className: `vjs-volume-control vjs-control ${ orientationClass }` });\n        }\n        handleMouseDown(event) {\n            const doc = this.el_.ownerDocument;\n            this.listenTo(doc, 'mousemove', this.throttledHandleMouseMove);\n            this.listenTo(doc, 'touchmove', this.throttledHandleMouseMove);\n            this.listenTo(doc, 'mouseup', this.handleMouseUp);\n            this.listenTo(doc, 'touchend', this.handleMouseUp);\n        }\n        handleMouseUp(event) {\n            const doc = this.el_.ownerDocument;\n            this.unlistenTo(doc, 'mousemove', this.throttledHandleMouseMove);\n            this.unlistenTo(doc, 'touchmove', this.throttledHandleMouseMove);\n            this.unlistenTo(doc, 'mouseup', this.handleMouseUp);\n            this.unlistenTo(doc, 'touchend', this.handleMouseUp);\n        }\n        handleMouseMove(event) {\n            this.volumeBar.handleMouseMove(event);\n        }\n    }\n    VolumeControl.prototype.options_ = { children: ['volumeBar'] };\n    Component.registerComponent('VolumeControl', VolumeControl);\n    return VolumeControl;\n});\ndefine('skylark-videojs/control-bar/volume-control/check-mute-support',[],function () {\n    'use strict';\n    const checkMuteSupport = function (self, player) {\n        if (player.tech_ && !player.tech_.featuresMuteControl) {\n            self.addClass('vjs-hidden');\n        }\n        self.listenTo(player, 'loadstart', function () {\n            if (!player.tech_.featuresMuteControl) {\n                self.addClass('vjs-hidden');\n            } else {\n                self.removeClass('vjs-hidden');\n            }\n        });\n    };\n    return checkMuteSupport;\n});\ndefine('skylark-videojs/control-bar/mute-toggle',[\n    '../button',\n    '../component',\n    '../utils/dom',\n    './volume-control/check-mute-support',\n    '../utils/browser'\n], function (Button, Component, Dom, checkMuteSupport, browser) {\n    'use strict';\n    class MuteToggle extends Button {\n        constructor(player, options) {\n            super(player, options);\n            checkMuteSupport(this, player);\n            this.listenTo(player, [\n                'loadstart',\n                'volumechange'\n            ], this.update);\n        }\n        buildCSSClass() {\n            return `vjs-mute-control ${ super.buildCSSClass() }`;\n        }\n        handleClick(event) {\n            const vol = this.player_.volume();\n            const lastVolume = this.player_.lastVolume_();\n            if (vol === 0) {\n                const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n                this.player_.volume(volumeToSet);\n                this.player_.muted(false);\n            } else {\n                this.player_.muted(this.player_.muted() ? false : true);\n            }\n        }\n        update(event) {\n            this.updateIcon_();\n            this.updateControlText_();\n        }\n        updateIcon_() {\n            const vol = this.player_.volume();\n            let level = 3;\n            if (browser.IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n                this.player_.muted(this.player_.tech_.el_.muted);\n            }\n            if (vol === 0 || this.player_.muted()) {\n                level = 0;\n            } else if (vol < 0.33) {\n                level = 1;\n            } else if (vol < 0.67) {\n                level = 2;\n            }\n            for (let i = 0; i < 4; i++) {\n                Dom.removeClass(this.el_, `vjs-vol-${ i }`);\n            }\n            Dom.addClass(this.el_, `vjs-vol-${ level }`);\n        }\n        updateControlText_() {\n            const soundOff = this.player_.muted() || this.player_.volume() === 0;\n            const text = soundOff ? 'Unmute' : 'Mute';\n            if (this.controlText() !== text) {\n                this.controlText(text);\n            }\n        }\n    }\n    MuteToggle.prototype.controlText_ = 'Mute';\n    Component.registerComponent('MuteToggle', MuteToggle);\n    return MuteToggle;\n});\ndefine('skylark-videojs/control-bar/volume-panel',[\n    'skylark-langx-globals/document',\n    '../component',\n    '../utils/obj',\n    '../utils/events',\n    '../utils/fn',\n    '../utils/keycode',\n    './volume-control/volume-control',\n    './mute-toggle'\n], function (document, Component, obj, Events, Fn, keycode) {\n    'use strict';\n    class VolumePanel extends Component {\n        constructor(player, options = {}) {\n            if (typeof options.inline !== 'undefined') {\n                options.inline = options.inline;\n            } else {\n                options.inline = true;\n            }\n            if (typeof options.volumeControl === 'undefined' || obj.isPlain(options.volumeControl)) {\n                options.volumeControl = options.volumeControl || {};\n                options.volumeControl.vertical = !options.inline;\n            }\n            super(player, options);\n            this.listenTo(player, ['loadstart'], this.volumePanelState_);\n            this.listenTo(this.muteToggle, 'keyup', this.handleKeyPress);\n            this.listenTo(this.volumeControl, 'keyup', this.handleVolumeControlKeyUp);\n            this.listenTo('keydown', this.handleKeyPress);\n            this.listenTo('mouseover', this.handleMouseOver);\n            this.listenTo('mouseout', this.handleMouseOut);\n            this.listenTo(this.volumeControl, ['slideractive'], this.sliderActive_);\n            this.listenTo(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n        }\n        sliderActive_() {\n            this.addClass('vjs-slider-active');\n        }\n        sliderInactive_() {\n            this.removeClass('vjs-slider-active');\n        }\n        volumePanelState_() {\n            if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n                this.addClass('vjs-hidden');\n            }\n            if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n                this.addClass('vjs-mute-toggle-only');\n            }\n        }\n        createEl() {\n            let orientationClass = 'vjs-volume-panel-horizontal';\n            if (!this.options_.inline) {\n                orientationClass = 'vjs-volume-panel-vertical';\n            }\n            return super.createEl('div', { className: `vjs-volume-panel vjs-control ${ orientationClass }` });\n        }\n        dispose() {\n            this.handleMouseOut();\n            super.dispose();\n        }\n        handleVolumeControlKeyUp(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                this.muteToggle.focus();\n            }\n        }\n        handleMouseOver(event) {\n            this.addClass('vjs-hover');\n            Events.on(document, 'keyup', Fn.bind(this, this.handleKeyPress));\n        }\n        handleMouseOut(event) {\n            this.removeClass('vjs-hover');\n            Events.off(document, 'keyup', Fn.bind(this, this.handleKeyPress));\n        }\n        handleKeyPress(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                this.handleMouseOut();\n            }\n        }\n    }\n    VolumePanel.prototype.options_ = {\n        children: [\n            'muteToggle',\n            'volumeControl'\n        ]\n    };\n    Component.registerComponent('VolumePanel', VolumePanel);\n    return VolumePanel;\n});\ndefine('skylark-videojs/menu/menu',[\n    'skylark-langx-globals/document',\n    '../component',\n    '../utils/dom',\n    '../utils/fn',\n    '../utils/events',\n    '../utils/keycode'\n], function (document,Component, Dom, Fn, Events, keycode) {\n    'use strict';\n    class Menu extends Component {\n        constructor(player, options) {\n            super(player, options);\n            if (options) {\n                this.menuButton_ = options.menuButton;\n            }\n            this.focusedChild_ = -1;\n            this.listenTo('keydown', this.handleKeyDown);\n            this.boundHandleBlur_ = Fn.bind(this, this.handleBlur);\n            this.boundHandleTapClick_ = Fn.bind(this, this.handleTapClick);\n        }\n        addEventListenerForItem(component) {\n            if (!(component instanceof Component)) {\n                return;\n            }\n            this.listenTo(component, 'blur', this.boundHandleBlur_);\n            this.listenTo(component, [\n                'tap',\n                'click'\n            ], this.boundHandleTapClick_);\n        }\n        removeEventListenerForItem(component) {\n            if (!(component instanceof Component)) {\n                return;\n            }\n            this.unlistenTo(component, 'blur', this.boundHandleBlur_);\n            this.unlistenTo(component, [\n                'tap',\n                'click'\n            ], this.boundHandleTapClick_);\n        }\n        removeChild(component) {\n            if (typeof component === 'string') {\n                component = this.getChild(component);\n            }\n            this.removeEventListenerForItem(component);\n            super.removeChild(component);\n        }\n        addItem(component) {\n            const childComponent = this.addChild(component);\n            if (childComponent) {\n                this.addEventListenerForItem(childComponent);\n            }\n        }\n        createEl() {\n            const contentElType = this.options_.contentElType || 'ul';\n            this.contentEl_ = Dom.createEl(contentElType, { className: 'vjs-menu-content' });\n            this.contentEl_.setAttribute('role', 'menu');\n            const el = super.createEl('div', {\n                append: this.contentEl_,\n                className: 'vjs-menu'\n            });\n            el.appendChild(this.contentEl_);\n            Events.on(el, 'click', function (event) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            });\n            return el;\n        }\n        dispose() {\n            this.contentEl_ = null;\n            this.boundHandleBlur_ = null;\n            this.boundHandleTapClick_ = null;\n            super.dispose();\n        }\n        handleBlur(event) {\n            const relatedTarget = event.relatedTarget || document.activeElement;\n            if (!this.children().some(element => {\n                    return element.el() === relatedTarget;\n                })) {\n                const btn = this.menuButton_;\n                if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n                    btn.unpressButton();\n                }\n            }\n        }\n        handleTapClick(event) {\n            if (this.menuButton_) {\n                this.menuButton_.unpressButton();\n                const childComponents = this.children();\n                if (!Array.isArray(childComponents)) {\n                    return;\n                }\n                const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n                if (!foundComponent) {\n                    return;\n                }\n                if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n                    this.menuButton_.focus();\n                }\n            }\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepForward();\n            } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepBack();\n            }\n        }\n        stepForward() {\n            let stepChild = 0;\n            if (this.focusedChild_ !== undefined) {\n                stepChild = this.focusedChild_ + 1;\n            }\n            this.focus(stepChild);\n        }\n        stepBack() {\n            let stepChild = 0;\n            if (this.focusedChild_ !== undefined) {\n                stepChild = this.focusedChild_ - 1;\n            }\n            this.focus(stepChild);\n        }\n        focus(item = 0) {\n            const children = this.children().slice();\n            const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n            if (haveTitle) {\n                children.shift();\n            }\n            if (children.length > 0) {\n                if (item < 0) {\n                    item = 0;\n                } else if (item >= children.length) {\n                    item = children.length - 1;\n                }\n                this.focusedChild_ = item;\n                children[item].el_.focus();\n            }\n        }\n    }\n    Component.registerComponent('Menu', Menu);\n    return Menu;\n});\ndefine('skylark-videojs/menu/menu-button',[\n    '../button',\n    '../component',\n    './menu',\n    '../utils/dom',\n    '../utils/fn',\n    '../utils/events',\n    '../utils/string-cases',\n    '../utils/browser',\n    '../utils/keycode'\n], function (Button, Component, Menu, Dom, Fn, Events, stringCases, browser, keycode) {\n    'use strict';\n    class MenuButton extends Component {\n        constructor(player, options = {}) {\n            super(player, options);\n            this.menuButton_ = new Button(player, options);\n            this.menuButton_.controlText(this.controlText_);\n            this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n            const buttonClass = Button.prototype.buildCSSClass();\n            this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n            this.menuButton_.removeClass('vjs-control');\n            this.addChild(this.menuButton_);\n            this.update();\n            this.enabled_ = true;\n            this.listenTo(this.menuButton_, 'tap', this.handleClick);\n            this.listenTo(this.menuButton_, 'click', this.handleClick);\n            this.listenTo(this.menuButton_, 'keydown', this.handleKeyDown);\n            this.listenTo(this.menuButton_, 'mouseenter', () => {\n                this.addClass('vjs-hover');\n                this.menu.show();\n                Events.on(document, 'keyup', Fn.bind(this, this.handleMenuKeyUp));\n            });\n            this.listenTo('mouseleave', this.handleMouseLeave);\n            this.listenTo('keydown', this.handleSubmenuKeyDown);\n        }\n        update() {\n            const menu = this.createMenu();\n            if (this.menu) {\n                this.menu.dispose();\n                this.removeChild(this.menu);\n            }\n            this.menu = menu;\n            this.addChild(menu);\n            this.buttonPressed_ = false;\n            this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n            if (this.items && this.items.length <= this.hideThreshold_) {\n                this.hide();\n            } else {\n                this.show();\n            }\n        }\n        createMenu() {\n            const menu = new Menu(this.player_, { menuButton: this });\n            this.hideThreshold_ = 0;\n            if (this.options_.title) {\n                const titleEl = Dom.createEl('li', {\n                    className: 'vjs-menu-title',\n                    innerHTML: stringCases.toTitleCase(this.options_.title),\n                    tabIndex: -1\n                });\n                this.hideThreshold_ += 1;\n                const titleComponent = new Component(this.player_, { el: titleEl });\n                menu.addItem(titleComponent);\n            }\n            this.items = this.createItems();\n            if (this.items) {\n                for (let i = 0; i < this.items.length; i++) {\n                    menu.addItem(this.items[i]);\n                }\n            }\n            return menu;\n        }\n        createItems() {\n        }\n        createEl() {\n            return super.createEl('div', { className: this.buildWrapperCSSClass() }, {});\n        }\n        buildWrapperCSSClass() {\n            let menuButtonClass = 'vjs-menu-button';\n            if (this.options_.inline === true) {\n                menuButtonClass += '-inline';\n            } else {\n                menuButtonClass += '-popup';\n            }\n            const buttonClass = Button.prototype.buildCSSClass();\n            return `vjs-menu-button ${ menuButtonClass } ${ buttonClass } ${ super.buildCSSClass() }`;\n        }\n        buildCSSClass() {\n            let menuButtonClass = 'vjs-menu-button';\n            if (this.options_.inline === true) {\n                menuButtonClass += '-inline';\n            } else {\n                menuButtonClass += '-popup';\n            }\n            return `vjs-menu-button ${ menuButtonClass } ${ super.buildCSSClass() }`;\n        }\n        controlText(text, el = this.menuButton_.el()) {\n            return this.menuButton_.controlText(text, el);\n        }\n        dispose() {\n            this.handleMouseLeave();\n            super.dispose();\n        }\n        handleClick(event) {\n            if (this.buttonPressed_) {\n                this.unpressButton();\n            } else {\n                this.pressButton();\n            }\n        }\n        handleMouseLeave(event) {\n            this.removeClass('vjs-hover');\n            Events.off(document, 'keyup', Fn.bind(this, this.handleMenuKeyUp));\n        }\n        focus() {\n            this.menuButton_.focus();\n        }\n        blur() {\n            this.menuButton_.blur();\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n                if (this.buttonPressed_) {\n                    this.unpressButton();\n                }\n                if (!keycode.isEventKey(event, 'Tab')) {\n                    event.preventDefault();\n                    this.menuButton_.focus();\n                }\n            } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n                if (!this.buttonPressed_) {\n                    event.preventDefault();\n                    this.pressButton();\n                }\n            }\n        }\n        handleMenuKeyUp(event) {\n            if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n                this.removeClass('vjs-hover');\n            }\n        }\n        handleSubmenuKeyPress(event) {\n            this.handleSubmenuKeyDown(event);\n        }\n        handleSubmenuKeyDown(event) {\n            if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n                if (this.buttonPressed_) {\n                    this.unpressButton();\n                }\n                if (!keycode.isEventKey(event, 'Tab')) {\n                    event.preventDefault();\n                    this.menuButton_.focus();\n                }\n            } else {\n            }\n        }\n        pressButton() {\n            if (this.enabled_) {\n                this.buttonPressed_ = true;\n                this.menu.show();\n                this.menu.lockShowing();\n                this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n                if (browser.IS_IOS && Dom.isInFrame()) {\n                    return;\n                }\n                this.menu.focus();\n            }\n        }\n        unpressButton() {\n            if (this.enabled_) {\n                this.buttonPressed_ = false;\n                this.menu.unlockShowing();\n                this.menu.hide();\n                this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n            }\n        }\n        disable() {\n            this.unpressButton();\n            this.enabled_ = false;\n            this.addClass('vjs-disabled');\n            this.menuButton_.disable();\n        }\n        enable() {\n            this.enabled_ = true;\n            this.removeClass('vjs-disabled');\n            this.menuButton_.enable();\n        }\n    }\n    Component.registerComponent('MenuButton', MenuButton);\n    return MenuButton;\n});\ndefine('skylark-videojs/control-bar/track-button',[\n    '../menu/menu-button',\n    '../component',\n    '../utils/fn'\n], function (MenuButton, Component, Fn) {\n    'use strict';\n    class TrackButton extends MenuButton {\n        constructor(player, options) {\n            const tracks = options.tracks;\n            super(player, options);\n            if (this.items.length <= 1) {\n                this.hide();\n            }\n            if (!tracks) {\n                return;\n            }\n            const updateHandler = Fn.bind(this, this.update);\n            tracks.addEventListener('removetrack', updateHandler);\n            tracks.addEventListener('addtrack', updateHandler);\n            tracks.addEventListener('labelchange', updateHandler);\n            this.player_.on('ready', updateHandler);\n            this.player_.on('dispose', function () {\n                tracks.removeEventListener('removetrack', updateHandler);\n                tracks.removeEventListener('addtrack', updateHandler);\n                tracks.removeEventListener('labelchange', updateHandler);\n            });\n        }\n    }\n    Component.registerComponent('TrackButton', TrackButton);\n    return TrackButton;\n});\ndefine('skylark-videojs/menu/menu-keys',[],function () {\n    'use strict';\n    const MenuKeys = [\n        'Tab',\n        'Esc',\n        'Up',\n        'Down',\n        'Right',\n        'Left'\n    ];\n    return MenuKeys;\n});\ndefine('skylark-videojs/menu/menu-item',[\n    '../clickable-component',\n    '../component',\n    '../utils/obj',\n    './menu-keys',\n    '../utils/keycode'\n], function (ClickableComponent, Component, obj, MenuKeys, keycode) {\n    'use strict';\n    class MenuItem extends ClickableComponent {\n        constructor(player, options) {\n            super(player, options);\n            this.selectable = options.selectable;\n            this.isSelected_ = options.selected || false;\n            this.multiSelectable = options.multiSelectable;\n            this.selected(this.isSelected_);\n            if (this.selectable) {\n                if (this.multiSelectable) {\n                    this.el_.setAttribute('role', 'menuitemcheckbox');\n                } else {\n                    this.el_.setAttribute('role', 'menuitemradio');\n                }\n            } else {\n                this.el_.setAttribute('role', 'menuitem');\n            }\n        }\n        createEl(type, props, attrs) {\n            this.nonIconControl = true;\n            return super.createEl('li', obj.assign({\n                className: 'vjs-menu-item',\n                innerHTML: `<span class=\"vjs-menu-item-text\">${ this.localize(this.options_.label) }</span>`,\n                tabIndex: -1\n            }, props), attrs);\n        }\n        handleKeyDown(event) {\n            if (!MenuKeys.some(key => keycode.isEventKey(event, key))) {\n                super.handleKeyDown(event);\n            }\n        }\n        handleClick(event) {\n            this.selected(true);\n        }\n        selected(selected) {\n            if (this.selectable) {\n                if (selected) {\n                    this.addClass('vjs-selected');\n                    this.el_.setAttribute('aria-checked', 'true');\n                    this.controlText(', selected');\n                    this.isSelected_ = true;\n                } else {\n                    this.removeClass('vjs-selected');\n                    this.el_.setAttribute('aria-checked', 'false');\n                    this.controlText('');\n                    this.isSelected_ = false;\n                }\n            }\n        }\n    }\n    Component.registerComponent('MenuItem', MenuItem);\n    return MenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/text-track-menu-item',[\n    'skylark-langx-globals/document',\n    '../../menu/menu-item',\n    '../../component'\n], function (document,MenuItem, Component) {\n    'use strict';\n    class TextTrackMenuItem extends MenuItem {\n        constructor(player, options) {\n            const track = options.track;\n            const tracks = player.textTracks();\n            options.label = track.label || track.language || 'Unknown';\n            options.selected = track.mode === 'showing';\n            super(player, options);\n            this.track = track;\n            this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n            const changeHandler = (...args) => {\n                this.handleTracksChange.apply(this, args);\n            };\n            const selectedLanguageChangeHandler = (...args) => {\n                this.handleSelectedLanguageChange.apply(this, args);\n            };\n            player.on([\n                'loadstart',\n                'texttrackchange'\n            ], changeHandler);\n            tracks.addEventListener('change', changeHandler);\n            tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n            this.listenTo('dispose', function () {\n                player.off([\n                    'loadstart',\n                    'texttrackchange'\n                ], changeHandler);\n                tracks.removeEventListener('change', changeHandler);\n                tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n            });\n            if (tracks.onchange === undefined) {\n                let event;\n                this.listenTo([\n                    'tap',\n                    'click'\n                ], function () {\n                    if (typeof window.Event !== 'object') {\n                        try {\n                            event = new window.Event('change');\n                        } catch (err) {\n                        }\n                    }\n                    if (!event) {\n                        event = document.createEvent('Event');\n                        event.initEvent('change', true, true);\n                    }\n                    tracks.dispatchEvent(event);\n                });\n            }\n            this.handleTracksChange();\n        }\n        handleClick(event) {\n            const referenceTrack = this.track;\n            const tracks = this.player_.textTracks();\n            super.handleClick(event);\n            if (!tracks) {\n                return;\n            }\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                if (this.kinds.indexOf(track.kind) === -1) {\n                    continue;\n                }\n                if (track === referenceTrack) {\n                    if (track.mode !== 'showing') {\n                        track.mode = 'showing';\n                    }\n                } else if (track.mode !== 'disabled') {\n                    track.mode = 'disabled';\n                }\n            }\n        }\n        handleTracksChange(event) {\n            const shouldBeSelected = this.track.mode === 'showing';\n            if (shouldBeSelected !== this.isSelected_) {\n                this.selected(shouldBeSelected);\n            }\n        }\n        handleSelectedLanguageChange(event) {\n            if (this.track.mode === 'showing') {\n                const selectedLanguage = this.player_.cache_.selectedLanguage;\n                if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n                    return;\n                }\n                this.player_.cache_.selectedLanguage = {\n                    enabled: true,\n                    language: this.track.language,\n                    kind: this.track.kind\n                };\n            }\n        }\n        dispose() {\n            this.track = null;\n            super.dispose();\n        }\n    }\n    Component.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n    return TextTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/off-text-track-menu-item',[\n    './text-track-menu-item',\n    '../../component'\n], function (TextTrackMenuItem, Component) {\n    'use strict';\n    class OffTextTrackMenuItem extends TextTrackMenuItem {\n        constructor(player, options) {\n            options.track = {\n                player,\n                kind: options.kind,\n                kinds: options.kinds,\n                default: false,\n                mode: 'disabled'\n            };\n            if (!options.kinds) {\n                options.kinds = [options.kind];\n            }\n            if (options.label) {\n                options.track.label = options.label;\n            } else {\n                options.track.label = options.kinds.join(' and ') + ' off';\n            }\n            options.selectable = true;\n            options.multiSelectable = false;\n            super(player, options);\n        }\n        handleTracksChange(event) {\n            const tracks = this.player().textTracks();\n            let shouldBeSelected = true;\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                const track = tracks[i];\n                if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n                    shouldBeSelected = false;\n                    break;\n                }\n            }\n            if (shouldBeSelected !== this.isSelected_) {\n                this.selected(shouldBeSelected);\n            }\n        }\n        handleSelectedLanguageChange(event) {\n            const tracks = this.player().textTracks();\n            let allHidden = true;\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                const track = tracks[i];\n                if ([\n                        'captions',\n                        'descriptions',\n                        'subtitles'\n                    ].indexOf(track.kind) > -1 && track.mode === 'showing') {\n                    allHidden = false;\n                    break;\n                }\n            }\n            if (allHidden) {\n                this.player_.cache_.selectedLanguage = { enabled: false };\n            }\n        }\n    }\n    Component.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n    return OffTextTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/text-track-button',[\n    '../track-button',\n    '../../component',\n    './text-track-menu-item',\n    './off-text-track-menu-item'\n], function (TrackButton, Component, TextTrackMenuItem, OffTextTrackMenuItem) {\n    'use strict';\n    class TextTrackButton extends TrackButton {\n        constructor(player, options = {}) {\n            options.tracks = player.textTracks();\n            super(player, options);\n        }\n        createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n            let label;\n            if (this.label_) {\n                label = `${ this.label_ } off`;\n            }\n            items.push(new OffTextTrackMenuItem(this.player_, {\n                kinds: this.kinds_,\n                kind: this.kind_,\n                label\n            }));\n            this.hideThreshold_ += 1;\n            const tracks = this.player_.textTracks();\n            if (!Array.isArray(this.kinds_)) {\n                this.kinds_ = [this.kind_];\n            }\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                if (this.kinds_.indexOf(track.kind) > -1) {\n                    const item = new TrackMenuItem(this.player_, {\n                        track,\n                        kinds: this.kinds_,\n                        kind: this.kind_,\n                        selectable: true,\n                        multiSelectable: false\n                    });\n                    item.addClass(`vjs-${ track.kind }-menu-item`);\n                    items.push(item);\n                }\n            }\n            return items;\n        }\n    }\n    Component.registerComponent('TextTrackButton', TextTrackButton);\n    return TextTrackButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/chapters-track-menu-item',[\n    '../../menu/menu-item',\n    '../../component',\n    '../../utils/fn'\n], function (MenuItem, Component, Fn) {\n    'use strict';\n    class ChaptersTrackMenuItem extends MenuItem {\n        constructor(player, options) {\n            const track = options.track;\n            const cue = options.cue;\n            const currentTime = player.currentTime();\n            options.selectable = true;\n            options.multiSelectable = false;\n            options.label = cue.text;\n            options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n            super(player, options);\n            this.track = track;\n            this.cue = cue;\n            track.addEventListener('cuechange', Fn.bind(this, this.update));\n        }\n        handleClick(event) {\n            super.handleClick();\n            this.player_.currentTime(this.cue.startTime);\n            this.update(this.cue.startTime);\n        }\n        update(event) {\n            const cue = this.cue;\n            const currentTime = this.player_.currentTime();\n            this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n        }\n    }\n    Component.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n    return ChaptersTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/chapters-button',[\n    './text-track-button',\n    '../../component',\n    './chapters-track-menu-item',\n    '../../utils/string-cases'\n], function (TextTrackButton, Component, ChaptersTrackMenuItem, stringCases) {\n    'use strict';\n    class ChaptersButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n        }\n        buildCSSClass() {\n            return `vjs-chapters-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-chapters-button ${ super.buildWrapperCSSClass() }`;\n        }\n        update(event) {\n            if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n                this.setTrack(this.findChaptersTrack());\n            }\n            super.update();\n        }\n        setTrack(track) {\n            if (this.track_ === track) {\n                return;\n            }\n            if (!this.updateHandler_) {\n                this.updateHandler_ = this.update.bind(this);\n            }\n            if (this.track_) {\n                const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n                if (remoteTextTrackEl) {\n                    remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n                }\n                this.track_ = null;\n            }\n            this.track_ = track;\n            if (this.track_) {\n                this.track_.mode = 'hidden';\n                const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n                if (remoteTextTrackEl) {\n                    remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n                }\n            }\n        }\n        findChaptersTrack() {\n            const tracks = this.player_.textTracks() || [];\n            for (let i = tracks.length - 1; i >= 0; i--) {\n                const track = tracks[i];\n                if (track.kind === this.kind_) {\n                    return track;\n                }\n            }\n        }\n        getMenuCaption() {\n            if (this.track_ && this.track_.label) {\n                return this.track_.label;\n            }\n            return this.localize(stringCases.toTitleCase(this.kind_));\n        }\n        createMenu() {\n            this.options_.title = this.getMenuCaption();\n            return super.createMenu();\n        }\n        createItems() {\n            const items = [];\n            if (!this.track_) {\n                return items;\n            }\n            const cues = this.track_.cues;\n            if (!cues) {\n                return items;\n            }\n            for (let i = 0, l = cues.length; i < l; i++) {\n                const cue = cues[i];\n                const mi = new ChaptersTrackMenuItem(this.player_, {\n                    track: this.track_,\n                    cue\n                });\n                items.push(mi);\n            }\n            return items;\n        }\n    }\n    ChaptersButton.prototype.kind_ = 'chapters';\n    ChaptersButton.prototype.controlText_ = 'Chapters';\n    Component.registerComponent('ChaptersButton', ChaptersButton);\n    return ChaptersButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/descriptions-button',[\n    './text-track-button',\n    '../../component',\n    '../../utils/fn'\n], function (TextTrackButton, Component, Fn) {\n    'use strict';\n    class DescriptionsButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n            const tracks = player.textTracks();\n            const changeHandler = Fn.bind(this, this.handleTracksChange);\n            tracks.addEventListener('change', changeHandler);\n            this.listenTo('dispose', function () {\n                tracks.removeEventListener('change', changeHandler);\n            });\n        }\n        handleTracksChange(event) {\n            const tracks = this.player().textTracks();\n            let disabled = false;\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                const track = tracks[i];\n                if (track.kind !== this.kind_ && track.mode === 'showing') {\n                    disabled = true;\n                    break;\n                }\n            }\n            if (disabled) {\n                this.disable();\n            } else {\n                this.enable();\n            }\n        }\n        buildCSSClass() {\n            return `vjs-descriptions-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-descriptions-button ${ super.buildWrapperCSSClass() }`;\n        }\n    }\n    DescriptionsButton.prototype.kind_ = 'descriptions';\n    DescriptionsButton.prototype.controlText_ = 'Descriptions';\n    Component.registerComponent('DescriptionsButton', DescriptionsButton);\n    return DescriptionsButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/subtitles-button',[\n    './text-track-button',\n    '../../component'\n], function (TextTrackButton, Component) {\n    'use strict';\n    class SubtitlesButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n        }\n        buildCSSClass() {\n            return `vjs-subtitles-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-subtitles-button ${ super.buildWrapperCSSClass() }`;\n        }\n    }\n    SubtitlesButton.prototype.kind_ = 'subtitles';\n    SubtitlesButton.prototype.controlText_ = 'Subtitles';\n    Component.registerComponent('SubtitlesButton', SubtitlesButton);\n    return SubtitlesButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/caption-settings-menu-item',[\n    './text-track-menu-item',\n    '../../component'\n], function (TextTrackMenuItem, Component) {\n    'use strict';\n    class CaptionSettingsMenuItem extends TextTrackMenuItem {\n        constructor(player, options) {\n            options.track = {\n                player,\n                kind: options.kind,\n                label: options.kind + ' settings',\n                selectable: false,\n                default: false,\n                mode: 'disabled'\n            };\n            options.selectable = false;\n            options.name = 'CaptionSettingsMenuItem';\n            super(player, options);\n            this.addClass('vjs-texttrack-settings');\n            this.controlText(', opens ' + options.kind + ' settings dialog');\n        }\n        handleClick(event) {\n            this.player().getChild('textTrackSettings').open();\n        }\n    }\n    Component.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n    return CaptionSettingsMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/captions-button',[\n    './text-track-button',\n    '../../component',\n    './caption-settings-menu-item'\n], function (TextTrackButton, Component, CaptionSettingsMenuItem) {\n    'use strict';\n    class CaptionsButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n        }\n        buildCSSClass() {\n            return `vjs-captions-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-captions-button ${ super.buildWrapperCSSClass() }`;\n        }\n        createItems() {\n            const items = [];\n            if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n                items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n                this.hideThreshold_ += 1;\n            }\n            return super.createItems(items);\n        }\n    }\n    CaptionsButton.prototype.kind_ = 'captions';\n    CaptionsButton.prototype.controlText_ = 'Captions';\n    Component.registerComponent('CaptionsButton', CaptionsButton);\n    return CaptionsButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/subs-caps-menu-item',[\n    './text-track-menu-item',\n    '../../component',\n    '../../utils/obj'\n], function (TextTrackMenuItem, Component, obj) {\n    'use strict';\n    class SubsCapsMenuItem extends TextTrackMenuItem {\n        createEl(type, props, attrs) {\n            let innerHTML = `<span class=\"vjs-menu-item-text\">${ this.localize(this.options_.label) }`;\n            if (this.options_.track.kind === 'captions') {\n                innerHTML += `\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\n        <span class=\"vjs-control-text\"> ${ this.localize('Captions') }</span>\n      `;\n            }\n            innerHTML += '</span>';\n            const el = super.createEl(type, obj.assign({ innerHTML }, props), attrs);\n            return el;\n        }\n    }\n    Component.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n    return SubsCapsMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/subs-caps-button',[\n    './text-track-button',\n    '../../component',\n    './caption-settings-menu-item',\n    './subs-caps-menu-item',\n    '../../utils/string-cases'\n], function (TextTrackButton, Component, CaptionSettingsMenuItem, SubsCapsMenuItem, stringCases) {\n    'use strict';\n    class SubsCapsButton extends TextTrackButton {\n        constructor(player, options = {}) {\n            super(player, options);\n            this.label_ = 'subtitles';\n            if ([\n                    'en',\n                    'en-us',\n                    'en-ca',\n                    'fr-ca'\n                ].indexOf(this.player_.language_) > -1) {\n                this.label_ = 'captions';\n            }\n            this.menuButton_.controlText(stringCases.toTitleCase(this.label_));\n        }\n        buildCSSClass() {\n            return `vjs-subs-caps-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-subs-caps-button ${ super.buildWrapperCSSClass() }`;\n        }\n        createItems() {\n            let items = [];\n            if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n                items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n                this.hideThreshold_ += 1;\n            }\n            items = super.createItems(items, SubsCapsMenuItem);\n            return items;\n        }\n    }\n    SubsCapsButton.prototype.kinds_ = [\n        'captions',\n        'subtitles'\n    ];\n    SubsCapsButton.prototype.controlText_ = 'Subtitles';\n    Component.registerComponent('SubsCapsButton', SubsCapsButton);\n    return SubsCapsButton;\n});\ndefine('skylark-videojs/control-bar/audio-track-controls/audio-track-menu-item',[\n    '../../menu/menu-item',\n    '../../component',\n    '../../utils/obj'\n], function (MenuItem, Component, obj) {\n    'use strict';\n    class AudioTrackMenuItem extends MenuItem {\n        constructor(player, options) {\n            const track = options.track;\n            const tracks = player.audioTracks();\n            options.label = track.label || track.language || 'Unknown';\n            options.selected = track.enabled;\n            super(player, options);\n            this.track = track;\n            this.addClass(`vjs-${ track.kind }-menu-item`);\n            const changeHandler = (...args) => {\n                this.handleTracksChange.apply(this, args);\n            };\n            tracks.addEventListener('change', changeHandler);\n            this.listenTo('dispose', () => {\n                tracks.removeEventListener('change', changeHandler);\n            });\n        }\n        createEl(type, props, attrs) {\n            let innerHTML = `<span class=\"vjs-menu-item-text\">${ this.localize(this.options_.label) }`;\n            if (this.options_.track.kind === 'main-desc') {\n                innerHTML += `\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\n        <span class=\"vjs-control-text\"> ${ this.localize('Descriptions') }</span>\n      `;\n            }\n            innerHTML += '</span>';\n            const el = super.createEl(type, obj.assign({ innerHTML }, props), attrs);\n            return el;\n        }\n        handleClick(event) {\n            const tracks = this.player_.audioTracks();\n            super.handleClick(event);\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                track.enabled = track === this.track;\n            }\n        }\n        handleTracksChange(event) {\n            this.selected(this.track.enabled);\n        }\n    }\n    Component.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n    return AudioTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/audio-track-controls/audio-track-button',[\n    '../track-button',\n    '../../component',\n    './audio-track-menu-item'\n], function (TrackButton, Component, AudioTrackMenuItem) {\n    'use strict';\n    class AudioTrackButton extends TrackButton {\n        constructor(player, options = {}) {\n            options.tracks = player.audioTracks();\n            super(player, options);\n        }\n        buildCSSClass() {\n            return `vjs-audio-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-audio-button ${ super.buildWrapperCSSClass() }`;\n        }\n        createItems(items = []) {\n            this.hideThreshold_ = 1;\n            const tracks = this.player_.audioTracks();\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                items.push(new AudioTrackMenuItem(this.player_, {\n                    track,\n                    selectable: true,\n                    multiSelectable: false\n                }));\n            }\n            return items;\n        }\n    }\n    AudioTrackButton.prototype.controlText_ = 'Audio Track';\n    Component.registerComponent('AudioTrackButton', AudioTrackButton);\n    return AudioTrackButton;\n});\ndefine('skylark-videojs/control-bar/playback-rate-menu/playback-rate-menu-item',[\n    '../../menu/menu-item',\n    '../../component'\n], function (MenuItem, Component) {\n    'use strict';\n    class PlaybackRateMenuItem extends MenuItem {\n        constructor(player, options) {\n            const label = options.rate;\n            const rate = parseFloat(label, 10);\n            options.label = label;\n            options.selected = rate === 1;\n            options.selectable = true;\n            options.multiSelectable = false;\n            super(player, options);\n            this.label = label;\n            this.rate = rate;\n            this.listenTo(player, 'ratechange', this.update);\n        }\n        handleClick(event) {\n            super.handleClick();\n            this.player().playbackRate(this.rate);\n        }\n        update(event) {\n            this.selected(this.player().playbackRate() === this.rate);\n        }\n    }\n    PlaybackRateMenuItem.prototype.contentElType = 'button';\n    Component.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n    return PlaybackRateMenuItem;\n});\ndefine('skylark-videojs/control-bar/playback-rate-menu/playback-rate-menu-button',[\n    '../../menu/menu-button',\n    '../../menu/menu',\n    './playback-rate-menu-item',\n    '../../component',\n    '../../utils/dom'\n], function (MenuButton, Menu, PlaybackRateMenuItem, Component, Dom) {\n    'use strict';\n    class PlaybackRateMenuButton extends MenuButton {\n        constructor(player, options) {\n            super(player, options);\n            this.updateVisibility();\n            this.updateLabel();\n            this.listenTo(player, 'loadstart', this.updateVisibility);\n            this.listenTo(player, 'ratechange', this.updateLabel);\n        }\n        createEl() {\n            const el = super.createEl();\n            this.labelEl_ = Dom.createEl('div', {\n                className: 'vjs-playback-rate-value',\n                innerHTML: '1x'\n            });\n            el.appendChild(this.labelEl_);\n            return el;\n        }\n        dispose() {\n            this.labelEl_ = null;\n            super.dispose();\n        }\n        buildCSSClass() {\n            return `vjs-playback-rate ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-playback-rate ${ super.buildWrapperCSSClass() }`;\n        }\n        createMenu() {\n            const menu = new Menu(this.player());\n            const rates = this.playbackRates();\n            if (rates) {\n                for (let i = rates.length - 1; i >= 0; i--) {\n                    menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n                }\n            }\n            return menu;\n        }\n        updateARIAAttributes() {\n            this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n        }\n        handleClick(event) {\n            const currentRate = this.player().playbackRate();\n            const rates = this.playbackRates();\n            let newRate = rates[0];\n            for (let i = 0; i < rates.length; i++) {\n                if (rates[i] > currentRate) {\n                    newRate = rates[i];\n                    break;\n                }\n            }\n            this.player().playbackRate(newRate);\n        }\n        playbackRates() {\n            return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n        }\n        playbackRateSupported() {\n            return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n        }\n        updateVisibility(event) {\n            if (this.playbackRateSupported()) {\n                this.removeClass('vjs-hidden');\n            } else {\n                this.addClass('vjs-hidden');\n            }\n        }\n        updateLabel(event) {\n            if (this.playbackRateSupported()) {\n                this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n            }\n        }\n    }\n    PlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n    Component.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n    return PlaybackRateMenuButton;\n});\ndefine('skylark-videojs/control-bar/spacer-controls/spacer',[\n    '../../component'\n], function (Component) {\n    'use strict';\n    class Spacer extends Component {\n        buildCSSClass() {\n            return `vjs-spacer ${ super.buildCSSClass() }`;\n        }\n        createEl() {\n            return super.createEl('div', { className: this.buildCSSClass() });\n        }\n    }\n    Component.registerComponent('Spacer', Spacer);\n    return Spacer;\n});\ndefine('skylark-videojs/control-bar/spacer-controls/custom-control-spacer',[\n    './spacer',\n    '../../component'\n], function (Spacer, Component) {\n    'use strict';\n    class CustomControlSpacer extends Spacer {\n        buildCSSClass() {\n            return `vjs-custom-control-spacer ${ super.buildCSSClass() }`;\n        }\n        createEl() {\n            const el = super.createEl({ className: this.buildCSSClass() });\n            el.innerHTML = '\\xA0';\n            return el;\n        }\n    }\n    Component.registerComponent('CustomControlSpacer', CustomControlSpacer);\n    return CustomControlSpacer;\n});\ndefine('skylark-videojs/control-bar/control-bar',[\n    'skylark-langx-globals/document',\n    '../component',\n    './play-toggle',\n    './time-controls/current-time-display',\n    './time-controls/duration-display',\n    './time-controls/time-divider',\n    './time-controls/remaining-time-display',\n    './live-display',\n    './seek-to-live',\n    './progress-control/progress-control',\n    './picture-in-picture-toggle',\n    './fullscreen-toggle',\n    './volume-panel',\n    './text-track-controls/chapters-button',\n    './text-track-controls/descriptions-button',\n    './text-track-controls/subtitles-button',\n    './text-track-controls/captions-button',\n    './text-track-controls/subs-caps-button',\n    './audio-track-controls/audio-track-button',\n    './playback-rate-menu/playback-rate-menu-button',\n    './spacer-controls/custom-control-spacer'\n], function (document,Component) {\n    'use strict';\n    class ControlBar extends Component {\n        createEl() {\n            return super.createEl('div', {\n                className: 'vjs-control-bar',\n                dir: 'ltr'\n            });\n        }\n    }\n    ControlBar.prototype.options_ = {\n        children: [\n            'playToggle',\n            'volumePanel',\n            'currentTimeDisplay',\n            'timeDivider',\n            'durationDisplay',\n            'progressControl',\n            'liveDisplay',\n            'seekToLive',\n            'remainingTimeDisplay',\n            'customControlSpacer',\n            'playbackRateMenuButton',\n            'chaptersButton',\n            'descriptionsButton',\n            'subsCapsButton',\n            'audioTrackButton',\n            'fullscreenToggle'\n        ]\n    };\n    if ('exitPictureInPicture' in document) {\n        ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n    }\n    Component.registerComponent('ControlBar', ControlBar);\n    return ControlBar;\n});\ndefine('skylark-videojs/error-display',[\n    './component',\n    './modal-dialog'\n], function (Component, ModalDialog) {\n    'use strict';\n    class ErrorDisplay extends ModalDialog {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, 'error', this.open);\n        }\n        buildCSSClass() {\n            return `vjs-error-display ${ super.buildCSSClass() }`;\n        }\n        content() {\n            const error = this.player().error();\n            return error ? this.localize(error.message) : '';\n        }\n    }\n    ErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n        pauseOnOpen: false,\n        fillAlways: true,\n        temporary: false,\n        uncloseable: true\n    });\n    Component.registerComponent('ErrorDisplay', ErrorDisplay);\n    return ErrorDisplay;\n});\ndefine('skylark-videojs/tracks/text-track-settings',[\n    '../component',\n    '../modal-dialog',\n    '../utils/dom',\n    '../utils/fn',\n    '../utils/obj',\n    '../utils/log'\n], function (Component, ModalDialog, Dom, Fn, Obj, log) {\n    'use strict';\n    const LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n    const COLOR_BLACK = [\n        '#000',\n        'Black'\n    ];\n    const COLOR_BLUE = [\n        '#00F',\n        'Blue'\n    ];\n    const COLOR_CYAN = [\n        '#0FF',\n        'Cyan'\n    ];\n    const COLOR_GREEN = [\n        '#0F0',\n        'Green'\n    ];\n    const COLOR_MAGENTA = [\n        '#F0F',\n        'Magenta'\n    ];\n    const COLOR_RED = [\n        '#F00',\n        'Red'\n    ];\n    const COLOR_WHITE = [\n        '#FFF',\n        'White'\n    ];\n    const COLOR_YELLOW = [\n        '#FF0',\n        'Yellow'\n    ];\n    const OPACITY_OPAQUE = [\n        '1',\n        'Opaque'\n    ];\n    const OPACITY_SEMI = [\n        '0.5',\n        'Semi-Transparent'\n    ];\n    const OPACITY_TRANS = [\n        '0',\n        'Transparent'\n    ];\n    const selectConfigs = {\n        backgroundColor: {\n            selector: '.vjs-bg-color > select',\n            id: 'captions-background-color-%s',\n            label: 'Color',\n            options: [\n                COLOR_BLACK,\n                COLOR_WHITE,\n                COLOR_RED,\n                COLOR_GREEN,\n                COLOR_BLUE,\n                COLOR_YELLOW,\n                COLOR_MAGENTA,\n                COLOR_CYAN\n            ]\n        },\n        backgroundOpacity: {\n            selector: '.vjs-bg-opacity > select',\n            id: 'captions-background-opacity-%s',\n            label: 'Transparency',\n            options: [\n                OPACITY_OPAQUE,\n                OPACITY_SEMI,\n                OPACITY_TRANS\n            ]\n        },\n        color: {\n            selector: '.vjs-fg-color > select',\n            id: 'captions-foreground-color-%s',\n            label: 'Color',\n            options: [\n                COLOR_WHITE,\n                COLOR_BLACK,\n                COLOR_RED,\n                COLOR_GREEN,\n                COLOR_BLUE,\n                COLOR_YELLOW,\n                COLOR_MAGENTA,\n                COLOR_CYAN\n            ]\n        },\n        edgeStyle: {\n            selector: '.vjs-edge-style > select',\n            id: '%s',\n            label: 'Text Edge Style',\n            options: [\n                [\n                    'none',\n                    'None'\n                ],\n                [\n                    'raised',\n                    'Raised'\n                ],\n                [\n                    'depressed',\n                    'Depressed'\n                ],\n                [\n                    'uniform',\n                    'Uniform'\n                ],\n                [\n                    'dropshadow',\n                    'Dropshadow'\n                ]\n            ]\n        },\n        fontFamily: {\n            selector: '.vjs-font-family > select',\n            id: 'captions-font-family-%s',\n            label: 'Font Family',\n            options: [\n                [\n                    'proportionalSansSerif',\n                    'Proportional Sans-Serif'\n                ],\n                [\n                    'monospaceSansSerif',\n                    'Monospace Sans-Serif'\n                ],\n                [\n                    'proportionalSerif',\n                    'Proportional Serif'\n                ],\n                [\n                    'monospaceSerif',\n                    'Monospace Serif'\n                ],\n                [\n                    'casual',\n                    'Casual'\n                ],\n                [\n                    'script',\n                    'Script'\n                ],\n                [\n                    'small-caps',\n                    'Small Caps'\n                ]\n            ]\n        },\n        fontPercent: {\n            selector: '.vjs-font-percent > select',\n            id: 'captions-font-size-%s',\n            label: 'Font Size',\n            options: [\n                [\n                    '0.50',\n                    '50%'\n                ],\n                [\n                    '0.75',\n                    '75%'\n                ],\n                [\n                    '1.00',\n                    '100%'\n                ],\n                [\n                    '1.25',\n                    '125%'\n                ],\n                [\n                    '1.50',\n                    '150%'\n                ],\n                [\n                    '1.75',\n                    '175%'\n                ],\n                [\n                    '2.00',\n                    '200%'\n                ],\n                [\n                    '3.00',\n                    '300%'\n                ],\n                [\n                    '4.00',\n                    '400%'\n                ]\n            ],\n            default: 2,\n            parser: v => v === '1.00' ? null : Number(v)\n        },\n        textOpacity: {\n            selector: '.vjs-text-opacity > select',\n            id: 'captions-foreground-opacity-%s',\n            label: 'Transparency',\n            options: [\n                OPACITY_OPAQUE,\n                OPACITY_SEMI\n            ]\n        },\n        windowColor: {\n            selector: '.vjs-window-color > select',\n            id: 'captions-window-color-%s',\n            label: 'Color'\n        },\n        windowOpacity: {\n            selector: '.vjs-window-opacity > select',\n            id: 'captions-window-opacity-%s',\n            label: 'Transparency',\n            options: [\n                OPACITY_TRANS,\n                OPACITY_SEMI,\n                OPACITY_OPAQUE\n            ]\n        }\n    };\n    selectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n    function parseOptionValue(value, parser) {\n        if (parser) {\n            value = parser(value);\n        }\n        if (value && value !== 'none') {\n            return value;\n        }\n    }\n    function getSelectedOptionValue(el, parser) {\n        const value = el.options[el.options.selectedIndex].value;\n        return parseOptionValue(value, parser);\n    }\n    function setSelectedOption(el, value, parser) {\n        if (!value) {\n            return;\n        }\n        for (let i = 0; i < el.options.length; i++) {\n            if (parseOptionValue(el.options[i].value, parser) === value) {\n                el.selectedIndex = i;\n                break;\n            }\n        }\n    }\n    class TextTrackSettings extends ModalDialog {\n        constructor(player, options) {\n            options.temporary = false;\n            super(player, options);\n            this.updateDisplay = Fn.bind(this, this.updateDisplay);\n            this.fill();\n            this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n            this.endDialog = Dom.createEl('p', {\n                className: 'vjs-control-text',\n                textContent: this.localize('End of dialog window.')\n            });\n            this.el().appendChild(this.endDialog);\n            this.setDefaults();\n            if (options.persistTextTrackSettings === undefined) {\n                this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n            }\n            this.listenTo(this.$('.vjs-done-button'), 'click', () => {\n                this.saveSettings();\n                this.close();\n            });\n            this.listenTo(this.$('.vjs-default-button'), 'click', () => {\n                this.setDefaults();\n                this.updateDisplay();\n            });\n            Obj.each(selectConfigs, config => {\n                this.listenTo(this.$(config.selector), 'change', this.updateDisplay);\n            });\n            if (this.options_.persistTextTrackSettings) {\n                this.restoreSettings();\n            }\n        }\n        dispose() {\n            this.endDialog = null;\n            super.dispose();\n        }\n        createElSelect_(key, legendId = '', type = 'label') {\n            const config = selectConfigs[key];\n            const id = config.id.replace('%s', this.id_);\n            const selectLabelledbyIds = [\n                legendId,\n                id\n            ].join(' ').trim();\n            return [\n                `<${ type } id=\"${ id }\" class=\"${ type === 'label' ? 'vjs-label' : '' }\">`,\n                this.localize(config.label),\n                `</${ type }>`,\n                `<select aria-labelledby=\"${ selectLabelledbyIds }\">`\n            ].concat(config.options.map(o => {\n                const optionId = id + '-' + o[1].replace(/\\W+/g, '');\n                return [\n                    `<option id=\"${ optionId }\" value=\"${ o[0] }\" `,\n                    `aria-labelledby=\"${ selectLabelledbyIds } ${ optionId }\">`,\n                    this.localize(o[1]),\n                    '</option>'\n                ].join('');\n            })).concat('</select>').join('');\n        }\n        createElFgColor_() {\n            const legendId = `captions-text-legend-${ this.id_ }`;\n            return [\n                '<fieldset class=\"vjs-fg-color vjs-track-setting\">',\n                `<legend id=\"${ legendId }\">`,\n                this.localize('Text'),\n                '</legend>',\n                this.createElSelect_('color', legendId),\n                '<span class=\"vjs-text-opacity vjs-opacity\">',\n                this.createElSelect_('textOpacity', legendId),\n                '</span>',\n                '</fieldset>'\n            ].join('');\n        }\n        createElBgColor_() {\n            const legendId = `captions-background-${ this.id_ }`;\n            return [\n                '<fieldset class=\"vjs-bg-color vjs-track-setting\">',\n                `<legend id=\"${ legendId }\">`,\n                this.localize('Background'),\n                '</legend>',\n                this.createElSelect_('backgroundColor', legendId),\n                '<span class=\"vjs-bg-opacity vjs-opacity\">',\n                this.createElSelect_('backgroundOpacity', legendId),\n                '</span>',\n                '</fieldset>'\n            ].join('');\n        }\n        createElWinColor_() {\n            const legendId = `captions-window-${ this.id_ }`;\n            return [\n                '<fieldset class=\"vjs-window-color vjs-track-setting\">',\n                `<legend id=\"${ legendId }\">`,\n                this.localize('Window'),\n                '</legend>',\n                this.createElSelect_('windowColor', legendId),\n                '<span class=\"vjs-window-opacity vjs-opacity\">',\n                this.createElSelect_('windowOpacity', legendId),\n                '</span>',\n                '</fieldset>'\n            ].join('');\n        }\n        createElColors_() {\n            return Dom.createEl('div', {\n                className: 'vjs-track-settings-colors',\n                innerHTML: [\n                    this.createElFgColor_(),\n                    this.createElBgColor_(),\n                    this.createElWinColor_()\n                ].join('')\n            });\n        }\n        createElFont_() {\n            return Dom.createEl('div', {\n                className: 'vjs-track-settings-font',\n                innerHTML: [\n                    '<fieldset class=\"vjs-font-percent vjs-track-setting\">',\n                    this.createElSelect_('fontPercent', '', 'legend'),\n                    '</fieldset>',\n                    '<fieldset class=\"vjs-edge-style vjs-track-setting\">',\n                    this.createElSelect_('edgeStyle', '', 'legend'),\n                    '</fieldset>',\n                    '<fieldset class=\"vjs-font-family vjs-track-setting\">',\n                    this.createElSelect_('fontFamily', '', 'legend'),\n                    '</fieldset>'\n                ].join('')\n            });\n        }\n        createElControls_() {\n            const defaultsDescription = this.localize('restore all settings to the default values');\n            return Dom.createEl('div', {\n                className: 'vjs-track-settings-controls',\n                innerHTML: [\n                    `<button type=\"button\" class=\"vjs-default-button\" title=\"${ defaultsDescription }\">`,\n                    this.localize('Reset'),\n                    `<span class=\"vjs-control-text\"> ${ defaultsDescription }</span>`,\n                    '</button>',\n                    `<button type=\"button\" class=\"vjs-done-button\">${ this.localize('Done') }</button>`\n                ].join('')\n            });\n        }\n        content() {\n            return [\n                this.createElColors_(),\n                this.createElFont_(),\n                this.createElControls_()\n            ];\n        }\n        label() {\n            return this.localize('Caption Settings Dialog');\n        }\n        description() {\n            return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n        }\n        buildCSSClass() {\n            return super.buildCSSClass() + ' vjs-text-track-settings';\n        }\n        getValues() {\n            return Obj.reduce(selectConfigs, (accum, config, key) => {\n                const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n                if (value !== undefined) {\n                    accum[key] = value;\n                }\n                return accum;\n            }, {});\n        }\n        setValues(values) {\n            Obj.each(selectConfigs, (config, key) => {\n                setSelectedOption(this.$(config.selector), values[key], config.parser);\n            });\n        }\n        setDefaults() {\n            Obj.each(selectConfigs, config => {\n                const index = config.hasOwnProperty('default') ? config.default : 0;\n                this.$(config.selector).selectedIndex = index;\n            });\n        }\n        restoreSettings() {\n            let values;\n            try {\n                values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY));\n            } catch (err) {\n                log.warn(err);\n            }\n            if (values) {\n                this.setValues(values);\n            }\n        }\n        saveSettings() {\n            if (!this.options_.persistTextTrackSettings) {\n                return;\n            }\n            const values = this.getValues();\n            try {\n                if (Object.keys(values).length) {\n                    window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n                } else {\n                    window.localStorage.removeItem(LOCAL_STORAGE_KEY);\n                }\n            } catch (err) {\n                log.warn(err);\n            }\n        }\n        updateDisplay() {\n            const ttDisplay = this.player_.getChild('textTrackDisplay');\n            if (ttDisplay) {\n                ttDisplay.updateDisplay();\n            }\n        }\n        conditionalBlur_() {\n            this.previouslyActiveEl_ = null;\n            const cb = this.player_.controlBar;\n            const subsCapsBtn = cb && cb.subsCapsButton;\n            const ccBtn = cb && cb.captionsButton;\n            if (subsCapsBtn) {\n                subsCapsBtn.focus();\n            } else if (ccBtn) {\n                ccBtn.focus();\n            }\n        }\n    }\n    Component.registerComponent('TextTrackSettings', TextTrackSettings);\n    return TextTrackSettings;\n});\ndefine('skylark-videojs/resize-manager',[\n    './utils/fn',\n    './utils/events',\n    './utils/merge-options',\n    './component'\n], function ( Fn, Events, mergeOptions, Component) {\n    'use strict';\n    class ResizeManager extends Component {\n        constructor(player, options) {\n            let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver;\n            if (options.ResizeObserver === null) {\n                RESIZE_OBSERVER_AVAILABLE = false;\n            }\n            const options_ = mergeOptions({\n                createEl: !RESIZE_OBSERVER_AVAILABLE,\n                reportTouchActivity: false\n            }, options);\n            super(player, options_);\n            this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n            this.loadListener_ = null;\n            this.resizeObserver_ = null;\n            this.debouncedHandler_ = Fn.debounce(() => {\n                this.resizeHandler();\n            }, 100, false, this);\n            if (RESIZE_OBSERVER_AVAILABLE) {\n                this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n                this.resizeObserver_.observe(player.el());\n            } else {\n                this.loadListener_ = () => {\n                    if (!this.el_ || !this.el_.contentWindow) {\n                        return;\n                    }\n                    const debouncedHandler_ = this.debouncedHandler_;\n                    let unloadListener_ = this.unloadListener_ = function () {\n                        Events.off(this, 'resize', debouncedHandler_);\n                        Events.off(this, 'unload', unloadListener_);\n                        unloadListener_ = null;\n                    };\n                    Events.on(this.el_.contentWindow, 'unload', unloadListener_);\n                    Events.on(this.el_.contentWindow, 'resize', debouncedHandler_);\n                };\n                this.listenToOnce('load', this.loadListener_);\n            }\n        }\n        createEl() {\n            return super.createEl('iframe', {\n                className: 'vjs-resize-manager',\n                tabIndex: -1\n            }, { 'aria-hidden': 'true' });\n        }\n        resizeHandler() {\n            if (!this.player_ || !this.player_.trigger) {\n                return;\n            }\n            this.player_.trigger('playerresize');\n        }\n        dispose() {\n            if (this.debouncedHandler_) {\n                this.debouncedHandler_.cancel();\n            }\n            if (this.resizeObserver_) {\n                if (this.player_.el()) {\n                    this.resizeObserver_.unobserve(this.player_.el());\n                }\n                this.resizeObserver_.disconnect();\n            }\n            if (this.loadListener_) {\n                this.unlistenTo('load', this.loadListener_);\n            }\n            if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n                this.unloadListener_.call(this.el_.contentWindow);\n            }\n            this.ResizeObserver = null;\n            this.resizeObserver = null;\n            this.debouncedHandler_ = null;\n            this.loadListener_ = null;\n            super.dispose();\n        }\n    }\n    Component.registerComponent('ResizeManager', ResizeManager);\n    return ResizeManager;\n});\ndefine('skylark-videojs/live-tracker',[\n    './component',\n    './utils/merge-options',\n    './utils/browser',\n    './utils/fn'\n], function (Component, mergeOptions, browser,  Fn) {\n    'use strict';\n    const defaults = {\n        trackingThreshold: 30,\n        liveTolerance: 15\n    };\n    class LiveTracker extends Component {\n        constructor(player, options) {\n            const options_ = mergeOptions(defaults, options, { createEl: false });\n            super(player, options_);\n            this.reset_();\n            this.listenTo(this.player_, 'durationchange', this.handleDurationchange);\n            if (browser.IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n                this.listenTo(document, 'visibilitychange', this.handleVisibilityChange);\n            }\n        }\n        handleVisibilityChange() {\n            if (this.player_.duration() !== Infinity) {\n                return;\n            }\n            if (document.hidden) {\n                this.stopTracking();\n            } else {\n                this.startTracking();\n            }\n        }\n        trackLive_() {\n            const seekable = this.player_.seekable();\n            if (!seekable || !seekable.length) {\n                return;\n            }\n            const newTime = Number(window.performance.now().toFixed(4));\n            const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n            this.lastTime_ = newTime;\n            this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n            const liveCurrentTime = this.liveCurrentTime();\n            const currentTime = this.player_.currentTime();\n            let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n            if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n                isBehind = false;\n            }\n            if (isBehind !== this.behindLiveEdge_) {\n                this.behindLiveEdge_ = isBehind;\n                this.trigger('liveedgechange');\n            }\n        }\n        handleDurationchange() {\n            if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n                if (this.player_.options_.liveui) {\n                    this.player_.addClass('vjs-liveui');\n                }\n                this.startTracking();\n            } else {\n                this.player_.removeClass('vjs-liveui');\n                this.stopTracking();\n            }\n        }\n        startTracking() {\n            if (this.isTracking()) {\n                return;\n            }\n            if (!this.timeupdateSeen_) {\n                this.timeupdateSeen_ = this.player_.hasStarted();\n            }\n            this.trackingInterval_ = this.setInterval(this.trackLive_, Fn.UPDATE_REFRESH_INTERVAL);\n            this.trackLive_();\n            this.listenTo(this.player_, [\n                'play',\n                'pause'\n            ], this.trackLive_);\n            if (!this.timeupdateSeen_) {\n                this.listenToOnce(this.player_, 'play', this.handlePlay);\n                this.listenToOnce(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n            } else {\n                this.listenTo(this.player_, 'seeked', this.handleSeeked);\n            }\n        }\n        handleFirstTimeupdate() {\n            this.timeupdateSeen_ = true;\n            this.listenTo(this.player_, 'seeked', this.handleSeeked);\n        }\n        handleSeeked() {\n            const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n            this.seekedBehindLive_ = this.skipNextSeeked_ ? false : timeDiff > 2;\n            this.skipNextSeeked_ = false;\n            this.trackLive_();\n        }\n        handlePlay() {\n            this.listenToOnce(this.player_, 'timeupdate', this.seekToLiveEdge);\n        }\n        reset_() {\n            this.lastTime_ = -1;\n            this.pastSeekEnd_ = 0;\n            this.lastSeekEnd_ = -1;\n            this.behindLiveEdge_ = true;\n            this.timeupdateSeen_ = false;\n            this.seekedBehindLive_ = false;\n            this.skipNextSeeked_ = false;\n            this.clearInterval(this.trackingInterval_);\n            this.trackingInterval_ = null;\n\n            /*\n            this.unlistenTo(this.player_, [\n                'play',\n                'pause'\n            ], this.trackLive_);\n            this.unlistenTo(this.player_, 'seeked', this.handleSeeked);\n            this.unlistenTo(this.player_, 'play', this.handlePlay);\n            this.unlistenTo(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n            this.unlistenTo(this.player_, 'timeupdate', this.seekToLiveEdge);\n            */\n            this.unlistenTo(this.player_, [\n                'play',\n                'pause'\n            ], this.trackLive_);\n            this.unlistenTo(this.player_, 'seeked', this.handleSeeked);\n            this.unlistenTo(this.player_, 'play', this.handlePlay);\n            this.unlistenTo(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n            this.unlistenTo(this.player_, 'timeupdate', this.seekToLiveEdge);\n        }\n        stopTracking() {\n            if (!this.isTracking()) {\n                return;\n            }\n            this.reset_();\n            this.trigger('liveedgechange');\n        }\n        seekableEnd() {\n            const seekable = this.player_.seekable();\n            const seekableEnds = [];\n            let i = seekable ? seekable.length : 0;\n            while (i--) {\n                seekableEnds.push(seekable.end(i));\n            }\n            return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n        }\n        seekableStart() {\n            const seekable = this.player_.seekable();\n            const seekableStarts = [];\n            let i = seekable ? seekable.length : 0;\n            while (i--) {\n                seekableStarts.push(seekable.start(i));\n            }\n            return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n        }\n        liveWindow() {\n            const liveCurrentTime = this.liveCurrentTime();\n            if (liveCurrentTime === Infinity) {\n                return 0;\n            }\n            return liveCurrentTime - this.seekableStart();\n        }\n        isLive() {\n            return this.isTracking();\n        }\n        atLiveEdge() {\n            return !this.behindLiveEdge();\n        }\n        liveCurrentTime() {\n            return this.pastSeekEnd() + this.seekableEnd();\n        }\n        pastSeekEnd() {\n            const seekableEnd = this.seekableEnd();\n            if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n                this.pastSeekEnd_ = 0;\n            }\n            this.lastSeekEnd_ = seekableEnd;\n            return this.pastSeekEnd_;\n        }\n        behindLiveEdge() {\n            return this.behindLiveEdge_;\n        }\n        isTracking() {\n            return typeof this.trackingInterval_ === 'number';\n        }\n        seekToLiveEdge() {\n            this.seekedBehindLive_ = false;\n            if (this.atLiveEdge()) {\n                return;\n            }\n            this.skipNextSeeked_ = true;\n            this.player_.currentTime(this.liveCurrentTime());\n        }\n        dispose() {\n            this.unlistenTo(document, 'visibilitychange', this.handleVisibilityChange);\n            this.stopTracking();\n            super.dispose();\n        }\n    }\n    Component.registerComponent('LiveTracker', LiveTracker);\n    return LiveTracker;\n});\ndefine('skylark-videojs/tech/setup-sourceset',[\n    'skylark-langx-globals/document',\n    '../utils/merge-options',\n    '../utils/url'\n], function (document,mergeOptions, url) {\n    'use strict';\n    const sourcesetLoad = tech => {\n        const el = tech.el();\n        if (el.hasAttribute('src')) {\n            tech.triggerSourceset(el.src);\n            return true;\n        }\n        const sources = tech.$$('source');\n        const srcUrls = [];\n        let src = '';\n        if (!sources.length) {\n            return false;\n        }\n        for (let i = 0; i < sources.length; i++) {\n            const url = sources[i].src;\n            if (url && srcUrls.indexOf(url) === -1) {\n                srcUrls.push(url);\n            }\n        }\n        if (!srcUrls.length) {\n            return false;\n        }\n        if (srcUrls.length === 1) {\n            src = srcUrls[0];\n        }\n        tech.triggerSourceset(src);\n        return true;\n    };\n    const innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n        get() {\n            return this.cloneNode(true).innerHTML;\n        },\n        set(v) {\n            const dummy = document.createElement(this.nodeName.toLowerCase());\n            dummy.innerHTML = v;\n            const docFrag = document.createDocumentFragment();\n            while (dummy.childNodes.length) {\n                docFrag.appendChild(dummy.childNodes[0]);\n            }\n            this.innerText = '';\n            window.Element.prototype.appendChild.call(this, docFrag);\n            return this.innerHTML;\n        }\n    });\n    const getDescriptor = (priority, prop) => {\n        let descriptor = {};\n        for (let i = 0; i < priority.length; i++) {\n            descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n            if (descriptor && descriptor.set && descriptor.get) {\n                break;\n            }\n        }\n        descriptor.enumerable = true;\n        descriptor.configurable = true;\n        return descriptor;\n    };\n    const getInnerHTMLDescriptor = tech => getDescriptor([\n        tech.el(),\n        window.HTMLMediaElement.prototype,\n        window.Element.prototype,\n        innerHTMLDescriptorPolyfill\n    ], 'innerHTML');\n    const firstSourceWatch = function (tech) {\n        const el = tech.el();\n        if (el.resetSourceWatch_) {\n            return;\n        }\n        const old = {};\n        const innerDescriptor = getInnerHTMLDescriptor(tech);\n        const appendWrapper = appendFn => (...args) => {\n            const retval = appendFn.apply(el, args);\n            sourcesetLoad(tech);\n            return retval;\n        };\n        [\n            'append',\n            'appendChild',\n            'insertAdjacentHTML'\n        ].forEach(k => {\n            if (!el[k]) {\n                return;\n            }\n            old[k] = el[k];\n            el[k] = appendWrapper(old[k]);\n        });\n        Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, { set: appendWrapper(innerDescriptor.set) }));\n        el.resetSourceWatch_ = () => {\n            el.resetSourceWatch_ = null;\n            Object.keys(old).forEach(k => {\n                el[k] = old[k];\n            });\n            Object.defineProperty(el, 'innerHTML', innerDescriptor);\n        };\n        tech.one('sourceset', el.resetSourceWatch_);\n    };\n    const srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n        get() {\n            if (this.hasAttribute('src')) {\n                return url.getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n            }\n            return '';\n        },\n        set(v) {\n            window.Element.prototype.setAttribute.call(this, 'src', v);\n            return v;\n        }\n    });\n    const getSrcDescriptor = tech => getDescriptor([\n        tech.el(),\n        window.HTMLMediaElement.prototype,\n        srcDescriptorPolyfill\n    ], 'src');\n    const setupSourceset = function (tech) {\n        if (!tech.featuresSourceset) {\n            return;\n        }\n        const el = tech.el();\n        if (el.resetSourceset_) {\n            return;\n        }\n        const srcDescriptor = getSrcDescriptor(tech);\n        const oldSetAttribute = el.setAttribute;\n        const oldLoad = el.load;\n        Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n            set: v => {\n                const retval = srcDescriptor.set.call(el, v);\n                tech.triggerSourceset(el.src);\n                return retval;\n            }\n        }));\n        el.setAttribute = (n, v) => {\n            const retval = oldSetAttribute.call(el, n, v);\n            if (/src/i.test(n)) {\n                tech.triggerSourceset(el.src);\n            }\n            return retval;\n        };\n        el.load = () => {\n            const retval = oldLoad.call(el);\n            if (!sourcesetLoad(tech)) {\n                tech.triggerSourceset('');\n                firstSourceWatch(tech);\n            }\n            return retval;\n        };\n        if (el.currentSrc) {\n            tech.triggerSourceset(el.currentSrc);\n        } else if (!sourcesetLoad(tech)) {\n            firstSourceWatch(tech);\n        }\n        el.resetSourceset_ = () => {\n            el.resetSourceset_ = null;\n            el.load = oldLoad;\n            el.setAttribute = oldSetAttribute;\n            Object.defineProperty(el, 'src', srcDescriptor);\n            if (el.resetSourceWatch_) {\n                el.resetSourceWatch_();\n            }\n        };\n    };\n    return setupSourceset;\n});\ndefine('skylark-videojs/utils/define-lazy-property',[],function () {\n    'use strict';\n    const defineLazyProperty = function (obj, key, getValue, setter = true) {\n        const set = value => Object.defineProperty(obj, key, {\n            value,\n            enumerable: true,\n            writable: true\n        });\n        const options = {\n            configurable: true,\n            enumerable: true,\n            get() {\n                const value = getValue();\n                set(value);\n                return value;\n            }\n        };\n        if (setter) {\n            options.set = set;\n        }\n        return Object.defineProperty(obj, key, options);\n    };\n    return defineLazyProperty;\n});\ndefine('skylark-videojs/tech/html5',[\n    \"skylark-langx\",\n    'skylark-langx-globals/document',\n    './tech',\n    '../utils/dom',\n    '../utils/url',\n    '../utils/log',\n    '../utils/browser',\n    '../utils/obj',\n    '../utils/merge-options',\n    '../utils/string-cases',\n    '../tracks/track-types',\n    './setup-sourceset',\n    '../utils/define-lazy-property',\n    '../utils/promise'\n], function (\n    langx,\n    document,\n    Tech, \n    Dom, \n    Url, \n    log, \n    browser,  \n    obj, \n    mergeOptions, \n    stringCases, \n    TRACK_TYPES, \n    setupSourceset, \n    defineLazyProperty, \n    promise\n) {\n    'use strict';\n    const NORMAL = TRACK_TYPES.NORMAL,\n          REMOTE = TRACK_TYPES.REMOTE;\n\n    const NativeEvents = {\n            'abort' : 3,\n            'canplay' : 3,\n            'canplaythrough' : 3,\n            'disablepictureinpicturechanged':3,\n            'durationchange':3,\n            'emptied' : 3,\n            'ended':3,\n            'enterpictureinpicture':3,\n            'error' : 3,\n            'leavepictureinpicture':3,\n            'loadeddata' : 3,\n            'loadstart' : 3,\n            'loadedmetadata':3,\n            'pause' : 3,\n            'play':3,\n            'playing' : 3,\n            'posterchange':3,\n            'progress' : 3,\n            'ratechange':3,\n            'seeking' : 3,\n            'seeked' : 3,\n            'sourceset':3,\n            'stalled' : 3,\n            'suspend':3,\n            'textdata':3,\n            'texttrackchange':3,\n            'timeupdate':3,\n            'volumechange':3,\n            'waiting' : 3,\n\n    };\n    class Html5 extends Tech {\n\n        isNativeEvent(events) {\n            var ret  = super.isNativeEvent(events);\n            if (ret) {\n                return true;\n            }\n            if (langx.isString(events)) {\n                return !!NativeEvents[events];\n            } else if (langx.isArray(events)) {\n                for (var i=0; i<events.length; i++) {\n                    if (NativeEvents[events[i]]) {\n                        return true;\n                    }\n                }\n                return false;\n            }            \n\n        } \n\n        constructor(options, ready) {\n            super(options, ready);\n            const source = options.source;\n            let crossoriginTracks = false;\n            if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n                this.setSource(source);\n            } else {\n                this.handleLateInit_(this.el_);\n            }\n            if (options.enableSourceset) {\n                this.setupSourcesetHandling_();\n            }\n            this.isScrubbing_ = false;\n            if (this.el_.hasChildNodes()) {\n                const nodes = this.el_.childNodes;\n                let nodesLength = nodes.length;\n                const removeNodes = [];\n                while (nodesLength--) {\n                    const node = nodes[nodesLength];\n                    const nodeName = node.nodeName.toLowerCase();\n                    if (nodeName === 'track') {\n                        if (!this.featuresNativeTextTracks) {\n                            removeNodes.push(node);\n                        } else {\n                            this.remoteTextTrackEls().addTrackElement_(node);\n                            this.remoteTextTracks().addTrack(node.track);\n                            this.textTracks().addTrack(node.track);\n                            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && Url.isCrossOrigin(node.src)) {\n                                crossoriginTracks = true;\n                            }\n                        }\n                    }\n                }\n                for (let i = 0; i < removeNodes.length; i++) {\n                    this.el_.removeChild(removeNodes[i]);\n                }\n            }\n            this.proxyNativeTracks_();\n            if (this.featuresNativeTextTracks && crossoriginTracks) {\n                log.warn(\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n\" + 'This may prevent text tracks from loading.');\n            }\n            this.restoreMetadataTracksInIOSNativePlayer_();\n            if ((browser.TOUCH_ENABLED || browser.IS_IPHONE || browser.IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n                this.setControls(true);\n            }\n            this.proxyWebkitFullscreen_();\n            this.triggerReady();\n        }\n        dispose() {\n            if (this.el_ && this.el_.resetSourceset_) {\n                this.el_.resetSourceset_();\n            }\n            Html5.disposeMediaElement(this.el_);\n            this.options_ = null;\n            super.dispose();\n        }\n        setupSourcesetHandling_() {\n            setupSourceset(this);\n        }\n        restoreMetadataTracksInIOSNativePlayer_() {\n            const textTracks = this.textTracks();\n            let metadataTracksPreFullscreenState;\n            const takeMetadataTrackSnapshot = () => {\n                metadataTracksPreFullscreenState = [];\n                for (let i = 0; i < textTracks.length; i++) {\n                    const track = textTracks[i];\n                    if (track.kind === 'metadata') {\n                        metadataTracksPreFullscreenState.push({\n                            track,\n                            storedMode: track.mode\n                        });\n                    }\n                }\n            };\n            takeMetadataTrackSnapshot();\n            textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n            this.listenTo('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n            const restoreTrackMode = () => {\n                for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n                    const storedTrack = metadataTracksPreFullscreenState[i];\n                    if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n                        storedTrack.track.mode = storedTrack.storedMode;\n                    }\n                }\n                textTracks.removeEventListener('change', restoreTrackMode);\n            };\n            this.listenTo('webkitbeginfullscreen', () => {\n                textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.removeEventListener('change', restoreTrackMode);\n                textTracks.addEventListener('change', restoreTrackMode);\n            });\n            this.listenTo('webkitendfullscreen', () => {\n                textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.removeEventListener('change', restoreTrackMode);\n            });\n        }\n        overrideNative_(type, override) {\n            if (override !== this[`featuresNative${ type }Tracks`]) {\n                return;\n            }\n            const lowerCaseType = type.toLowerCase();\n            if (this[`${ lowerCaseType }TracksListeners_`]) {\n                Object.keys(this[`${ lowerCaseType }TracksListeners_`]).forEach(eventName => {\n                    const elTracks = this.el()[`${ lowerCaseType }Tracks`];\n                    elTracks.removeEventListener(eventName, this[`${ lowerCaseType }TracksListeners_`][eventName]);\n                });\n            }\n            this[`featuresNative${ type }Tracks`] = !override;\n            this[`${ lowerCaseType }TracksListeners_`] = null;\n            this.proxyNativeTracksForType_(lowerCaseType);\n        }\n        overrideNativeAudioTracks(override) {\n            this.overrideNative_('Audio', override);\n        }\n        overrideNativeVideoTracks(override) {\n            this.overrideNative_('Video', override);\n        }\n        proxyNativeTracksForType_(name) {\n            const props = NORMAL[name];\n            const elTracks = this.el()[props.getterName];\n            const techTracks = this[props.getterName]();\n            if (!this[`featuresNative${ props.capitalName }Tracks`] || !elTracks || !elTracks.addEventListener) {\n                return;\n            }\n            const listeners = {\n                change: e => {\n                    const event = {\n                        type: 'change',\n                        target: techTracks,\n                        currentTarget: techTracks,\n                        srcElement: techTracks\n                    };\n                    techTracks.trigger(event);\n                    if (name === 'text') {\n                        this[REMOTE.remoteText.getterName]().trigger(event);\n                    }\n                },\n                addtrack(e) {\n                    techTracks.addTrack(e.track);\n                },\n                removetrack(e) {\n                    techTracks.removeTrack(e.track);\n                }\n            };\n            const removeOldTracks = function () {\n                const removeTracks = [];\n                for (let i = 0; i < techTracks.length; i++) {\n                    let found = false;\n                    for (let j = 0; j < elTracks.length; j++) {\n                        if (elTracks[j] === techTracks[i]) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        removeTracks.push(techTracks[i]);\n                    }\n                }\n                while (removeTracks.length) {\n                    techTracks.removeTrack(removeTracks.shift());\n                }\n            };\n            this[props.getterName + 'Listeners_'] = listeners;\n            Object.keys(listeners).forEach(eventName => {\n                const listener = listeners[eventName];\n                elTracks.addEventListener(eventName, listener);\n                this.listenTo('dispose', e => elTracks.removeEventListener(eventName, listener));\n            });\n            this.listenTo('loadstart', removeOldTracks);\n            this.listenTo('dispose', e => this.unlistenTo('loadstart', removeOldTracks));\n        }\n        proxyNativeTracks_() {\n            NORMAL.names.forEach(name => {\n                this.proxyNativeTracksForType_(name);\n            });\n        }\n        createEl() {\n            let el = this.options_.tag;\n            if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n                if (el) {\n                    const clone = el.cloneNode(true);\n                    if (el.parentNode) {\n                        el.parentNode.insertBefore(clone, el);\n                    }\n                    Html5.disposeMediaElement(el);\n                    el = clone;\n                } else {\n                    el = document.createElement('video');\n                    const tagAttributes = this.options_.tag && Dom.getAttributes(this.options_.tag);\n                    const attributes = mergeOptions({}, tagAttributes);\n                    if (!browser.TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n                        delete attributes.controls;\n                    }\n                    Dom.setAttributes(el, obj.assign(attributes, {\n                        id: this.options_.techId,\n                        class: 'vjs-tech'\n                    }));\n                }\n                el.playerId = this.options_.playerId;\n            }\n            if (typeof this.options_.preload !== 'undefined') {\n                Dom.setAttribute(el, 'preload', this.options_.preload);\n            }\n            if (this.options_.disablePictureInPicture !== undefined) {\n                el.disablePictureInPicture = this.options_.disablePictureInPicture;\n            }\n            const settingsAttrs = [\n                'loop',\n                'muted',\n                'playsinline',\n                'autoplay'\n            ];\n            for (let i = 0; i < settingsAttrs.length; i++) {\n                const attr = settingsAttrs[i];\n                const value = this.options_[attr];\n                if (typeof value !== 'undefined') {\n                    if (value) {\n                        Dom.setAttribute(el, attr, attr);\n                    } else {\n                        Dom.removeAttribute(el, attr);\n                    }\n                    el[attr] = value;\n                }\n            }\n            return el;\n        }\n        handleLateInit_(el) {\n            if (el.networkState === 0 || el.networkState === 3) {\n                return;\n            }\n            if (el.readyState === 0) {\n                let loadstartFired = false;\n                const setLoadstartFired = function () {\n                    loadstartFired = true;\n                };\n                this.listenTo('loadstart', setLoadstartFired);\n                const triggerLoadstart = function () {\n                    if (!loadstartFired) {\n                        this.trigger('loadstart');\n                    }\n                };\n                this.listenTo('loadedmetadata', triggerLoadstart);\n                this.ready(function () {\n                    this.unlistenTo('loadstart', setLoadstartFired);\n                    this.unlistenTo('loadedmetadata', triggerLoadstart);\n                    if (!loadstartFired) {\n                        this.trigger('loadstart');\n                    }\n                });\n                return;\n            }\n            const eventsToTrigger = ['loadstart'];\n            eventsToTrigger.push('loadedmetadata');\n            if (el.readyState >= 2) {\n                eventsToTrigger.push('loadeddata');\n            }\n            if (el.readyState >= 3) {\n                eventsToTrigger.push('canplay');\n            }\n            if (el.readyState >= 4) {\n                eventsToTrigger.push('canplaythrough');\n            }\n            this.ready(function () {\n                eventsToTrigger.forEach(function (type) {\n                    this.trigger(type);\n                }, this);\n            });\n        }\n        setScrubbing(isScrubbing) {\n            this.isScrubbing_ = isScrubbing;\n        }\n        scrubbing() {\n            return this.isScrubbing_;\n        }\n        setCurrentTime(seconds) {\n            try {\n                if (this.isScrubbing_ && this.el_.fastSeek && browser.IS_ANY_SAFARI) {\n                    this.el_.fastSeek(seconds);\n                } else {\n                    this.el_.currentTime = seconds;\n                }\n            } catch (e) {\n                log(e, 'Video is not ready. (Video.js)');\n            }\n        }\n        duration() {\n            if (this.el_.duration === Infinity && browser.IS_ANDROID && browser.IS_CHROME && this.el_.currentTime === 0) {\n                const checkProgress = () => {\n                    if (this.el_.currentTime > 0) {\n                        if (this.el_.duration === Infinity) {\n                            this.trigger('durationchange');\n                        }\n                        this.unlistenTo('timeupdate', checkProgress);\n                    }\n                };\n                this.listenTo('timeupdate', checkProgress);\n                return NaN;\n            }\n            return this.el_.duration || NaN;\n        }\n        width() {\n            return this.el_.offsetWidth;\n        }\n        height() {\n            return this.el_.offsetHeight;\n        }\n        proxyWebkitFullscreen_() {\n            if (!('webkitDisplayingFullscreen' in this.el_)) {\n                return;\n            }\n            const endFn = function () {\n                this.trigger('fullscreenchange', { isFullscreen: false });\n            };\n            const beginFn = function () {\n                if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n                    this.listenToOnce('webkitendfullscreen', endFn);\n                    this.trigger('fullscreenchange', {\n                        isFullscreen: true,\n                        nativeIOSFullscreen: true\n                    });\n                }\n            };\n            this.listenTo('webkitbeginfullscreen', beginFn);\n            this.listenTo('dispose', () => {\n                this.unlistenTo('webkitbeginfullscreen', beginFn);\n                this.unlistenTo('webkitendfullscreen', endFn);\n            });\n        }\n        supportsFullScreen() {\n            if (typeof this.el_.webkitEnterFullScreen === 'function') {\n                const userAgent = window.navigator && window.navigator.userAgent || '';\n                if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        enterFullScreen() {\n            const video = this.el_;\n            if (video.paused && video.networkState <= video.HAVE_METADATA) {\n                promise.silencePromise(this.el_.play());\n                this.setTimeout(function () {\n                    video.pause();\n                    try {\n                        video.webkitEnterFullScreen();\n                    } catch (e) {\n                        this.trigger('fullscreenerror', e);\n                    }\n                }, 0);\n            } else {\n                try {\n                    video.webkitEnterFullScreen();\n                } catch (e) {\n                    this.trigger('fullscreenerror', e);\n                }\n            }\n        }\n        exitFullScreen() {\n            if (!this.el_.webkitDisplayingFullscreen) {\n                this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n                return;\n            }\n            this.el_.webkitExitFullScreen();\n        }\n        requestPictureInPicture() {\n            return this.el_.requestPictureInPicture();\n        }\n        src(src) {\n            if (src === undefined) {\n                return this.el_.src;\n            }\n            this.setSrc(src);\n        }\n        reset() {\n            Html5.resetMediaElement(this.el_);\n        }\n        currentSrc() {\n            if (this.currentSource_) {\n                return this.currentSource_.src;\n            }\n            return this.el_.currentSrc;\n        }\n        setControls(val) {\n            this.el_.controls = !!val;\n        }\n        addTextTrack(kind, label, language) {\n            if (!this.featuresNativeTextTracks) {\n                return super.addTextTrack(kind, label, language);\n            }\n            return this.el_.addTextTrack(kind, label, language);\n        }\n        createRemoteTextTrack(options) {\n            if (!this.featuresNativeTextTracks) {\n                return super.createRemoteTextTrack(options);\n            }\n            const htmlTrackElement = document.createElement('track');\n            if (options.kind) {\n                htmlTrackElement.kind = options.kind;\n            }\n            if (options.label) {\n                htmlTrackElement.label = options.label;\n            }\n            if (options.language || options.srclang) {\n                htmlTrackElement.srclang = options.language || options.srclang;\n            }\n            if (options.default) {\n                htmlTrackElement.default = options.default;\n            }\n            if (options.id) {\n                htmlTrackElement.id = options.id;\n            }\n            if (options.src) {\n                htmlTrackElement.src = options.src;\n            }\n            return htmlTrackElement;\n        }\n        addRemoteTextTrack(options, manualCleanup) {\n            const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n            if (this.featuresNativeTextTracks) {\n                this.el().appendChild(htmlTrackElement);\n            }\n            return htmlTrackElement;\n        }\n        removeRemoteTextTrack(track) {\n            super.removeRemoteTextTrack(track);\n            if (this.featuresNativeTextTracks) {\n                const tracks = this.$$('track');\n                let i = tracks.length;\n                while (i--) {\n                    if (track === tracks[i] || track === tracks[i].track) {\n                        this.el().removeChild(tracks[i]);\n                    }\n                }\n            }\n        }\n        getVideoPlaybackQuality() {\n            if (typeof this.el().getVideoPlaybackQuality === 'function') {\n                return this.el().getVideoPlaybackQuality();\n            }\n            const videoPlaybackQuality = {};\n            if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n                videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n                videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n            }\n            if (window.performance && typeof window.performance.now === 'function') {\n                videoPlaybackQuality.creationTime = window.performance.now();\n            } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n                videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n            }\n            return videoPlaybackQuality;\n        }\n    }\n    defineLazyProperty(Html5, 'TEST_VID', function () {\n        if (!Dom.isReal()) {\n            return;\n        }\n        const video = document.createElement('video');\n        const track = document.createElement('track');\n        track.kind = 'captions';\n        track.srclang = 'en';\n        track.label = 'English';\n        video.appendChild(track);\n        return video;\n    });\n    Html5.isSupported = function () {\n        try {\n            Html5.TEST_VID.volume = 0.5;\n        } catch (e) {\n            return false;\n        }\n        return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n    };\n    Html5.canPlayType = function (type) {\n        return Html5.TEST_VID.canPlayType(type);\n    };\n    Html5.canPlaySource = function (srcObj, options) {\n        return Html5.canPlayType(srcObj.type);\n    };\n    Html5.canControlVolume = function () {\n        try {\n            const volume = Html5.TEST_VID.volume;\n            Html5.TEST_VID.volume = volume / 2 + 0.1;\n            return volume !== Html5.TEST_VID.volume;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canMuteVolume = function () {\n        try {\n            const muted = Html5.TEST_VID.muted;\n            Html5.TEST_VID.muted = !muted;\n            if (Html5.TEST_VID.muted) {\n                Dom.setAttribute(Html5.TEST_VID, 'muted', 'muted');\n            } else {\n                Dom.removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n            }\n            return muted !== Html5.TEST_VID.muted;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canControlPlaybackRate = function () {\n        if (browser.IS_ANDROID && browser.IS_CHROME && browser.CHROME_VERSION < 58) {\n            return false;\n        }\n        try {\n            const playbackRate = Html5.TEST_VID.playbackRate;\n            Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n            return playbackRate !== Html5.TEST_VID.playbackRate;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canOverrideAttributes = function () {\n        try {\n            const noop = () => {\n            };\n            Object.defineProperty(document.createElement('video'), 'src', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('audio'), 'src', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('video'), 'innerHTML', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n                get: noop,\n                set: noop\n            });\n        } catch (e) {\n            return false;\n        }\n        return true;\n    };\n    Html5.supportsNativeTextTracks = function () {\n        return browser.IS_ANY_SAFARI || browser.IS_IOS && browser.IS_CHROME;\n    };\n    Html5.supportsNativeVideoTracks = function () {\n        return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n    };\n    Html5.supportsNativeAudioTracks = function () {\n        return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n    };\n    Html5.Events = [\n        'loadstart',\n        'suspend',\n        'abort',\n        'error',\n        'emptied',\n        'stalled',\n        'loadedmetadata',\n        'loadeddata',\n        'canplay',\n        'canplaythrough',\n        'playing',\n        'waiting',\n        'seeking',\n        'seeked',\n        'ended',\n        'durationchange',\n        'timeupdate',\n        'progress',\n        'play',\n        'pause',\n        'ratechange',\n        'resize',\n        'volumechange'\n    ];\n    [\n        [\n            'featuresVolumeControl',\n            'canControlVolume'\n        ],\n        [\n            'featuresMuteControl',\n            'canMuteVolume'\n        ],\n        [\n            'featuresPlaybackRate',\n            'canControlPlaybackRate'\n        ],\n        [\n            'featuresSourceset',\n            'canOverrideAttributes'\n        ],\n        [\n            'featuresNativeTextTracks',\n            'supportsNativeTextTracks'\n        ],\n        [\n            'featuresNativeVideoTracks',\n            'supportsNativeVideoTracks'\n        ],\n        [\n            'featuresNativeAudioTracks',\n            'supportsNativeAudioTracks'\n        ]\n    ].forEach(function ([key, fn]) {\n        defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n    });\n    Html5.prototype.movingMediaElementInDOM = !browser.IS_IOS;\n    Html5.prototype.featuresFullscreenResize = true;\n    Html5.prototype.featuresProgressEvents = true;\n    Html5.prototype.featuresTimeupdateEvents = true;\n    let canPlayType;\n    Html5.patchCanPlayType = function () {\n        if (browser.ANDROID_VERSION >= 4 && !browser.IS_FIREFOX && !browser.IS_CHROME) {\n            canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n            Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n                const mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n                if (type && mpegurlRE.test(type)) {\n                    return 'maybe';\n                }\n                return canPlayType.call(this, type);\n            };\n        }\n    };\n    Html5.unpatchCanPlayType = function () {\n        const r = Html5.TEST_VID.constructor.prototype.canPlayType;\n        if (canPlayType) {\n            Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n        }\n        return r;\n    };\n    Html5.patchCanPlayType();\n    Html5.disposeMediaElement = function (el) {\n        if (!el) {\n            return;\n        }\n        if (el.parentNode) {\n            el.parentNode.removeChild(el);\n        }\n        while (el.hasChildNodes()) {\n            el.removeChild(el.firstChild);\n        }\n        el.removeAttribute('src');\n        if (typeof el.load === 'function') {\n            (function () {\n                try {\n                    el.load();\n                } catch (e) {\n                }\n            }());\n        }\n    };\n    Html5.resetMediaElement = function (el) {\n        if (!el) {\n            return;\n        }\n        const sources = el.querySelectorAll('source');\n        let i = sources.length;\n        while (i--) {\n            el.removeChild(sources[i]);\n        }\n        el.removeAttribute('src');\n        if (typeof el.load === 'function') {\n            (function () {\n                try {\n                    el.load();\n                } catch (e) {\n                }\n            }());\n        }\n    };\n    [\n        'muted',\n        'defaultMuted',\n        'autoplay',\n        'controls',\n        'loop',\n        'playsinline'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop] || this.el_.hasAttribute(prop);\n        };\n    });\n    [\n        'muted',\n        'defaultMuted',\n        'autoplay',\n        'loop',\n        'playsinline'\n    ].forEach(function (prop) {\n        Html5.prototype['set' + stringCases.toTitleCase(prop)] = function (v) {\n            this.el_[prop] = v;\n            if (v) {\n                this.el_.setAttribute(prop, prop);\n            } else {\n                this.el_.removeAttribute(prop);\n            }\n        };\n    });\n    [\n        'paused',\n        'currentTime',\n        'buffered',\n        'volume',\n        'poster',\n        'preload',\n        'error',\n        'seeking',\n        'seekable',\n        'ended',\n        'playbackRate',\n        'defaultPlaybackRate',\n        'disablePictureInPicture',\n        'played',\n        'networkState',\n        'readyState',\n        'videoWidth',\n        'videoHeight',\n        'crossOrigin'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop];\n        };\n    });\n    [\n        'volume',\n        'src',\n        'poster',\n        'preload',\n        'playbackRate',\n        'defaultPlaybackRate',\n        'disablePictureInPicture',\n        'crossOrigin'\n    ].forEach(function (prop) {\n        Html5.prototype['set' + stringCases.toTitleCase(prop)] = function (v) {\n            this.el_[prop] = v;\n        };\n    });\n    [\n        'pause',\n        'load',\n        'play'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop]();\n        };\n    });\n    Tech.withSourceHandlers(Html5);\n    Html5.nativeSourceHandler = {};\n    Html5.nativeSourceHandler.canPlayType = function (type) {\n        try {\n            return Html5.TEST_VID.canPlayType(type);\n        } catch (e) {\n            return '';\n        }\n    };\n    Html5.nativeSourceHandler.canHandleSource = function (source, options) {\n        if (source.type) {\n            return Html5.nativeSourceHandler.canPlayType(source.type);\n        } else if (source.src) {\n            const ext = Url.getFileExtension(source.src);\n            return Html5.nativeSourceHandler.canPlayType(`video/${ ext }`);\n        }\n        return '';\n    };\n    Html5.nativeSourceHandler.handleSource = function (source, tech, options) {\n        tech.setSrc(source.src);\n    };\n    Html5.nativeSourceHandler.dispose = function () {\n    };\n    Html5.registerSourceHandler(Html5.nativeSourceHandler);\n    Tech.registerTech('Html5', Html5);\n    return Html5;\n});\ndefine('skylark-videojs/player',[\n    'skylark-langx-globals/document',\n    './component',\n    ///'./mixins/evented',\n    './utils/events',\n    './utils/dom',\n    './utils/fn',\n    './utils/guid',\n    './utils/browser',\n    './utils/log',\n    './utils/string-cases',\n    './utils/time-ranges',\n    './utils/buffer',\n    './utils/stylesheet',\n    './fullscreen-api',\n    './media-error',\n    './utils/safeParseTuple',\n    './utils/obj',\n    './utils/merge-options',\n    './utils/promise',\n    './tracks/text-track-list-converter',\n    './modal-dialog',\n    './tech/tech',\n    './tech/middleware',\n    './tracks/track-types',\n    './utils/filter-source',\n    './utils/mimetypes',\n    './utils/keycode',\n    './tech/loader',\n    './poster-image',\n    './tracks/text-track-display',\n    './loading-spinner',\n    './big-play-button',\n    './close-button',\n    './control-bar/control-bar',\n    './error-display',\n    './tracks/text-track-settings',\n    './resize-manager',\n    './live-tracker',\n    './tech/html5'\n], function (\n    document,\n    Component,\n    Events, \n    Dom, \n    Fn, \n    Guid, \n    browser, \n    log, \n    stringCases, \n    timeRages, \n    buffer, \n    stylesheet, \n    FullscreenApi, \n    MediaError, \n    safeParseTuple, \n    obj, \n    mergeOptions, \n    promise, \n    textTrackConverter, \n    ModalDialog, \n    Tech, \n    middleware, \n    TRACK_TYPES, \n    filterSource, \n    mimetypes, \n    keycode\n) {\n    'use strict';\n    const TECH_EVENTS_RETRIGGER = [\n        'progress',\n        'abort',\n        'suspend',\n        'emptied',\n        'stalled',\n        'loadedmetadata',\n        'loadeddata',\n        'timeupdate',\n        'resize',\n        'volumechange',\n        'texttrackchange'\n    ];\n    const TECH_EVENTS_QUEUE = {\n        canplay: 'CanPlay',\n        canplaythrough: 'CanPlayThrough',\n        playing: 'Playing',\n        seeked: 'Seeked'\n    };\n    const BREAKPOINT_ORDER = [\n        'tiny',\n        'xsmall',\n        'small',\n        'medium',\n        'large',\n        'xlarge',\n        'huge'\n    ];\n    const BREAKPOINT_CLASSES = {};\n    BREAKPOINT_ORDER.forEach(k => {\n        const v = k.charAt(0) === 'x' ? `x-${ k.substring(1) }` : k;\n        BREAKPOINT_CLASSES[k] = `vjs-layout-${ v }`;\n    });\n    const DEFAULT_BREAKPOINTS = {\n        tiny: 210,\n        xsmall: 320,\n        small: 425,\n        medium: 768,\n        large: 1440,\n        xlarge: 2560,\n        huge: Infinity\n    };\n    class Player extends Component {\n        constructor(tag, options, ready) {\n            tag.id = tag.id || options.id || `vjs_video_${ Guid.newGUID() }`;\n            options = obj.assign(Player.getTagSettings(tag), options);\n            options.initChildren = false;\n            options.createEl = false;\n            options.evented = false;\n            options.reportTouchActivity = false;\n            if (!options.language) {\n                if (typeof tag.closest === 'function') {\n                    const closest = tag.closest('[lang]');\n                    if (closest && closest.getAttribute) {\n                        options.language = closest.getAttribute('lang');\n                    }\n                } else {\n                    let element = tag;\n                    while (element && element.nodeType === 1) {\n                        if (Dom.getAttributes(element).hasOwnProperty('lang')) {\n                            options.language = element.getAttribute('lang');\n                            break;\n                        }\n                        element = element.parentNode;\n                    }\n                }\n            }\n            super(null, options, ready);\n            this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n            this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n            this.isFullscreen_ = false;\n            this.log = log.createLogger(this.id_);\n            this.fsApi_ = FullscreenApi;\n            this.isPosterFromTech_ = false;\n            this.queuedCallbacks_ = [];\n            this.isReady_ = false;\n            this.hasStarted_ = false;\n            this.userActive_ = false;\n            this.debugEnabled_ = false;\n            if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n                throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n            }\n            this.tag = tag;\n            this.tagAttributes = tag && Dom.getAttributes(tag);\n            this.language(this.options_.language);\n            if (options.languages) {\n                const languagesToLower = {};\n                Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n                    languagesToLower[name.toLowerCase()] = options.languages[name];\n                });\n                this.languages_ = languagesToLower;\n            } else {\n                this.languages_ = Player.prototype.options_.languages;\n            }\n            this.resetCache_();\n            this.poster_ = options.poster || '';\n            this.controls_ = !!options.controls;\n            tag.controls = false;\n            tag.removeAttribute('controls');\n            this.changingSrc_ = false;\n            this.playCallbacks_ = [];\n            this.playTerminatedQueue_ = [];\n            if (tag.hasAttribute('autoplay')) {\n                this.autoplay(true);\n            } else {\n                this.autoplay(this.options_.autoplay);\n            }\n            if (options.plugins) {\n                Object.keys(options.plugins).forEach(name => {\n                    if (typeof this[name] !== 'function') {\n                        throw new Error(`plugin \"${ name }\" does not exist`);\n                    }\n                });\n            }\n            this.scrubbing_ = false;\n            this.el_ = this.createEl();\n            //evented(this, { eventBusKey: 'el_' });\n            if (this.fsApi_.requestFullscreen) {\n                Events.on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n                this.listenTo(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n            }\n            if (this.fluid_) {\n                this.listenTo([\n                    'playerreset',\n                    'resize'\n                ], this.updateStyleEl_);\n            }\n            const playerOptionsCopy = mergeOptions(this.options_);\n            if (options.plugins) {\n                Object.keys(options.plugins).forEach(name => {\n                    this[name](options.plugins[name]);\n                });\n            }\n            if (options.debug) {\n                this.debug(true);\n            }\n            this.options_.playerOptions = playerOptionsCopy;\n            this.middleware_ = [];\n            this.initChildren();\n            this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n            if (this.controls()) {\n                this.addClass('vjs-controls-enabled');\n            } else {\n                this.addClass('vjs-controls-disabled');\n            }\n            this.el_.setAttribute('role', 'region');\n            if (this.isAudio()) {\n                this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n            } else {\n                this.el_.setAttribute('aria-label', this.localize('Video Player'));\n            }\n            if (this.isAudio()) {\n                this.addClass('vjs-audio');\n            }\n            if (this.flexNotSupported_()) {\n                this.addClass('vjs-no-flex');\n            }\n            if (browser.TOUCH_ENABLED) {\n                this.addClass('vjs-touch-enabled');\n            }\n            if (!browser.IS_IOS) {\n                this.addClass('vjs-workinghover');\n            }\n            Player.players[this.id_] = this;\n            const majorVersion = \"7\";\n            this.addClass(`vjs-v${ majorVersion }`);\n            this.userActive(true);\n            this.reportUserActivity();\n            this.listenToOnce('play', this.listenForUserActivity_);\n            this.listenTo('stageclick', this.handleStageClick_);\n            this.listenTo('keydown', this.handleKeyDown);\n            this.listenTo('languagechange', this.handleLanguagechange);\n            this.breakpoints(this.options_.breakpoints);\n            this.responsive(this.options_.responsive);\n        }\n        dispose() {\n            this.trigger('dispose');\n            this.unlistenTo('dispose');\n            Events.off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n            Events.off(document, 'keydown', this.boundFullWindowOnEscKey_);\n            if (this.styleEl_ && this.styleEl_.parentNode) {\n                this.styleEl_.parentNode.removeChild(this.styleEl_);\n                this.styleEl_ = null;\n            }\n            Player.players[this.id_] = null;\n            if (this.tag && this.tag.player) {\n                this.tag.player = null;\n            }\n            if (this.el_ && this.el_.player) {\n                this.el_.player = null;\n            }\n            if (this.tech_) {\n                this.tech_.dispose();\n                this.isPosterFromTech_ = false;\n                this.poster_ = '';\n            }\n            if (this.playerElIngest_) {\n                this.playerElIngest_ = null;\n            }\n            if (this.tag) {\n                this.tag = null;\n            }\n            middleware.clearCacheForPlayer(this);\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES[name];\n                const list = this[props.getterName]();\n                if (list && list.off) {\n                    list.off();\n                }\n            });\n            super.dispose();\n        }\n        createEl() {\n            let tag = this.tag;\n            let el;\n            let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n            const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n            if (playerElIngest) {\n                el = this.el_ = tag.parentNode;\n            } else if (!divEmbed) {\n                el = this.el_ = super.createEl('div');\n            }\n            const attrs = Dom.getAttributes(tag);\n            if (divEmbed) {\n                el = this.el_ = tag;\n                tag = this.tag = document.createElement('video');\n                while (el.children.length) {\n                    tag.appendChild(el.firstChild);\n                }\n                if (!Dom.hasClass(el, 'video-js')) {\n                    Dom.addClass(el, 'video-js');\n                }\n                el.appendChild(tag);\n                playerElIngest = this.playerElIngest_ = el;\n                Object.keys(el).forEach(k => {\n                    try {\n                        tag[k] = el[k];\n                    } catch (e) {\n                    }\n                });\n            }\n            tag.setAttribute('tabindex', '-1');\n            attrs.tabindex = '-1';\n            if (browser.IE_VERSION || browser.IS_CHROME && browser.IS_WINDOWS) {\n                tag.setAttribute('role', 'application');\n                attrs.role = 'application';\n            }\n            tag.removeAttribute('width');\n            tag.removeAttribute('height');\n            if ('width' in attrs) {\n                delete attrs.width;\n            }\n            if ('height' in attrs) {\n                delete attrs.height;\n            }\n            Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n                if (!(divEmbed && attr === 'class')) {\n                    el.setAttribute(attr, attrs[attr]);\n                }\n                if (divEmbed) {\n                    tag.setAttribute(attr, attrs[attr]);\n                }\n            });\n            tag.playerId = tag.id;\n            tag.id += '_html5_api';\n            tag.className = 'vjs-tech';\n            tag.player = el.player = this;\n            this.addClass('vjs-paused');\n            if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n                this.styleEl_ = stylesheet.createStyleElement('vjs-styles-dimensions');\n                const defaultsStyleEl = Dom.$('.vjs-styles-defaults');\n                const head = Dom.$('head');\n                head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n            }\n            this.fill_ = false;\n            this.fluid_ = false;\n            this.width(this.options_.width);\n            this.height(this.options_.height);\n            this.fill(this.options_.fill);\n            this.fluid(this.options_.fluid);\n            this.aspectRatio(this.options_.aspectRatio);\n            this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n            const links = tag.getElementsByTagName('a');\n            for (let i = 0; i < links.length; i++) {\n                const linkEl = links.item(i);\n                Dom.addClass(linkEl, 'vjs-hidden');\n                linkEl.setAttribute('hidden', 'hidden');\n            }\n            tag.initNetworkState_ = tag.networkState;\n            if (tag.parentNode && !playerElIngest) {\n                tag.parentNode.insertBefore(el, tag);\n            }\n            Dom.prependTo(tag, el);\n            this.children_.unshift(tag);\n            this.el_.setAttribute('lang', this.language_);\n            this.el_ = el;\n            return el;\n        }\n        crossOrigin(value) {\n            if (!value) {\n                return this.techGet_('crossOrigin');\n            }\n            if (value !== 'anonymous' && value !== 'use-credentials') {\n                log.warn(`crossOrigin must be \"anonymous\" or \"use-credentials\", given \"${ value }\"`);\n                return;\n            }\n            this.techCall_('setCrossOrigin', value);\n            return;\n        }\n        width(value) {\n            return this.dimension('width', value);\n        }\n        height(value) {\n            return this.dimension('height', value);\n        }\n        dimension(dimension, value) {\n            const privDimension = dimension + '_';\n            if (value === undefined) {\n                return this[privDimension] || 0;\n            }\n            if (value === '' || value === 'auto') {\n                this[privDimension] = undefined;\n                this.updateStyleEl_();\n                return;\n            }\n            const parsedVal = parseFloat(value);\n            if (isNaN(parsedVal)) {\n                log.error(`Improper value \"${ value }\" supplied for for ${ dimension }`);\n                return;\n            }\n            this[privDimension] = parsedVal;\n            this.updateStyleEl_();\n        }\n        fluid(bool) {\n            if (bool === undefined) {\n                return !!this.fluid_;\n            }\n            this.fluid_ = !!bool;\n            ///if (evented.isEvented(this)) {\n                this.unlistenTo([\n                    'playerreset',\n                    'resize'\n                ], this.updateStyleEl_);\n            ///}\n            if (bool) {\n                this.addClass('vjs-fluid');\n                this.fill(false);\n                ///evented.addEventedCallback(this, () => {\n                ///    this.listenTo([\n                ///        'playerreset',\n                ///        'resize'\n                ///    ], this.updateStyleEl_);\n                ///});\n            } else {\n                this.removeClass('vjs-fluid');\n            }\n            this.updateStyleEl_();\n        }\n        fill(bool) {\n            if (bool === undefined) {\n                return !!this.fill_;\n            }\n            this.fill_ = !!bool;\n            if (bool) {\n                this.addClass('vjs-fill');\n                this.fluid(false);\n            } else {\n                this.removeClass('vjs-fill');\n            }\n        }\n        aspectRatio(ratio) {\n            if (ratio === undefined) {\n                return this.aspectRatio_;\n            }\n            if (!/^\\d+\\:\\d+$/.test(ratio)) {\n                throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n            }\n            this.aspectRatio_ = ratio;\n            this.fluid(true);\n            this.updateStyleEl_();\n        }\n        updateStyleEl_() {\n            if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n                const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n                const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n                const techEl = this.tech_ && this.tech_.el();\n                if (techEl) {\n                    if (width >= 0) {\n                        techEl.width = width;\n                    }\n                    if (height >= 0) {\n                        techEl.height = height;\n                    }\n                }\n                return;\n            }\n            let width;\n            let height;\n            let aspectRatio;\n            let idClass;\n            if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n                aspectRatio = this.aspectRatio_;\n            } else if (this.videoWidth() > 0) {\n                aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n            } else {\n                aspectRatio = '16:9';\n            }\n            const ratioParts = aspectRatio.split(':');\n            const ratioMultiplier = ratioParts[1] / ratioParts[0];\n            if (this.width_ !== undefined) {\n                width = this.width_;\n            } else if (this.height_ !== undefined) {\n                width = this.height_ / ratioMultiplier;\n            } else {\n                width = this.videoWidth() || 300;\n            }\n            if (this.height_ !== undefined) {\n                height = this.height_;\n            } else {\n                height = width * ratioMultiplier;\n            }\n            if (/^[^a-zA-Z]/.test(this.id())) {\n                idClass = 'dimensions-' + this.id();\n            } else {\n                idClass = this.id() + '-dimensions';\n            }\n            this.addClass(idClass);\n            stylesheet.setTextContent(this.styleEl_, `\n      .${ idClass } {\n        width: ${ width }px;\n        height: ${ height }px;\n      }\n\n      .${ idClass }.vjs-fluid {\n        padding-top: ${ ratioMultiplier * 100 }%;\n      }\n    `);\n        }\n        loadTech_(techName, source) {\n            if (this.tech_) {\n                this.unloadTech_();\n            }\n            const titleTechName = stringCases.toTitleCase(techName);\n            const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n            if (titleTechName !== 'Html5' && this.tag) {\n                Tech.getTech('Html5').disposeMediaElement(this.tag);\n                this.tag.player = null;\n                this.tag = null;\n            }\n            this.techName_ = titleTechName;\n            this.isReady_ = false;\n            const autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n            const techOptions = {\n                source,\n                autoplay,\n                'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n                'playerId': this.id(),\n                'techId': `${ this.id() }_${ camelTechName }_api`,\n                'playsinline': this.options_.playsinline,\n                'preload': this.options_.preload,\n                'loop': this.options_.loop,\n                'disablePictureInPicture': this.options_.disablePictureInPicture,\n                'muted': this.options_.muted,\n                'poster': this.poster(),\n                'language': this.language(),\n                'playerElIngest': this.playerElIngest_ || false,\n                'vtt.js': this.options_['vtt.js'],\n                'canOverridePoster': !!this.options_.techCanOverridePoster,\n                'enableSourceset': this.options_.enableSourceset,\n                'Promise': this.options_.Promise\n            };\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                techOptions[props.getterName] = this[props.privateName];\n            });\n            obj.assign(techOptions, this.options_[titleTechName]);\n            obj.assign(techOptions, this.options_[camelTechName]);\n            obj.assign(techOptions, this.options_[techName.toLowerCase()]);\n            if (this.tag) {\n                techOptions.tag = this.tag;\n            }\n            if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n                techOptions.startTime = this.cache_.currentTime;\n            }\n            const TechClass = Tech.getTech(techName);\n            if (!TechClass) {\n                throw new Error(`No Tech named '${ titleTechName }' exists! '${ titleTechName }' should be registered using videojs.registerTech()'`);\n            }\n            this.tech_ = new TechClass(techOptions);\n            this.tech_.ready(Fn.bind(this, this.handleTechReady_), true);\n            textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n            TECH_EVENTS_RETRIGGER.forEach(event => {\n                this.listenTo(this.tech_, event, this[`handleTech${ stringCases.toTitleCase(event) }_`]);\n            });\n            Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n                this.listenTo(this.tech_, event, eventObj => {\n                    if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n                        this.queuedCallbacks_.push({\n                            callback: this[`handleTech${ TECH_EVENTS_QUEUE[event] }_`].bind(this),\n                            event: eventObj\n                        });\n                        return;\n                    }\n                    this[`handleTech${ TECH_EVENTS_QUEUE[event] }_`](eventObj);\n                });\n            });\n            this.listenTo(this.tech_, 'loadstart', this.handleTechLoadStart_);\n            this.listenTo(this.tech_, 'sourceset', this.handleTechSourceset_);\n            this.listenTo(this.tech_, 'waiting', this.handleTechWaiting_);\n            this.listenTo(this.tech_, 'ended', this.handleTechEnded_);\n            this.listenTo(this.tech_, 'seeking', this.handleTechSeeking_);\n            this.listenTo(this.tech_, 'play', this.handleTechPlay_);\n            this.listenTo(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n            this.listenTo(this.tech_, 'pause', this.handleTechPause_);\n            this.listenTo(this.tech_, 'durationchange', this.handleTechDurationChange_);\n            this.listenTo(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n            this.listenTo(this.tech_, 'fullscreenerror', this.handleTechFullscreenError_);\n            this.listenTo(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n            this.listenTo(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n            this.listenTo(this.tech_, 'error', this.handleTechError_);\n            this.listenTo(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n            this.listenTo(this.tech_, 'posterchange', this.handleTechPosterChange_);\n            this.listenTo(this.tech_, 'textdata', this.handleTechTextData_);\n            this.listenTo(this.tech_, 'ratechange', this.handleTechRateChange_);\n            this.usingNativeControls(this.techGet_('controls'));\n            if (this.controls() && !this.usingNativeControls()) {\n                this.addTechControlsListeners_();\n            }\n            if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n                Dom.prependTo(this.tech_.el(), this.el());\n            }\n            if (this.tag) {\n                this.tag.player = null;\n                this.tag = null;\n            }\n        }\n        unloadTech_() {\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                this[props.privateName] = this[props.getterName]();\n            });\n            this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n            this.isReady_ = false;\n            this.tech_.dispose();\n            this.tech_ = false;\n            if (this.isPosterFromTech_) {\n                this.poster_ = '';\n                this.trigger('posterchange');\n            }\n            this.isPosterFromTech_ = false;\n        }\n        tech(safety) {\n            if (safety === undefined) {\n                log.warn(\"Using the tech directly can be dangerous. I hope you know what you're doing.\\n\" + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n            }\n            return this.tech_;\n        }\n        addTechControlsListeners_() {\n            this.removeTechControlsListeners_();\n            this.listenTo(this.tech_, 'mouseup', this.handleTechClick_);\n            this.listenTo(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n            this.listenTo(this.tech_, 'touchstart', this.handleTechTouchStart_);\n            this.listenTo(this.tech_, 'touchmove', this.handleTechTouchMove_);\n            this.listenTo(this.tech_, 'touchend', this.handleTechTouchEnd_);\n            this.listenTo(this.tech_, 'tap', this.handleTechTap_);\n        }\n        removeTechControlsListeners_() {\n            this.unlistenTo(this.tech_, 'tap', this.handleTechTap_);\n            this.unlistenTo(this.tech_, 'touchstart', this.handleTechTouchStart_);\n            this.unlistenTo(this.tech_, 'touchmove', this.handleTechTouchMove_);\n            this.unlistenTo(this.tech_, 'touchend', this.handleTechTouchEnd_);\n            this.unlistenTo(this.tech_, 'mouseup', this.handleTechClick_);\n            this.unlistenTo(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n        }\n        handleTechReady_() {\n            this.triggerReady();\n            if (this.cache_.volume) {\n                this.techCall_('setVolume', this.cache_.volume);\n            }\n            this.handleTechPosterChange_();\n            this.handleTechDurationChange_();\n        }\n        handleTechLoadStart_() {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-seeking');\n            this.error(null);\n            this.handleTechDurationChange_();\n            if (!this.paused()) {\n                this.trigger('loadstart');\n                this.trigger('firstplay');\n            } else {\n                this.hasStarted(false);\n                this.trigger('loadstart');\n            }\n            this.manualAutoplay_(this.autoplay());\n        }\n        manualAutoplay_(type) {\n            if (!this.tech_ || typeof type !== 'string') {\n                return;\n            }\n            const muted = () => {\n                const previouslyMuted = this.muted();\n                this.muted(true);\n                const restoreMuted = () => {\n                    this.muted(previouslyMuted);\n                };\n                this.playTerminatedQueue_.push(restoreMuted);\n                const mutedPromise = this.play();\n                if (!promise.isPromise(mutedPromise)) {\n                    return;\n                }\n                return mutedPromise.catch(restoreMuted);\n            };\n            let promise;\n            if (type === 'any' && this.muted() !== true) {\n                promise = this.play();\n                if (promise.isPromise(promise)) {\n                    promise = promise.catch(muted);\n                }\n            } else if (type === 'muted' && this.muted() !== true) {\n                promise = muted();\n            } else {\n                promise = this.play();\n            }\n            if (!promise.isPromise(promise)) {\n                return;\n            }\n            return promise.then(() => {\n                this.trigger({\n                    type: 'autoplay-success',\n                    autoplay: type\n                });\n            }).catch(e => {\n                this.trigger({\n                    type: 'autoplay-failure',\n                    autoplay: type\n                });\n            });\n        }\n        updateSourceCaches_(srcObj = '') {\n            let src = srcObj;\n            let type = '';\n            if (typeof src !== 'string') {\n                src = srcObj.src;\n                type = srcObj.type;\n            }\n            this.cache_.source = this.cache_.source || {};\n            this.cache_.sources = this.cache_.sources || [];\n            if (src && !type) {\n                type = mimetypes.findMimetype(this, src);\n            }\n            this.cache_.source = mergeOptions({}, srcObj, {\n                src,\n                type\n            });\n            const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n            const sourceElSources = [];\n            const sourceEls = this.$$('source');\n            const matchingSourceEls = [];\n            for (let i = 0; i < sourceEls.length; i++) {\n                const sourceObj = Dom.getAttributes(sourceEls[i]);\n                sourceElSources.push(sourceObj);\n                if (sourceObj.src && sourceObj.src === src) {\n                    matchingSourceEls.push(sourceObj.src);\n                }\n            }\n            if (matchingSourceEls.length && !matchingSources.length) {\n                this.cache_.sources = sourceElSources;\n            } else if (!matchingSources.length) {\n                this.cache_.sources = [this.cache_.source];\n            }\n            this.cache_.src = src;\n        }\n        handleTechSourceset_(event) {\n            if (!this.changingSrc_) {\n                let updateSourceCaches = src => this.updateSourceCaches_(src);\n                const playerSrc = this.currentSource().src;\n                const eventSrc = event.src;\n                if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n                    if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n                        updateSourceCaches = () => {\n                        };\n                    }\n                }\n                updateSourceCaches(eventSrc);\n                if (!event.src) {\n                    this.tech_.any([\n                        'sourceset',\n                        'loadstart'\n                    ], e => {\n                        if (e.type === 'sourceset') {\n                            return;\n                        }\n                        const techSrc = this.techGet('currentSrc');\n                        this.lastSource_.tech = techSrc;\n                        this.updateSourceCaches_(techSrc);\n                    });\n                }\n            }\n            this.lastSource_ = {\n                player: this.currentSource().src,\n                tech: event.src\n            };\n            this.trigger({\n                src: event.src,\n                type: 'sourceset'\n            });\n        }\n        hasStarted(request) {\n            if (request === undefined) {\n                return this.hasStarted_;\n            }\n            if (request === this.hasStarted_) {\n                return;\n            }\n            this.hasStarted_ = request;\n            if (this.hasStarted_) {\n                this.addClass('vjs-has-started');\n                this.trigger('firstplay');\n            } else {\n                this.removeClass('vjs-has-started');\n            }\n        }\n        handleTechPlay_() {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-paused');\n            this.addClass('vjs-playing');\n            this.hasStarted(true);\n            this.trigger('play');\n        }\n        handleTechRateChange_() {\n            if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n                this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n                this.queuedCallbacks_ = [];\n            }\n            this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n            this.trigger('ratechange');\n        }\n        handleTechWaiting_() {\n            this.addClass('vjs-waiting');\n            this.trigger('waiting');\n            const timeWhenWaiting = this.currentTime();\n            const timeUpdateListener = () => {\n                if (timeWhenWaiting !== this.currentTime()) {\n                    this.removeClass('vjs-waiting');\n                    this.unlistenTo('timeupdate', timeUpdateListener);\n                }\n            };\n            this.listenTo('timeupdate', timeUpdateListener);\n        }\n        handleTechCanPlay_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('canplay');\n        }\n        handleTechCanPlayThrough_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('canplaythrough');\n        }\n        handleTechPlaying_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('playing');\n        }\n        handleTechSeeking_() {\n            this.addClass('vjs-seeking');\n            this.trigger('seeking');\n        }\n        handleTechSeeked_() {\n            this.removeClass('vjs-seeking');\n            this.removeClass('vjs-ended');\n            this.trigger('seeked');\n        }\n        handleTechFirstPlay_() {\n            if (this.options_.starttime) {\n                log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n                this.currentTime(this.options_.starttime);\n            }\n            this.addClass('vjs-has-started');\n            this.trigger('firstplay');\n        }\n        handleTechPause_() {\n            this.removeClass('vjs-playing');\n            this.addClass('vjs-paused');\n            this.trigger('pause');\n        }\n        handleTechEnded_() {\n            this.addClass('vjs-ended');\n            if (this.options_.loop) {\n                this.currentTime(0);\n                this.play();\n            } else if (!this.paused()) {\n                this.pause();\n            }\n            this.trigger('ended');\n        }\n        handleTechDurationChange_() {\n            this.duration(this.techGet_('duration'));\n        }\n        handleTechClick_(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            if (!this.controls_) {\n                return;\n            }\n            if (this.paused()) {\n                promise.silencePromise(this.play());\n            } else {\n                this.pause();\n            }\n        }\n        handleTechDoubleClick_(event) {\n            if (!this.controls_) {\n                return;\n            }\n            const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n            if (!inAllowedEls) {\n                if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n                    if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n                        this.options_.userActions.doubleClick.call(this, event);\n                    } else if (this.isFullscreen()) {\n                        this.exitFullscreen();\n                    } else {\n                        this.requestFullscreen();\n                    }\n                }\n            }\n        }\n        handleTechTap_() {\n            this.userActive(!this.userActive());\n        }\n        handleTechTouchStart_() {\n            this.userWasActive = this.userActive();\n        }\n        handleTechTouchMove_() {\n            if (this.userWasActive) {\n                this.reportUserActivity();\n            }\n        }\n        handleTechTouchEnd_(event) {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n        }\n        handleStageClick_() {\n            this.reportUserActivity();\n        }\n        toggleFullscreenClass_() {\n            if (this.isFullscreen()) {\n                this.addClass('vjs-fullscreen');\n            } else {\n                this.removeClass('vjs-fullscreen');\n            }\n        }\n        documentFullscreenChange_(e) {\n            const targetPlayer = e.target.player;\n            if (targetPlayer && targetPlayer !== this) {\n                return;\n            }\n            const el = this.el();\n            let isFs = document[this.fsApi_.fullscreenElement] === el;\n            if (!isFs && el.matches) {\n                isFs = el.matches(':' + this.fsApi_.fullscreen);\n            } else if (!isFs && el.msMatchesSelector) {\n                isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n            }\n            this.isFullscreen(isFs);\n        }\n        handleTechFullscreenChange_(event, data) {\n            if (data) {\n                if (data.nativeIOSFullscreen) {\n                    this.toggleClass('vjs-ios-native-fs');\n                }\n                this.isFullscreen(data.isFullscreen);\n            }\n        }\n        handleTechFullscreenError_(event, err) {\n            this.trigger('fullscreenerror', err);\n        }\n        togglePictureInPictureClass_() {\n            if (this.isInPictureInPicture()) {\n                this.addClass('vjs-picture-in-picture');\n            } else {\n                this.removeClass('vjs-picture-in-picture');\n            }\n        }\n        handleTechEnterPictureInPicture_(event) {\n            this.isInPictureInPicture(true);\n        }\n        handleTechLeavePictureInPicture_(event) {\n            this.isInPictureInPicture(false);\n        }\n        handleTechError_() {\n            const error = this.tech_.error();\n            this.error(error);\n        }\n        handleTechTextData_() {\n            let data = null;\n            if (arguments.length > 1) {\n                data = arguments[1];\n            }\n            this.trigger('textdata', data);\n        }\n        getCache() {\n            return this.cache_;\n        }\n        resetCache_() {\n            this.cache_ = {\n                currentTime: 0,\n                initTime: 0,\n                inactivityTimeout: this.options_.inactivityTimeout,\n                duration: NaN,\n                lastVolume: 1,\n                lastPlaybackRate: this.defaultPlaybackRate(),\n                media: null,\n                src: '',\n                source: {},\n                sources: [],\n                volume: 1\n            };\n        }\n        techCall_(method, arg) {\n            this.ready(function () {\n                if (method in middleware.allowedSetters) {\n                    return middleware.set(this.middleware_, this.tech_, method, arg);\n                } else if (method in middleware.allowedMediators) {\n                    return middleware.mediate(this.middleware_, this.tech_, method, arg);\n                }\n                try {\n                    if (this.tech_) {\n                        this.tech_[method](arg);\n                    }\n                } catch (e) {\n                    log(e);\n                    throw e;\n                }\n            }, true);\n        }\n        techGet_(method) {\n            if (!this.tech_ || !this.tech_.isReady_) {\n                return;\n            }\n            if (method in middleware.allowedGetters) {\n                return middleware.get(this.middleware_, this.tech_, method);\n            } else if (method in middleware.allowedMediators) {\n                return middleware.mediate(this.middleware_, this.tech_, method);\n            }\n            try {\n                return this.tech_[method]();\n            } catch (e) {\n                if (this.tech_[method] === undefined) {\n                    log(`Video.js: ${ method } method not defined for ${ this.techName_ } playback technology.`, e);\n                    throw e;\n                }\n                if (e.name === 'TypeError') {\n                    log(`Video.js: ${ method } unavailable on ${ this.techName_ } playback technology element.`, e);\n                    this.tech_.isReady_ = false;\n                    throw e;\n                }\n                log(e);\n                throw e;\n            }\n        }\n        play() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                return new PromiseClass(resolve => {\n                    this.play_(resolve);\n                });\n            }\n            return this.play_();\n        }\n        play_(callback = promise.silencePromise) {\n            this.playCallbacks_.push(callback);\n            const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n            if (this.waitToPlay_) {\n                this.unlistenTo([\n                    'ready',\n                    'loadstart'\n                ], this.waitToPlay_);\n                this.waitToPlay_ = null;\n            }\n            if (!this.isReady_ || !isSrcReady) {\n                this.waitToPlay_ = e => {\n                    this.play_();\n                };\n                this.listenToOnce([\n                    'ready',\n                    'loadstart'\n                ], this.waitToPlay_);\n                if (!isSrcReady && (browser.IS_ANY_SAFARI || browser.IS_IOS)) {\n                    this.load();\n                }\n                return;\n            }\n            const val = this.techGet_('play');\n            if (val === null) {\n                this.runPlayTerminatedQueue_();\n            } else {\n                this.runPlayCallbacks_(val);\n            }\n        }\n        runPlayTerminatedQueue_() {\n            const queue = this.playTerminatedQueue_.slice(0);\n            this.playTerminatedQueue_ = [];\n            queue.forEach(function (q) {\n                q();\n            });\n        }\n        runPlayCallbacks_(val) {\n            const callbacks = this.playCallbacks_.slice(0);\n            this.playCallbacks_ = [];\n            this.playTerminatedQueue_ = [];\n            callbacks.forEach(function (cb) {\n                cb(val);\n            });\n        }\n        pause() {\n            this.techCall_('pause');\n        }\n        paused() {\n            return this.techGet_('paused') === false ? false : true;\n        }\n        played() {\n            return this.techGet_('played') || timeRages.createTimeRange(0, 0);\n        }\n        scrubbing(isScrubbing) {\n            if (typeof isScrubbing === 'undefined') {\n                return this.scrubbing_;\n            }\n            this.scrubbing_ = !!isScrubbing;\n            this.techCall_('setScrubbing', this.scrubbing_);\n            if (isScrubbing) {\n                this.addClass('vjs-scrubbing');\n            } else {\n                this.removeClass('vjs-scrubbing');\n            }\n        }\n        currentTime(seconds) {\n            if (typeof seconds !== 'undefined') {\n                if (seconds < 0) {\n                    seconds = 0;\n                }\n                if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n                    this.cache_.initTime = seconds;\n                    this.unlistenTo('canplay', this.applyInitTime_);\n                    this.listenToOnce('canplay', this.applyInitTime_);\n                    return;\n                }\n                this.techCall_('setCurrentTime', seconds);\n                this.cache_.initTime = 0;\n                return;\n            }\n            this.cache_.currentTime = this.techGet_('currentTime') || 0;\n            return this.cache_.currentTime;\n        }\n        applyInitTime_() {\n            this.currentTime(this.cache_.initTime);\n        }\n        duration(seconds) {\n            if (seconds === undefined) {\n                return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n            }\n            seconds = parseFloat(seconds);\n            if (seconds < 0) {\n                seconds = Infinity;\n            }\n            if (seconds !== this.cache_.duration) {\n                this.cache_.duration = seconds;\n                if (seconds === Infinity) {\n                    this.addClass('vjs-live');\n                } else {\n                    this.removeClass('vjs-live');\n                }\n                if (!isNaN(seconds)) {\n                    this.trigger('durationchange');\n                }\n            }\n        }\n        remainingTime() {\n            return this.duration() - this.currentTime();\n        }\n        remainingTimeDisplay() {\n            return Math.floor(this.duration()) - Math.floor(this.currentTime());\n        }\n        buffered() {\n            let buffered = this.techGet_('buffered');\n            if (!buffered || !buffered.length) {\n                buffered = timeRages.createTimeRange(0, 0);\n            }\n            return buffered;\n        }\n        bufferedPercent() {\n            return buffer.bufferedPercent(this.buffered(), this.duration());\n        }\n        bufferedEnd() {\n            const buffered = this.buffered();\n            const duration = this.duration();\n            let end = buffered.end(buffered.length - 1);\n            if (end > duration) {\n                end = duration;\n            }\n            return end;\n        }\n        volume(percentAsDecimal) {\n            let vol;\n            if (percentAsDecimal !== undefined) {\n                vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n                this.cache_.volume = vol;\n                this.techCall_('setVolume', vol);\n                if (vol > 0) {\n                    this.lastVolume_(vol);\n                }\n                return;\n            }\n            vol = parseFloat(this.techGet_('volume'));\n            return isNaN(vol) ? 1 : vol;\n        }\n        muted(muted) {\n            if (muted !== undefined) {\n                this.techCall_('setMuted', muted);\n                return;\n            }\n            return this.techGet_('muted') || false;\n        }\n        defaultMuted(defaultMuted) {\n            if (defaultMuted !== undefined) {\n                return this.techCall_('setDefaultMuted', defaultMuted);\n            }\n            return this.techGet_('defaultMuted') || false;\n        }\n        lastVolume_(percentAsDecimal) {\n            if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n                this.cache_.lastVolume = percentAsDecimal;\n                return;\n            }\n            return this.cache_.lastVolume;\n        }\n        supportsFullScreen() {\n            return this.techGet_('supportsFullScreen') || false;\n        }\n        isFullscreen(isFS) {\n            if (isFS !== undefined) {\n                const oldValue = this.isFullscreen_;\n                this.isFullscreen_ = Boolean(isFS);\n                if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n                    this.trigger('fullscreenchange');\n                }\n                this.toggleFullscreenClass_();\n                return;\n            }\n            return this.isFullscreen_;\n        }\n        requestFullscreen(fullscreenOptions) {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                const self = this;\n                return new PromiseClass((resolve, reject) => {\n                    function offHandler() {\n                        self.off('fullscreenerror', errorHandler);\n                        self.off('fullscreenchange', changeHandler);\n                    }\n                    function changeHandler() {\n                        offHandler();\n                        resolve();\n                    }\n                    function errorHandler(e, err) {\n                        offHandler();\n                        reject(err);\n                    }\n                    self.one('fullscreenchange', changeHandler);\n                    self.one('fullscreenerror', errorHandler);\n                    const promise = self.requestFullscreenHelper_(fullscreenOptions);\n                    if (promise) {\n                        promise.then(offHandler, offHandler);\n                        return promise;\n                    }\n                });\n            }\n            return this.requestFullscreenHelper_();\n        }\n        requestFullscreenHelper_(fullscreenOptions) {\n            let fsOptions;\n            if (!this.fsApi_.prefixed) {\n                fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n                if (fullscreenOptions !== undefined) {\n                    fsOptions = fullscreenOptions;\n                }\n            }\n            if (this.fsApi_.requestFullscreen) {\n                const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n                if (promise) {\n                    promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n                }\n                return promise;\n            } else if (this.tech_.supportsFullScreen()) {\n                this.techCall_('enterFullScreen');\n            } else {\n                this.enterFullWindow();\n            }\n        }\n        exitFullscreen() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                const self = this;\n                return new PromiseClass((resolve, reject) => {\n                    function offHandler() {\n                        self.off('fullscreenerror', errorHandler);\n                        self.off('fullscreenchange', changeHandler);\n                    }\n                    function changeHandler() {\n                        offHandler();\n                        resolve();\n                    }\n                    function errorHandler(e, err) {\n                        offHandler();\n                        reject(err);\n                    }\n                    self.one('fullscreenchange', changeHandler);\n                    self.one('fullscreenerror', errorHandler);\n                    const promise = self.exitFullscreenHelper_();\n                    if (promise) {\n                        promise.then(offHandler, offHandler);\n                        return promise;\n                    }\n                });\n            }\n            return this.exitFullscreenHelper_();\n        }\n        exitFullscreenHelper_() {\n            if (this.fsApi_.requestFullscreen) {\n                const promise = document[this.fsApi_.exitFullscreen]();\n                if (promise) {\n                    promise.then(() => this.isFullscreen(false));\n                }\n                return promise;\n            } else if (this.tech_.supportsFullScreen()) {\n                this.techCall_('exitFullScreen');\n            } else {\n                this.exitFullWindow();\n            }\n        }\n        enterFullWindow() {\n            this.isFullscreen(true);\n            this.isFullWindow = true;\n            this.docOrigOverflow = document.documentElement.style.overflow;\n            Events.on(document, 'keydown', this.boundFullWindowOnEscKey_);\n            document.documentElement.style.overflow = 'hidden';\n            Dom.addClass(document.body, 'vjs-full-window');\n            this.trigger('enterFullWindow');\n        }\n        fullWindowOnEscKey(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                if (this.isFullscreen() === true) {\n                    this.exitFullscreen();\n                } else {\n                    this.exitFullWindow();\n                }\n            }\n        }\n        exitFullWindow() {\n            this.isFullscreen(false);\n            this.isFullWindow = false;\n            Events.off(document, 'keydown', this.boundFullWindowOnEscKey_);\n            document.documentElement.style.overflow = this.docOrigOverflow;\n            Dom.removeClass(document.body, 'vjs-full-window');\n            this.trigger('exitFullWindow');\n        }\n        disablePictureInPicture(value) {\n            if (value === undefined) {\n                return this.techGet_('disablePictureInPicture');\n            }\n            this.techCall_('setDisablePictureInPicture', value);\n            this.options_.disablePictureInPicture = value;\n            this.trigger('disablepictureinpicturechanged');\n        }\n        isInPictureInPicture(isPiP) {\n            if (isPiP !== undefined) {\n                this.isInPictureInPicture_ = !!isPiP;\n                this.togglePictureInPictureClass_();\n                return;\n            }\n            return !!this.isInPictureInPicture_;\n        }\n        requestPictureInPicture() {\n            if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n                return this.techGet_('requestPictureInPicture');\n            }\n        }\n        exitPictureInPicture() {\n            if ('pictureInPictureEnabled' in document) {\n                return document.exitPictureInPicture();\n            }\n        }\n        handleKeyDown(event) {\n            const {userActions} = this.options_;\n            if (!userActions || !userActions.hotkeys) {\n                return;\n            }\n            const excludeElement = el => {\n                const tagName = el.tagName.toLowerCase();\n                if (el.isContentEditable) {\n                    return true;\n                }\n                const allowedInputTypes = [\n                    'button',\n                    'checkbox',\n                    'hidden',\n                    'radio',\n                    'reset',\n                    'submit'\n                ];\n                if (tagName === 'input') {\n                    return allowedInputTypes.indexOf(el.type) === -1;\n                }\n                const excludedTags = ['textarea'];\n                return excludedTags.indexOf(tagName) !== -1;\n            };\n            if (excludeElement(this.el_.ownerDocument.activeElement)) {\n                return;\n            }\n            if (typeof userActions.hotkeys === 'function') {\n                userActions.hotkeys.call(this, event);\n            } else {\n                this.handleHotkeys(event);\n            }\n        }\n        handleHotkeys(event) {\n            const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n            const {fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'), muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'), playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')} = hotkeys;\n            if (fullscreenKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const FSToggle = Component.getComponent('FullscreenToggle');\n                if (document[this.fsApi_.fullscreenEnabled] !== false) {\n                    FSToggle.prototype.handleClick.call(this, event);\n                }\n            } else if (muteKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const MuteToggle = Component.getComponent('MuteToggle');\n                MuteToggle.prototype.handleClick.call(this, event);\n            } else if (playPauseKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const PlayToggle = Component.getComponent('PlayToggle');\n                PlayToggle.prototype.handleClick.call(this, event);\n            }\n        }\n        canPlayType(type) {\n            let can;\n            for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n                const techName = j[i];\n                let tech = Tech.getTech(techName);\n                if (!tech) {\n                    tech = Component.getComponent(techName);\n                }\n                if (!tech) {\n                    log.error(`The \"${ techName }\" tech is undefined. Skipped browser support check for that tech.`);\n                    continue;\n                }\n                if (tech.isSupported()) {\n                    can = tech.canPlayType(type);\n                    if (can) {\n                        return can;\n                    }\n                }\n            }\n            return '';\n        }\n        selectSource(sources) {\n            const techs = this.options_.techOrder.map(techName => {\n                return [\n                    techName,\n                    Tech.getTech(techName)\n                ];\n            }).filter(([techName, tech]) => {\n                if (tech) {\n                    return tech.isSupported();\n                }\n                log.error(`The \"${ techName }\" tech is undefined. Skipped browser support check for that tech.`);\n                return false;\n            });\n            const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n                let found;\n                outerArray.some(outerChoice => {\n                    return innerArray.some(innerChoice => {\n                        found = tester(outerChoice, innerChoice);\n                        if (found) {\n                            return true;\n                        }\n                    });\n                });\n                return found;\n            };\n            let foundSourceAndTech;\n            const flip = fn => (a, b) => fn(b, a);\n            const finder = ([techName, tech], source) => {\n                if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n                    return {\n                        source,\n                        tech: techName\n                    };\n                }\n            };\n            if (this.options_.sourceOrder) {\n                foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n            } else {\n                foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n            }\n            return foundSourceAndTech || false;\n        }\n        src(source) {\n            if (typeof source === 'undefined') {\n                return this.cache_.src || '';\n            }\n            const sources = filterSource(source);\n            if (!sources.length) {\n                this.setTimeout(function () {\n                    this.error({\n                        code: 4,\n                        message: this.localize(this.options_.notSupportedMessage)\n                    });\n                }, 0);\n                return;\n            }\n            this.changingSrc_ = true;\n            this.cache_.sources = sources;\n            this.updateSourceCaches_(sources[0]);\n            middleware.setSource(this, sources[0], (middlewareSource, mws) => {\n                this.middleware_ = mws;\n                this.cache_.sources = sources;\n                this.updateSourceCaches_(middlewareSource);\n                const err = this.src_(middlewareSource);\n                if (err) {\n                    if (sources.length > 1) {\n                        return this.src(sources.slice(1));\n                    }\n                    this.changingSrc_ = false;\n                    this.setTimeout(function () {\n                        this.error({\n                            code: 4,\n                            message: this.localize(this.options_.notSupportedMessage)\n                        });\n                    }, 0);\n                    this.triggerReady();\n                    return;\n                }\n                middleware.setTech(mws, this.tech_);\n            });\n        }\n        src_(source) {\n            const sourceTech = this.selectSource([source]);\n            if (!sourceTech) {\n                return true;\n            }\n            if (!stringCases.titleCaseEquals(sourceTech.tech, this.techName_)) {\n                this.changingSrc_ = true;\n                this.loadTech_(sourceTech.tech, sourceTech.source);\n                this.tech_.ready(() => {\n                    this.changingSrc_ = false;\n                });\n                return false;\n            }\n            this.ready(function () {\n                if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n                    this.techCall_('setSource', source);\n                } else {\n                    this.techCall_('src', source.src);\n                }\n                this.changingSrc_ = false;\n            }, true);\n            return false;\n        }\n        load() {\n            this.techCall_('load');\n        }\n        reset() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (this.paused() || !PromiseClass) {\n                this.doReset_();\n            } else {\n                const playPromise = this.play();\n                promise.silencePromise(playPromise.then(() => this.doReset_()));\n            }\n        }\n        doReset_() {\n            if (this.tech_) {\n                this.tech_.clearTracks('text');\n            }\n            this.resetCache_();\n            this.poster('');\n            this.loadTech_(this.options_.techOrder[0], null);\n            this.techCall_('reset');\n            this.resetControlBarUI_();\n            ///if (evented.isEvented(this)) {\n                this.trigger('playerreset');\n            ///}\n        }\n        resetControlBarUI_() {\n            this.resetProgressBar_();\n            this.resetPlaybackRate_();\n            this.resetVolumeBar_();\n        }\n        resetProgressBar_() {\n            this.currentTime(0);\n            const {durationDisplay, remainingTimeDisplay} = this.controlBar;\n            if (durationDisplay) {\n                durationDisplay.updateContent();\n            }\n            if (remainingTimeDisplay) {\n                remainingTimeDisplay.updateContent();\n            }\n        }\n        resetPlaybackRate_() {\n            this.playbackRate(this.defaultPlaybackRate());\n            this.handleTechRateChange_();\n        }\n        resetVolumeBar_() {\n            this.volume(1);\n            this.trigger('volumechange');\n        }\n        currentSources() {\n            const source = this.currentSource();\n            const sources = [];\n            if (Object.keys(source).length !== 0) {\n                sources.push(source);\n            }\n            return this.cache_.sources || sources;\n        }\n        currentSource() {\n            return this.cache_.source || {};\n        }\n        currentSrc() {\n            return this.currentSource() && this.currentSource().src || '';\n        }\n        currentType() {\n            return this.currentSource() && this.currentSource().type || '';\n        }\n        preload(value) {\n            if (value !== undefined) {\n                this.techCall_('setPreload', value);\n                this.options_.preload = value;\n                return;\n            }\n            return this.techGet_('preload');\n        }\n        autoplay(value) {\n            if (value === undefined) {\n                return this.options_.autoplay || false;\n            }\n            let techAutoplay;\n            if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n                this.options_.autoplay = value;\n                this.manualAutoplay_(value);\n                techAutoplay = false;\n            } else if (!value) {\n                this.options_.autoplay = false;\n            } else {\n                this.options_.autoplay = true;\n            }\n            techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n            if (this.tech_) {\n                this.techCall_('setAutoplay', techAutoplay);\n            }\n        }\n        playsinline(value) {\n            if (value !== undefined) {\n                this.techCall_('setPlaysinline', value);\n                this.options_.playsinline = value;\n                return this;\n            }\n            return this.techGet_('playsinline');\n        }\n        loop(value) {\n            if (value !== undefined) {\n                this.techCall_('setLoop', value);\n                this.options_.loop = value;\n                return;\n            }\n            return this.techGet_('loop');\n        }\n        poster(src) {\n            if (src === undefined) {\n                return this.poster_;\n            }\n            if (!src) {\n                src = '';\n            }\n            if (src === this.poster_) {\n                return;\n            }\n            this.poster_ = src;\n            this.techCall_('setPoster', src);\n            this.isPosterFromTech_ = false;\n            this.trigger('posterchange');\n        }\n        handleTechPosterChange_() {\n            if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n                const newPoster = this.tech_.poster() || '';\n                if (newPoster !== this.poster_) {\n                    this.poster_ = newPoster;\n                    this.isPosterFromTech_ = true;\n                    this.trigger('posterchange');\n                }\n            }\n        }\n        controls(bool) {\n            if (bool === undefined) {\n                return !!this.controls_;\n            }\n            bool = !!bool;\n            if (this.controls_ === bool) {\n                return;\n            }\n            this.controls_ = bool;\n            if (this.usingNativeControls()) {\n                this.techCall_('setControls', bool);\n            }\n            if (this.controls_) {\n                this.removeClass('vjs-controls-disabled');\n                this.addClass('vjs-controls-enabled');\n                this.trigger('controlsenabled');\n                if (!this.usingNativeControls()) {\n                    this.addTechControlsListeners_();\n                }\n            } else {\n                this.removeClass('vjs-controls-enabled');\n                this.addClass('vjs-controls-disabled');\n                this.trigger('controlsdisabled');\n                if (!this.usingNativeControls()) {\n                    this.removeTechControlsListeners_();\n                }\n            }\n        }\n        usingNativeControls(bool) {\n            if (bool === undefined) {\n                return !!this.usingNativeControls_;\n            }\n            bool = !!bool;\n            if (this.usingNativeControls_ === bool) {\n                return;\n            }\n            this.usingNativeControls_ = bool;\n            if (this.usingNativeControls_) {\n                this.addClass('vjs-using-native-controls');\n                this.trigger('usingnativecontrols');\n            } else {\n                this.removeClass('vjs-using-native-controls');\n                this.trigger('usingcustomcontrols');\n            }\n        }\n        error(err) {\n            if (err === undefined) {\n                return this.error_ || null;\n            }\n            if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n                const triggerSuppressedError = function () {\n                    this.error(err);\n                };\n                this.options_.suppressNotSupportedError = false;\n                this.any([\n                    'click',\n                    'touchstart'\n                ], triggerSuppressedError);\n                this.listenToOnce('loadstart', function () {\n                    this.unlistenTo([\n                        'click',\n                        'touchstart'\n                    ], triggerSuppressedError);\n                });\n                return;\n            }\n            if (err === null) {\n                this.error_ = err;\n                this.removeClass('vjs-error');\n                if (this.errorDisplay) {\n                    this.errorDisplay.close();\n                }\n                return;\n            }\n            this.error_ = new MediaError(err);\n            this.addClass('vjs-error');\n            log.error(`(CODE:${ this.error_.code } ${ MediaError.errorTypes[this.error_.code] })`, this.error_.message, this.error_);\n            this.trigger('error');\n            return;\n        }\n        reportUserActivity(event) {\n            this.userActivity_ = true;\n        }\n        userActive(bool) {\n            if (bool === undefined) {\n                return this.userActive_;\n            }\n            bool = !!bool;\n            if (bool === this.userActive_) {\n                return;\n            }\n            this.userActive_ = bool;\n            if (this.userActive_) {\n                this.userActivity_ = true;\n                this.removeClass('vjs-user-inactive');\n                this.addClass('vjs-user-active');\n                this.trigger('useractive');\n                return;\n            }\n            if (this.tech_) {\n                this.tech_.one('mousemove', function (e) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                });\n            }\n            this.userActivity_ = false;\n            this.removeClass('vjs-user-active');\n            this.addClass('vjs-user-inactive');\n            this.trigger('userinactive');\n        }\n        listenForUserActivity_() {\n            let mouseInProgress;\n            let lastMoveX;\n            let lastMoveY;\n            const handleActivity = Fn.bind(this, this.reportUserActivity);\n            const handleMouseMove = function (e) {\n                if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n                    lastMoveX = e.screenX;\n                    lastMoveY = e.screenY;\n                    handleActivity();\n                }\n            };\n            const handleMouseDown = function () {\n                handleActivity();\n                this.clearInterval(mouseInProgress);\n                mouseInProgress = this.setInterval(handleActivity, 250);\n            };\n            const handleMouseUpAndMouseLeave = function (event) {\n                handleActivity();\n                this.clearInterval(mouseInProgress);\n            };\n            this.listenTo('mousedown', handleMouseDown);\n            this.listenTo('mousemove', handleMouseMove);\n            this.listenTo('mouseup', handleMouseUpAndMouseLeave);\n            this.listenTo('mouseleave', handleMouseUpAndMouseLeave);\n            const controlBar = this.getChild('controlBar');\n            if (controlBar && !browser.IS_IOS && !browser.IS_ANDROID) {\n                this.listenTo(controlBar,'mouseenter', function (event) {\n                    this.cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n                    this.options_.inactivityTimeout = 0;\n                });\n                this.listenTo(controlBar,'mouseleave', function (event) {\n                    this.options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n                });\n            }\n            this.listenTo('keydown', handleActivity);\n            this.listenTo('keyup', handleActivity);\n            let inactivityTimeout;\n            this.setInterval(function () {\n                if (!this.userActivity_) {\n                    return;\n                }\n                this.userActivity_ = false;\n                this.userActive(true);\n                this.clearTimeout(inactivityTimeout);\n                const timeout = this.options_.inactivityTimeout;\n                if (timeout <= 0) {\n                    return;\n                }\n                inactivityTimeout = this.setTimeout(function () {\n                    if (!this.userActivity_) {\n                        this.userActive(false);\n                    }\n                }, timeout);\n            }, 250);\n        }\n        playbackRate(rate) {\n            if (rate !== undefined) {\n                this.techCall_('setPlaybackRate', rate);\n                return;\n            }\n            if (this.tech_ && this.tech_.featuresPlaybackRate) {\n                return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n            }\n            return 1;\n        }\n        defaultPlaybackRate(rate) {\n            if (rate !== undefined) {\n                return this.techCall_('setDefaultPlaybackRate', rate);\n            }\n            if (this.tech_ && this.tech_.featuresPlaybackRate) {\n                return this.techGet_('defaultPlaybackRate');\n            }\n            return 1;\n        }\n        isAudio(bool) {\n            if (bool !== undefined) {\n                this.isAudio_ = !!bool;\n                return;\n            }\n            return !!this.isAudio_;\n        }\n        addTextTrack(kind, label, language) {\n            if (this.tech_) {\n                return this.tech_.addTextTrack(kind, label, language);\n            }\n        }\n        addRemoteTextTrack(options, manualCleanup) {\n            if (this.tech_) {\n                return this.tech_.addRemoteTextTrack(options, manualCleanup);\n            }\n        }\n        removeRemoteTextTrack(obj = {}) {\n            let {track} = obj;\n            if (!track) {\n                track = obj;\n            }\n            if (this.tech_) {\n                return this.tech_.removeRemoteTextTrack(track);\n            }\n        }\n        getVideoPlaybackQuality() {\n            return this.techGet_('getVideoPlaybackQuality');\n        }\n        videoWidth() {\n            return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n        }\n        videoHeight() {\n            return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n        }\n        language(code) {\n            if (code === undefined) {\n                return this.language_;\n            }\n            if (this.language_ !== String(code).toLowerCase()) {\n                this.language_ = String(code).toLowerCase();\n                ///if (evented.isEvented(this)) {\n                    this.trigger('languagechange');\n                ///}\n            }\n        }\n        languages() {\n            return mergeOptions(Player.prototype.options_.languages, this.languages_);\n        }\n        toJSON() {\n            const options = mergeOptions(this.options_);\n            const tracks = options.tracks;\n            options.tracks = [];\n            for (let i = 0; i < tracks.length; i++) {\n                let track = tracks[i];\n                track = mergeOptions(track);\n                track.player = undefined;\n                options.tracks[i] = track;\n            }\n            return options;\n        }\n        createModal(content, options) {\n            options = options || {};\n            options.content = content || '';\n            const modal = new ModalDialog(this, options);\n            this.addChild(modal);\n            modal.on('dispose', () => {\n                this.removeChild(modal);\n            });\n            modal.open();\n            return modal;\n        }\n        updateCurrentBreakpoint_() {\n            if (!this.responsive()) {\n                return;\n            }\n            const currentBreakpoint = this.currentBreakpoint();\n            const currentWidth = this.currentWidth();\n            for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n                const candidateBreakpoint = BREAKPOINT_ORDER[i];\n                const maxWidth = this.breakpoints_[candidateBreakpoint];\n                if (currentWidth <= maxWidth) {\n                    if (currentBreakpoint === candidateBreakpoint) {\n                        return;\n                    }\n                    if (currentBreakpoint) {\n                        this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n                    }\n                    this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n                    this.breakpoint_ = candidateBreakpoint;\n                    break;\n                }\n            }\n        }\n        removeCurrentBreakpoint_() {\n            const className = this.currentBreakpointClass();\n            this.breakpoint_ = '';\n            if (className) {\n                this.removeClass(className);\n            }\n        }\n        breakpoints(breakpoints) {\n            if (breakpoints === undefined) {\n                return obj.assign(this.breakpoints_);\n            }\n            this.breakpoint_ = '';\n            this.breakpoints_ = obj.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n            this.updateCurrentBreakpoint_();\n            return obj.assign(this.breakpoints_);\n        }\n        responsive(value) {\n            if (value === undefined) {\n                return this.responsive_;\n            }\n            value = Boolean(value);\n            const current = this.responsive_;\n            if (value === current) {\n                return;\n            }\n            this.responsive_ = value;\n            if (value) {\n                this.listenTo('playerresize', this.updateCurrentBreakpoint_);\n                this.updateCurrentBreakpoint_();\n            } else {\n                this.unlistenTo('playerresize', this.updateCurrentBreakpoint_);\n                this.removeCurrentBreakpoint_();\n            }\n            return value;\n        }\n        currentBreakpoint() {\n            return this.breakpoint_;\n        }\n        currentBreakpointClass() {\n            return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n        }\n        loadMedia(media, ready) {\n            if (!media || typeof media !== 'object') {\n                return;\n            }\n            this.reset();\n            this.cache_.media = mergeOptions(media);\n            const {artwork, poster, src, textTracks} = this.cache_.media;\n            if (!artwork && poster) {\n                this.cache_.media.artwork = [{\n                        src: poster,\n                        type: mimetypes.getMimetype(poster)\n                    }];\n            }\n            if (src) {\n                this.src(src);\n            }\n            if (poster) {\n                this.poster(poster);\n            }\n            if (Array.isArray(textTracks)) {\n                textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n            }\n            this.ready(ready);\n        }\n        getMedia() {\n            if (!this.cache_.media) {\n                const poster = this.poster();\n                const src = this.currentSources();\n                const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n                    kind: tt.kind,\n                    label: tt.label,\n                    language: tt.language,\n                    src: tt.src\n                }));\n                const media = {\n                    src,\n                    textTracks\n                };\n                if (poster) {\n                    media.poster = poster;\n                    media.artwork = [{\n                            src: media.poster,\n                            type: mimetypes.getMimetype(media.poster)\n                        }];\n                }\n                return media;\n            }\n            return mergeOptions(this.cache_.media);\n        }\n        static getTagSettings(tag) {\n            const baseOptions = {\n                sources: [],\n                tracks: []\n            };\n            const tagOptions = Dom.getAttributes(tag);\n            const dataSetup = tagOptions['data-setup'];\n            if (Dom.hasClass(tag, 'vjs-fill')) {\n                tagOptions.fill = true;\n            }\n            if (Dom.hasClass(tag, 'vjs-fluid')) {\n                tagOptions.fluid = true;\n            }\n            if (dataSetup !== null) {\n                const [err, data] = safeParseTuple(dataSetup || '{}');\n                if (err) {\n                    log.error(err);\n                }\n                obj.assign(tagOptions, data);\n            }\n            obj.assign(baseOptions, tagOptions);\n            if (tag.hasChildNodes()) {\n                const children = tag.childNodes;\n                for (let i = 0, j = children.length; i < j; i++) {\n                    const child = children[i];\n                    const childName = child.nodeName.toLowerCase();\n                    if (childName === 'source') {\n                        baseOptions.sources.push(Dom.getAttributes(child));\n                    } else if (childName === 'track') {\n                        baseOptions.tracks.push(Dom.getAttributes(child));\n                    }\n                }\n            }\n            return baseOptions;\n        }\n        flexNotSupported_() {\n            const elem = document.createElement('i');\n            return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || 'msFlexOrder' in elem.style);\n        }\n        debug(enabled) {\n            if (enabled === undefined) {\n                return this.debugEnabled_;\n            }\n            if (enabled) {\n                this.trigger('debugon');\n                this.previousLogLevel_ = this.log.level;\n                this.log.level('debug');\n                this.debugEnabled_ = true;\n            } else {\n                this.trigger('debugoff');\n                this.log.level(this.previousLogLevel_);\n                this.previousLogLevel_ = undefined;\n                this.debugEnabled_ = false;\n            }\n        }\n    }\n    TRACK_TYPES.ALL.names.forEach(function (name) {\n        const props = TRACK_TYPES.ALL[name];\n        Player.prototype[props.getterName] = function () {\n            if (this.tech_) {\n                return this.tech_[props.getterName]();\n            }\n            this[props.privateName] = this[props.privateName] || new props.ListClass();\n            return this[props.privateName];\n        };\n    });\n    Player.prototype.crossorigin = Player.prototype.crossOrigin;\n    Player.players = {};\n    const navigator = window.navigator;\n    Player.prototype.options_ = {\n        techOrder: Tech.defaultTechOrder_,\n        html5: {},\n        inactivityTimeout: 2000,\n        playbackRates: [],\n        liveui: false,\n        children: [\n            'mediaLoader',\n            'posterImage',\n            'textTrackDisplay',\n            'loadingSpinner',\n            'bigPlayButton',\n            'liveTracker',\n            'controlBar',\n            'errorDisplay',\n            'textTrackSettings',\n            'resizeManager'\n        ],\n        language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n        languages: {},\n        notSupportedMessage: 'No compatible source was found for this media.',\n        fullscreen: { options: { navigationUI: 'hide' } },\n        breakpoints: {},\n        responsive: false\n    };\n    [\n        'ended',\n        'seeking',\n        'seekable',\n        'networkState',\n        'readyState'\n    ].forEach(function (fn) {\n        Player.prototype[fn] = function () {\n            return this.techGet_(fn);\n        };\n    });\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n        Player.prototype[`handleTech${ stringCases.toTitleCase(event) }_`] = function () {\n            return this.trigger(event);\n        };\n    });\n    Component.registerComponent('Player', Player);\n    return Player;\n});\ndefine('skylark-videojs/plugin',[\n    ///'./mixins/evented',\n    './mixins/stateful',\n    './utils/events',\n    './utils/fn',\n    './utils/log',\n    \"./event-target\",\n    './player'\n], function ( stateful, Events, Fn, log, EventTarget, Player) {\n    'use strict';\n    const BASE_PLUGIN_NAME = 'plugin';\n    const PLUGIN_CACHE_KEY = 'activePlugins_';\n    const pluginStorage = {};\n    const pluginExists = name => pluginStorage.hasOwnProperty(name);\n    const getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n    const markPluginAsActive = (player, name) => {\n        player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n        player[PLUGIN_CACHE_KEY][name] = true;\n    };\n    const triggerSetupEvent = (player, hash, before) => {\n        const eventName = (before ? 'before' : '') + 'pluginsetup';\n        player.trigger(eventName, hash);\n        player.trigger(eventName + ':' + hash.name, hash);\n    };\n    const createBasicPlugin = function (name, plugin) {\n        const basicPluginWrapper = function () {\n            triggerSetupEvent(this, {\n                name,\n                plugin,\n                instance: null\n            }, true);\n            const instance = plugin.apply(this, arguments);\n            markPluginAsActive(this, name);\n            triggerSetupEvent(this, {\n                name,\n                plugin,\n                instance\n            });\n            return instance;\n        };\n        Object.keys(plugin).forEach(function (prop) {\n            basicPluginWrapper[prop] = plugin[prop];\n        });\n        return basicPluginWrapper;\n    };\n    const createPluginFactory = (name, PluginSubClass) => {\n        PluginSubClass.prototype.name = name;\n        return function (...args) {\n            triggerSetupEvent(this, {\n                name,\n                plugin: PluginSubClass,\n                instance: null\n            }, true);\n            const instance = new PluginSubClass(...[\n                this,\n                ...args\n            ]);\n            this[name] = () => instance;\n            triggerSetupEvent(this, instance.getEventHash());\n            return instance;\n        };\n    };\n    class Plugin  extends EventTarget{\n        constructor(player) {\n            if (this.constructor === Plugin) {\n                throw new Error('Plugin must be sub-classed; not directly instantiated.');\n            }\n            this.player = player;\n            if (!this.log) {\n                this.log = this.player.log.createLogger(this.name);\n            }\n            ///evented(this);\n            ///delete this.trigger;\n            stateful(this, this.constructor.defaultState);\n            markPluginAsActive(player, this.name);\n            this.dispose = Fn.bind(this, this.dispose);\n            player.on('dispose', this.dispose);\n        }\n        version() {\n            return this.constructor.VERSION;\n        }\n        /*\n        getEventHash(hash = {}) {\n            hash.name = this.name;\n            hash.plugin = this.constructor;\n            hash.instance = this;\n            return hash;\n        }\n        trigger(event, hash = {}) {\n            return Events.trigger(this.eventBusEl_, event, this.getEventHash(hash));\n        }\n        */\n        handleStateChanged(e) {\n        }\n        dispose() {\n            const {name, player} = this;\n            this.trigger('dispose');\n            this.unlistenTo();\n            player.off('dispose', this.dispose);\n            player[PLUGIN_CACHE_KEY][name] = false;\n            this.player = this.state = null;\n            player[name] = createPluginFactory(name, pluginStorage[name]);\n        }\n        static isBasic(plugin) {\n            const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n            return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n        }\n        static registerPlugin(name, plugin) {\n            if (typeof name !== 'string') {\n                throw new Error(`Illegal plugin name, \"${ name }\", must be a string, was ${ typeof name }.`);\n            }\n            if (pluginExists(name)) {\n                log.warn(`A plugin named \"${ name }\" already exists. You may want to avoid re-registering plugins!`);\n            } else if (Player.prototype.hasOwnProperty(name)) {\n                throw new Error(`Illegal plugin name, \"${ name }\", cannot share a name with an existing player method!`);\n            }\n            if (typeof plugin !== 'function') {\n                throw new Error(`Illegal plugin for \"${ name }\", must be a function, was ${ typeof plugin }.`);\n            }\n            pluginStorage[name] = plugin;\n            if (name !== BASE_PLUGIN_NAME) {\n                if (Plugin.isBasic(plugin)) {\n                    Player.prototype[name] = createBasicPlugin(name, plugin);\n                } else {\n                    Player.prototype[name] = createPluginFactory(name, plugin);\n                }\n            }\n            return plugin;\n        }\n        static deregisterPlugin(name) {\n            if (name === BASE_PLUGIN_NAME) {\n                throw new Error('Cannot de-register base plugin.');\n            }\n            if (pluginExists(name)) {\n                delete pluginStorage[name];\n                delete Player.prototype[name];\n            }\n        }\n        static getPlugins(names = Object.keys(pluginStorage)) {\n            let result;\n            names.forEach(name => {\n                const plugin = getPlugin(name);\n                if (plugin) {\n                    result = result || {};\n                    result[name] = plugin;\n                }\n            });\n            return result;\n        }\n        static getPluginVersion(name) {\n            const plugin = getPlugin(name);\n            return plugin && plugin.VERSION || '';\n        }\n    }\n    Plugin.getPlugin = getPlugin;\n    Plugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n    Plugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n    Player.prototype.usingPlugin = function (name) {\n        return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n    };\n    Player.prototype.hasPlugin = function (name) {\n        return !!pluginExists(name);\n    };\n    return Plugin;\n});\ndefine('skylark-videojs/video',[\n    \"skylark-langx-globals/window\",\n    'skylark-net-http/xhr',\n    './setup',\n    './utils/stylesheet',\n    './component',\n    './event-target',\n    './utils/events',\n    './player',\n    './plugin',\n    './utils/merge-options',\n    './utils/fn',\n    './tracks/text-track',\n    './tracks/audio-track',\n    './tracks/video-track',\n    './utils/time-ranges',\n    './utils/format-time',\n    './utils/log',\n    './utils/dom',\n    './utils/browser',\n    './utils/url',\n    './utils/obj',\n    './utils/computed-style',\n    ///'./extend',\n    './tech/tech',\n    './tech/middleware',\n    './utils/define-lazy-property'\n], function (\n    window,\n    xhr,\n    setup, \n    stylesheet, \n    Component, \n    EventTarget, \n    Events, \n    Player, \n    Plugin, \n    mergeOptions, \n    Fn, \n    TextTrack, \n    AudioTrack, \n    VideoTrack, \n    timeRanges, \n    formatTime, \n    log, \n    Dom, \n    browser, \n    Url, \n    obj, \n    computedStyle, \n    ///extend, \n    Tech, \n    middleware, \n    defineLazyProperty\n) {\n    'use strict';\n\n    var middlewareUse = middleware.use,\n        TERMINATOR = middleware.TERMINATOR;\n\n\n    const normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n    function videojs(id, options, ready) {\n        let player = videojs.getPlayer(id);\n        if (player) {\n            if (options) {\n                log.warn(`Player \"${ id }\" is already initialised. Options will not be applied.`);\n            }\n            if (ready) {\n                player.ready(ready);\n            }\n            return player;\n        }\n        const el = typeof id === 'string' ? Dom.$('#' + normalizeId(id)) : id;\n        if (!Dom.isEl(el)) {\n            throw new TypeError('The element or ID supplied is not valid. (videojs)');\n        }\n        if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n            log.warn('The element supplied is not included in the DOM');\n        }\n        options = options || {};\n        videojs.hooks('beforesetup').forEach(hookFunction => {\n            const opts = hookFunction(el, mergeOptions(options));\n            if (!obj.isObject(opts) || Array.isArray(opts)) {\n                log.error('please return an object in beforesetup hooks');\n                return;\n            }\n            options = mergeOptions(options, opts);\n        });\n        const PlayerComponent = Component.getComponent('Player');\n        player = new PlayerComponent(el, options, ready);\n        videojs.hooks('setup').forEach(hookFunction => hookFunction(player));\n        return player;\n    }\n    videojs.hooks_ = {};\n    videojs.hooks = function (type, fn) {\n        videojs.hooks_[type] = videojs.hooks_[type] || [];\n        if (fn) {\n            videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n        }\n        return videojs.hooks_[type];\n    };\n    videojs.hook = function (type, fn) {\n        videojs.hooks(type, fn);\n    };\n    videojs.hookOnce = function (type, fn) {\n        videojs.hooks(type, [].concat(fn).map(original => {\n            const wrapper = (...args) => {\n                videojs.removeHook(type, wrapper);\n                return original(...args);\n            };\n            return wrapper;\n        }));\n    };\n    videojs.removeHook = function (type, fn) {\n        const index = videojs.hooks(type).indexOf(fn);\n        if (index <= -1) {\n            return false;\n        }\n        videojs.hooks_[type] = videojs.hooks_[type].slice();\n        videojs.hooks_[type].splice(index, 1);\n        return true;\n    };\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && Dom.isReal()) {\n        let style = Dom.$('.vjs-styles-defaults');\n        if (!style) {\n            style = stylesheet.createStyleElement('vjs-styles-defaults');\n            const head = Dom.$('head');\n            if (head) {\n                head.insertBefore(style, head.firstChild);\n            }\n            stylesheet.setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid {\n        padding-top: 56.25%\n      }\n    `);\n        }\n    }\n    setup.autoSetupTimeout(1, videojs);\n    videojs.VERSION = \"7.11.5\";\n    videojs.options = Player.prototype.options_;\n    videojs.getPlayers = () => Player.players;\n    videojs.getPlayer = id => {\n        const players = Player.players;\n        let tag;\n        if (typeof id === 'string') {\n            const nId = normalizeId(id);\n            const player = players[nId];\n            if (player) {\n                return player;\n            }\n            tag = Dom.$('#' + nId);\n        } else {\n            tag = id;\n        }\n        if (Dom.isEl(tag)) {\n            const {player, playerId} = tag;\n            if (player || players[playerId]) {\n                return player || players[playerId];\n            }\n        }\n    };\n    videojs.getAllPlayers = () => Object.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\n    videojs.players = Player.players;\n    videojs.getComponent = Component.getComponent;\n    videojs.registerComponent = (name, comp) => {\n        if (Tech.isTech(comp)) {\n            log.warn(`The ${ name } tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n        }\n        Component.registerComponent.call(Component, name, comp);\n    };\n    videojs.getTech = Tech.getTech;\n    videojs.registerTech = Tech.registerTech;\n    videojs.use = middlewareUse;\n    Object.defineProperty(videojs, 'middleware', {\n        value: {},\n        writeable: false,\n        enumerable: true\n    });\n    Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n        value: TERMINATOR,\n        writeable: false,\n        enumerable: true\n    });\n    videojs.browser = browser;\n    videojs.TOUCH_ENABLED = browser.TOUCH_ENABLED;\n    ///videojs.extend = extend;\n    videojs.mergeOptions = mergeOptions;\n    videojs.bind = Fn.bind;\n    videojs.registerPlugin = Plugin.registerPlugin;\n    videojs.deregisterPlugin = Plugin.deregisterPlugin;\n    videojs.plugin = (name, plugin) => {\n        log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n        return Plugin.registerPlugin(name, plugin);\n    };\n    videojs.getPlugins = Plugin.getPlugins;\n    videojs.getPlugin = Plugin.getPlugin;\n    videojs.getPluginVersion = Plugin.getPluginVersion;\n    videojs.addLanguage = function (code, data) {\n        code = ('' + code).toLowerCase();\n        videojs.options.languages = mergeOptions(videojs.options.languages, { [code]: data });\n        return videojs.options.languages[code];\n    };\n    videojs.log = log;\n    videojs.createLogger = log.createLogger;\n    videojs.createTimeRange = videojs.undefined = timeRanges.createTimeRanges;\n    videojs.formatTime = formatTime;\n    videojs.setFormatTime = formatTime.setFormatTime;\n    videojs.resetFormatTime = formatTime.resetFormatTime;\n    videojs.parseUrl = Url.parseUrl;\n    videojs.isCrossOrigin = Url.isCrossOrigin;\n    videojs.EventTarget = EventTarget;\n    videojs.on = Events.on;\n    videojs.one = Events.one;\n    videojs.off = Events.off;\n    videojs.trigger = Events.trigger;\n    videojs.xhr = xhr;\n    videojs.TextTrack = TextTrack;\n    videojs.AudioTrack = AudioTrack;\n    videojs.VideoTrack = VideoTrack;\n    [\n        'isEl',\n        'isTextNode',\n        'createEl',\n        'hasClass',\n        'addClass',\n        'removeClass',\n        'toggleClass',\n        'setAttributes',\n        'getAttributes',\n        'emptyEl',\n        'appendContent',\n        'insertContent'\n    ].forEach(k => {\n        videojs[k] = function () {\n            log.warn(`videojs.${ k }() is deprecated; use videojs.dom.${ k }() instead`);\n            return Dom[k].apply(null, arguments);\n        };\n    });\n    videojs.computedStyle = computedStyle;\n    videojs.dom = Dom;\n    videojs.url = Url;\n    videojs.defineLazyProperty = defineLazyProperty;\n    return videojs;\n});\ndefine('skylark-videojs/main',[\n\t'skylark-langx/skylark',\n    './video'\n//    '@videojs/http-streaming'\n], function (skylark,videojs) {\n    'use strict';\n\n    return skylark.attach(\"intg.videojs\",videojs);\n});\ndefine('skylark-videojs', ['skylark-videojs/main'], function (main) { return main; });\n\n"]}