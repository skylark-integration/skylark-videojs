{"version":3,"sources":["skylark-videojs.js"],"names":["define","skylark","types","objects","arrays","funcs","Deferred","Evented","http","each","mixin","noop","isArray","isFunction","isPlainObject","type","getAbsoluteUrl","url","a","document","createElement","href","Xhr","jsonpID","key","name","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","async","beforeSend","success","error","complete","context","global","accepts","script","json","xml","html","text","crossDomain","timeout","processData","cache","traditional","xhrFields","withCredentials","mimeToDataType","mime","split","test","appendQuery","query","replace","serializeData","options","data","param","toUpperCase","undefined","serialize","params","obj","scope","t","array","hash","value","add","this","push","encodeURIComponent","join","inherit","klassName","_request","args","_","self","xhr","XMLHttpRequest","call","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","deferred","contentType","indexOf","overrideMimeType","responseType","finish","onloadend","onabort","onprogress","ontimeout","result","status","startsWith","getResponseHeader","eval","responseText","responseXML","JSON","parse","response","reponse","e","reject","resolve","Error","statusText","evt","notify","open","toLowerCase","setRequestHeader","send","promise","abort","request","get","post","patch","put","del","init","forEach","defaultOptions","FullscreenApi","prefixed","apiMap","specApi","browserApi","i","length","history","createLogger","logByType","level","log","lvl","levels","lvlRegExp","RegExp","unshift","concat","splice","window","console","fn","info","Array","LogByTypeFactory","subname","all","off","debug","warn","DEFAULT","hasOwnProperty","filter","fname","historyItem","clear","disable","enable","langx","object","reduce","assign","isObject","isPlain","el","prop","getComputedStyle","computedStyleValue","getPropertyValue","isReal","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPOD","IOS_VERSION","match","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","version","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","Boolean","maxTouchPoints","DocumentTouch","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI","domx","fs","computedStyle","browser","isNonBlankString","str","trim","isEl","nodeType","createQuerier","method","selector","querySelector","ctx","findPosition","offsetParent","left","top","width","height","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","normalizeContent","content","map","createTextNode","noder","isElement","isInFrame","createEl","tagName","properties","attributes","append","textContent","prependTo","child","parent","prepend","hasClass","styler","addClass","removeClass","toggleClass","toogleClass","setAttributes","attr","getAttributes","tag","knownBooleans","attrs","attrName","attrVal","getAttribute","setAttribute","removeAttribute","removeAttr","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","geom","pageRect","getPointerPosition","event","translated","x","y","item","nodeName","transform","values","slice","Number","position","boxTarget","target","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","Math","max","min","isTextNode","emptyEl","empty","appendContent","insertContent","isSingleLeftClick","button","buttons","$","finder","find","$$","findAll","Dom","videojs","_windowLoaded","autoSetup","vids","prototype","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","hasLoaded","createStyleElement","className","style","setTextContent","styleSheet","cssText","_initialGuid","_guid","newGUID","resetGuidInTestsOnly","Guid","FakeWeakMap","WeakMap","[object Object]","vdata","floor","performance","now","Date","access","DomData","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","documentElement","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","on","eventer","trigger","one","any","GUID","UPDATE_REFRESH_INTERVAL","bind","uid","guid","bound","throttle","last","debounce","func","immediate","debounced","arguments","later","apply","clearTimeout","cancel","Emitter","Events","EventTarget","EVENT_MAP","dispatchEvent","queueTrigger","Map","set","oldTimeout","delete","size","Fn","Obj","objName","name_","constructor","isEvented","eventBusEl_","every","isValidEventType","validateTarget","fnName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","removeListenerOnDispose","unlistenTo","removeRemoverOnTargetDispose","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","callback","addEventedCallback","StatefulMixin","state","stateUpdates","changes","from","to","defaultState","handleStateChanged","toTitleCase","string","w","titleCaseEquals","str1","str2","mergeOptions","sources","source","map_","has","thisArg","Set","set_","Widget","stateful","stringCases","Component","events","el_","isNativeEvent","super","isString","listenTo","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","bubbles","dispose","removeChild","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","index","ret","contentEl_","names","acc","n","currentChild","getChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","contentEl","insertBefore","childFound","compEl","children","parentOptions","handleAdd","opts","playerOptions","newChild","addChild","workingChildren","Tech","Object","keys","some","wchild","c","isTech","sync","isReady_","readyQueue","classToCheck","classToAdd","classToRemove","classToToggle","predicate","attribute","num","skipListeners","dimension","widthOrHeight","val","pxIndex","parseInt","computedWidthOrHeight","isNaN","rule","currentDimension","blur","handleKeyDown","touchStart","firstTouch","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","supportsRaf_","requestAnimationFrame","cancelAnimationFrame","listenToOnce","idName","cancelName","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","registerComponent","getRange","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","start","end","createTimeRanges","timeRages","bufferedPercent","buffered","duration","bufferedDuration","createTimeRange","MediaError","message","defaultMessages","errorTypes","1","2","3","4","5","errNum","reviver","err","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTracksToJson","tech","trackEls","trackObjs","trackEl","src","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","searchInput","hasKeyCode","search","String","foundNamedKey","codes","aliases","charCodeAt","isEventKey","nameOrCode","exports","backspace","tab","enter","ctrl","alt","pause/break","caps lock","esc","space","page up","page down","home","up","right","down","insert","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","option","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","cmd","fromCharCode","title","alias","keycode","MODAL_CLASS_NAME","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","appendChild","buildCSSClass","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","localize","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","controls","show","conditionalFocus_","hide","conditionalBlur_","temporary","closeable_","close","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","closeButton","content_","activeEl","activeElement","playerEl","contains","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","tracks","tracks_","defineProperty","addTrack","labelchange_","rtrack","l","allowedEvents_","change","addtrack","removetrack","labelchange","disableOthers","list","enabled","changing_","enabledChange_","removeTrack","selected","selectedChange_","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","trackElements","trackElements_","addTrackElement_","trackElement","trackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","disabled","hidden","showing","trackProps","newLabel","parseUrl","props","addToBody","host","protocol","div","innerHTML","firstChild","details","location","getAbsoluteURL","getFileExtension","path","splitPathRe","pathParts","isCrossOrigin","winLoc","urlInfo","_xhr","parseHeaders","row","initParams","uri","createXHR","_createXHR","called","errorFunc","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","useXDR","firefoxBugTakenEffect","getXml","isJson","getBody","rawRequest","getAllResponseHeaders","cors","XDomainRequest","stringify","onreadystatechange","onload","onerror","username","isEmpty","iterator","forEachArray","vtt","TrackEnums","Track","XHR","merge","parseCues","srcContent","parser","WebVTT","Parser","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","tech_","responseBody","loaded_","TextTrack","settings","srclang","mode","default_","default","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","isDisposed","defineProperties","newMode","ct","currentTime","active","originalCue","VTTCue","originalCue_","removeCue","cuechange","newEnabled","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","AudioTrackList","VideoTrackList","TextTrackList","HtmlTrackElementList","AudioTrack","VideoTrack","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","buffer","TRACK_TYPES","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","emitTapEvents","triggerSourceset","listenToDurationChange","manualProgress","trackProgress","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","currentTimeInterval","manuallyTriggered","clearTracks","manualProgressOff","manualTimeUpdatesOff","removeRemoteTextTrack","error_","trackListChanges","addWebVttScript_","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","createTrackHelper","manualCleanup","htmlTrackElement","createRemoteTextTrack","remoteTextTrackEls","getTrackElementByTrack_","removeTrackElement_","PromiseClass","Promise","srcObj","canPlayType","techs_","canPlaySource","defaultTechOrder_","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","handlers","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","cleanupAutoTextTracks","registerTech","middlewares","middlewareInstances","TERMINATOR","middlewareIterator","mw","setSourceHelper","middleware","next","lastRun","mwFactory","mwrest","mws","mwf","mwi","getOrCreateFactory","_src","use","getMiddleware","setTech","reduceRight","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","muted","played","seekable","volume","allowedSetters","setCurrentTime","setMuted","setVolume","allowedMediators","clearCacheForPlayer","Url","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","s","mimetypes","filterSource","newsrc","srcobj","fixSource","MediaLoader","j","techOrder","techName","getTech","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleMouseOver","handleMouseOut","clickHandler","PosterImage","update","poster","setSrc","backgroundImage","sourceIsEncrypted","usingPlugin","eme","sessions","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","modes","trackList","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","processCues","allowMultipleShowingTracks","clearDisplay","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","cueEl","updateDisplayState","dom","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","m","h","gm","gh","Infinity","implementation","formatTime","setFormatTime","customImplementation","resetFormatTime","TimeDisplay","updateContent","updateTextNode_","labelText_","textNode_","time","formattedTime_","requestNamedAnimationFrame","oldNode","replaceChild","CurrentTimeDisplay","ended","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","number","clamp","Slider","bar","barName","vertical","playerEvent","ownerDocument","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getProgress","progress_","sizeKey","toFixed","getPercent","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","round","write","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","updateTime","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","SeekBar","setEventHandlers_","update_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","getCurrentTime_","liveCurrentTime","currentTime_","seekableStart","videoWasPlaying","newTime","distance","calculateDistance","mouseTimeDisplay","handleAction","gotoFraction","thisunlistenTo","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","playProgressBar","seekBarEl","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","pictureInPictureEnabled","disablePictureInPicture","isInPictureInPicture","exitPictureInPicture","requestPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","checkVolumeSupport","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","volumePanelState_","muteToggle","handleKeyPress","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","removeEventListenerForItem","childComponent","addEventListenerForItem","contentElType","element","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","haveTitle","MenuButton","buttonClass","menu","handleMenuKeyUp","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","addItem","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","lockShowing","unlockShowing","TrackButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","allHidden","TextTrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","ControlBar","ErrorDisplay","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","legendId","selectLabelledbyIds","o","optionId","createElSelect_","createElFgColor_","createElBgColor_","createElWinColor_","defaultsDescription","createElColors_","createElFont_","createElControls_","accum","selectedIndex","setSelectedOption","localStorage","getItem","setValues","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","abs","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","trackLive_","handleFirstTimeupdate","timeDiff","skipNextSeeked_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","childNodes","innerText","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","enumerable","configurable","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","getValue","setter","writable","setupSourceset","defineLazyProperty","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","nodesLength","removeNodes","node","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","triggerReady","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","override","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","overrideNative_","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","class","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","webkitEnterFullScreen","HAVE_METADATA","webkitDisplayingFullscreen","webkitExitFullScreen","resetMediaElement","addTextTrack","getVideoPlaybackQuality","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","patchCanPlayType","unpatchCanPlayType","r","stylesheet","safeParseTuple","textTrackConverter","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","languagesToLower","getOwnPropertyNames","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","crossorigin","links","linkEl","techGet_","techCall_","privDimension","parsedVal","ratio","aspectRatio_","width_","height_","techEl","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","techOptions","playsinline","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","manualAutoplay_","previouslyMuted","restoreMuted","mutedPromise","catch","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","updateSourceCaches_","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","starttime","inAllowedEls","userActions","doubleClick","userWasActive","cancelable","targetPlayer","isFs","matches","fullscreen","msMatchesSelector","initTime","inactivityTimeout","defaultPlaybackRate","media","play_","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","applyInitTime_","percentAsDecimal","defaultMuted","isFS","oldValue","toggleFullscreenClass_","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","fsOptions","supportsFullScreen","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","togglePictureInPictureClass_","hotkeys","isContentEditable","excludeElement","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","sourceOrder","b","flip","middlewareSource","src_","notSupportedMessage","sourceTech","selectSource","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","durationDisplay","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","modal","currentBreakpoint","currentWidth","candidateBreakpoint","maxWidth","breakpoints_","breakpoint_","currentBreakpointClass","updateCurrentBreakpoint_","responsive_","current","removeCurrentBreakpoint_","reset","artwork","tt","currentSources","baseOptions","tagOptions","dataSetup","childName","elem","previousLogLevel_","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","instance","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","p","isBasic","registerPlugin","hasPlugin","_inherits","superClass","subClassMethods","subClass","methods","super_","setup","timeRanges","extend","middlewareUse","normalizeId","getPlayer","TypeError","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","getAllPlayers","comp","writeable","deregisterPlugin","getPlugins","getPluginVersion","addLanguage","attach"],"mappings":";;;;;;;u+BAAAA,OAAA,wBACA,sBACA,sBACA,wBACA,uBACA,sBACA,+BACA,gCACA,UACA,SAAAC,QAAAC,MAAAC,QAAAC,OAAAC,MAAAC,SAAAC,QAAAC,MAEA,IAAAC,KAAAN,QAAAM,KACAC,MAAAP,QAAAO,MACAC,KAAAN,MAAAM,KACAC,QAAAV,MAAAU,QACAC,WAAAX,MAAAW,WACAC,cAAAZ,MAAAY,cACAC,KAAAb,MAAAa,KAEAC,eAGA,SAAAC,GAIA,OAHAC,IAAAA,EAAAC,SAAAC,cAAA,MACAF,EAAAG,KAAAJ,EAEAC,EAAAG,MANAH,EAUAI,IAAA,WACA,IAAAC,QAAA,EACAC,IACAC,KACAC,QAAA,sDACAC,aAAA,qCACAC,UAAA,8BACAC,SAAA,mBACAC,SAAA,YACAC,QAAA,QAEAC,mBACAC,OAAA,EAGAlB,KAAA,MAEAmB,WAAAvB,KAEAwB,QAAAxB,KAEAyB,MAAAzB,KAEA0B,SAAA1B,KAEA2B,QAAA,KAEAC,QAAA,EAIAC,SACAC,OAAA,oEACAC,KAAA,mBACAC,IAAA,4BACAC,KAAA,YACAC,KAAA,cAGAC,aAAA,EAEAC,QAAA,EAEAC,aAAA,EAEAC,OAAA,EAEAC,aAAA,EAEAC,WACAC,iBAAA,IA7EA,SAAAC,eAAAC,GAIA,GAHAA,IACAA,EAAAA,EAAAC,MAAA,IAAA,GAAA,IAEAD,EAAA,CACA,GAAAA,GAAAxB,SACA,MAAA,OACA,GAAAwB,GAAAzB,SACA,MAAA,OACA,GAAAF,aAAA6B,KAAAF,GACA,MAAA,SACA,GAAA1B,UAAA4B,KAAAF,GACA,MAAA,MAGA,MAAA,OAGA,SAAAG,YAAAxC,EAAAyC,GACA,MAAA,IAAAA,EAAAzC,GACAA,EAAA,IAAAyC,GAAAC,QAAA,YAAA,KAIA,SAAAC,cAAAC,GACAA,EAAAC,KAAAD,EAAAC,MAAAD,EAAAH,MACAG,EAAAb,aAAAa,EAAAC,MAAA,UAAA/C,KAAA8C,EAAAC,QACAD,EAAAC,KAAAC,MAAAF,EAAAC,KAAAD,EAAAX,eAEAW,EAAAC,MAAAD,EAAA9C,MAAA,OAAA8C,EAAA9C,KAAAiD,gBACA,UAAAjD,KAAA8C,EAAAC,QACAD,EAAAC,KAAAC,MAAAF,EAAAC,KAAAD,EAAAX,cAEAW,EAAA5C,IAAAwC,YAAAI,EAAA5C,IAAA4C,EAAAC,MACAD,EAAAC,UAAAG,GAIA,SAAAC,UAAAC,EAAAC,EAAAlB,EAAAmB,GACA,IAAAC,EAAAC,EAAA3D,QAAAwD,GACAI,EAAA1D,cAAAsD,GACA3D,KAAA2D,EAAA,SAAA5C,EAAAiD,GACAH,EAAAvD,KAAA0D,GACAJ,IAAA7C,EAAA0B,EAAAmB,EACAA,EAAA,KAAAG,GAAA,UAAAF,GAAA,SAAAA,EAAA9C,EAAA,IAAA,MAEA6C,GAAAE,EAAAJ,EAAAO,IAAAD,EAAAhD,KAAAgD,EAAAA,OAEA,SAAAH,IAAApB,GAAA,UAAAoB,EACAJ,UAAAC,EAAAM,EAAAvB,EAAA1B,GACA2C,EAAAO,IAAAlD,EAAAiD,KAIA,IAAAV,MAAA,SAAAK,EAAAlB,GACA,IAAAiB,KAWA,OAVAA,EAAAO,IAAA,SAAAlD,EAAAiD,GACA5D,WAAA4D,KACAA,EAAAA,KAEA,MAAAA,IACAA,EAAA,IAEAE,KAAAC,KAAAC,mBAAArD,GAAA,IAAAqD,mBAAAJ,KAEAP,UAAAC,EAAAC,EAAAlB,GACAiB,EAAAW,KAAA,KAAAnB,QAAA,OAAA,MAGArC,IAAAf,QAAAwE,SACAC,UAAA,MAEAC,SAAA,SAAAC,MACA,IAAAC,EAAAR,KAAAQ,EACAC,KAAAT,KACAd,QAAAnD,SAAAsB,kBAAAmD,EAAAtB,QAAAqB,MACAG,IAAAF,EAAAE,IAAA,IAAAC,eAEA1B,cAAAC,SAEAA,QAAA3B,YACA2B,QAAA3B,WAAAqD,KAAAZ,KAAAU,IAAAxB,SAGA,IAAA2B,SAAA3B,QAAA2B,UAAA3B,QAAA4B,SACAnC,KAAAO,QAAA6B,UAAA7B,QAAArB,QAAAgD,UACAG,QAAA9B,QAAA8B,QACAxC,UAAAU,QAAAV,UACAyC,WAAA/B,QAAAC,MAAAD,QAAAC,gBAAA+B,SACAC,wBAAAjC,QAAAiC,wBACA/E,KAAA8C,QAAA9C,KACAE,IAAA4C,QAAA5C,IACAgB,MAAA4B,QAAA5B,MACA8D,KAAAlC,QAAAkC,KACAC,SAAAnC,QAAAmC,SACAC,SAAA,IAAA3F,SACA4F,YAAArC,QAAAqC,cAAAN,YAAA,oCAEA,GAAAzC,UACA,IAAA1B,QAAA0B,UACAkC,IAAA5D,MAAA0B,UAAA1B,MAIA6B,MAAAA,KAAA6C,QAAA,MAAA,IACA7C,KAAAA,KAAAC,MAAA,IAAA,GAAA,IAEAD,MAAA+B,IAAAe,kBACAf,IAAAe,iBAAA9C,MAGA,QAAAkC,UAAA,eAAAA,WACAH,IAAAgB,aAAAb,UAGA,IAAAc,OAAA,WACAjB,IAAAkB,UAAA5F,KACA0E,IAAAmB,QAAA7F,KACA0E,IAAAoB,WAAA9F,KACA0E,IAAAqB,UAAA/F,KACA0E,IAAA,MAEAkB,UAAA,WACA,IAAAI,OAAAvE,OAAA,EACA,GAAAiD,IAAAuB,QAAA,KAAAvB,IAAAuB,OAAA,KAAA,KAAAvB,IAAAuB,QAAA,GAAAvB,IAAAuB,QAAA5F,eAAAC,KAAA4F,WAAA,SAAA,CACArB,SAAAA,UAAAnC,eAAAQ,QAAA6B,UAAAL,IAAAyB,kBAAA,iBAGA,IACA,UAAAtB,SACAuB,KAAA1B,IAAA2B,cACA,OAAAxB,SACAmB,OAAAtB,IAAA4B,YACA,QAAAzB,SACAmB,OAAA5E,QAAAyB,KAAA6B,IAAA2B,cAAA,KAAAE,KAAAC,MAAA9B,IAAA2B,cACA,QAAAxB,SACAmB,OAAAtB,IAAA+B,SACA,eAAA5B,WACAmB,OAAAtB,IAAAgC,SAEA,MAAAC,GACAlF,MAAAkF,EAGAlF,MACA6D,SAAAsB,OAAAnF,MAAAiD,IAAAuB,OAAAvB,KAEAY,SAAAuB,QAAAb,OAAAtB,IAAAuB,OAAAvB,UAGAY,SAAAsB,OAAA,IAAAE,MAAApC,IAAAqC,YAAArC,IAAAuB,OAAAvB,KAEAiB,UAGAE,QAAA,WACAP,UACAA,SAAAsB,OAAA,IAAAE,MAAA,SAAApC,IAAAuB,OAAAvB,KAEAiB,UAGAI,UAAA,WACAT,UACAA,SAAAsB,OAAA,IAAAE,MAAA,WAAApC,IAAAuB,OAAAvB,KAEAiB,UAGAG,WAAA,SAAAkB,GACA1B,UACAA,SAAA2B,OAAAD,EAAAtC,IAAAuB,OAAAvB,MAWA,GAPAA,IAAAkB,UAAAA,UACAlB,IAAAmB,QAAAA,QACAnB,IAAAqB,UAAAA,UACArB,IAAAoB,WAAAA,WAEApB,IAAAwC,KAAA9G,KAAAE,IAAAgB,MAAA8D,KAAAC,UAEAL,QACA,IAAA,IAAAnE,OAAAmE,QAAA,CACA,IAAAlB,MAAAkB,QAAAnE,KAEA,iBAAAA,IAAAsG,cACA5B,YAAAzB,MAEAY,IAAA0C,iBAAAvG,IAAAiD,OAqBA,OAhBAyB,cAAA,IAAAA,aACAb,IAAA0C,iBAAA,eAAA7B,aASAJ,yBACAT,IAAA0C,iBAAA,gBAAAjC,yBAGAT,IAAA2C,KAAAnE,QAAAC,KAAAD,QAAAC,KAAA,MAEAmC,SAAAgC,SAIAC,MAAA,WACA,IAAA/C,EAAAR,KAAAQ,EACAE,EAAAF,EAAAE,IAEAA,GACAA,EAAA6C,SAKAC,QAAA,SAAAjD,GACA,OAAAP,KAAAM,SAAAC,IAGAkD,IAAA,SAAAlD,GAGA,OAFAA,EAAAA,OACAnE,KAAA,MACA4D,KAAAM,SAAAC,IAGAmD,KAAA,SAAAnD,GAGA,OAFAA,EAAAA,OACAnE,KAAA,OACA4D,KAAAM,SAAAC,IAGAoD,MAAA,SAAApD,GAGA,OAFAA,EAAAA,OACAnE,KAAA,QACA4D,KAAAM,SAAAC,IAGAqD,IAAA,SAAArD,GAGA,OAFAA,EAAAA,OACAnE,KAAA,MACA4D,KAAAM,SAAAC,IAGAsD,IAAA,SAAAtD,GAGA,OAFAA,EAAAA,OACAnE,KAAA,SACA4D,KAAAM,SAAAC,IAGAuD,KAAA,SAAA5E,GACAc,KAAAQ,GACAtB,QAAAA,UAeA,OAVA,UAAA,MAAA,OAAA,MAAA,MAAA,SAAA6E,QAAA,SAAAjH,GACAH,IAAAG,GAAA,SAAAR,EAAAiE,GACA,IAAAG,EAAA,IAAA/D,KAAAL,IAAAA,IACA,OAAAoE,EAAA5D,GAAAyD,MAIA5D,IAAAqH,eAAA3G,kBACAV,IAAAyC,MAAAA,MAEAzC,IAxPA,GA2PA,OAAAd,KAAAc,IAAAA,MAEAtB,OAAA,oCAAA,WACA,aACA,MAAA4I,GAAAC,UAAA,GACAC,IAEA,oBACA,iBACA,oBACA,oBACA,mBACA,kBACA,eAGA,0BACA,uBACA,0BACA,0BACA,yBACA,wBACA,wBAGA,uBACA,sBACA,uBACA,uBACA,sBACA,qBACA,qBAGA,sBACA,mBACA,sBACA,sBACA,qBACA,oBACA,mBAGAC,EAAAD,EAAA,GACA,IAAAE,EACA,IAAA,IAAAC,EAAA,EAAAA,EAAAH,EAAAI,OAAAD,IACA,GAAAH,EAAAG,GAAA,KAAA9H,SAAA,CACA6H,EAAAF,EAAAG,GACA,MAGA,GAAAD,EAAA,CACA,IAAA,IAAAC,EAAA,EAAAA,EAAAD,EAAAE,OAAAD,IACAL,EAAAG,EAAAE,IAAAD,EAAAC,GAEAL,EAAAC,SAAAG,EAAA,KAAAD,EAAA,GAEA,OAAAH,IAEA5I,OAAA,yCAAA,WACA,aACA,IAAAmJ,KAyBA,OAAA,SAAAC,EAAA3H,GACA,IACA4H,EADAC,EAAA,OAEA,MAAAC,EAAA,YAAArE,GACAmE,EAAA,MAAAC,EAAApE,IA+CA,OA7CAmE,EA9BA,EAAA5H,EAAA8H,IAAA,CAAAxI,EAAAuI,EAAApE,KACA,MAAAsE,EAAAD,EAAAE,OAAAH,GACAI,EAAA,IAAAC,YAAAH,OAKA,GAJA,QAAAzI,GACAmE,EAAA0E,QAAA7I,EAAAiD,cAAA,KAEAkB,EAAA0E,QAAAnI,EAAA,KACA0H,EAAA,CACAA,EAAAvE,QAAAiF,OAAA3E,IACA,MAAA4E,EAAAX,EAAAD,OAAA,IACAC,EAAAW,OAAA,EAAAA,EAAA,EAAAA,EAAA,GAEA,IAAAC,OAAAC,QACA,OAEA,IAAAC,EAAAF,OAAAC,QAAAjJ,GACAkJ,GAAA,UAAAlJ,IACAkJ,EAAAF,OAAAC,QAAAE,MAAAH,OAAAC,QAAAT,KAEAU,GAAAT,GAAAE,EAAAlG,KAAAzC,IAGAkJ,EAAAE,MAAAvJ,QAAAsE,GAAA,QAAA,QAAA6E,OAAAC,QAAA9E,IAQAkF,CAAA3I,EAAA8H,GACAA,EAAAH,aAAAiB,CAAAA,GAAAjB,EAAA3H,EAAA,KAAA4I,IACAd,EAAAE,QACAa,IAAA,uBACAC,IAAA,GACAC,MAAA,uBACAN,KAAA,iBACAO,KAAA,aACArI,MAAA,QACAsI,QAAApB,GAEAC,EAAAD,MAAAE,CAAAA,IACA,GAAA,iBAAAA,EAAA,CACA,IAAAD,EAAAE,OAAAkB,eAAAnB,GACA,MAAA,IAAA/B,UAAA+B,+BAEAF,EAAAE,EAEA,OAAAF,KAEAC,EAAAJ,QAAA,KAAAA,KAAAU,OAAAV,QACAyB,OAAAC,CAAAA,IACA1B,OAAAyB,OAAAE,GACA,IAAAnB,YAAAkB,OAAArH,KAAAsH,EAAA,MAGAvB,EAAAJ,QAAA4B,MAAA,MACA5B,IACAA,EAAAD,OAAA,KAGAK,EAAAJ,QAAA6B,QAAA,MACA,OAAA7B,IACAA,EAAAD,OAAA,EACAC,EAAA,QAGAI,EAAAJ,QAAA8B,OAAA,MACA,OAAA9B,IACAA,QAGAI,EAAAnH,MAAA,KAAA8C,IAAAmE,EAAA,QAAAC,EAAApE,IACAqE,EAAAkB,KAAA,KAAAvF,IAAAmE,EAAA,OAAAC,EAAApE,IACAqE,EAAAiB,MAAA,KAAAtF,IAAAmE,EAAA,QAAAC,EAAApE,IACAqE,KAGAvJ,OAAA,6BAAA,mBAAA,SAAAoJ,GACA,aACA,MAAAG,EAAAH,EAAA,WAEA,OADAG,EAAAH,aAAAA,EACAG,IAEAvJ,OAAA,6BACA,iBACA,SAAAkL,GACA,aAmCA,OACAzK,KAAA,SAAA0K,EAAAlB,GACA,OAAAiB,EAAAzK,KAAA0K,EAAAlB,GAAA,IAEAmB,OAAAF,EAAAE,OACAC,OAAAH,EAAAxK,MACA4K,SAAAJ,EAAAI,SACAC,QAAAL,EAAApK,iBAGAd,OAAA,wCACA,gCACA,SAAA+J,GACA,aAWA,OAVA,SAAAyB,EAAAC,GACA,IAAAD,IAAAC,EACA,MAAA,GAEA,GAAA,mBAAA1B,EAAA2B,iBAAA,CACA,MAAAC,EAAA5B,EAAA2B,iBAAAF,GACA,OAAAG,EAAAA,EAAAC,iBAAAH,IAAAE,EAAAF,GAAA,GAEA,MAAA,MAIAzL,OAAA,iCACA,+BACA,kCACA,SAAA+J,EAAA5I,GACA,aAEA,SAAA0K,IACA,OAAA1K,IAAA4I,EAAA5I,SAGA,MAAA2K,EAAA/B,EAAAgC,WAAAhC,EAAAgC,UAAAC,WAAA,GACAC,EAAA,yBAAAC,KAAAJ,GACAK,EAAAF,EAAAG,WAAAH,EAAAI,OAAA,KACAC,EAAA,QAAA9I,KAAAsI,GACAS,EAAA,WACA,MAAAC,EAAAV,EAAAU,MAAA,cACA,OAAAA,GAAAA,EAAA,GACAA,EAAA,GAEA,KALA,GAOAC,EAAA,WAAAjJ,KAAAsI,GACAY,EAAA,WACA,MAAAF,EAAAV,EAAAU,MAAA,0CACA,IAAAA,EACA,OAAA,KAEA,MAAAG,EAAAH,EAAA,IAAAJ,WAAAI,EAAA,IACAI,EAAAJ,EAAA,IAAAJ,WAAAI,EAAA,IACA,OAAAG,GAAAC,EACAR,WAAAI,EAAA,GAAA,IAAAA,EAAA,IACAG,GAGA,KAZA,GAcAE,EAAAJ,GAAAC,EAAA,GAAAP,EAAA,IACAW,EAAA,WAAAtJ,KAAAsI,GACAiB,EAAA,OAAAvJ,KAAAsI,GACAkB,GAAAD,IAAA,UAAAvJ,KAAAsI,IAAA,SAAAtI,KAAAsI,IACAmB,EAAA,WACA,MAAAT,EAAAV,EAAAU,MAAA,yBACA,OAAAA,GAAAA,EAAA,GACAJ,WAAAI,EAAA,IAEA,KALA,GAOAU,EAAA,WACA,MAAAvG,EAAA,kBAAAuF,KAAAJ,GACA,IAAAqB,EAAAxG,GAAAyF,WAAAzF,EAAA,IAIA,OAHAwG,GAAA,gBAAA3J,KAAAsI,IAAA,UAAAtI,KAAAsI,KACAqB,EAAA,IAEAA,EANA,GAQAC,EAAA,UAAA5J,KAAAsI,KAAAkB,IAAAP,IAAAM,EACAM,EAAA,WAAA7J,KAAAsI,GACAwB,EAAAC,QAAA1B,MAAA,iBAAA9B,GAAAA,EAAAgC,UAAAyB,gBAAAzD,EAAA0D,eAAA1D,EAAA5I,oBAAA4I,EAAA0D,gBACAC,EAAA,QAAAlK,KAAAsI,IAAAsB,GAAAE,IAAA,UAAA9J,KAAAsI,GACA6B,EAAA,UAAAnK,KAAAsI,KAAA4B,EACAE,EAAAD,GAAAD,GAAApB,EACAuB,GAAAT,GAAAQ,KAAAZ,EACA,OACAV,QAAAA,EACAC,YAAAA,EACAE,WAAAA,EACAC,gBAAAA,EACAG,kBAAAA,EACAC,WAAAA,EACAC,QAAAA,EACAC,UAAAA,EACAC,eAAAA,EACAC,WAAAA,EACAE,UAAAA,EACAC,WAAAA,EACAC,cAAAA,EACAI,QAAAA,EACAC,UAAAA,EACAC,OAAAA,EACAC,cAAAA,EAEAhC,OAAAA,KAGA7L,OAAA,6BACA,+BACA,iCACA,eACA,oBACA,QACA,QACA,mBACA,aACA,SAAA+J,EAAA5I,EAAA2M,EAAAC,EAAAxE,EAAAnF,EAAA4J,EAAAC,GACA,aACA,SAAAC,EAAAC,GACA,MAAA,iBAAAA,GAAAZ,QAAAY,EAAAC,QAWA,SAAAC,EAAA5J,GACA,OAAAL,EAAAkH,SAAA7G,IAAA,IAAAA,EAAA6J,SASA,SAAAC,EAAAC,GACA,OAAA,SAAAC,EAAAnM,GACA,IAAA4L,EAAAO,GACA,OAAAtN,EAAAqN,GAAA,MAEAN,EAAA5L,KACAA,EAAAnB,EAAAuN,cAAApM,IAEA,MAAAqM,EAAAN,EAAA/L,GAAAA,EAAAnB,EACA,OAAAwN,EAAAH,IAAAG,EAAAH,GAAAC,IA0JA,SAAAG,EAAApD,GACA,IAAAA,GAAAA,IAAAA,EAAAqD,aACA,OACAC,KAAA,EACAC,IAAA,EACAC,MAAA,EACAC,OAAA,GAGA,MAAAD,EAAAxD,EAAA0D,YACAD,EAAAzD,EAAA2D,aACA,IAAAL,EAAA,EACAC,EAAA,EACA,KAAAvD,EAAAqD,cAAArD,IAAArK,EAAA4M,EAAAqB,oBACAN,GAAAtD,EAAA6D,WACAN,GAAAvD,EAAA8D,UACA9D,EAAAA,EAAAqD,aAEA,OACAC,KAAAA,EACAC,IAAAA,EACAC,MAAAA,EACAC,OAAAA,GAoDA,SAAAM,EAAAC,GAIA,MAHA,mBAAAA,IACAA,EAAAA,MAEArF,MAAAvJ,QAAA4O,GAAAA,GAAAA,IAAAC,IAAAhL,IACA,mBAAAA,IACAA,EAAAA,KAEA4J,EAAA5J,KAjBAA,EAiBAA,EAhBAL,EAAAkH,SAAA7G,IAAA,IAAAA,EAAA6J,UAiBA7J,EAEA,iBAAAA,GAAA,KAAAjB,KAAAiB,GACAtD,EAAAuO,eAAAjL,QADA,IAGAmG,OAAAnG,GAAAA,GAvBA,IAAAA,EA+CA8J,EAAA,iBACAA,EAAA,oBACA,OACA1C,OAAAoC,EAAApC,OACAwC,KAAAP,EAAA6B,MAAAC,UACAC,UAAA/B,EAAA6B,MAAAE,UACAC,SAAA,SAAAC,EAAA,MAAAC,KAAAC,KAAAT,GACA,IAAAhE,EAAAsC,EAAA6B,MAAAvO,cAAA2O,EAAAC,EAAAC,GAIA,OAHAT,GACA1B,EAAA6B,MAAAO,OAAA1E,EAAAgE,GAEAhE,GAEA2E,YAAArC,EAAAhK,KAAAjB,KACAuN,UAAA,SAAAC,EAAAC,GACAxC,EAAA6B,MAAAY,QAAAD,EAAAD,IAEAG,SAAA1C,EAAA2C,OAAAD,SACAE,SAAA5C,EAAA2C,OAAAC,SACAC,YAAA7C,EAAA2C,OAAAE,YACAC,YAAA9C,EAAA2C,OAAAI,YACAC,cAAAhD,EAAAhK,KAAAiN,KACAC,cAnMA,SAAAC,GACA,MAAA7M,KACA8M,EAAA,kEACA,GAAAD,GAAAA,EAAAhB,YAAAgB,EAAAhB,WAAA/G,OAAA,EAAA,CACA,MAAAiI,EAAAF,EAAAhB,WACA,IAAA,IAAAhH,EAAAkI,EAAAjI,OAAA,EAAAD,GAAA,EAAAA,IAAA,CACA,MAAAmI,EAAAD,EAAAlI,GAAAxH,KACA,IAAA4P,EAAAF,EAAAlI,GAAAxE,MACA,kBAAAwM,EAAAG,KAAA,IAAAF,EAAA/K,QAAA,IAAAiL,EAAA,OACAC,EAAA,OAAAA,GAEAjN,EAAAgN,GAAAC,GAGA,OAAAjN,GAsLAkN,aAAAxD,EAAAhK,KAAAiN,KACAQ,aAAAzD,EAAAhK,KAAAiN,KACAS,gBAAA1D,EAAAhK,KAAA2N,WACAC,mBA9KA,WACAvQ,EAAAwQ,KAAAC,QACAzQ,EAAA0Q,cAAA,WACA,OAAA,IA4KAC,qBAzKA,WACA3Q,EAAA0Q,cAAA,WACA,OAAA,IAwKAE,sBArKA,SAAAvG,GACA,GAAAA,GAAAA,EAAAuG,uBAAAvG,EAAAwG,WAAA,CACA,MAAAC,EAAAzG,EAAAuG,wBACApL,KAmBA,OAjBA,SACA,SACA,OACA,QACA,MACA,SACA+B,QAAAwJ,SACAjO,IAAAgO,EAAAC,KACAvL,EAAAuL,GAAAD,EAAAC,MAGAvL,EAAAsI,SACAtI,EAAAsI,OAAA7C,WAAA4B,EAAAxC,EAAA,YAEA7E,EAAAqI,QACArI,EAAAqI,MAAA5C,WAAA4B,EAAAxC,EAAA,WAEA7E,IAgJAiI,aAAAd,EAAAqE,KAAAC,SACAC,mBArHA,SAAA7G,EAAA8G,GACA,MAAAC,GACAC,EAAA,EACAC,EAAA,GAEA,GAAAxE,EAAAL,OAAA,CACA,IAAA8E,EAAAlH,EACA,KAAAkH,GAAA,SAAAA,EAAAC,SAAA7K,eAAA,CACA,MAAA8K,EAAA5E,EAAA0E,EAAA,aACA,GAAA,UAAAlP,KAAAoP,GAAA,CACA,MAAAC,EAAAD,EAAAE,MAAA,GAAA,GAAAvP,MAAA,OAAAkM,IAAAsD,QACAR,EAAAC,GAAAK,EAAA,GACAN,EAAAE,GAAAI,EAAA,QACA,GAAA,YAAArP,KAAAoP,GAAA,CACA,MAAAC,EAAAD,EAAAE,MAAA,GAAA,GAAAvP,MAAA,OAAAkM,IAAAsD,QACAR,EAAAC,GAAAK,EAAA,IACAN,EAAAE,GAAAI,EAAA,IAEAH,EAAAA,EAAAV,YAGA,MAAAgB,KACAC,EAAArE,EAAA0D,EAAAY,QACAC,EAAAvE,EAAApD,GACA4H,EAAAD,EAAAnE,MACAqE,EAAAF,EAAAlE,OACA,IAAAqE,EAAAhB,EAAAgB,SAAAH,EAAApE,IAAAkE,EAAAlE,KACAwE,EAAAjB,EAAAiB,SAAAJ,EAAArE,KAAAmE,EAAAnE,MACAwD,EAAAkB,iBACAD,EAAAjB,EAAAkB,eAAA,GAAAC,MAAAN,EAAArE,KACAwE,EAAAhB,EAAAkB,eAAA,GAAAE,MAAAP,EAAApE,IACAd,EAAAL,SACA2F,GAAAhB,EAAAC,EACAc,GAAAf,EAAAE,IAKA,OAFAO,EAAAP,EAAA,EAAAkB,KAAAC,IAAA,EAAAD,KAAAE,IAAA,EAAAP,EAAAD,IACAL,EAAAR,EAAAmB,KAAAC,IAAA,EAAAD,KAAAE,IAAA,EAAAN,EAAAH,IACAJ,GAgFAc,WAAAhG,EAAA6B,MAAAmE,WACAC,QAAAjG,EAAA6B,MAAAqE,MACAzE,iBAAAA,EACA0E,cAAAnG,EAAA6B,MAAAO,OACAgE,cAAA,SAAA1I,EAAAgE,GAGA,OAFA1B,EAAA6B,MAAAqE,MAAAxI,GACAsC,EAAA6B,MAAAO,OAAA1E,EAAAgE,GACAhE,GAEA2I,kBAvDA,SAAA7B,GACA,QAAArO,IAAAqO,EAAA8B,aAAAnQ,IAAAqO,EAAA+B,QACA,OAAA,EAEA,GAAA,IAAA/B,EAAA8B,aAAAnQ,IAAAqO,EAAA+B,QACA,OAAA,EAEA,GAAA,YAAA/B,EAAAvR,MAAA,IAAAuR,EAAA8B,QAAA,IAAA9B,EAAA+B,QACA,OAAA,EAEA,GAAA,IAAA/B,EAAA8B,QAAA,IAAA9B,EAAA+B,QACA,OAAA,EAEA,OAAA,GA2CAC,EAAA,SAAA7F,EAAAnM,GAEA,OADAA,EAAAA,GAAAnB,EACA2M,EAAAyG,OAAAC,KAAAlS,EAAAmM,IAEAgG,GAAA,SAAAhG,EAAAnM,GAEA,OADAA,EAAAA,GAAAnB,EACA2M,EAAAyG,OAAAG,QAAApS,EAAAmM,OAIAzO,OAAA,yBACA,iCACA,eACA,SAAAmB,EAAAwT,GACA,aACA,IACAC,EADAC,GAAA,EAEA,MAAAC,EAAA,WACA,IAAAH,EAAA9I,WAAA,IAAA+I,EAAA/Q,QAAAiR,UACA,OAEA,MAAAC,EAAA5K,MAAA6K,UAAAlC,MAAAvN,KAAApE,EAAA8T,qBAAA,UACAC,EAAA/K,MAAA6K,UAAAlC,MAAAvN,KAAApE,EAAA8T,qBAAA,UACAE,EAAAhL,MAAA6K,UAAAlC,MAAAvN,KAAApE,EAAA8T,qBAAA,aACAG,EAAAL,EAAAlL,OAAAqL,EAAAC,GACA,GAAAC,GAAAA,EAAAlM,OAAA,EACA,IAAA,IAAAD,EAAA,EAAA3B,EAAA8N,EAAAlM,OAAAD,EAAA3B,EAAA2B,IAAA,CACA,MAAAoM,EAAAD,EAAAnM,GACA,IAAAoM,IAAAA,EAAA/D,aAOA,CACAgE,EAAA,GACA,MARA,QAAArR,IAAAoR,EAAAE,OAAA,CACA,MAAA1R,EAAAwR,EAAA/D,aAAA,cACA,OAAAzN,GACA+Q,EAAAS,SAQAR,GACAS,EAAA,IAGA,SAAAA,EAAAE,EAAAC,GACAA,IACAb,EAAAa,GAEA1L,OAAA2L,WAAAZ,EAAAU,GAEA,SAAAG,IACAd,GAAA,EACA9K,OAAA6L,oBAAA,OAAAD,GAEAhB,EAAA9I,WACA,aAAA1K,EAAA0U,WACAF,IAEA5L,OAAA+L,iBAAA,OAAAH,IAMA,OACAb,UAAAA,EACAQ,iBAAAA,EACAS,UANA,WACA,OAAAlB,MAQA7U,OAAA,oCACA,kCACA,SAAAmB,GACA,aAaA,OACA6U,mBAbA,SAAAC,GACA,MAAAC,EAAA/U,EAAAC,cAAA,SAEA,OADA8U,EAAAD,UAAAA,EACAC,GAWAC,eATA,SAAA3K,EAAAgE,GACAhE,EAAA4K,WACA5K,EAAA4K,WAAAC,QAAA7G,EAEAhE,EAAA2E,YAAAX,MAQAxP,OAAA,gCAAA,WACA,aACA,MAAAsW,EAAA,EACA,IAAAC,EAAAD,EAOA,OACAE,QAPA,WACA,OAAAD,KAOAE,qBALA,WACAF,EAAAD,MAOAtW,OAAA,kCACA,QACA,UACA,SAAAuJ,EAAAmN,GACA,aACA,IAAAC,EAoCA,OAnCA5M,OAAA6M,UACAD,QACAE,cACAlS,KAAAmS,MAAA,QAAAnD,KAAAoD,MAAAhN,OAAAiN,aAAAjN,OAAAiN,YAAAC,OAAAC,KAAAD,OACAtS,KAAAb,QAEA+S,IAAArV,EAAAiD,GACA,MAAA0S,EAAA3V,EAAAmD,KAAAmS,QAAAJ,EAAAF,UAKA,OAJAhV,EAAAmD,KAAAmS,SACAtV,EAAAmD,KAAAmS,OAAAK,GAEAxS,KAAAb,KAAAqT,GAAA1S,EACAE,KAEAkS,IAAArV,GACA,MAAA2V,EAAA3V,EAAAmD,KAAAmS,OACA,GAAAK,EACA,OAAAxS,KAAAb,KAAAqT,GAEA5N,EAAA,mCAAA/H,GAGAqV,IAAArV,GACA,MAAA2V,EAAA3V,EAAAmD,KAAAmS,OACA,OAAAK,KAAAxS,KAAAb,KAEA+S,OAAArV,GACA,MAAA2V,EAAA3V,EAAAmD,KAAAmS,OACAK,WACAxS,KAAAb,KAAAqT,UACA3V,EAAAmD,KAAAmS,WAKA/M,OAAA6M,QAAA,IAAAA,QAAA,IAAAD,IAEA3W,OAAA,gCACA,iCACA,eACA,aACA,SACA,SACA,SAAAmB,EAAA2M,EAAAsJ,EAAAV,EAAAnN,GACA,aA4BA,SAAA8N,EAAA/E,GACA,GAAAA,EAAAgF,OACA,OAAAhF,EAEA,SAAAiF,IACA,OAAA,EAEA,SAAAC,IACA,OAAA,EAEA,IAAAlF,IAAAA,EAAAmF,qBAAA,CACA,MAAAC,EAAApF,GAAAvI,OAAAuI,MACAA,KACA,IAAA,MAAA9Q,KAAAkW,EACA,WAAAlW,GAAA,WAAAA,GAAA,gBAAAA,GAAA,oBAAAA,GAAA,oBAAAA,IACA,gBAAAA,GAAAkW,EAAAC,iBACArF,EAAA9Q,GAAAkW,EAAAlW,KAoCA,GAhCA8Q,EAAAY,SACAZ,EAAAY,OAAAZ,EAAAsF,YAAAzW,GAEAmR,EAAAuF,gBACAvF,EAAAuF,cAAAvF,EAAAwF,cAAAxF,EAAAY,OAAAZ,EAAAyF,UAAAzF,EAAAwF,aAEAxF,EAAAqF,eAAA,WACAD,EAAAC,gBACAD,EAAAC,iBAEArF,EAAA0F,aAAA,EACAN,EAAAM,aAAA,EACA1F,EAAA2F,kBAAA,GAEA3F,EAAA2F,kBAAA,EACA3F,EAAA4F,gBAAA,WACAR,EAAAQ,iBACAR,EAAAQ,kBAEA5F,EAAA6F,cAAA,EACAT,EAAAS,cAAA,EACA7F,EAAAmF,qBAAAF,GAEAjF,EAAAmF,qBAAAD,EACAlF,EAAA8F,yBAAA,WACAV,EAAAU,0BACAV,EAAAU,2BAEA9F,EAAA+F,8BAAAd,EACAjF,EAAA4F,mBAEA5F,EAAA+F,8BAAAb,EACA,OAAAlF,EAAAgG,cAAArU,IAAAqO,EAAAgG,QAAA,CACA,MAAAC,EAAApX,EAAAqX,gBACA7G,EAAAxQ,EAAAwQ,KACAW,EAAAmB,MAAAnB,EAAAgG,SAAAC,GAAAA,EAAAE,YAAA9G,GAAAA,EAAA8G,YAAA,IAAAF,GAAAA,EAAAG,YAAA/G,GAAAA,EAAA+G,YAAA,GACApG,EAAAoB,MAAApB,EAAAqG,SAAAJ,GAAAA,EAAAK,WAAAjH,GAAAA,EAAAiH,WAAA,IAAAL,GAAAA,EAAAM,WAAAlH,GAAAA,EAAAkH,WAAA,GAEAvG,EAAAwG,MAAAxG,EAAAyG,UAAAzG,EAAA0G,QACA,OAAA1G,EAAA8B,aAAAnQ,IAAAqO,EAAA8B,SACA9B,EAAA8B,OAAA,EAAA9B,EAAA8B,OAAA,EAAA,EAAA9B,EAAA8B,OAAA,EAAA,EAAA9B,EAAA8B,OAAA,EAAA,GAIA,OADA9B,EAAAgF,QAAA,EACAhF,EAwKA,OACA+E,SAAAA,EACA4B,GAAAnL,EAAAoL,QAAAD,GACA1O,IAAAuD,EAAAoL,QAAA3O,IACA4O,QAAArL,EAAAoL,QAAAC,QACAC,IAAAtL,EAAAoL,QAAAE,IACAC,IAAAvL,EAAAoL,QAAAE,OAGApZ,OAAA,4BACA,UACA,SAAAsZ,GACA,aA8CA,OACAC,wBA9CA,GA+CAC,KA9CA,SAAAlX,EAAA2H,EAAAwP,GACAxP,EAAAyP,OACAzP,EAAAyP,KAAAJ,EAAA9C,WAEA,MAAAmD,EAAA1P,EAAAuP,KAAAlX,GAEA,OADAqX,EAAAD,KAAAD,EAAAA,EAAA,IAAAxP,EAAAyP,KAAAzP,EAAAyP,KACAC,GAyCAC,SAvCA,SAAA3P,EAAAuL,GACA,IAAAqE,EAAA9P,OAAAiN,YAAAC,MAQA,OAPA,YAAA/R,GACA,MAAA+R,EAAAlN,OAAAiN,YAAAC,MACAA,EAAA4C,GAAArE,IACAvL,KAAA/E,GACA2U,EAAA5C,KAkCA6C,SA7BA,SAAAC,EAAAvE,EAAAwE,EAAA1X,EAAAyH,QACA,IAAAhH,EACA,MAIAkX,EAAA,WACA,MAAA7U,EAAAT,KACAO,EAAAgV,UACA,IAAAC,EAAA,WACApX,EAAA,KACAoX,EAAA,KACAH,GACAD,EAAAK,MAAAhV,EAAAF,KAGAnC,GAAAiX,GACAD,EAAAK,MAAAhV,EAAAF,GAEA5C,EAAA+X,aAAAtX,GACAA,EAAAT,EAAAoT,WAAAyE,EAAA3E,IAGA,OADAyE,EAAAK,OApBA,MACAhY,EAAA+X,aAAAtX,GACAA,EAAA,OAmBAkX,MASAja,OAAA,gCACA,+BACA,kBACA,SAAAua,EAAAC,GACA,aA+CA,IAAAC,EAAAF,EAAAxV,YAMA,IAAA2V,EAwBA,OA7BAD,EAAAzF,UAAAc,iBAAA2E,EAAAzF,UAAAiE,GACAwB,EAAAzF,UAAA2F,cAAAF,EAAAzF,UAAAmE,QACAsB,EAAAzF,UAAAY,oBAAA6E,EAAAzF,UAAAzK,IACAkQ,EAAAzF,UAAAqE,IAAAoB,EAAAzF,UAAAoE,IAGAqB,EAAAzF,UAAA4F,aAAA,SAAAtI,GACAoI,IACAA,EAAA,IAAAG,KAEA,MAAA9Z,EAAAuR,EAAAvR,MAAAuR,EACA,IAAA7C,EAAAiL,EAAAtS,IAAAzD,MACA8K,IACAA,EAAA,IAAAoL,IACAH,EAAAI,IAAAnW,KAAA8K,IAEA,MAAAsL,EAAAtL,EAAArH,IAAArH,GACA0O,EAAAuL,OAAAja,GACAgJ,OAAAsQ,aAAAU,GACA,MAAAhY,EAAAgH,OAAA2L,WAAA,KACA,IAAAjG,EAAAwL,OACAxL,EAAA,KACAiL,EAAAM,OAAArW,OAEAA,KAAAwU,QAAA7G,IACA,GACA7C,EAAAqL,IAAA/Z,EAAAgC,IAGA0X,IAEAza,OAAA,kCACA,eACA,kBACA,cACA,eACA,kBACA,gBACA,SAAA2U,EAAA6F,EAAAU,EAAAC,EAAAV,EAAAlR,GACA,aACA,MAAA6R,EAAAhX,GACA,mBAAAA,EAAA3C,KACA2C,EAAA3C,OAEA,iBAAA2C,EAAA3C,KACA2C,EAAA3C,KAEA2C,EAAAiX,MACAjX,EAAAiX,MAEAjX,EAAAkX,aAAAlX,EAAAkX,YAAA7Z,KACA2C,EAAAkX,YAAA7Z,YAEA2C,EAEAmX,EAAApQ,GAAAA,aAAAsP,KAAAtP,EAAAqQ,cACA,KACA,MACA,MACA,WACAC,MAAAvJ,GAAA,mBAAA/G,EAAA+G,IAWAwJ,EAAA3a,GAAA,iBAAAA,GAAA,KAAAyC,KAAAzC,IAAAoJ,MAAAvJ,QAAAG,MAAAA,EAAAmI,OACAyS,EAAA,CAAAzI,EAAA9O,EAAAwX,KACA,IAAA1I,IAAAA,EAAAP,WAAA4I,EAAArI,GACA,MAAA,IAAAzL,4BAAA2T,EAAAhX,MAAAwX,6CAGAC,EAAA,CAAA9a,EAAAqD,EAAAwX,KACA,IAAAF,EAAA3a,GACA,MAAA,IAAA0G,gCAAA2T,EAAAhX,MAAAwX,4CAGAE,EAAA,CAAAC,EAAA3X,EAAAwX,KACA,GAAA,mBAAAG,EACA,MAAA,IAAAtU,8BAAA2T,EAAAhX,MAAAwX,2BAGAI,EAAA,CAAA5W,EAAAF,EAAA0W,KACA,MAAAK,EAAA/W,EAAAgE,OAAA,GAAAhE,EAAA,KAAAE,GAAAF,EAAA,KAAAE,EAAAoW,YACA,IAAAtI,EACAnS,EACAgb,EAcA,OAbAE,GACA/I,EAAA9N,EAAAoW,YACAtW,EAAAgE,QAAA,GACAhE,EAAAgX,SAEAnb,EAAAgb,GAAA7W,IAEAgO,EAAAnS,EAAAgb,GAAA7W,EAEAyW,EAAAzI,EAAA9N,EAAAwW,GACAC,EAAA9a,EAAAqE,EAAAwW,GACAE,EAAAC,EAAA3W,EAAAwW,GACAG,EAAAb,EAAA1B,KAAApU,EAAA2W,IAEAE,gBAAAA,EACA/I,OAAAA,EACAnS,KAAAA,EACAgb,SAAAA,IAGAI,EAAA,CAAAjJ,EAAA1E,EAAAzN,EAAAgb,KACAJ,EAAAzI,EAAAA,EAAA1E,GACA0E,EAAAP,SACA6H,EAAAhM,GAAA0E,EAAAnS,EAAAgb,GAEA7I,EAAA1E,GAAAzN,EAAAgb,IAGAK,GACAvF,MAAA3R,GACA,MAAA+W,gBAAAA,EAAA/I,OAAAA,EAAAnS,KAAAA,EAAAgb,SAAAA,GAAAC,EAAArX,KAAAO,EAAA,MAEA,GADAiX,EAAAjJ,EAAA,KAAAnS,EAAAgb,IACAE,EAAA,CACA,MAAAI,EAAA,IAAA1X,KAAA2X,WAAApJ,EAAAnS,EAAAgb,GACAM,EAAA3C,KAAAqC,EAAArC,KACA,MAAA6C,EAAA,IAAA5X,KAAA2X,WAAA,UAAAD,GACAE,EAAA7C,KAAAqC,EAAArC,KACAyC,EAAAxX,KAAA,KAAA,UAAA0X,GACAF,EAAAjJ,EAAA,KAAA,UAAAqJ,KAGA1F,OAAA3R,GACA,MAAA+W,gBAAAA,EAAA/I,OAAAA,EAAAnS,KAAAA,EAAAgb,SAAAA,GAAAC,EAAArX,KAAAO,EAAA,OACA,GAAA+W,EACAE,EAAAjJ,EAAA,MAAAnS,EAAAgb,OACA,CACA,MAAAS,EAAA,IAAAC,KACA9X,KAAA2X,WAAApJ,EAAAnS,EAAAyb,GACAT,EAAA3B,MAAA,KAAAqC,IAEAD,EAAA9C,KAAAqC,EAAArC,KACAyC,EAAAjJ,EAAA,MAAAnS,EAAAyb,KAGA3F,OAAA3R,GACA,MAAA+W,gBAAAA,EAAA/I,OAAAA,EAAAnS,KAAAA,EAAAgb,SAAAA,GAAAC,EAAArX,KAAAO,EAAA,OACA,GAAA+W,EACAE,EAAAjJ,EAAA,MAAAnS,EAAAgb,OACA,CACA,MAAAS,EAAA,IAAAC,KACA9X,KAAA2X,WAAApJ,EAAAnS,EAAAyb,GACAT,EAAA3B,MAAA,KAAAqC,IAEAD,EAAA9C,KAAAqC,EAAArC,KACAyC,EAAAjJ,EAAA,MAAAnS,EAAAyb,KAGA3F,IAAA6F,EAAAC,EAAAZ,GACA,IAAAW,GAAAhB,EAAAgB,GACAlC,EAAAjQ,IAAA5F,KAAA6W,YAAAkB,EAAAC,OACA,CACA,MAAAzJ,EAAAwJ,EACA3b,EAAA4b,EACAhB,EAAAzI,EAAAvO,KAAA,OACAkX,EAAA9a,EAAA4D,KAAA,OACAmX,EAAAC,EAAApX,KAAA,OACAoX,EAAAb,EAAA1B,KAAA7U,KAAAoX,GACApX,KAAA2X,WAAA,UAAAP,GACA7I,EAAAP,UACA6H,EAAAjQ,IAAA2I,EAAAnS,EAAAgb,GACAvB,EAAAjQ,IAAA2I,EAAA,UAAA6I,IACAR,EAAArI,KACAA,EAAA3I,IAAAxJ,EAAAgb,GACA7I,EAAA3I,IAAA,UAAAwR,MAIAlF,QAAAvE,EAAA9N,GACAmX,EAAAhX,KAAA6W,YAAA7W,KAAA,WACA,MAAA5D,EAAAuR,GAAA,iBAAAA,EAAAA,EAAAvR,KAAAuR,EACA,IAAAoJ,EAAA3a,GAAA,CACA,MAAAqB,4BAAAgZ,EAAAzW,kBAAA,mFACA,IAAA2N,EAGA,MAAA,IAAA7K,MAAArF,IAFAuC,KAAA4E,KAAAA,GAAAnH,MAAAA,GAKA,OAAAoY,EAAArB,QAAAxU,KAAA6W,YAAAlJ,EAAA9N,KAGA,SAAAoY,EAAA1J,EAAArP,MACA,MAAAgZ,YAAAA,GAAAhZ,EACA,GAAAgZ,EAAA,CACA,IAAA3J,EAAA2J,GAAAlK,SACA,MAAA,IAAAlL,0BAAAoV,oCAEA3J,EAAAsI,YAAAtI,EAAA2J,QAEA3J,EAAAsI,YAAA7G,EAAA7E,SAAA,QAAAmG,UAAA,kBAcA,OAZAkF,EAAA9P,OAAA6H,EAAAkJ,GACAlJ,EAAA4J,kBACA5J,EAAA4J,iBAAApU,QAAAqU,IACAA,MAGA7J,EAAA+F,GAAA,UAAA,KACA/F,EAAA3I,MACAR,OAAA2L,WAAA,KACAxC,EAAAsI,YAAA,MACA,KAEAtI,EAMA,OAHA0J,EAAArB,UAAAA,EACAqB,EAAAI,mBA9JA,EAAA9J,EAAA6J,KACAxB,EAAArI,GACA6J,KAEA7J,EAAA4J,mBACA5J,EAAA4J,qBAEA5J,EAAA4J,iBAAAlY,KAAAmY,MAyJAH,IAGA5c,OAAA,mCACA,YACA,gBACA,SAAA4c,EAAAzB,GACA,aACA,MAAA8B,GACAC,SACArG,SAAAsG,GAIA,IAAAC,EAiBA,MApBA,mBAAAD,IACAA,EAAAA,KAGAhC,EAAA1a,KAAA0c,EAAA,CAAA1Y,EAAAjD,KACAmD,KAAAuY,MAAA1b,KAAAiD,KACA2Y,EAAAA,OACA5b,IACA6b,KAAA1Y,KAAAuY,MAAA1b,GACA8b,GAAA7Y,IAGAE,KAAAuY,MAAA1b,GAAAiD,IAEA2Y,GAAAR,EAAArB,UAAA5W,OACAA,KAAAwU,SACAiE,QAAAA,EACArc,KAAA,iBAGAqc,IAWA,OARA,SAAAlK,EAAAqK,GACApC,EAAA9P,OAAA6H,EAAA+J,GACA/J,EAAAgK,MAAA/B,EAAA9P,UAAA6H,EAAAgK,MAAAK,GACA,mBAAArK,EAAAsK,oBAAAZ,EAAArB,UAAArI,IACAA,EAAA+F,GAAA,eAAA/F,EAAAsK,oBAEA,OAAAtK,KAIAlT,OAAA,wCAAA,WACA,aACA,MAMAyd,EAAA,SAAAC,GACA,MAAA,iBAAAA,EACAA,EAEAA,EAAA/Z,QAAA,IAAAga,GAAAA,EAAA3Z,gBAKA,OACA8D,YAhBA,SAAA4V,GACA,GAAA,iBAAAA,EACA,OAAAA,EAEA,OAAAA,EAAA/Z,QAAA,IAAAga,GAAAA,EAAA7V,gBAaA2V,YAAAA,EACAG,gBANA,SAAAC,EAAAC,GACA,OAAAL,EAAAI,KAAAJ,EAAAK,OAQA9d,OAAA,uCAAA,SAAA,SAAAoE,GACA,aAoBA,OAnBA,SAAA2Z,KAAAC,GACA,MAAArX,KACAqX,EAAAtV,QAAAuV,IACAA,GAGA7Z,EAAA3D,KAAAwd,EAAA,CAAAxZ,EAAAjD,KACA4C,EAAAmH,QAAA9G,IAIAL,EAAAmH,QAAA5E,EAAAnF,MACAmF,EAAAnF,OAEAmF,EAAAnF,GAAAuc,EAAApX,EAAAnF,GAAAiD,IANAkC,EAAAnF,GAAAiD,MASA,OAAAkC,KAIA3G,OAAA,+BAAA,WACA,aAuBA,OAAA+J,OAAA8Q,IAAA9Q,OAAA8Q,UArBAhE,cACAlS,KAAAuZ,QAEArH,IAAArV,GACA,OAAAA,KAAAmD,KAAAuZ,KAEArH,OAAArV,GACA,MAAA2c,EAAAxZ,KAAAwZ,IAAA3c,GAEA,cADAmD,KAAAuZ,KAAA1c,GACA2c,EAEAtH,IAAArV,EAAAiD,GAEA,OADAE,KAAAuZ,KAAA1c,GAAAiD,EACAE,KAEAkS,QAAAkG,EAAAqB,GACA,IAAA,MAAA5c,KAAAmD,KAAAuZ,KACAnB,EAAAxX,KAAA6Y,EAAAzZ,KAAAuZ,KAAA1c,GAAAA,EAAAmD,UAMA3E,OAAA,+BAAA,WACA,aAuBA,OAAA+J,OAAAsU,IAAAtU,OAAAsU,UArBAxH,cACAlS,KAAA2Z,QAEAzH,IAAArV,GACA,OAAAA,KAAAmD,KAAA2Z,KAEAzH,OAAArV,GACA,MAAA2c,EAAAxZ,KAAAwZ,IAAA3c,GAEA,cADAmD,KAAA2Z,KAAA9c,GACA2c,EAEAtH,IAAArV,GAEA,OADAmD,KAAA2Z,KAAA9c,GAAA,EACAmD,KAEAkS,QAAAkG,EAAAqB,GACA,IAAA,MAAA5c,KAAAmD,KAAA2Z,KACAvB,EAAAxX,KAAA6Y,EAAA5c,EAAAA,EAAAmD,UAMA3E,OAAA,6BACA,gBACA,uBACA,8BACA,mBACA,oBACA,cACA,mBACA,aACA,eACA,uBACA,wBACA,yBACA,cACA,eACA,SAAAkL,EAAAgO,EAAAqF,EAAA3B,EAAA4B,EAAA7J,EAAAyC,EAAA8D,EAAAxE,EAAA+H,EAAAV,EAAA/P,EAAA6M,EAAAwD,GACA,mBACAK,UAAAH,EACA1H,GAAA8H,EAAAlQ,EAAA3K,EAAAiZ,EAAApO,EAAAyK,GACAzU,KAAAia,KAAA1F,EAAA2F,cAAAF,GACAzF,EAAAD,GAAAtU,KAAAia,IAAAD,EAAAlQ,EAAA3K,EAAAiZ,EAAApO,EAAAyK,GAEA0F,MAAA7F,GAAA0F,EAAAlQ,EAAA3K,EAAAiZ,EAAApO,EAAAyK,GAIAvC,IAAA8H,EAAA5B,GACApY,KAAAia,KAAA1F,EAAA2F,cAAAF,GACAzF,EAAA3O,IAAA5F,KAAAia,IAAAD,EAAA5B,GAEA+B,MAAAvU,IAAAoU,EAAA5B,GAIAlG,SAAAzS,EAAAkO,EAAAyK,EAAA3D,GACAlO,EAAA6T,SAAA3a,IAAA8G,EAAAtK,QAAAwD,IACAgV,EAAA2D,EACAA,EAAAzK,EACAA,EAAAlO,EACAO,KAAAia,KAAA1F,EAAA2F,cAAAvM,GACA4G,EAAAD,GAAAtU,KAAAia,IAAAtM,EAAAyK,EAAApY,KAAAyU,GAEAzU,KAAAsU,GAAA3G,EAAAyK,EAAApY,KAAAyU,IAGAhV,EAAAkK,SACA4K,EAAAD,GAAA7U,EAAAkO,EAAAyK,EAAApY,KAAAyU,GAEA0F,MAAAE,SAAA5a,EAAAkO,EAAAyK,EAAA3D,GAKAvC,WAAAzS,EAAAkO,EAAAyK,GACA7R,EAAA6T,SAAA3a,IAAA8G,EAAAtK,QAAAwD,IACA2Y,EAAAzK,EACAA,EAAAlO,EACAO,KAAAia,KAAA1F,EAAA2F,cAAAvM,GACA4G,EAAA3O,IAAA5F,KAAAia,IAAAtM,EAAAyK,GAEApY,KAAA4F,IAAA+H,EAAAyK,IAGA3Y,EAAAkK,SACA4K,EAAA3O,IAAAnG,EAAAkO,EAAAyK,GAEA+B,MAAAxC,WAAAlY,EAAAkO,EAAAyK,GAKAlG,WAKAA,WAAAtB,EAAA1R,EAAAob,GAqBA,IAVA1J,GAAA5Q,KAAAua,KACAva,KAAAwa,QAAA5J,EAAA5Q,KAEAA,KAAAwa,QAAA5J,EAEA5Q,KAAAya,aAAA,EACAza,KAAA0a,iBAAA,KACA1a,KAAA2a,SAAAvB,KAAApZ,KAAA2a,UACAzb,EAAAc,KAAA2a,SAAAvB,EAAApZ,KAAA2a,SAAAzb,GACAc,KAAA4a,IAAA1b,EAAA2b,IAAA3b,EAAA2H,IAAA3H,EAAA2H,GAAAgU,IACA7a,KAAA4a,IAAA,CACA,MAAAC,EAAAjK,GAAAA,EAAAiK,IAAAjK,EAAAiK,MAAA,YACA7a,KAAA4a,OAAAC,eAAA9I,EAAAF,YAEA7R,KAAA0W,MAAAxX,EAAApC,MAAA,KACAoC,EAAA2H,GACA7G,KAAAia,IAAA/a,EAAA2H,IACA,IAAA3H,EAAAiM,WACAnL,KAAAia,IAAAja,KAAAmL,aAIA,IAAAjM,EAAA+Y,UAEAjY,KAAA8a,qBAAA9a,KAAA8a,qBAAAjG,KAAA7U,MAEAA,KAAAqa,SAAAra,KAAAwa,QAAA,iBAAAxa,KAAA8a,uBAIAjB,EAAA7Z,KAAAA,KAAA2W,YAAAiC,cACA5Y,KAAA+a,aACA/a,KAAAgb,eACAhb,KAAAib,mBACAjb,KAAAkb,eAAA,IAAAxB,EACA1Z,KAAAmb,gBAAA,IAAAzB,EACA1Z,KAAAob,QAAA,IAAA1B,EACA1Z,KAAAqb,WAAA,IAAAnF,EACAlW,KAAAsb,0BAAA,GACA,IAAApc,EAAAqc,cACAvb,KAAAub,eAEAvb,KAAAsa,MAAAA,IACA,IAAApb,EAAAsc,qBACAxb,KAAAyb,sBAGAvJ,UACA,IAAAlS,KAAAya,YAAA,CAWA,GARAza,KAAA0b,cACA1b,KAAA0b,YAAAnX,OAAA,GAEAvE,KAAAwU,SACApY,KAAA,UACAuf,SAAA,IAEA3b,KAAAya,aAAA,EACAza,KAAA+a,UACA,IAAA,IAAAzW,EAAAtE,KAAA+a,UAAAxW,OAAA,EAAAD,GAAA,EAAAA,IACAtE,KAAA+a,UAAAzW,GAAAsX,SACA5b,KAAA+a,UAAAzW,GAAAsX,UAIA5b,KAAA+a,UAAA,KACA/a,KAAAgb,YAAA,KACAhb,KAAAib,gBAAA,KACAjb,KAAA0a,iBAAA,KACA1a,KAAAia,MACAja,KAAAia,IAAA5M,YACArN,KAAAia,IAAA5M,WAAAwO,YAAA7b,KAAAia,KAKA1F,EAAAnO,MAAApG,KAAAia,KACAja,KAAAia,IAAA,MAEAja,KAAAwa,QAAA,MAEAtI,aACA,OAAAtJ,QAAA5I,KAAAya,aAEAvI,SACA,OAAAlS,KAAAwa,QAEAtI,QAAAzS,GACA,OAAAA,GAGAO,KAAA2a,SAAAvB,EAAApZ,KAAA2a,SAAAlb,GACAO,KAAA2a,UAHA3a,KAAA2a,SAKAzI,KACA,OAAAlS,KAAAia,IAEA/H,SAAA9G,EAAAC,EAAAC,GACA,OAAA0E,EAAA7E,SAAAC,EAAAC,EAAAC,GAEA4G,SAAA6G,EAAA+C,EAAAC,EAAAhD,GACA,MAAAiD,EAAAhc,KAAAwa,QAAAyB,UAAAjc,KAAAwa,QAAAyB,WACAC,EAAAlc,KAAAwa,QAAA0B,WAAAlc,KAAAwa,QAAA0B,YACAD,EAAAC,GAAAA,EAAAF,GACAG,EAAAH,GAAAA,EAAApd,MAAA,KAAA,GACAwd,EAAAF,GAAAA,EAAAC,GACA,IAAAE,EAAAN,EAgBA,OAfAE,GAAAA,EAAAlD,GACAsD,EAAAJ,EAAAlD,GACAqD,GAAAA,EAAArD,KACAsD,EAAAD,EAAArD,IAEA+C,IACAO,EAAAA,EAAArd,QAAA,aAAA,SAAA6I,EAAAyU,GACA,MAAAxc,EAAAgc,EAAAQ,EAAA,GACA,IAAAC,EAAAzc,EAIA,YAHA,IAAAA,IACAyc,EAAA1U,GAEA0U,KAGAF,EAEAnK,wBAEAA,YACA,OAAAlS,KAAAwc,YAAAxc,KAAAia,IAEA/H,KACA,OAAAlS,KAAA4a,IAEA1I,OACA,OAAAlS,KAAA0W,MAEAxE,WACA,OAAAlS,KAAA+a,UAEA7I,aAAA2I,GACA,OAAA7a,KAAAgb,YAAAH,GAEA3I,SAAApV,GACA,GAAAA,EAGA,OAAAkD,KAAAib,gBAAAne,GAEAoV,iBAAAuK,GACAA,EAAAA,EAAAhW,OAAA,CAAAiW,EAAAC,IAAAD,EAAAxX,OAAAyX,OACA,IAAAC,EAAA5c,KACA,IAAA,IAAAsE,EAAA,EAAAA,EAAAmY,EAAAlY,OAAAD,IAEA,KADAsY,EAAAA,EAAAC,SAAAJ,EAAAnY,OACAsY,EAAAC,SACA,OAGA,OAAAD,EAEA1K,SAAAxG,EAAAxM,KAAAod,EAAAtc,KAAA+a,UAAAxW,QACA,IAAAuY,EACAC,EACA,GAAA,iBAAArR,EAAA,CACAqR,EAAAjD,EAAAhB,YAAApN,GACA,MAAAsR,EAAA9d,EAAA+d,gBAAAF,EACA7d,EAAApC,KAAAigB,EACA,MAAAG,EAAAnD,EAAAoD,aAAAH,GACA,IAAAE,EACA,MAAA,IAAApa,mBAAAka,oBAEA,GAAA,mBAAAE,EACA,OAAA,KAEAJ,EAAA,IAAAI,EAAAld,KAAAwa,SAAAxa,KAAAd,QAEA4d,EAAApR,EAeA,GAbAoR,EAAApC,kBACAoC,EAAApC,iBAAAmB,YAAAiB,GAEA9c,KAAA+a,UAAA5V,OAAAmX,EAAA,EAAAQ,GACAA,EAAApC,iBAAA1a,KACA,mBAAA8c,EAAAjC,KACA7a,KAAAgb,YAAA8B,EAAAjC,MAAAiC,IAEAC,EAAAA,GAAAD,EAAAhgB,MAAAgd,EAAAhB,YAAAgE,EAAAhgB,WAEAkD,KAAAib,gBAAA8B,GAAAD,EACA9c,KAAAib,gBAAAnB,EAAA3W,YAAA4Z,IAAAD,GAEA,mBAAAA,EAAAjW,IAAAiW,EAAAjW,KAAA,CACA,IAAAuW,EAAA,KACApd,KAAA+a,UAAAuB,EAAA,KACAtc,KAAA+a,UAAAuB,EAAA,GAAArC,IACAmD,EAAApd,KAAA+a,UAAAuB,EAAA,GAAArC,IACAjK,EAAAtG,KAAA1J,KAAA+a,UAAAuB,EAAA,MACAc,EAAApd,KAAA+a,UAAAuB,EAAA,KAGAtc,KAAAqd,YAAAC,aAAAR,EAAAjW,KAAAuW,GAEA,OAAAN,EAEA5K,YAAA4K,GAIA,GAHA,iBAAAA,IACAA,EAAA9c,KAAA6c,SAAAC,KAEAA,IAAA9c,KAAA+a,UACA,OAEA,IAAAwC,GAAA,EACA,IAAA,IAAAjZ,EAAAtE,KAAA+a,UAAAxW,OAAA,EAAAD,GAAA,EAAAA,IACA,GAAAtE,KAAA+a,UAAAzW,KAAAwY,EAAA,CACAS,GAAA,EACAvd,KAAA+a,UAAA5V,OAAAb,EAAA,GACA,MAGA,IAAAiZ,EACA,OAEAT,EAAApC,iBAAA,KACA1a,KAAAgb,YAAA8B,EAAAjC,MAAA,KACA7a,KAAAib,gBAAAnB,EAAAhB,YAAAgE,EAAAhgB,SAAA,KACAkD,KAAAib,gBAAAnB,EAAA3W,YAAA2Z,EAAAhgB,SAAA,KACA,MAAA0gB,EAAAV,EAAAjW,KACA2W,GAAAA,EAAAnQ,aAAArN,KAAAqd,aACArd,KAAAqd,YAAAxB,YAAAiB,EAAAjW,MAGAqL,eACA,MAAAuL,EAAAzd,KAAA2a,SAAA8C,SACA,GAAAA,EAAA,CACA,MAAAC,EAAA1d,KAAA2a,SACAgD,EAAAjS,IACA,MAAA5O,EAAA4O,EAAA5O,KACA,IAAA8gB,EAAAlS,EAAAkS,KAIA,QAHAte,IAAAoe,EAAA5gB,KACA8gB,EAAAF,EAAA5gB,KAEA,IAAA8gB,EACA,QAEA,IAAAA,IACAA,MAEAA,EAAAC,cAAA7d,KAAA2a,SAAAkD,cACA,MAAAC,EAAA9d,KAAA+d,SAAAjhB,EAAA8gB,GACAE,IACA9d,KAAAlD,GAAAghB,IAGA,IAAAE,EACA,MAAAC,EAAAlE,EAAAoD,aAAA,SAEAa,EADAxY,MAAAvJ,QAAAwhB,GACAA,EAEAS,OAAAC,KAAAV,IAEAvY,OAAAgZ,OAAAC,KAAAne,KAAA2a,UAAA1U,OAAA,SAAAyF,GACA,OAAAsS,EAAAI,KAAA,SAAAC,GACA,MAAA,iBAAAA,EACA3S,IAAA2S,EAEA3S,IAAA2S,EAAAvhB,UAEAgO,IAAAY,IACA,IAAA5O,EACA8gB,EAQA,MAPA,iBAAAlS,EAEAkS,EAAAH,EADA3gB,EAAA4O,IACA1L,KAAA2a,SAAA7d,QAEAA,EAAA4O,EAAA5O,KACA8gB,EAAAlS,IAGA5O,KAAAA,EACA8gB,KAAAA,KAEA3X,OAAAyF,IACA,MAAA4S,EAAAvE,EAAAoD,aAAAzR,EAAAkS,KAAAX,gBAAAnD,EAAAhB,YAAApN,EAAA5O,OACA,OAAAwhB,IAAAL,EAAAM,OAAAD,KACAva,QAAA4Z,IAGAzL,gBACA,MAAA,GAEAA,MAAA5M,EAAAkZ,GAAA,GACA,GAAAlZ,EAGA,OAAAtF,KAAAye,cAKAD,EACAlZ,EAAA1E,KAAAZ,MAEAA,KAAA+Q,WAAAzL,EAAA,KAPAtF,KAAA0b,YAAA1b,KAAA0b,qBACA1b,KAAA0b,YAAAzb,KAAAqF,IASA4M,eACAlS,KAAAye,UAAA,EACAze,KAAA+Q,WAAA,WACA,MAAA2N,EAAA1e,KAAA0b,YACA1b,KAAA0b,eACAgD,GAAAA,EAAAna,OAAA,GACAma,EAAA3a,QAAA,SAAAuB,GACAA,EAAA1E,KAAAZ,OACAA,MAEAA,KAAAwU,QAAA,UACA,GAEAtC,EAAApI,EAAAnM,GACA,OAAAqS,EAAAL,EAAA7F,EAAAnM,GAAAqC,KAAAqd,aAEAnL,GAAApI,EAAAnM,GACA,OAAAqS,EAAAF,GAAAhG,EAAAnM,GAAAqC,KAAAqd,aAEAnL,SAAAyM,GACA,OAAA3O,EAAAnE,SAAA7L,KAAAia,IAAA0E,GAEAzM,SAAA0M,GACA5O,EAAAjE,SAAA/L,KAAAia,IAAA2E,GAEA1M,YAAA2M,GACA7O,EAAAhE,YAAAhM,KAAAia,IAAA4E,GAEA3M,YAAA4M,EAAAC,GACA/O,EAAA/D,YAAAjM,KAAAia,IAAA6E,EAAAC,GAEA7M,OACAlS,KAAAgM,YAAA,cAEAkG,OACAlS,KAAA+L,SAAA,cAEAmG,cACAlS,KAAA+L,SAAA,oBAEAmG,gBACAlS,KAAAgM,YAAA,oBAEAkG,aAAA8M,GACA,OAAAhP,EAAArD,aAAA3M,KAAAia,IAAA+E,GAEA9M,aAAA8M,EAAAlf,GACAkQ,EAAApD,aAAA5M,KAAAia,IAAA+E,EAAAlf,GAEAoS,gBAAA8M,GACAhP,EAAAnD,gBAAA7M,KAAAia,IAAA+E,GAEA9M,MAAA+M,EAAAC,GACA,OAAAlf,KAAAmf,UAAA,QAAAF,EAAAC,GAEAhN,OAAA+M,EAAAC,GACA,OAAAlf,KAAAmf,UAAA,SAAAF,EAAAC,GAEAhN,WAAA7H,EAAAC,GACAtK,KAAAqK,MAAAA,GAAA,GACArK,KAAAsK,OAAAA,GAEA4H,UAAAkN,EAAAH,EAAAC,GACA,QAAA5f,IAAA2f,EAcA,OAbA,OAAAA,GAAAA,GAAAA,IACAA,EAAA,IAEA,KAAA,GAAAA,GAAAzd,QAAA,OAAA,KAAA,GAAAyd,GAAAzd,QAAA,MACAxB,KAAAia,IAAA1I,MAAA6N,GAAAH,EAEAjf,KAAAia,IAAA1I,MAAA6N,GADA,SAAAH,EACA,GAEAA,EAAA,UAEAC,GACAlf,KAAAwU,QAAA,oBAIA,IAAAxU,KAAAia,IACA,OAAA,EAEA,MAAAoF,EAAArf,KAAAia,IAAA1I,MAAA6N,GACAE,EAAAD,EAAA7d,QAAA,MACA,OAAA,IAAA8d,EACAC,SAAAF,EAAAlR,MAAA,EAAAmR,GAAA,IAEAC,SAAAvf,KAAAia,IAAA,SAAAH,EAAAhB,YAAAsG,IAAA,IAEAlN,iBAAAkN,GACA,IAAAI,EAAA,EACA,GAAA,UAAAJ,GAAA,WAAAA,EACA,MAAA,IAAAtc,MAAA,uDAIA,GAFA0c,EAAAnW,EAAArJ,KAAAia,IAAAmF,GAEA,KADAI,EAAA/X,WAAA+X,KACAC,MAAAD,GAAA,CACA,MAAAE,WAAA5F,EAAAhB,YAAAsG,KACAI,EAAAxf,KAAAia,IAAAyF,GAEA,OAAAF,EAEAtN,oBACA,OACA7H,MAAArK,KAAA2f,iBAAA,SACArV,OAAAtK,KAAA2f,iBAAA,WAGAzN,eACA,OAAAlS,KAAA2f,iBAAA,SAEAzN,gBACA,OAAAlS,KAAA2f,iBAAA,UAEAzN,QACAlS,KAAAia,IAAAhN,QAEAiF,OACAlS,KAAAia,IAAA2F,OAEA1N,cAAAvE,GACA3N,KAAAwa,UACA7M,EAAA4F,kBACAvT,KAAAwa,QAAAqF,cAAAlS,IAGAuE,eAAAvE,GACA3N,KAAA6f,cAAAlS,GAEAuE,gBACA,IAAA4N,EAAA,EACAC,EAAA,KAGA,IAAAC,EACAhgB,KAAAqa,SAAA,aAAA,SAAA1M,GACA,IAAAA,EAAAsS,QAAA1b,SACAwb,GACAjR,MAAAnB,EAAAsS,QAAA,GAAAnR,MACAC,MAAApB,EAAAsS,QAAA,GAAAlR,OAEA+Q,EAAA1a,OAAAiN,YAAAC,MACA0N,GAAA,KAGAhgB,KAAAqa,SAAA,YAAA,SAAA1M,GACA,GAAAA,EAAAsS,QAAA1b,OAAA,EACAyb,GAAA,OACA,GAAAD,EAAA,CACA,MAAAG,EAAAvS,EAAAsS,QAAA,GAAAnR,MAAAiR,EAAAjR,MACAqR,EAAAxS,EAAAsS,QAAA,GAAAlR,MAAAgR,EAAAhR,MACAqR,EAAApR,KAAAqR,KAAAH,EAAAA,EAAAC,EAAAA,GACAC,EApBA,KAqBAJ,GAAA,MAIA,MAAAM,EAAA,WACAN,GAAA,GAEAhgB,KAAAqa,SAAA,aAAAiG,GACAtgB,KAAAqa,SAAA,cAAAiG,GACAtgB,KAAAqa,SAAA,WAAA,SAAA1M,GAEA,GADAoS,EAAA,MACA,IAAAC,EAAA,CACA,MAAAO,EAAAnb,OAAAiN,YAAAC,MAAAwN,EACAS,EAjCA,MAkCA5S,EAAAqF,iBACAhT,KAAAwU,QAAA,WAKAtC,sBACA,IAAAlS,KAAA4Q,WAAA5Q,KAAA4Q,SAAA4P,mBACA,OAEA,MAAAC,EAAAlK,EAAA1B,KAAA7U,KAAA4Q,SAAA5Q,KAAA4Q,SAAA4P,oBACA,IAAAE,EACA1gB,KAAAqa,SAAA,aAAA,WACAoG,IACAzgB,KAAA2gB,cAAAD,GACAA,EAAA1gB,KAAA4gB,YAAAH,EAAA,OAEA,MAAAI,EAAA,SAAAlT,GACA8S,IACAzgB,KAAA2gB,cAAAD,IAEA1gB,KAAAqa,SAAA,YAAAoG,GACAzgB,KAAAqa,SAAA,WAAAwG,GACA7gB,KAAAqa,SAAA,cAAAwG,GAEA3O,WAAA5M,EAAAlH,GACA,IAAA0iB,EAUA,OATAxb,EAAAiR,EAAA1B,KAAA7U,KAAAsF,GACAtF,KAAA+gB,wBACAD,EAAA1b,OAAA2L,WAAA,KACA/Q,KAAAkb,eAAA1B,IAAAsH,IACA9gB,KAAAkb,eAAA7E,OAAAyK,GAEAxb,KACAlH,GACA4B,KAAAkb,eAAAnb,IAAA+gB,GACAA,EAEA5O,aAAA4O,GAKA,OAJA9gB,KAAAkb,eAAA1B,IAAAsH,KACA9gB,KAAAkb,eAAA7E,OAAAyK,GACA1b,OAAAsQ,aAAAoL,IAEAA,EAEA5O,YAAA5M,EAAA0b,GACA1b,EAAAiR,EAAA1B,KAAA7U,KAAAsF,GACAtF,KAAA+gB,wBACA,MAAAE,EAAA7b,OAAAwb,YAAAtb,EAAA0b,GAEA,OADAhhB,KAAAmb,gBAAApb,IAAAkhB,GACAA,EAEA/O,cAAA+O,GAKA,OAJAjhB,KAAAmb,gBAAA3B,IAAAyH,KACAjhB,KAAAmb,gBAAA9E,OAAA4K,GACA7b,OAAAub,cAAAM,IAEAA,EAEA/O,sBAAA5M,GACA,OAAAtF,KAAAkhB,cAGAlhB,KAAA+gB,wBAEAzb,EAAAiR,EAAA1B,KAAA7U,KAAAsF,GACAuV,EAAAzV,OAAA+b,sBAAA,KACAnhB,KAAAob,QAAA5B,IAAAqB,IACA7a,KAAAob,QAAA/E,OAAAwE,GAEAvV,MAEAtF,KAAAob,QAAArb,IAAA8a,GACAA,GAZA7a,KAAA+Q,WAAAzL,EAAA,IAAA,IAGA,IAAAuV,EAWA3I,2BAAApV,EAAAwI,GACA,GAAAtF,KAAAqb,WAAA7B,IAAA1c,GACA,OAEAkD,KAAA+gB,wBACAzb,EAAAiR,EAAA1B,KAAA7U,KAAAsF,GACA,MAAAuV,EAAA7a,KAAAmhB,sBAAA,KACA7b,IACAtF,KAAAqb,WAAA7B,IAAA1c,IACAkD,KAAAqb,WAAAhF,OAAAvZ,KAIA,OADAkD,KAAAqb,WAAAlF,IAAArZ,EAAA+d,GACA/d,EAEAoV,0BAAApV,GACAkD,KAAAqb,WAAA7B,IAAA1c,KAGAkD,KAAAohB,qBAAAphB,KAAAqb,WAAA5X,IAAA3G,IACAkD,KAAAqb,WAAAhF,OAAAvZ,IAEAoV,qBAAA2I,GACA,OAAA7a,KAAAkhB,cAGAlhB,KAAAob,QAAA5B,IAAAqB,KACA7a,KAAAob,QAAA/E,OAAAwE,GACAzV,OAAAgc,qBAAAvG,IAEAA,GANA7a,KAAA0V,aAAAmF,GAQA3I,wBACAlS,KAAAsb,2BAGAtb,KAAAsb,0BAAA,EACAtb,KAAAqhB,aAAA,UAAA,OAGA,aACA,8BAGA,UACA,yBAGA,iBACA,iBAGA,kBACA,kBAEAtd,QAAA,EAAAud,EAAAC,MACAvhB,KAAAshB,GAAAvd,QAAA,CAAAsb,EAAAxiB,IAAAmD,KAAAuhB,GAAA1kB,MAEAmD,KAAAsb,0BAAA,KAGApJ,yBAAApV,EAAA0kB,GACA,GAAA,iBAAA1kB,IAAAA,EACA,MAAA,IAAAgG,kCAAAhG,mCAEA,MAAAmhB,EAAAlE,EAAAoD,aAAA,QACAoB,EAAAN,GAAAA,EAAAM,OAAAiD,GACAC,EAAA1H,IAAAyH,GAAAzH,EAAA1J,UAAAqR,cAAAF,EAAAnR,WACA,GAAAkO,IAAAkD,EAAA,CACA,IAAAE,EAMA,MAJAA,EADApD,EACA,qDAEA,+BAEA,IAAAzb,6BAAAhG,OAAA6kB,MAEA7kB,EAAAgd,EAAAhB,YAAAhc,GACAid,EAAA6H,cACA7H,EAAA6H,gBAEA,MAAAC,EAAA9H,EAAAoD,aAAA,UACA,GAAA,WAAArgB,GAAA+kB,GAAAA,EAAAC,QAAA,CACA,MAAAA,EAAAD,EAAAC,QACAC,EAAA7D,OAAAC,KAAA2D,GACA,GAAAA,GAAAC,EAAAxd,OAAA,GAAAwd,EAAAjX,IAAAkX,GAAAF,EAAAE,IAAAlL,MAAAlO,SACA,MAAA,IAAA9F,MAAA,oEAKA,OAFAiX,EAAA6H,YAAA9kB,GAAA0kB,EACAzH,EAAA6H,YAAA9H,EAAA3W,YAAArG,IAAA0kB,EACAA,EAEAtP,oBAAApV,GACA,GAAAA,GAAAid,EAAA6H,YAGA,OAAA7H,EAAA6H,YAAA9kB,IAKA,OAFAid,EAAA1J,UAAA6Q,aAAA,mBAAA9b,OAAA+b,uBAAA,mBAAA/b,OAAAgc,qBACArH,EAAAkI,kBAAA,YAAAlI,GACAA,IAEA1e,OAAA,uCAAA,WACA,aAMA,SAAA6mB,EAAAjL,EAAAkL,EAAAC,EAAAC,GAEA,OAPA,SAAApL,EAAAqF,EAAAgG,GACA,GAAA,iBAAAhG,GAAAA,EAAA,GAAAA,EAAAgG,EACA,MAAA,IAAAxf,4BAAAmU,2CAAAqF,yCAAAgG,OAIAC,CAAAtL,EAAAoL,EAAAD,EAAA7d,OAAA,GACA6d,EAAAC,GAAAF,GAEA,SAAAK,EAAAJ,GACA,YAAA9iB,IAAA8iB,GAAA,IAAAA,EAAA7d,QAEAA,OAAA,EACA2N,QACA,MAAA,IAAApP,MAAA,oCAEAoP,MACA,MAAA,IAAApP,MAAA,sCAKAyB,OAAA6d,EAAA7d,OACAke,MAAAP,EAAArN,KAAA,KAAA,QAAA,EAAAuN,GACAM,IAAAR,EAAArN,KAAA,KAAA,MAAA,EAAAuN,IAGA,SAAAO,EAAAF,EAAAC,GACA,OAAAld,MAAAvJ,QAAAwmB,GACAD,EAAAC,QACAnjB,IAAAmjB,QAAAnjB,IAAAojB,EACAF,IAEAA,IACAC,EACAC,KAGA,OACAC,iBAAAA,EACAA,iBAAAA,KAGAtnB,OAAA,gCAAA,iBAAA,SAAAunB,GACA,aAqBA,OAAAC,gBApBA,SAAAC,EAAAC,GACA,IACAN,EACAC,EAFAM,EAAA,EAGA,IAAAD,EACA,OAAA,EAEAD,GAAAA,EAAAve,SACAue,EAAAF,EAAAK,gBAAA,EAAA,IAEA,IAAA,IAAA3e,EAAA,EAAAA,EAAAwe,EAAAve,OAAAD,IACAme,EAAAK,EAAAL,MAAAne,IACAoe,EAAAI,EAAAJ,IAAApe,IACAye,IACAL,EAAAK,GAEAC,GAAAN,EAAAD,EAEA,OAAAO,EAAAD,MAIA1nB,OAAA,+BAAA,eAAA,SAAAoE,GACA,aACA,SAAAyjB,EAAApjB,GACA,GAAAA,aAAAojB,EACA,OAAApjB,EAEA,iBAAAA,EACAE,KAAAgc,KAAAlc,EACA,iBAAAA,EACAE,KAAAmjB,QAAArjB,EACAL,EAAAkH,SAAA7G,KACA,iBAAAA,EAAAkc,OACAhc,KAAAgc,KAAAlc,EAAAkc,MAEAvc,EAAAiH,OAAA1G,KAAAF,IAEAE,KAAAmjB,UACAnjB,KAAAmjB,QAAAD,EAAAE,gBAAApjB,KAAAgc,OAAA,IAGAkH,EAAA7S,UAAA2L,KAAA,EACAkH,EAAA7S,UAAA8S,QAAA,GACAD,EAAA7S,UAAApO,OAAA,KACAihB,EAAAG,YACA,mBACA,oBACA,oBACA,mBACA,8BACA,uBAEAH,EAAAE,iBACAE,EAAA,iCACAC,EAAA,8DACAC,EAAA,8HACAC,EAAA,qHACAC,EAAA,qEAEA,IAAA,IAAAC,EAAA,EAAAA,EAAAT,EAAAG,WAAA9e,OAAAof,IACAT,EAAAA,EAAAG,WAAAM,IAAAA,EACAT,EAAA7S,UAAA6S,EAAAG,WAAAM,IAAAA,EAEA,OAAAT,IAEA7nB,OAAA,0CAAA,WAcA,OAbA,SAAAoE,EAAAmkB,GACA,IAAA7lB,EACAN,EAAA,KAEA,IACAM,EAAAwE,KAAAC,MAAA/C,EAAAmkB,GACA,MAAAC,GACApmB,EAAAomB,EAGA,OAAApmB,EAAAM,MAOA1C,OAAA,mCAAA,WACA,aACA,SAAAyoB,EAAAhkB,GACA,YAAAR,IAAAQ,GAAA,OAAAA,GAAA,mBAAAA,EAAAikB,KAQA,OACAD,UAAAA,EACAE,eARA,SAAAlkB,GACAgkB,EAAAhkB,IACAA,EAAAikB,KAAA,KAAAphB,WASAtH,OAAA,sDAAA,WACA,aACA,MAAA4oB,EAAA,SAAAC,GACA,MAAA3H,GACA,OACA,QACA,WACA,KACA,kCACA,OACA,OACA9V,OAAA,CAAAiW,EAAA5V,EAAAxC,KACA4f,EAAApd,KACA4V,EAAA5V,GAAAod,EAAApd,IAEA4V,IAEAyH,KAAAD,EAAAC,MAAA3e,MAAA6K,UAAAvF,IAAAlK,KAAAsjB,EAAAC,KAAA,SAAAC,GACA,OACAC,UAAAD,EAAAC,UACAC,QAAAF,EAAAE,QACApmB,KAAAkmB,EAAAlmB,KACA2c,GAAAuJ,EAAAvJ,QAIA,OAAA0B,GAyBA,OACAgI,iBAxBA,SAAAC,GACA,MAAAC,EAAAD,EAAA1U,GAAA,SACA4U,EAAAlf,MAAA6K,UAAAvF,IAAAlK,KAAA6jB,EAAA9kB,GAAAA,EAAAukB,OAQA,OAPA1e,MAAA6K,UAAAvF,IAAAlK,KAAA6jB,EAAA,SAAAE,GACA,MAAA5mB,EAAAkmB,EAAAU,EAAAT,OAIA,OAHAS,EAAAC,MACA7mB,EAAA6mB,IAAAD,EAAAC,KAEA7mB,IAEAmH,OAAAM,MAAA6K,UAAApK,OAAArF,KAAA4jB,EAAAK,aAAA,SAAAX,GACA,OAAA,IAAAQ,EAAAljB,QAAA0iB,KACApZ,IAAAmZ,KAaAa,iBAXA,SAAA/mB,EAAAymB,GAOA,OANAzmB,EAAAgG,QAAA,SAAAmgB,GACA,MAAAa,EAAAP,EAAAQ,mBAAAd,GAAAA,OACAA,EAAAU,KAAAV,EAAAC,MACAD,EAAAC,KAAApgB,QAAAqgB,GAAAW,EAAAE,OAAAb,MAGAI,EAAAK,cAKAZ,aAAAA,KAGA5oB,OAAA,mCAAA,WAYA,SAAAgZ,EAAA6Q,GAEA,GAAAA,GAAA,iBAAAA,EAAA,CACA,IAAAC,EAAAD,EAAA/Q,OAAA+Q,EAAA7Q,SAAA6Q,EAAA9Q,SACA+Q,IAAAD,EAAAC,GAIA,GAAA,iBAAAD,EAAA,OAAAzI,EAAAyI,GAGA,IAAAE,EAAAC,OAAAH,GAGAI,EAAAC,EAAAH,EAAAjiB,eACA,GAAAmiB,EAAA,OAAAA,EAGA,IAAAA,EAAAE,EAAAJ,EAAAjiB,eACA,OAAAmiB,IAGA,IAAAF,EAAA7gB,OAAA6gB,EAAAK,WAAA,QAAA,GAaApR,EAAAqR,WAAA,SAAA/X,EAAAgY,GACA,GAAAhY,GAAA,iBAAAA,EAAA,CACA,IAAA0G,EAAA1G,EAAAwG,OAAAxG,EAAA0G,SAAA1G,EAAAyG,SACA,GAAA,OAAAC,QAAA/U,IAAA+U,EAAA,OAAA,EACA,GAAA,iBAAAsR,EAAA,CAEA,IAAAL,EAAAC,EAAAI,EAAAxiB,eACA,GAAAmiB,EAAA,OAAAA,IAAAjR,EAGA,IAAAiR,EAAAE,EAAAG,EAAAxiB,eACA,GAAAmiB,EAAA,OAAAA,IAAAjR,OACA,GAAA,iBAAAsR,EACA,OAAAA,IAAAtR,EAEA,OAAA,IAIA,IAAAuR,QAAAvR,EAQAkR,EAAAK,QAAA5J,KAAA4J,QAAAL,OACAM,UAAA,EACAC,IAAA,EACAC,MAAA,GACAxO,MAAA,GACAyO,KAAA,GACAC,IAAA,GACAC,cAAA,GACAC,YAAA,GACAC,IAAA,GACAC,MAAA,GACAC,UAAA,GACAC,YAAA,GACA7D,IAAA,GACA8D,KAAA,GACArc,KAAA,GACAsc,GAAA,GACAC,MAAA,GACAC,KAAA,GACAC,OAAA,GACAvQ,OAAA,GACAwQ,QAAA,GACAC,eAAA,GACAC,gBAAA,GACAC,WAAA,IACAC,WAAA,IACAC,WAAA,IACAC,WAAA,IACAC,WAAA,IACAC,WAAA,IACAC,cAAA,IACAC,cAAA,IACAC,gBAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,KAAA,IACAC,IAAA,IACAC,IAAA,KAKA3C,EAAAI,QAAAJ,SACA4C,QAAA,GACAC,IAAA,GACAC,IAAA,GACAC,IAAA,GACAC,IAAA,GACAC,IAAA,GACAC,QAAA,GACAC,OAAA,GACAC,MAAA,GACAC,MAAA,GACAC,KAAA,GACAC,OAAA,GACAC,OAAA,GACAC,IAAA,GACAC,SAAA,GACAC,KAAA,GACAC,KAAA,GACAC,IAAA,GACAxlB,IAAA,GACAylB,IAAA,IAQA,IAAAhlB,EAAA,GAAAA,EAAA,IAAAA,IAAAihB,EAAAF,OAAAkE,aAAAjlB,IAAAA,EAAA,GAGA,IAAA,IAAAA,EAAA,GAAAA,EAAA,GAAAA,IAAAihB,EAAAjhB,EAAA,IAAAA,EAGA,IAAAA,EAAA,EAAAA,EAAA,GAAAA,IAAAihB,EAAA,IAAAjhB,GAAAA,EAAA,IAGA,IAAAA,EAAA,EAAAA,EAAA,GAAAA,IAAAihB,EAAA,UAAAjhB,GAAAA,EAAA,GAQA,IAAAmY,EAAAmJ,QAAAnJ,MAAAmJ,QAAA4D,SAGA,IAAAllB,KAAAihB,EAAA9I,EAAA8I,EAAAjhB,IAAAA,EAGA,IAAA,IAAAmlB,KAAAjE,EACAD,EAAAkE,GAAAjE,EAAAiE,GAGA,OAAA7D,UAGAvqB,OAAA,gCACA,iCACA,cACA,cACA,mBACA,SAAAmB,EAAAwT,EAAA+J,EAAA2P,GACA,aACA,MAAAC,EAAA,yBACAC,UAAA7P,EACA7H,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAA6pB,QAAA7pB,KAAA8pB,eAAA9pB,KAAA+pB,gBAAA,EACA/pB,KAAAgqB,WAAAhqB,KAAA2a,SAAAsP,aACAjqB,KAAA6K,QAAA7K,KAAA2a,SAAA9P,SACA7K,KAAAwc,WAAAxM,EAAA7E,SAAA,OAAAmG,aAAAqY,cAAAO,KAAA,aACAlqB,KAAAmqB,QAAAna,EAAA7E,SAAA,KACAmG,aAAAqY,iCACA9O,GAAA7a,KAAA6G,KAAA8F,aAAA,sBAEAqD,EAAAxE,YAAAxL,KAAAmqB,QAAAnqB,KAAAoqB,eACApqB,KAAAia,IAAAoQ,YAAArqB,KAAAmqB,SACAnqB,KAAAia,IAAAoQ,YAAArqB,KAAAwc,YAEAtK,WACA,OAAAiI,MAAAhP,SAAA,OACAmG,UAAAtR,KAAAsqB,gBACAC,UAAA,IAEAC,sBAAAxqB,KAAA6a,mBACA4P,cAAA,OACAC,aAAA1qB,KAAA2qB,QACAT,KAAA,WAGAhY,UACAlS,KAAAwc,WAAA,KACAxc,KAAAmqB,QAAA,KACAnqB,KAAA4qB,oBAAA,KACAzQ,MAAAyB,UAEA1J,gBACA,SAAAyX,gBAAAxP,MAAAmQ,kBAEApY,QACA,OAAAlS,KAAA6qB,SAAA7qB,KAAA2a,SAAAgQ,OAAA,gBAEAzY,cACA,IAAA4Y,EAAA9qB,KAAA2a,SAAAyP,aAAApqB,KAAA6qB,SAAA,2BAIA,OAHA7qB,KAAAgqB,cACAc,GAAA,IAAA9qB,KAAA6qB,SAAA,wFAEAC,EAEA5Y,OACA,IAAAlS,KAAA6pB,QAAA,CACA,MAAAjZ,EAAA5Q,KAAA4Q,SACA5Q,KAAAwU,QAAA,mBACAxU,KAAA6pB,SAAA,GACA7pB,KAAA2a,SAAAoQ,aAAA/qB,KAAA8pB,iBAAA9pB,KAAA+pB,iBACA/pB,KAAAgrB,OAEAhrB,KAAAirB,aAAAra,EAAAsa,SACAlrB,KAAA2a,SAAAwQ,aAAAnrB,KAAAirB,aACAra,EAAAgY,QAEA5oB,KAAAqa,SAAA,UAAAra,KAAA6f,eACA7f,KAAAorB,aAAAxa,EAAAya,WACAza,EAAAya,UAAA,GACArrB,KAAAsrB,OACAtrB,KAAAurB,oBACAvrB,KAAA6G,KAAA+F,aAAA,cAAA,SACA5M,KAAAwU,QAAA,aACAxU,KAAA8pB,gBAAA,GAGA5X,OAAApS,GAIA,MAHA,kBAAAA,GACAE,KAAAF,EAAA,OAAA,WAEAE,KAAA6pB,QAEA3X,QACA,IAAAlS,KAAA6pB,QACA,OAEA,MAAAjZ,EAAA5Q,KAAA4Q,SACA5Q,KAAAwU,QAAA,oBACAxU,KAAA6pB,SAAA,EACA7pB,KAAAirB,aAAAjrB,KAAA2a,SAAAwQ,aACAva,EAAA2J,OAEAva,KAAA2X,WAAA,UAAA3X,KAAA6f,eACA7f,KAAAorB,cACAxa,EAAAya,UAAA,GAEArrB,KAAAwrB,OACAxrB,KAAA6G,KAAA+F,aAAA,cAAA,QACA5M,KAAAwU,QAAA,cACAxU,KAAAyrB,mBACAzrB,KAAA2a,SAAA+Q,WACA1rB,KAAA4b,UAGA1J,UAAApS,GACA,GAAA,kBAAAA,EAAA,CACA,MAAAkqB,EAAAhqB,KAAA2rB,aAAA7rB,EACA,IAAA8rB,EAAA5rB,KAAA6c,SAAA,eACA,GAAAmN,IAAA4B,EAAA,CACA,MAAAC,EAAA7rB,KAAAwc,WACAxc,KAAAwc,WAAAxc,KAAAia,IACA2R,EAAA5rB,KAAA+d,SAAA,eAAA+N,YAAA,uBACA9rB,KAAAwc,WAAAqP,EACA7rB,KAAAqa,SAAAuR,EAAA,QAAA5rB,KAAA4rB,QAEA5B,GAAA4B,IACA5rB,KAAA2X,WAAAiU,EAAA,QAAA5rB,KAAA4rB,OACA5rB,KAAA6b,YAAA+P,GACAA,EAAAhQ,WAGA,OAAA5b,KAAA2rB,WAEAzZ,OACAlS,KAAA+rB,SAAA/rB,KAAA6K,WAEAqH,SAAArH,GACA,MAAAwS,EAAArd,KAAAqd,YACA2O,EAAA3O,EAAAhQ,WACA4e,EAAA5O,EAAA6O,YACAlsB,KAAAwU,QAAA,mBACAxU,KAAA+pB,gBAAA,EACAiC,EAAAnQ,YAAAwB,GACArd,KAAAqP,QACAW,EAAAT,cAAA8N,EAAAxS,GACA7K,KAAAwU,QAAA,aACAyX,EACAD,EAAA1O,aAAAD,EAAA4O,GAEAD,EAAA3B,YAAAhN,GAEA,MAAA8O,EAAAnsB,KAAA6c,SAAA,eACAsP,GACAH,EAAA3B,YAAA8B,EAAAlS,KAGA/H,QACAlS,KAAAwU,QAAA,oBACAxE,EAAAZ,QAAApP,KAAAqd,aACArd,KAAAwU,QAAA,cAEAtC,QAAApS,GAIA,YAHA,IAAAA,IACAE,KAAAosB,SAAAtsB,GAEAE,KAAAosB,SAEAla,oBACA,MAAAma,EAAA7vB,EAAA8vB,cACAC,EAAAvsB,KAAAwa,QAAAP,IACAja,KAAA4qB,oBAAA,MACA2B,EAAAC,SAAAH,IAAAE,IAAAF,KACArsB,KAAA4qB,oBAAAyB,EACArsB,KAAAiN,SAGAiF,mBACAlS,KAAA4qB,sBACA5qB,KAAA4qB,oBAAA3d,QACAjN,KAAA4qB,oBAAA,MAGA1Y,cAAAvE,GAEA,GADAA,EAAA4F,kBACAmW,EAAAhE,WAAA/X,EAAA,WAAA3N,KAAAgqB,YAGA,OAFArc,EAAAqF,sBACAhT,KAAA4rB,QAGA,IAAAlC,EAAAhE,WAAA/X,EAAA,OACA,OAEA,MAAA8e,EAAAzsB,KAAA0sB,gBACAL,EAAArsB,KAAAia,IAAAlQ,cAAA,UACA,IAAA4iB,EACA,IAAA,IAAAroB,EAAA,EAAAA,EAAAmoB,EAAAloB,OAAAD,IACA,GAAA+nB,IAAAI,EAAAnoB,GAAA,CACAqoB,EAAAroB,EACA,MAGA9H,EAAA8vB,gBAAAtsB,KAAAia,MACA0S,EAAA,GAEAhf,EAAAif,UAAA,IAAAD,GACAF,EAAAA,EAAAloB,OAAA,GAAA0I,QACAU,EAAAqF,kBACArF,EAAAif,UAAAD,IAAAF,EAAAloB,OAAA,IACAkoB,EAAA,GAAAxf,QACAU,EAAAqF,kBAGAd,gBACA,MAAA2a,EAAA7sB,KAAAia,IAAA6S,iBAAA,KACA,OAAAtnB,MAAA6K,UAAApK,OAAArF,KAAAisB,EAAAnhB,IACAA,aAAAtG,OAAA2nB,mBAAArhB,aAAAtG,OAAA4nB,kBAAAthB,EAAAuhB,aAAA,UAAAvhB,aAAAtG,OAAA8nB,kBAAAxhB,aAAAtG,OAAA+nB,mBAAAzhB,aAAAtG,OAAAgoB,qBAAA1hB,aAAAtG,OAAAioB,qBAAA3hB,EAAAuhB,aAAA,aAAAvhB,aAAAtG,OAAAkoB,mBAAA5hB,aAAAtG,OAAAmoB,mBAAA7hB,aAAAtG,OAAAooB,kBAAA9hB,EAAAuhB,aAAA,cAAA,IAAAvhB,EAAAiB,aAAA,aAAAjB,EAAAuhB,aAAA,qBASA,OALArD,EAAAvZ,UAAAsK,UACAwQ,aAAA,EACAO,WAAA,GAEA3R,EAAAkI,kBAAA,cAAA2H,GACAA,IAEAvuB,OAAA,qCACA,kBACA,qBACA,SAAAya,EAAAmC,GACA,mBACAwV,UAAA3X,EACA5D,YAAAwb,MACAvT,QACAna,KAAA2tB,WACAzP,OAAA0P,eAAA5tB,KAAA,UACAkS,MACA,OAAAlS,KAAA2tB,QAAAppB,UAGA,IAAA,IAAAD,EAAA,EAAAA,EAAAopB,EAAAnpB,OAAAD,IACAtE,KAAA6tB,SAAAH,EAAAppB,IAGA4N,SAAAgS,GACA,MAAA5H,EAAAtc,KAAA2tB,QAAAppB,OACA,GAAA+X,KAAAtc,MACAke,OAAA0P,eAAA5tB,KAAAsc,GACApK,MACA,OAAAlS,KAAA2tB,QAAArR,OAIA,IAAAtc,KAAA2tB,QAAAnsB,QAAA0iB,KACAlkB,KAAA2tB,QAAA1tB,KAAAikB,GACAlkB,KAAAwU,SACA0P,MAAAA,EACA9nB,KAAA,WACAmS,OAAAvO,QAGAkkB,EAAA4J,aAAA,MACA9tB,KAAAwU,SACA0P,MAAAA,EACA9nB,KAAA,cACAmS,OAAAvO,SAGAiY,EAAArB,UAAAsN,IACAA,EAAA/S,iBAAA,cAAA+S,EAAA4J,cAGA5b,YAAA6b,GACA,IAAA7J,EACA,IAAA,IAAA5f,EAAA,EAAA0pB,EAAAhuB,KAAAuE,OAAAD,EAAA0pB,EAAA1pB,IACA,GAAAtE,KAAAsE,KAAAypB,EAAA,EACA7J,EAAAlkB,KAAAsE,IACAsB,KACAse,EAAAte,MAEA5F,KAAA2tB,QAAAxoB,OAAAb,EAAA,GACA,MAGA4f,GAGAlkB,KAAAwU,SACA0P,MAAAA,EACA9nB,KAAA,cACAmS,OAAAvO,OAGAkS,aAAA2I,GACA,IAAA7Y,EAAA,KACA,IAAA,IAAAsC,EAAA,EAAA0pB,EAAAhuB,KAAAuE,OAAAD,EAAA0pB,EAAA1pB,IAAA,CACA,MAAA4f,EAAAlkB,KAAAsE,GACA,GAAA4f,EAAArJ,KAAAA,EAAA,CACA7Y,EAAAkiB,EACA,OAGA,OAAAliB,GAGAyrB,EAAApd,UAAA4d,gBACAC,OAAA,SACAC,SAAA,WACAC,YAAA,cACAC,YAAA,eAEA,IAAA,MAAA1gB,KAAA8f,EAAApd,UAAA4d,eACAR,EAAApd,UAAA,KAAA1C,GAAA,KAEA,OAAA8f,IAEApyB,OAAA,2CACA,gBACA,SAAAoyB,GACA,aACA,MAAAa,EAAA,SAAAC,EAAArK,GACA,IAAA,IAAA5f,EAAA,EAAAA,EAAAiqB,EAAAhqB,OAAAD,IACA4Z,OAAAC,KAAAoQ,EAAAjqB,IAAAC,QAAA2f,EAAArJ,KAAA0T,EAAAjqB,GAAAuW,KAGA0T,EAAAjqB,GAAAkqB,SAAA,IAyCA,qBAtCAf,EACAvb,YAAAwb,MACA,IAAA,IAAAppB,EAAAopB,EAAAnpB,OAAA,EAAAD,GAAA,EAAAA,IACA,GAAAopB,EAAAppB,GAAAkqB,QAAA,CACAF,EAAAZ,EAAAA,EAAAppB,IACA,MAGA6V,MAAAuT,GACA1tB,KAAAyuB,WAAA,EAEAvc,SAAAgS,GACAA,EAAAsK,SACAF,EAAAtuB,KAAAkkB,GAEA/J,MAAA0T,SAAA3J,GACAA,EAAA/S,mBAGA+S,EAAAwK,eAAA,MACA1uB,KAAAyuB,YAGAzuB,KAAAyuB,WAAA,EACAH,EAAAtuB,KAAAkkB,GACAlkB,KAAAyuB,WAAA,EACAzuB,KAAAwU,QAAA,aAEA0P,EAAA/S,iBAAA,gBAAA+S,EAAAwK,iBAEAxc,YAAA6b,GACA5T,MAAAwU,YAAAZ,GACAA,EAAA9c,qBAAA8c,EAAAW,iBACAX,EAAA9c,oBAAA,gBAAA8c,EAAAW,gBACAX,EAAAW,eAAA,UAMArzB,OAAA,2CAAA,gBAAA,SAAAoyB,GACA,aACA,MAAAa,EAAA,SAAAC,EAAArK,GACA,IAAA,IAAA5f,EAAA,EAAAA,EAAAiqB,EAAAhqB,OAAAD,IACA4Z,OAAAC,KAAAoQ,EAAAjqB,IAAAC,QAAA2f,EAAArJ,KAAA0T,EAAAjqB,GAAAuW,KAGA0T,EAAAjqB,GAAAsqB,UAAA,IAqDA,qBAlDAnB,EACAvb,YAAAwb,MACA,IAAA,IAAAppB,EAAAopB,EAAAnpB,OAAA,EAAAD,GAAA,EAAAA,IACA,GAAAopB,EAAAppB,GAAAsqB,SAAA,CACAN,EAAAZ,EAAAA,EAAAppB,IACA,MAGA6V,MAAAuT,GACA1tB,KAAAyuB,WAAA,EACAvQ,OAAA0P,eAAA5tB,KAAA,iBACAkS,MACA,IAAA,IAAA5N,EAAA,EAAAA,EAAAtE,KAAAuE,OAAAD,IACA,GAAAtE,KAAAsE,GAAAsqB,SACA,OAAAtqB,EAGA,OAAA,GAEA4N,UAIAA,SAAAgS,GACAA,EAAA0K,UACAN,EAAAtuB,KAAAkkB,GAEA/J,MAAA0T,SAAA3J,GACAA,EAAA/S,mBAGA+S,EAAA2K,gBAAA,MACA7uB,KAAAyuB,YAGAzuB,KAAAyuB,WAAA,EACAH,EAAAtuB,KAAAkkB,GACAlkB,KAAAyuB,WAAA,EACAzuB,KAAAwU,QAAA,aAEA0P,EAAA/S,iBAAA,iBAAA+S,EAAA2K,kBAEA3c,YAAA6b,GACA5T,MAAAwU,YAAAZ,GACAA,EAAA9c,qBAAA8c,EAAAc,kBACAd,EAAA9c,oBAAA,iBAAA8c,EAAAc,iBACAd,EAAAc,gBAAA,UAMAxzB,OAAA,0CACA,gBACA,SAAAoyB,GAEA,aAiCA,qBA/BAA,EACAvb,SAAAgS,GACA/J,MAAA0T,SAAA3J,GACAlkB,KAAA8uB,eACA9uB,KAAA8uB,aAAA,KAAA9uB,KAAAiW,aAAA,YAEAjW,KAAA+uB,gCACA/uB,KAAAgvB,+BAAA,KAAAhvB,KAAAwU,QAAA,4BAEA0P,EAAA/S,iBAAA,aAAAnR,KAAA8uB,eAKA,KAHA,WACA,YAEAttB,QAAA0iB,EAAA+K,OACA/K,EAAA/S,iBAAA,aAAAnR,KAAAgvB,gCAGA9c,YAAA6b,GACA5T,MAAAwU,YAAAZ,GACAA,EAAA9c,sBACAjR,KAAA8uB,cACAf,EAAA9c,oBAAA,aAAAjR,KAAA8uB,cAEA9uB,KAAAkvB,yBACAnB,EAAA9c,oBAAA,aAAAjR,KAAAgvB,qCAQA3zB,OAAA,oDAAA,WACA,aAmDA,aAjDA6W,YAAAid,MACAnvB,KAAAovB,kBACAlR,OAAA0P,eAAA5tB,KAAA,UACAkS,MACA,OAAAlS,KAAAovB,eAAA7qB,UAGA,IAAA,IAAAD,EAAA,EAAAC,EAAA4qB,EAAA5qB,OAAAD,EAAAC,EAAAD,IACAtE,KAAAqvB,iBAAAF,EAAA7qB,IAGA4N,iBAAAod,GACA,MAAAhT,EAAAtc,KAAAovB,eAAA7qB,OACA,GAAA+X,KAAAtc,MACAke,OAAA0P,eAAA5tB,KAAAsc,GACApK,MACA,OAAAlS,KAAAovB,eAAA9S,OAIA,IAAAtc,KAAAovB,eAAA5tB,QAAA8tB,IACAtvB,KAAAovB,eAAAnvB,KAAAqvB,GAGApd,wBAAAgS,GACA,IAAAqL,EACA,IAAA,IAAAjrB,EAAA,EAAAC,EAAAvE,KAAAovB,eAAA7qB,OAAAD,EAAAC,EAAAD,IACA,GAAA4f,IAAAlkB,KAAAovB,eAAA9qB,GAAA4f,MAAA,CACAqL,EAAAvvB,KAAAovB,eAAA9qB,GACA,MAGA,OAAAirB,EAEArd,oBAAAod,GACA,IAAA,IAAAhrB,EAAA,EAAAC,EAAAvE,KAAAovB,eAAA7qB,OAAAD,EAAAC,EAAAD,IACA,GAAAgrB,IAAAtvB,KAAAovB,eAAA9qB,GAAA,CACAtE,KAAAovB,eAAA9qB,GAAA4f,OAAA,mBAAAlkB,KAAAovB,eAAA9qB,GAAA4f,MAAAte,KACA5F,KAAAovB,eAAA9qB,GAAA4f,MAAAte,MAEA,mBAAA5F,KAAAovB,eAAA9qB,GAAAsB,KACA5F,KAAAovB,eAAA9qB,GAAAsB,MAEA5F,KAAAovB,eAAAjqB,OAAAb,EAAA,GACA,WAOAjJ,OAAA,gDAAA,WACA,mBACAm0B,EACAtd,YAAAiS,GACAqL,EAAAnf,UAAAof,SAAA7uB,KAAAZ,KAAAmkB,GACAjG,OAAA0P,eAAA5tB,KAAA,UACAkS,MACA,OAAAlS,KAAA0vB,WAIAxd,SAAAiS,GACA,MAAAwL,EAAA3vB,KAAAuE,QAAA,EACA,IAAAD,EAAA,EACA,MAAA0pB,EAAA7J,EAAA5f,OACAvE,KAAA4vB,MAAAzL,EACAnkB,KAAA0vB,QAAAvL,EAAA5f,OACA,MAAAsrB,EAAA,SAAAvT,GACA,GAAAA,KAAAtc,MACAke,OAAA0P,eAAA5tB,KAAA,GAAAsc,GACApK,MACA,OAAAlS,KAAA4vB,MAAAtT,OAKA,GAAAqT,EAAA3B,EAEA,IADA1pB,EAAAqrB,EACArrB,EAAA0pB,EAAA1pB,IACAurB,EAAAjvB,KAAAZ,KAAAsE,GAIA4N,WAAA2I,GACA,IAAA7Y,EAAA,KACA,IAAA,IAAAsC,EAAA,EAAA0pB,EAAAhuB,KAAAuE,OAAAD,EAAA0pB,EAAA1pB,IAAA,CACA,MAAA8f,EAAApkB,KAAAsE,GACA,GAAA8f,EAAAvJ,KAAAA,EAAA,CACA7Y,EAAAoiB,EACA,OAGA,OAAApiB,GAGA,OAAAwtB,IAEAn0B,OAAA,wCAAA,WACA,aA6BA,OACAy0B,gBA5BAC,YAAA,cACAC,SAAA,WACAC,KAAA,OACAC,KAAA,OACAC,UAAA,YACAC,WAAA,cAwBAC,gBArBAN,YAAA,cACAO,aAAA,eACAL,KAAA,OACAM,YAAA,YACAC,YAAA,cACAJ,WAAA,cAiBAK,eAdAN,UAAA,YACAH,SAAA,WACAM,aAAA,eACAI,SAAA,WACAC,SAAA,YAWAC,eARAC,SAAA,WACAC,OAAA,SACAC,QAAA,cASA11B,OAAA,gCACA,gBACA,mBACA,SAAA0W,EAAA+D,GACA,aAgCA,qBA/BAA,EACA5D,YAAAhT,MACAib,QACA,MAAA6W,GACAnW,GAAA3b,EAAA2b,IAAA,aAAA9I,EAAAF,UACAod,KAAA/vB,EAAA+vB,MAAA,GACAhT,SAAA/c,EAAA+c,UAAA,IAEA,IAAA0O,EAAAzrB,EAAAyrB,OAAA,GACA,IAAA,MAAA9tB,KAAAm0B,EACA9S,OAAA0P,eAAA5tB,KAAAnD,GACA4G,IAAA,IACAutB,EAAAn0B,GAEAqV,UAIAgM,OAAA0P,eAAA5tB,KAAA,SACAyD,IAAA,IACAknB,EAEAzY,IAAA+e,GACAA,IAAAtG,IACAA,EAAAsG,EACAjxB,KAAAwU,QAAA,uBAQAnZ,OAAA,6BACA,kCACA,SAAAmB,GACA,aACA,MAAA00B,EAAA,SAAA50B,GACA,MAAA60B,GACA,WACA,WACA,OACA,WACA,SACA,OACA,QAEA,IAAA50B,EAAAC,EAAAC,cAAA,KACAF,EAAAG,KAAAJ,EACA,MAAA80B,EAAA,KAAA70B,EAAA80B,MAAA,UAAA90B,EAAA+0B,SACA,IAAAC,EACAH,KACAG,EAAA/0B,EAAAC,cAAA,QACA+0B,sBAAAl1B,UACAC,EAAAg1B,EAAAE,WACAF,EAAA3kB,aAAA,QAAA,oCACApQ,EAAAwQ,KAAAqd,YAAAkH,IAEA,MAAAG,KACA,IAAA,IAAAptB,EAAA,EAAAA,EAAA6sB,EAAA5sB,OAAAD,IACAotB,EAAAP,EAAA7sB,IAAA/H,EAAA40B,EAAA7sB,IAcA,MAZA,UAAAotB,EAAAJ,WACAI,EAAAL,KAAAK,EAAAL,KAAAryB,QAAA,OAAA,KAEA,WAAA0yB,EAAAJ,WACAI,EAAAL,KAAAK,EAAAL,KAAAryB,QAAA,QAAA,KAEA0yB,EAAAJ,WACAI,EAAAJ,SAAAlsB,OAAAusB,SAAAL,UAEAF,GACA50B,EAAAwQ,KAAA6O,YAAA0V,GAEAG,GA0BA,OACAR,SAAAA,EACAU,eA1BA,SAAAt1B,GACA,IAAAA,EAAAuL,MAAA,gBAAA,CACA,MAAA0pB,EAAA/0B,EAAAC,cAAA,OACA80B,EAAAC,sBAAAl1B,WACAA,EAAAi1B,EAAAE,WAAA/0B,KAEA,OAAAJ,GAqBAu1B,iBAnBA,SAAAC,GACA,GAAA,iBAAAA,EAAA,CACA,MAAAC,EAAA,yEACAC,EAAAD,EAAAxqB,KAAAuqB,GACA,GAAAE,EACA,OAAAA,EAAAtqB,MAAAvE,cAGA,MAAA,IAYA8uB,cAVA,SAAA31B,EAAA41B,EAAA9sB,OAAAusB,UACA,MAAAQ,EAAAjB,EAAA50B,GAGA,OAFA,MAAA61B,EAAAb,SAAAY,EAAAZ,SAAAa,EAAAb,UACAa,EAAAd,OAAAa,EAAAZ,SAAAY,EAAAb,SAUAh2B,OAAA,6BACA,+BACA,wBACA,sBACA,wBACA,SAAA+J,EAAA5J,EAAAD,EAAA62B,GAEA,aAUA,IAAAC,EAAA,SAAArxB,GACA,IAAAgB,KAEA,OAAAhB,GAIAA,EAAAyI,OAAA7K,MAAA,MAAAmF,QAAA,SAAAuuB,GACA,IAAAhW,EAAAgW,EAAA9wB,QAAA,KACA3E,EAAAy1B,EAAAnkB,MAAA,EAAAmO,GAAA7S,OAAAtG,cACArD,EAAAwyB,EAAAnkB,MAAAmO,EAAA,GAAA7S,YAEA,IAAAzH,EAAAnF,GACAmF,EAAAnF,GAAAiD,EACA0F,MAAAvJ,QAAA+F,EAAAnF,IACAmF,EAAAnF,GAAAoD,KAAAH,GAEAkC,EAAAnF,IAAAmF,EAAAnF,GAAAiD,KAIAkC,GAjBAA,GA6CA,SAAAuwB,EAAAC,EAAAtzB,EAAAkZ,GACA,IAAA5Y,EAAAgzB,EAYA,OAVAj3B,EAAAW,WAAAgD,IACAkZ,EAAAlZ,EACA,iBAAAszB,IACAhzB,GAAAgzB,IAAAA,KAGAhzB,EAAAhE,EAAAO,SAAAmD,GAAAszB,IAAAA,IAGAhzB,EAAA4Y,SAAAA,EACA5Y,EAGA,SAAAizB,EAAAD,EAAAtzB,EAAAkZ,GAEA,OAAAsa,EADAxzB,EAAAqzB,EAAAC,EAAAtzB,EAAAkZ,IAIA,SAAAsa,EAAAxzB,GACA,QAAA,IAAAA,EAAAkZ,SACA,MAAA,IAAAtV,MAAA,6BAGA,IAAA6vB,GAAA,EACAva,EAAA,SAAAyL,EAAAphB,EAAAuK,GACA2lB,IACAA,GAAA,EACAzzB,EAAAkZ,SAAAyL,EAAAphB,EAAAuK,KA6BA,SAAA4lB,EAAA5vB,GAMA,OALA0S,aAAAmd,GACA7vB,aAAAF,QACAE,EAAA,IAAAF,MAAA,IAAAE,GAAA,kCAEAA,EAAA8vB,WAAA,EACA1a,EAAApV,EAAA+vB,GAIA,SAAAC,IACA,IAAAC,EAAA,CACA,IAAAhxB,EACAyT,aAAAmd,GAGA5wB,EAFA/C,EAAAg0B,aAAA5zB,IAAAoB,EAAAuB,OAEA,IAEA,OAAAvB,EAAAuB,OAAA,IAAAvB,EAAAuB,OAEA,IAAAQ,EAAAswB,EACAlP,EAAA,KAiBA,OAfA,IAAA5hB,GACAQ,GACAuK,KA5CA,WAEA,IAAAA,OAAA1N,EAGA0N,EADAtM,EAAA+B,SACA/B,EAAA+B,SAEA/B,EAAA2B,cAsJA,SAAA3B,GAGA,IACA,GAAA,aAAAA,EAAAgB,aACA,OAAAhB,EAAA4B,YAEA,IAAA6wB,EAAAzyB,EAAA4B,aAAA,gBAAA5B,EAAA4B,YAAAuR,gBAAA7F,SACA,GAAA,KAAAtN,EAAAgB,eAAAyxB,EACA,OAAAzyB,EAAA4B,YAEA,MAAAK,IAEA,OAAA,KAnKAywB,CAAA1yB,GAGA,GAAA2yB,EACA,IACArmB,EAAAzK,KAAAC,MAAAwK,GACA,MAAArK,IAGA,OAAAqK,EA4BAsmB,GACAR,WAAA7wB,EACA4H,OAAAA,EACA7I,WACA1E,IAAAk2B,EACAe,WAAA7yB,GAEAA,EAAA8yB,wBACA/wB,EAAAzB,QAAAqxB,EAAA3xB,EAAA8yB,2BAGA3P,EAAA,IAAA/gB,MAAA,iCAEAsV,EAAAyL,EAAAphB,EAAAA,EAAAuK,OAGA,IAUAnQ,EACAo2B,EAXAvyB,EAAAxB,EAAAwB,KAAA,KAEAA,IAEAA,EADAxB,EAAAu0B,MAAAv0B,EAAAg0B,OACA,IAAAT,EAAAiB,eAEA,IAAAjB,EAAA9xB,gBAMA,IAMAkyB,EANAL,EAAA9xB,EAAApE,IAAA4C,EAAAszB,KAAAtzB,EAAA5C,IACAuN,EAAAnJ,EAAAmJ,OAAA3K,EAAA2K,QAAA,MACAmD,EAAA9N,EAAA8N,MAAA9N,EAAAC,KACA6B,EAAAN,EAAAM,QAAA9B,EAAA8B,YACAwd,IAAAtf,EAAAsf,KACA6U,GAAA,EAEAN,GACA/lB,UAAA1N,EACA0B,WACA8xB,WAAA,EACAjpB,OAAAA,EACAvN,IAAAk2B,EACAe,WAAA7yB,GA0CA,GAvCA,SAAAxB,IAAA,IAAAA,EAAAnB,OACAs1B,GAAA,EACAryB,EAAA,QAAAA,EAAA,SAAAA,EAAA,OAAA,oBACA,QAAA6I,GAAA,SAAAA,IACA7I,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,gBAAA,oBACAgM,EAAAzK,KAAAoxB,WAAA,IAAAz0B,EAAAnB,KAAAiP,EAAA9N,EAAAnB,QAIA2C,EAAAkzB,mBAvGA,WACA,IAAAlzB,EAAAwQ,YACAH,WAAAiiB,EAAA,IAsGAtyB,EAAAmzB,OAAAb,EACAtyB,EAAAozB,QAAAlB,EAEAlyB,EAAAoB,WAAA,aAGApB,EAAAmB,QAAA,WACAoxB,GAAA,GAEAvyB,EAAAqB,UAAA6wB,EACAlyB,EAAAwC,KAAA2G,EAAA2oB,GAAAhU,EAAAtf,EAAA60B,SAAA70B,EAAAmC,UAEAmd,IACA9d,EAAAjC,kBAAAS,EAAAT,kBAKA+f,GAAAtf,EAAAd,QAAA,IACAy0B,EAAA9hB,WAAA,WACA,IAAAkiB,EAAA,CACAA,GAAA,EACAvyB,EAAA6C,MAAA,WACA,IAAAZ,EAAA,IAAAG,MAAA,0BACAH,EAAAqZ,KAAA,YACA4W,EAAAjwB,KACAzD,EAAAd,UAGAsC,EAAA0C,iBACA,IAAAvG,KAAAmE,EACAA,EAAAgF,eAAAnJ,IACA6D,EAAA0C,iBAAAvG,EAAAmE,EAAAnE,SAGA,GAAAqC,EAAA8B,UApLA,SAAAvB,GACA,IAAA,IAAA6E,KAAA7E,EACA,GAAAA,EAAAuG,eAAA1B,GAAA,OAAA,EAEA,OAAA,EAgLA0vB,CAAA90B,EAAA8B,SACA,MAAA,IAAA8B,MAAA,qDAkBA,MAfA,iBAAA5D,IACAwB,EAAAgB,aAAAxC,EAAAwC,cAGA,eAAAxC,GACA,mBAAAA,EAAA3B,YAEA2B,EAAA3B,WAAAmD,GAMAA,EAAA2C,KAAA2J,GAAA,MAEAtM,EAuBA,OA/OA+xB,EAAA9xB,eAAAyE,EAAAzE,gBA6OA,aA5OA8xB,EAAAiB,eAAA,oBAAA,IAAAjB,EAAA9xB,eAAA8xB,EAAA9xB,eAAAyE,EAAAsuB,eAUA,SAAA9zB,EAAAq0B,GACA,IAAA,IAAA3vB,EAAA,EAAAA,EAAA1E,EAAA2E,OAAAD,IACA2vB,EAAAr0B,EAAA0E,IAVA4vB,EAAA,MAAA,MAAA,OAAA,QAAA,OAAA,UAAA,SAAArqB,GACA4oB,EAAA,WAAA5oB,EAAA,MAAAA,GAAA,SAAA2oB,EAAAtzB,EAAAkZ,GAGA,OAFAlZ,EAAAqzB,EAAAC,EAAAtzB,EAAAkZ,IACAvO,OAAAA,EAAAxK,cACAqzB,EAAAxzB,MAwOAuzB,IAIAp3B,OAAA,qCACA,sBACA,wBACA,cACA,gBACA,eACA,UACA,eACA,eACA,0BACA,SAAA84B,EAAA3E,EAAAjZ,EAAA6d,EAAAxvB,EAAAyvB,EAAA/3B,EAAAg4B,EAAAC,GACA,aACA,MAAAC,EAAA,SAAAC,EAAAvQ,GACA,MAAAwQ,EAAA,IAAAP,EAAAQ,OAAAC,OAAAxvB,OAAA+uB,EAAAA,EAAAQ,OAAAE,iBACAC,KACAJ,EAAAK,MAAA,SAAA3Q,GACAF,EAAAe,OAAAb,IAEAsQ,EAAAM,eAAA,SAAAv3B,GACAq3B,EAAA70B,KAAAxC,IAEAi3B,EAAAO,QAAA,WACA/Q,EAAA1P,SACApY,KAAA,aACAmS,OAAA2V,KAGAwQ,EAAAlyB,MAAAiyB,GACAK,EAAAvwB,OAAA,IACAa,OAAAC,SAAAD,OAAAC,QAAA6vB,gBACA9vB,OAAAC,QAAA6vB,gDAAAhR,EAAAU,OAEAkQ,EAAA/wB,QAAAtG,GAAAmH,EAAAnH,MAAAA,IACA2H,OAAAC,SAAAD,OAAAC,QAAA8vB,UACA/vB,OAAAC,QAAA8vB,YAGAT,EAAAU,SAEAC,EAAA,SAAAzQ,EAAAV,GACA,MAAAtG,GAAA4U,IAAA5N,GACA0Q,EAAAh5B,EAAA21B,cAAArN,GACA0Q,IACA1X,EAAA6V,KAAA6B,GAEA,MAAA72B,EAAA,oBAAAylB,EAAAqR,MAAAD,cACA72B,IACAmf,EAAAnf,gBAAAA,GAEA61B,EAAA1W,EAAArH,EAAA1B,KAAA7U,KAAA,SAAA6jB,EAAAphB,EAAA+yB,GACA,GAAA3R,EACA,OAAAjf,EAAAnH,MAAAomB,EAAAphB,GAEAyhB,EAAAuR,SAAA,EACA,mBAAAtB,EAAAQ,OACAzQ,EAAAqR,OACArR,EAAAqR,MAAA7gB,KACA,cACA,cACA/G,IACA,GAAA,eAAAA,EAAAvR,KAIA,OAAAo4B,EAAAgB,EAAAtR,GAHAtf,EAAAnH,0DAAAymB,EAAAU,SAOA4P,EAAAgB,EAAAtR,aAIAwR,UAAArB,EACAniB,YAAAhT,MACA,IAAAA,EAAAslB,KACA,MAAA,IAAA1hB,MAAA,4BAEA,MAAA6yB,EAAApB,EAAAr1B,GACA+vB,KAAAmF,EAAA3D,cAAAvxB,EAAA+vB,OAAA,YACAhT,SAAA/c,EAAA+c,UAAA/c,EAAA02B,SAAA,KAEA,IAAAC,EAAAzB,EAAAxD,cAAA+E,EAAAE,OAAA,WACA,MAAAC,EAAAH,EAAAI,QACA,aAAAJ,EAAA1G,MAAA,aAAA0G,EAAA1G,OACA4G,EAAA,UAEA1b,MAAAwb,GACA31B,KAAAu1B,MAAAI,EAAAnR,KACAxkB,KAAA4vB,SACA5vB,KAAAg2B,eACAh2B,KAAAi2B,UAAA,IAAAj2B,KAAAu1B,MAAAW,kBACA,MAAA/R,EAAA,IAAAqL,EAAAxvB,KAAA4vB,OACAuG,EAAA,IAAA3G,EAAAxvB,KAAAg2B,aACA,IAAAI,GAAA,EACA,MAAAC,EAAA9f,EAAA1B,KAAA7U,KAAA,WACAA,KAAAu1B,MAAA9W,WAAAze,KAAAu1B,MAAAe,eAGAt2B,KAAAm2B,WAAAn2B,KAAAm2B,WACAC,IACAp2B,KAAAwU,QAAA,aACA4hB,GAAA,MAMAp2B,KAAAu1B,MAAA9gB,IAAA,UAHA,KACAzU,KAAAu1B,MAAA3vB,IAAA,aAAAywB,KAGA,aAAAR,GACA71B,KAAAu1B,MAAAjhB,GAAA,aAAA+hB,GAEAnY,OAAAqY,iBAAAv2B,MACA+1B,SACAtyB,IAAA,IACAqyB,EAEA5jB,SAGA2jB,MACApyB,IAAA,IACAoyB,EAEA3jB,IAAAskB,GACApC,EAAAxD,cAAA4F,IAGAX,IAAAW,IAGAX,EAAAW,EACAx2B,KAAAi2B,UAAA,aAAAJ,GAAA,IAAA71B,KAAAmkB,KAAA5f,QACA8wB,EAAAr1B,KAAA4kB,IAAA5kB,MAEAA,KAAAu1B,MAAA3vB,IAAA,aAAAywB,GACA,aAAAR,GACA71B,KAAAu1B,MAAAjhB,GAAA,aAAA+hB,GAEAr2B,KAAAwU,QAAA,iBAGA2P,MACAjS,MACA,OAAAlS,KAAAy1B,QAGAtR,EAFA,MAIAjS,SAGAikB,YACAjkB,MACA,IAAAlS,KAAAy1B,QACA,OAAA,KAEA,GAAA,IAAAz1B,KAAAmkB,KAAA5f,OACA,OAAA4xB,EAEA,MAAAM,EAAAz2B,KAAAu1B,MAAAmB,cACAC,KACA,IAAA,IAAAryB,EAAA,EAAA0pB,EAAAhuB,KAAAmkB,KAAA5f,OAAAD,EAAA0pB,EAAA1pB,IAAA,CACA,MAAA8f,EAAApkB,KAAAmkB,KAAA7f,GACA8f,EAAAC,WAAAoS,GAAArS,EAAAE,SAAAmS,EACAE,EAAA12B,KAAAmkB,GACAA,EAAAC,YAAAD,EAAAE,SAAAF,EAAAC,WAAAoS,GAAArS,EAAAC,UAAA,IAAAoS,GACAE,EAAA12B,KAAAmkB,GAIA,GADAgS,GAAA,EACAO,EAAApyB,SAAAvE,KAAAg2B,YAAAzxB,OACA6xB,GAAA,OAEA,IAAA,IAAA9xB,EAAA,EAAAA,EAAAqyB,EAAApyB,OAAAD,KACA,IAAAtE,KAAAg2B,YAAAx0B,QAAAm1B,EAAAryB,MACA8xB,GAAA,GAMA,OAFAp2B,KAAAg2B,YAAAW,EACAR,EAAA1G,SAAAzvB,KAAAg2B,aACAG,GAEAjkB,WAIAyjB,EAAA/Q,KACA5kB,KAAA4kB,IAAA+Q,EAAA/Q,IACA5kB,KAAAi2B,WACAj2B,KAAAy1B,SAAA,IAEAz1B,KAAAi2B,UAAAH,GAAA,cAAAH,EAAA1G,MAAA,aAAA0G,EAAA1G,OACAoG,EAAAr1B,KAAA4kB,IAAA5kB,OAGAA,KAAAy1B,SAAA,EAGAvjB,OAAA0kB,GACA,IAAAxS,EAAAwS,EACA,GAAAzC,KAAAyC,aAAAzC,EAAA0C,QAAA,CACAzS,EAAA,IAAA+P,EAAA0C,OAAAD,EAAAvS,UAAAuS,EAAAtS,QAAAsS,EAAA14B,MACA,IAAA,MAAA4I,KAAA8vB,EACA9vB,KAAAsd,IACAA,EAAAtd,GAAA8vB,EAAA9vB,IAGAsd,EAAAvJ,GAAA+b,EAAA/b,GACAuJ,EAAA0S,aAAAF,EAEA,MAAAlJ,EAAA1tB,KAAAu1B,MAAA1Q,aACA,IAAA,IAAAvgB,EAAA,EAAAA,EAAAopB,EAAAnpB,OAAAD,IACAopB,EAAAppB,KAAAtE,MACA0tB,EAAAppB,GAAAyyB,UAAA3S,GAGApkB,KAAA4vB,MAAA3vB,KAAAmkB,GACApkB,KAAAmkB,KAAAsL,SAAAzvB,KAAA4vB,OAEA1d,UAAA6kB,GACA,IAAAzyB,EAAAtE,KAAA4vB,MAAArrB,OACA,KAAAD,KAAA,CACA,MAAA8f,EAAApkB,KAAA4vB,MAAAtrB,GACA,GAAA8f,IAAA2S,GAAA3S,EAAA0S,cAAA1S,EAAA0S,eAAAC,EAAA,CACA/2B,KAAA4vB,MAAAzqB,OAAAb,EAAA,GACAtE,KAAAmkB,KAAAsL,SAAAzvB,KAAA4vB,OACA,SAMA,OADA8F,EAAArlB,UAAA4d,gBAAA+I,UAAA,aACAtB,IAEAr6B,OAAA,sCACA,gBACA,UACA,0BACA,SAAA+4B,EAAAC,EAAAE,GACA,aAwBA,qBAvBAF,EACAniB,YAAAhT,MACA,MAAAy2B,EAAApB,EAAAr1B,GAAA+vB,KAAAmF,EAAA/D,eAAAnxB,EAAA+vB,OAAA,KACA9U,MAAAwb,GACA,IAAAnH,GAAA,EACAtQ,OAAA0P,eAAA5tB,KAAA,WACAyD,IAAA,IACA+qB,EAEAtc,IAAA+kB,GACA,kBAAAA,GAAAA,IAAAzI,IAGAA,EAAAyI,EACAj3B,KAAAwU,QAAA,qBAGAmhB,EAAAnH,UACAxuB,KAAAwuB,QAAAmH,EAAAnH,SAEAxuB,KAAAy1B,SAAA,MAKAp6B,OAAA,sCACA,gBACA,UACA,0BACA,SAAA+4B,EAAAC,EAAAE,GACA,aAuBA,qBAtBAF,EACAniB,YAAAhT,MACA,MAAAy2B,EAAApB,EAAAr1B,GAAA+vB,KAAAmF,EAAAtE,eAAA5wB,EAAA+vB,OAAA,KACA9U,MAAAwb,GACA,IAAA/G,GAAA,EACA1Q,OAAA0P,eAAA5tB,KAAA,YACAyD,IAAA,IACAmrB,EAEA1c,IAAAglB,GACA,kBAAAA,GAAAA,IAAAtI,IAGAA,EAAAsI,EACAl3B,KAAAwU,QAAA,sBAGAmhB,EAAA/G,WACA5uB,KAAA4uB,SAAA+G,EAAA/G,cAMAvzB,OAAA,6CACA,kBACA,wBACA,SAAAya,EAAA4f,GACA,aACA,MAAAyB,EAAA,EAEAC,EAAA,QAEAC,UAAAvhB,EACA5D,YAAAhT,MAEA,IAAAgS,EADAiJ,QAEA,MAAA+J,EAAA,IAAAwR,EAAAx2B,GACAc,KAAAivB,KAAA/K,EAAA+K,KACAjvB,KAAA4kB,IAAAV,EAAAU,IACA5kB,KAAA41B,QAAA1R,EAAAjI,SACAjc,KAAA2qB,MAAAzG,EAAAyG,MACA3qB,KAAA+1B,QAAA7R,EAAA6R,QACA7X,OAAAqY,iBAAAv2B,MACAkR,YACAzN,IAAA,IACAyN,GAGAgT,OACAzgB,IAAA,IACAygB,KAIAhT,EAAAimB,EACAjT,EAAA/S,iBAAA,aAAA,KACAD,EAAAkmB,EACAp3B,KAAAwU,SACApY,KAAA,OACAmS,OAAAvO,UAUA,OALAq3B,EAAAhnB,UAAA4d,gBAAAqJ,KAAA,QACAD,EAAAF,KAAAA,EACAE,EAAAE,QArCA,EAsCAF,EAAAD,OAAAA,EACAC,EAAAG,MArCA,EAsCAH,IAEAh8B,OAAA,sCACA,qBACA,qBACA,oBACA,4BACA,eACA,gBACA,gBACA,wBACA,SAAAo8B,EAAAC,EAAAC,EAAAC,EAAAlC,EAAAmC,EAAAC,EAAAT,GACA,aACA,MAAAU,GACAC,OACAC,UAAAR,EACAS,WAAAL,EACAM,YAAA,SAEAC,OACAH,UAAAP,EACAQ,WAAAJ,EACAK,YAAA,SAEAj6B,MACA+5B,UAAAN,EACAO,WAAAxC,EACAyC,YAAA,SAGAja,OAAAC,KAAA4Z,GAAAh0B,QAAA,SAAA3H,GACA27B,EAAA37B,GAAAi8B,cAAAj8B,UACA27B,EAAA37B,GAAAk8B,eAAAl8B,aAEA,MAAAm8B,GACAC,YACAP,UAAAN,EACAO,WAAAxC,EACAyC,YAAA,aACAE,WAAA,mBACAC,YAAA,qBAEAG,cACAR,UAAAL,EACAM,WAAAb,EACAc,YAAA,qBACAE,WAAA,qBACAC,YAAA,wBAGAI,EAAAxa,OAAAxX,UAAAqxB,EAAAQ,GAIA,OAHAA,EAAA9b,MAAAyB,OAAAC,KAAAoa,GACAR,EAAAtb,MAAAyB,OAAAC,KAAA4Z,GACAW,EAAAjc,SAAAvX,OAAAqzB,EAAA9b,OAAAvX,OAAA6yB,EAAAtb,QAEAsb,OAAAA,EACAQ,OAAAA,EACAG,IAAAA,KAGAr9B,OAAA,6BACA,+BACA,iCACA,eACA,yBACA,cACA,eACA,uBACA,kBACA,iBACA,eACA,wBACA,wBACA,uBACA,SAAA+J,EAAA5I,EAAAud,EAAAX,EAAA7C,EAAA3R,EAAAge,EAAA+V,EAAAzV,EAAAzjB,EAAAm5B,EAAA9e,EAAAqa,GACA,mBAeAlW,UAAAlE,EACA7H,YAAAhT,KAAAob,EAAA,cAEApb,EAAAsc,qBAAA,EACArB,MAAA,KAAAjb,EAAAob,GACAta,KAAA64B,aAAA,EACA74B,KAAAqa,SAAA,UAAA,WACAra,KAAA64B,aAAA,IAEA74B,KAAAqa,SAAA,YAAA,WACAra,KAAA64B,aAAA,IAEAD,EAAAF,IAAAjc,MAAA1Y,QAAAjH,IACA,MAAAq0B,EAAAyH,EAAAF,IAAA57B,GACAoC,GAAAA,EAAAiyB,EAAAkH,cACAr4B,KAAAmxB,EAAAmH,aAAAp5B,EAAAiyB,EAAAkH,eAGAr4B,KAAA84B,wBACA94B,KAAA+4B,mBAEA/4B,KAAAg5B,0BACAh5B,KAAAi5B,uBAGA,OACA,QACA,SACAl1B,QAAAmgB,KACA,IAAAhlB,WAAAglB,aACAlkB,sBAAAkkB,YAAA,MAGA,IAAAhlB,EAAAg6B,iBAAA,IAAAh6B,EAAAi6B,iBACAn5B,KAAAo5B,0BAAA,GACA,IAAAl6B,EAAAg6B,iBAAA,IAAAh6B,EAAAi6B,mBACAn5B,KAAAo5B,0BAAA,GAEAp5B,KAAAo5B,0BACAp5B,KAAAq5B,oBAEAr5B,KAAAk2B,mBAAA,IAAAh3B,EAAAg3B,kBACAl2B,KAAAs5B,sBAAA,IAAAV,EAAAF,IAAAx6B,KAAA+5B,UACAj4B,KAAAu5B,qBACAr6B,EAAAs6B,wBACAx5B,KAAAy5B,gBAEAz5B,KAAA2W,cACA3W,KAAA0W,MAAA1W,KAAA2W,YAAA7Z,MAAA,gBAGAoV,iBAAA0S,GACA5kB,KAAAye,UACAze,KAAAqhB,aAAA,QAAA,IAAArhB,KAAA+Q,WAAA,IAAA/Q,KAAA05B,iBAAA9U,GAAA,IAEA5kB,KAAAwU,SACAoQ,IAAAA,EACAxoB,KAAA,cAGA8V,mBACAlS,KAAAqa,SAAA,iBAAAra,KAAA25B,wBACA35B,KAAA45B,gBAAA,EACA55B,KAAAqhB,aAAA,QAAArhB,KAAA65B,eAEA3nB,oBACAlS,KAAA45B,gBAAA,EACA55B,KAAA85B,uBACA95B,KAAA2X,WAAA,iBAAA3X,KAAA25B,wBAEAznB,cAAAvE,GACA3N,KAAA85B,uBACA95B,KAAA+5B,iBAAA/5B,KAAA4gB,YAAArK,EAAA1B,KAAA7U,KAAA,WACA,MAAAg6B,EAAAh6B,KAAAV,YACAU,KAAAi6B,mBAAAD,GACAh6B,KAAAwU,QAAA,YAEAxU,KAAAi6B,iBAAAD,EACA,IAAAA,GACAh6B,KAAA85B,yBAEA,KAEA5nB,iBAAAvE,GACA3N,KAAAk6B,UAAAl6B,KAAA+iB,WAEA7Q,WACA,OAAA0Q,EAAAK,gBAAA,EAAA,GAEA/Q,kBACA,OAAAymB,EAAA9V,gBAAA7iB,KAAA8iB,WAAA9iB,KAAAk6B,WAEAhoB,uBACAlS,KAAA2gB,cAAA3gB,KAAA+5B,kBAEA7nB,sBACAlS,KAAAm6B,mBAAA,EACAn6B,KAAAqa,SAAA,OAAAra,KAAAo6B,kBACAp6B,KAAAqa,SAAA,QAAAra,KAAAq6B,yBAEAnoB,uBACAlS,KAAAm6B,mBAAA,EACAn6B,KAAAq6B,0BACAr6B,KAAA2X,WAAA,OAAA3X,KAAAo6B,kBACAp6B,KAAA2X,WAAA,QAAA3X,KAAAq6B,yBAEAnoB,mBACAlS,KAAAs6B,qBACAt6B,KAAAq6B,0BAEAr6B,KAAAs6B,oBAAAt6B,KAAA4gB,YAAA,WACA5gB,KAAAwU,SACApY,KAAA,aACAmS,OAAAvO,KACAu6B,mBAAA,KAEA,KAEAroB,0BACAlS,KAAA2gB,cAAA3gB,KAAAs6B,qBACAt6B,KAAAwU,SACApY,KAAA,aACAmS,OAAAvO,KACAu6B,mBAAA,IAGAroB,UACAlS,KAAAw6B,YAAA5B,EAAAb,OAAAtb,OACAzc,KAAA45B,gBACA55B,KAAAy6B,oBAEAz6B,KAAAm6B,mBACAn6B,KAAA06B,uBAEAvgB,MAAAyB,UAEA1J,YAAA3W,IACAA,KAAA2J,OAAA3J,IACAwI,QAAA3H,IACA,MAAAmyB,EAAAvuB,QAAA5D,iBACA,IAAAkI,EAAAiqB,EAAAhqB,OACA,KAAAD,KAAA,CACA,MAAA4f,EAAAqK,EAAAjqB,GACA,SAAAlI,GACA4D,KAAA26B,sBAAAzW,GAEAqK,EAAAI,YAAAzK,MAIAhS,wBACA,MAAAqc,EAAAvuB,KAAAs5B,0BACA,IAAAh1B,EAAAiqB,EAAAhqB,OACA,KAAAD,KAAA,CACA,MAAA4f,EAAAqK,EAAAjqB,GACAtE,KAAA26B,sBAAAzW,IAGAhS,SAEAA,eAEAA,kBAEAA,MAAA2R,GAKA,YAJAvkB,IAAAukB,IACA7jB,KAAA46B,OAAA,IAAA1X,EAAAW,GACA7jB,KAAAwU,QAAA,UAEAxU,KAAA46B,OAEA1oB,SACA,OAAAlS,KAAA64B,YACAjW,EAAAK,gBAAA,EAAA,GAEAL,EAAAK,kBAEA/Q,QAEAA,gBAEAA,aAEAA,iBACAlS,KAAAm6B,mBACAn6B,KAAAwU,SACApY,KAAA,aACAmS,OAAAvO,KACAu6B,mBAAA,IAIAroB,qBACA0mB,EAAAb,OAAAtb,MAAA1Y,QAAAjH,IACA,MAAAq0B,EAAAyH,EAAAb,OAAAj7B,GACA+9B,EAAA,KACA76B,KAAAwU,WAAA1X,iBAEA4wB,EAAA1tB,KAAAmxB,EAAAkH,cACA3K,EAAAvc,iBAAA,cAAA0pB,GACAnN,EAAAvc,iBAAA,WAAA0pB,GACA76B,KAAAqa,SAAA,UAAA,KACAqT,EAAAzc,oBAAA,cAAA4pB,GACAnN,EAAAzc,oBAAA,WAAA4pB,OAIA3oB,mBACA,IAAA9M,EAAAuvB,OAGA,GAAAn4B,EAAAwQ,KAAAwf,SAAAxsB,KAAA6G,MAAA,CACA,IAAA7G,KAAA2a,SAAA,WAAAlb,EAAAmH,QAAAutB,IAAAjW,OAAAC,KAAAgW,GAAA5vB,OAAA,EAEA,YADAvE,KAAAwU,QAAA,eAGA,MAAA1W,EAAAtB,EAAAC,cAAA,UACAqB,EAAA8mB,IAAA5kB,KAAA2a,SAAA,WAAA,iDACA7c,EAAA+1B,OAAA,MACA7zB,KAAAwU,QAAA,iBAEA1W,EAAAg2B,QAAA,MACA9zB,KAAAwU,QAAA,gBAEAxU,KAAAqa,SAAA,UAAA,KACAvc,EAAA+1B,OAAA,KACA/1B,EAAAg2B,QAAA,OAEA1uB,EAAAuvB,QAAA,EACA30B,KAAA6G,KAAAwG,WAAAgd,YAAAvsB,QAEAkC,KAAAsa,MAAAta,KAAA86B,kBAGA5oB,oBACA,MAAAwb,EAAA1tB,KAAA6kB,aACAkW,EAAA/6B,KAAAg7B,mBACAC,EAAAt4B,GAAA+qB,EAAAG,SAAAlrB,EAAAuhB,OACAgX,EAAAv4B,GAAA+qB,EAAAiB,YAAAhsB,EAAAuhB,OACA6W,EAAAzmB,GAAA,WAAA2mB,GACAF,EAAAzmB,GAAA,cAAA4mB,GACAl7B,KAAA86B,mBACA,MAAAK,EAAA,IAAAn7B,KAAAwU,QAAA,mBACA4mB,EAAA,KACAD,IACA,IAAA,IAAA72B,EAAA,EAAAA,EAAAopB,EAAAnpB,OAAAD,IAAA,CACA,MAAA4f,EAAAwJ,EAAAppB,GACA4f,EAAAjT,oBAAA,YAAAkqB,GACA,YAAAjX,EAAA2R,MACA3R,EAAA/S,iBAAA,YAAAgqB,KAIAC,IACA1N,EAAAvc,iBAAA,SAAAiqB,GACA1N,EAAAvc,iBAAA,WAAAiqB,GACA1N,EAAAvc,iBAAA,cAAAiqB,GACAp7B,KAAAqa,SAAA,UAAA,WACA0gB,EAAAn1B,IAAA,WAAAq1B,GACAF,EAAAn1B,IAAA,cAAAs1B,GACAxN,EAAAzc,oBAAA,SAAAmqB,GACA1N,EAAAzc,oBAAA,WAAAmqB,GACA1N,EAAAzc,oBAAA,cAAAmqB,GACA,IAAA,IAAA92B,EAAA,EAAAA,EAAAopB,EAAAnpB,OAAAD,IAAA,CACA,MAAA4f,EAAAwJ,EAAAppB,GACA4f,EAAAjT,oBAAA,YAAAkqB,MAIAjpB,aAAA+c,EAAAtE,EAAA1O,GACA,IAAAgT,EACA,MAAA,IAAAnsB,MAAA,mDAEA,OA/RA,SAAArC,EAAAwuB,EAAAtE,EAAA1O,EAAA/c,MACA,MAAAwuB,EAAAjtB,EAAAokB,aACA3lB,EAAA+vB,KAAAA,EACAtE,IACAzrB,EAAAyrB,MAAAA,GAEA1O,IACA/c,EAAA+c,SAAAA,GAEA/c,EAAAslB,KAAA/jB,EACA,MAAAyjB,EAAA,IAAA0U,EAAAF,IAAAx6B,KAAAg6B,WAAAh5B,GAEA,OADAwuB,EAAAG,SAAA3J,GACAA,EAmRAmX,CAAAr7B,KAAAivB,EAAAtE,EAAA1O,GAEA/J,sBAAAhT,GACA,MAAAglB,EAAA9K,EAAAla,GAAAslB,KAAAxkB,OACA,OAAA,IAAA44B,EAAAL,OAAAE,aAAAP,WAAAhU,GAEAhS,mBAAAhT,KAAAo8B,GACA,MAAAC,EAAAv7B,KAAAw7B,sBAAAt8B,GAUA,OATA,IAAAo8B,IAAA,IAAAA,IACA12B,EAAAkB,KAAA,oKACAw1B,GAAA,GAEAt7B,KAAAy7B,qBAAApM,iBAAAkM,GACAv7B,KAAAg7B,mBAAAnN,SAAA0N,EAAArX,QACA,IAAAoX,GACAt7B,KAAAsa,MAAA,IAAAta,KAAAs5B,sBAAAzL,SAAA0N,EAAArX,QAEAqX,EAEArpB,sBAAAgS,GACA,MAAAoL,EAAAtvB,KAAAy7B,qBAAAC,wBAAAxX,GACAlkB,KAAAy7B,qBAAAE,oBAAArM,GACAtvB,KAAAg7B,mBAAArM,YAAAzK,GACAlkB,KAAAs5B,sBAAA3K,YAAAzK,GAEAhS,0BACA,SAEAA,0BACA,MAAA0pB,EAAA57B,KAAA2a,SAAAkhB,SAAAz2B,EAAAy2B,QACA,GAAAD,EACA,OAAAA,EAAAh5B,SAGAsP,0BACA,OAAA,EAEAA,8BAEAA,aAEAA,eAEAA,kBAEAA,6BAEAA,6BAEAA,cACA,MAAA,GAEAA,qBACA,MAAA,GAEAA,qBAAA4pB,EAAA58B,GACA,OAAA+e,EAAA8d,YAAAD,EAAA1/B,MAEA8V,cAAA4K,GACA,OAAAA,EAAAzM,qBAAA4N,GAAAnB,aAAAmB,GAAAnB,IAAAmB,EAEA/L,oBAAApV,EAAA0nB,GAIA,GAHAvG,EAAA+d,SACA/d,EAAA+d,YAEA/d,EAAAM,OAAAiG,GACA,MAAA,IAAA1hB,cAAAhG,oBAEA,IAAAmhB,EAAA8d,YACA,MAAA,IAAAj5B,MAAA,uDAEA,IAAAmb,EAAAge,cACA,MAAA,IAAAn5B,MAAA,yDAQA,OANAhG,EAAAgd,EAAAhB,YAAAhc,GACAmhB,EAAA+d,OAAAl/B,GAAA0nB,EACAvG,EAAA+d,OAAAliB,EAAA3W,YAAArG,IAAA0nB,EACA,SAAA1nB,GACAmhB,EAAAie,kBAAAj8B,KAAAnD,GAEA0nB,EAEAtS,eAAApV,GACA,GAAAA,EAGA,OAAAmhB,EAAA+d,QAAA/d,EAAA+d,OAAAl/B,GACAmhB,EAAA+d,OAAAl/B,IAEAA,EAAAgd,EAAAhB,YAAAhc,GACAsI,GAAAA,EAAA6K,SAAA7K,EAAA6K,QAAAnT,IACA8H,EAAAkB,YAAAhJ,8GACAsI,EAAA6K,QAAAnT,SAFA,IAmHA,OA7GA87B,EAAAF,IAAAjc,MAAA1Y,QAAA,SAAAjH,GACA,MAAAq0B,EAAAyH,EAAAF,IAAA57B,GACAmhB,EAAA5N,UAAA8gB,EAAAkH,YAAA,WAEA,OADAr4B,KAAAmxB,EAAAmH,aAAAt4B,KAAAmxB,EAAAmH,cAAA,IAAAnH,EAAA8G,UACAj4B,KAAAmxB,EAAAmH,gBAGAra,EAAA5N,UAAA8rB,uBAAA,EACAle,EAAA5N,UAAA+rB,qBAAA,EACAne,EAAA5N,UAAAgsB,0BAAA,EACApe,EAAA5N,UAAAisB,sBAAA,EACAre,EAAA5N,UAAAyoB,wBAAA,EACA7a,EAAA5N,UAAAksB,mBAAA,EACAte,EAAA5N,UAAA2oB,0BAAA,EACA/a,EAAA5N,UAAA+oB,0BAAA,EACAnb,EAAAue,mBAAA,SAAAC,GACAA,EAAAC,sBAAA,SAAAC,EAAArgB,GACA,IAAAsgB,EAAAH,EAAAI,eACAD,IACAA,EAAAH,EAAAI,wBAEAv9B,IAAAgd,IACAA,EAAAsgB,EAAAr4B,QAEAq4B,EAAAz3B,OAAAmX,EAAA,EAAAqgB,IAEAF,EAAAV,YAAA,SAAA3/B,GACA,MAAAwgC,EAAAH,EAAAI,mBACA,IAAAC,EACA,IAAA,IAAAx4B,EAAA,EAAAA,EAAAs4B,EAAAr4B,OAAAD,IAEA,GADAw4B,EAAAF,EAAAt4B,GAAAy3B,YAAA3/B,GAEA,OAAA0gC,EAGA,MAAA,IAEAL,EAAAM,oBAAA,SAAAzjB,EAAApa,GACA,MAAA09B,EAAAH,EAAAI,mBACA,IAAAC,EACA,IAAA,IAAAx4B,EAAA,EAAAA,EAAAs4B,EAAAr4B,OAAAD,IAEA,GADAw4B,EAAAF,EAAAt4B,GAAA04B,gBAAA1jB,EAAApa,GAEA,OAAA09B,EAAAt4B,GAGA,OAAA,MAEAm4B,EAAAR,cAAA,SAAAH,EAAA58B,GACA,MAAA+9B,EAAAR,EAAAM,oBAAAjB,EAAA58B,GACA,OAAA+9B,EACAA,EAAAD,gBAAAlB,EAAA58B,GAEA,KAGA,WACA,UACA,YAEA6E,QAAA,SAAAkT,GACA,MAAAimB,EAAAl9B,KAAAiX,GACA,mBAAAimB,IAGAl9B,KAAAiX,GAAA,WACA,OAAAjX,KAAAm9B,gBAAAn9B,KAAAm9B,eAAAlmB,GACAjX,KAAAm9B,eAAAlmB,GAAAxB,MAAAzV,KAAAm9B,eAAA5nB,WAEA2nB,EAAAznB,MAAAzV,KAAAuV,cAEAknB,EAAApsB,WACAosB,EAAApsB,UAAA+sB,UAAA,SAAA9jB,GACA,IAAA2jB,EAAAR,EAAAM,oBAAAzjB,EAAAtZ,KAAA2a,UACAsiB,IACAR,EAAAY,oBACAJ,EAAAR,EAAAY,oBAEAz4B,EAAAnH,MAAA,oDAGAuC,KAAAs9B,uBACAt9B,KAAA2X,WAAA,UAAA3X,KAAAs9B,sBACAL,IAAAR,EAAAY,sBACAr9B,KAAAu9B,eAAAjkB,GAEAtZ,KAAAm9B,eAAAF,EAAAO,aAAAlkB,EAAAtZ,KAAAA,KAAA2a,UACA3a,KAAAqhB,aAAA,UAAArhB,KAAAs9B,uBAEAb,EAAApsB,UAAAitB,qBAAA,WACAt9B,KAAAu9B,iBACAv9B,KAAAw6B,aACA,QACA,UAEAx6B,KAAAu9B,eAAA,MAEAv9B,KAAAy9B,wBACAz9B,KAAAm9B,iBACAn9B,KAAAm9B,eAAAvhB,SACA5b,KAAAm9B,eAAAvhB,UAEA5b,KAAAm9B,eAAA,QAIApjB,EAAAkI,kBAAA,OAAAhE,GACAA,EAAAyf,aAAA,OAAAzf,GACAA,EAAAie,qBACAje,IAEA5iB,OAAA,mCACA,eACA,yBACA,SAAAoE,EAAAqa,GACA,aACA,MAAA6jB,KACAC,KACAC,KAkDA,SAAAC,EAAAj0B,GACA,MAAA,CAAA/J,EAAAi+B,IACAj+B,IAAA+9B,EACAA,EAEAE,EAAAl0B,GACAk0B,EAAAl0B,GAAA/J,GAEAA,EAyCA,SAAAk+B,EAAApZ,KAAAqZ,KAAAC,EAAAttB,EAAA8L,KAAAyhB,GAAA,GACA,MAAAC,KAAAC,GAAAJ,EACA,GAAA,iBAAAG,EACAJ,EAAApZ,EAAA+Y,EAAAS,GAAAF,EAAAttB,EAAA8L,EAAAyhB,QACA,GAAAC,EAAA,CACA,MAAAL,EAhCA,SAAAntB,EAAAwtB,GACA,MAAAE,EAAAV,EAAAhtB,EAAAiK,MACA,IAAAkjB,EAAA,KACA,QAAAz+B,IAAAg/B,GAAA,OAAAA,EAMA,OALAP,EAAAK,EAAAxtB,GACAgtB,EAAAhtB,EAAAiK,QACAujB,EACAL,IAEAA,EAEA,IAAA,IAAAz5B,EAAA,EAAAA,EAAAg6B,EAAA/5B,OAAAD,IAAA,CACA,MAAAi6B,EAAAC,GAAAF,EAAAh6B,GACAi6B,IAAAH,IAGAL,EAAAS,GAEA,OAAAT,IACAA,EAAAK,EAAAxtB,GACA0tB,EAAAr+B,MACAm+B,EACAL,KAGA,OAAAA,EAOAU,CAAA7tB,EAAAwtB,GACA,IAAAL,EAAAX,UAEA,OADA1gB,EAAAzc,KAAA89B,GACAC,EAAApZ,EAAAyZ,EAAAH,EAAAttB,EAAA8L,EAAAyhB,GAEAJ,EAAAX,UAAA39B,EAAAiH,UAAAke,GAAA,SAAAf,EAAA6a,GACA,GAAA7a,EACA,OAAAma,EAAApZ,EAAAyZ,EAAAH,EAAAttB,EAAA8L,EAAAyhB,GAEAzhB,EAAAzc,KAAA89B,GACAC,EAAAU,EAAA9Z,EAAAxoB,OAAAsiC,EAAAtiC,KAAAiiC,EAAAV,EAAAe,EAAAtiC,MAAA8hC,EAAAttB,EAAA8L,EAAAyhB,UAEAE,EAAA95B,OACAy5B,EAAApZ,EAAAyZ,EAAAH,EAAAttB,EAAA8L,EAAAyhB,GACAA,EACAD,EAAAtZ,EAAAlI,GAEAshB,EAAApZ,EAAA+Y,EAAA,KAAAO,EAAAttB,EAAA8L,GAAA,GAGA,OACAmhB,WAAAA,EACAc,IA7HA,SAAAviC,EAAA6hC,GACAN,EAAAvhC,GAAAuhC,EAAAvhC,OACAuhC,EAAAvhC,GAAA6D,KAAAg+B,IA4HAW,cA1HA,SAAAxiC,GACA,GAAAA,EACA,OAAAuhC,EAAAvhC,GAEA,OAAAuhC,GAuHAP,UArHA,SAAAxsB,EAAAgU,EAAAsZ,GACAttB,EAAAG,WAAA,IAAAitB,EAAApZ,EAAA+Y,EAAA/Y,EAAAxoB,MAAA8hC,EAAAttB,GAAA,IAqHAiuB,QAnHA,SAAAZ,EAAAzZ,GACAyZ,EAAAl6B,QAAAg6B,GAAAA,EAAAc,SAAAd,EAAAc,QAAAra,KAmHA/gB,IAjHA,SAAAw6B,EAAAzZ,EAAA3a,GACA,OAAAo0B,EAAAa,YAAAhB,EAAAj0B,GAAA2a,EAAA3a,OAiHAsM,IA/GA,SAAA8nB,EAAAzZ,EAAA3a,EAAAk1B,GACA,OAAAva,EAAA3a,GAAAo0B,EAAAx3B,OAAAq3B,EAAAj0B,GAAAk1B,KA+GAC,QA7GA,SAAAf,EAAAzZ,EAAA3a,EAAAk1B,EAAA,MACA,MAAAE,EAAA,OAAAnlB,EAAAhB,YAAAjP,GACAq1B,EAAAjB,EAAAx3B,OAAAq3B,EAAAmB,GAAAF,GACAI,EAAAD,IAAArB,EACAxqB,EAAA8rB,EAAA,KAAA3a,EAAA3a,GAAAq1B,GAEA,OAgCA,SAAAZ,EAAAz0B,EAAA/J,EAAAq/B,GACA,IAAA,IAAA76B,EAAAg6B,EAAA/5B,OAAA,EAAAD,GAAA,EAAAA,IAAA,CACA,MAAAy5B,EAAAO,EAAAh6B,GACAy5B,EAAAl0B,IACAk0B,EAAAl0B,GAAAs1B,EAAAr/B,IArCAs/B,CAAAnB,EAAAp0B,EAAAwJ,EAAA8rB,GACA9rB,GAwGAgsB,gBArGAvc,SAAA,EACA4T,YAAA,EACA3T,SAAA,EACAuc,MAAA,EACAC,OAAA,EACArU,OAAA,EACAsU,SAAA,EACAC,OAAA,GA+FAC,gBA5FAC,eAAA,EACAC,SAAA,EACAC,UAAA,GA2FAC,kBAxFAvlB,KAAA,EACAqO,MAAA,GAwFAmX,oBAnEA,SAAAnvB,GACAgtB,EAAAhtB,EAAAiK,MAAA,SAqEAxf,OAAA,mCAAA,SAAA,SAAA2kC,GACA,aACA,MAAAC,GACAC,KAAA,YACAC,IAAA,YACAC,IAAA,YACAC,IAAA,YACAC,IAAA,YACAC,IAAA,mBACAC,IAAA,YACAC,IAAA,aACAC,IAAA,YACAC,IAAA,cACAC,KAAA,aACAC,IAAA,YACAC,IAAA,YACAC,KAAA,wBACAC,IAAA,aACAC,KAAA,aACAC,IAAA,YACAC,IAAA,YACAC,IAAA,gBACAC,KAAA,cAEAC,EAAA,SAAA1c,EAAA,IACA,MAAA2c,EAAAvB,EAAAnO,iBAAAjN,GACA4c,EAAAvB,EAAAsB,EAAAp+B,eACA,OAAAq+B,GAAA,IAsBA,OACAvB,cAAAA,EACAqB,YAAAA,EACAG,aAvBA,CAAA7wB,EAAAgU,KACA,IAAAA,EACA,MAAA,GAEA,GAAAhU,EAAA8wB,OAAApoB,OAAAsL,MAAAA,GAAAhU,EAAA8wB,OAAApoB,OAAAld,KACA,OAAAwU,EAAA8wB,OAAApoB,OAAAld,KAEA,MAAAulC,EAAA/wB,EAAA8wB,OAAAroB,QAAApT,OAAA27B,GAAAA,EAAAhd,MAAAA,GACA,GAAA+c,EAAAp9B,OACA,OAAAo9B,EAAA,GAAAvlC,KAEA,MAAAid,EAAAzI,EAAAd,GAAA,UACA,IAAA,IAAAxL,EAAA,EAAAA,EAAA+U,EAAA9U,OAAAD,IAAA,CACA,MAAAs9B,EAAAvoB,EAAA/U,GACA,GAAAs9B,EAAAxlC,MAAAwlC,EAAAhd,KAAAgd,EAAAhd,MAAAA,EACA,OAAAgd,EAAAxlC,KAGA,OAAAklC,EAAA1c,OAQAvpB,OAAA,uCACA,QACA,eACA,SAAAoE,EAAAoiC,GACA,aACA,MAAAC,EAAA,SAAAld,GACA,GAAApf,MAAAvJ,QAAA2oB,GAAA,CACA,IAAAmd,KACAnd,EAAA7gB,QAAA,SAAAi+B,GACAA,EAAAF,EAAAE,GACAx8B,MAAAvJ,QAAA+lC,GACAD,EAAAA,EAAA78B,OAAA88B,GACAviC,EAAAkH,SAAAq7B,IACAD,EAAA9hC,KAAA+hC,KAGApd,EAAAmd,OAEAnd,EADA,iBAAAA,GAAAA,EAAAnb,QACAw4B,GAAArd,IAAAA,KACAnlB,EAAAkH,SAAAie,IAAA,iBAAAA,EAAAA,KAAAA,EAAAA,KAAAA,EAAAA,IAAAnb,QACAw4B,EAAArd,OAIA,OAAAA,GAEA,SAAAqd,EAAArd,GACA,IAAAA,EAAAxoB,KAAA,CACA,MAAAolC,EAAAK,EAAAP,YAAA1c,EAAAA,KACA4c,IACA5c,EAAAxoB,KAAAolC,GAGA,OAAA5c,EAEA,OAAAkd,IAEAzmC,OAAA,+BACA,eACA,SACA,wBACA,0BACA,SAAA0e,EAAAkE,EAAAnE,EAAAV,GACA,mBACA8oB,UAAAnoB,EACA7H,YAAAtB,EAAA1R,EAAAob,GACA,MAAAK,EAAAvB,GAAAjO,UAAA,GAAAjM,GAEA,GADAib,MAAAvJ,EAAA+J,EAAAL,GACApb,EAAA2e,cAAAxE,SAAA,IAAAna,EAAA2e,cAAAxE,QAAA9U,OAaAqM,EAAAgU,IAAA1lB,EAAA2e,cAAAxE,cAZA,IAAA,IAAA/U,EAAA,EAAA69B,EAAAjjC,EAAA2e,cAAAukB,UAAA99B,EAAA69B,EAAA59B,OAAAD,IAAA,CACA,MAAA+9B,EAAAvoB,EAAAhB,YAAAqpB,EAAA79B,IACA,IAAAkgB,EAAAvG,EAAAqkB,QAAAD,GAIA,GAHAA,IACA7d,EAAAzK,EAAAoD,aAAAklB,IAEA7d,GAAAA,EAAA+d,cAAA,CACA3xB,EAAA4xB,UAAAH,GACA,SASA,OADAtoB,EAAAkI,kBAAA,cAAAigB,GACAA,IAEA7mC,OAAA,uCACA,cACA,cACA,cACA,cACA,mBACA,SAAA0e,EAAA/J,EAAApL,EAAAnF,EAAAiqB,GACA,mBACA+Y,UAAA1oB,EACA7H,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAy5B,gBACAz5B,KAAAsG,SAEA4L,SAAA5F,EAAA,MAAA6kB,KAAA7lB,MACA6lB,EAAA1xB,EAAAiH,QACA8qB,UAAA,gEACAlgB,UAAAtR,KAAAsqB,gBACAC,SAAA,GACA4G,GACA,WAAA7kB,GACA1H,EAAAnH,+DAAA6O,6CAEAhB,EAAA7L,EAAAiH,QAAAwjB,KAAA,UAAA5e,GACAtL,KAAA0iC,UAAAvR,EAAA5G,SACA,MAAA1jB,EAAAsT,MAAAhP,SAAAmB,EAAA6kB,EAAA7lB,GAEA,OADAtL,KAAA2iC,oBAAA97B,GACAA,EAEAqL,UACAlS,KAAA4iC,eAAA,KACAzoB,MAAAyB,UAEA1J,oBAAArL,GAMA,OALA7G,KAAA4iC,eAAA5yB,EAAA7E,SAAA,QAAAmG,UAAA,qBAAAuxB,YAAA,WACAh8B,GACAA,EAAAwjB,YAAArqB,KAAA4iC,gBAEA5iC,KAAA8rB,YAAA9rB,KAAA8iC,aAAAj8B,GACA7G,KAAA4iC,eAEA1wB,YAAAhU,EAAA2I,EAAA7G,KAAA6G,MACA,QAAAvH,IAAApB,EACA,OAAA8B,KAAA8iC,cAAA,YAEA,MAAAC,EAAA/iC,KAAA6qB,SAAA3sB,GACA8B,KAAA8iC,aAAA5kC,EACA8R,EAAAxE,YAAAxL,KAAA4iC,eAAAG,GACA/iC,KAAAgjC,gBACAn8B,EAAA+F,aAAA,QAAAm2B,GAGA7wB,gBACA,gCAAAiI,MAAAmQ,kBAEApY,SACAlS,KAAAijC,WACAjjC,KAAAijC,UAAA,EACAjjC,KAAAgM,YAAA,gBACAhM,KAAAia,IAAArN,aAAA,gBAAA,cACA,IAAA5M,KAAA0iC,WACA1iC,KAAAia,IAAArN,aAAA,WAAA5M,KAAA0iC,WAEA1iC,KAAAqa,UACA,MACA,SACAra,KAAAkjC,aACAljC,KAAAqa,SAAA,UAAAra,KAAA6f,gBAGA3N,UACAlS,KAAAijC,UAAA,EACAjjC,KAAA+L,SAAA,gBACA/L,KAAAia,IAAArN,aAAA,gBAAA,aACA,IAAA5M,KAAA0iC,WACA1iC,KAAAia,IAAApN,gBAAA,YAEA7M,KAAA2X,WAAA,YAAA3X,KAAAmjC,iBACAnjC,KAAA2X,WAAA,WAAA3X,KAAAojC,gBACApjC,KAAA2X,YACA,MACA,SACA3X,KAAAkjC,aACAljC,KAAA2X,WAAA,UAAA3X,KAAA6f,eAEA3N,uBACAlS,KAAA8rB,YAAA9rB,KAAA8iC,cAEA5wB,YAAAvE,GACA3N,KAAA2a,SAAA0oB,cACArjC,KAAA2a,SAAA0oB,aAAAziC,KAAAZ,KAAAuV,WAGArD,cAAAvE,GACA+b,EAAAhE,WAAA/X,EAAA,UAAA+b,EAAAhE,WAAA/X,EAAA,UACAA,EAAAqF,iBACArF,EAAA4F,kBACAvT,KAAAwU,QAAA,UAEA2F,MAAA0F,cAAAlS,IAKA,OADAoM,EAAAkI,kBAAA,qBAAAwgB,GACAA,IAEApnC,OAAA,gCACA,wBACA,cACA,aACA,cACA,kBACA,mBACA,SAAAonC,EAAA1oB,EAAAxD,EAAAvG,EAAA1M,EAAAgG,GACA,mBACAg6B,UAAAb,EACAvwB,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAujC,SACA3yB,EAAA0D,GAAA,eAAAiC,EAAA1B,KAAA7U,KAAAA,KAAAujC,SAEArxB,UACAlS,KAAA4Q,SAAAhL,IAAA,eAAA5F,KAAAujC,QACAppB,MAAAyB,UAEA1J,WACA,MAAArL,EAAAmJ,EAAA7E,SAAA,OACAmG,UAAA,aACAiZ,UAAA,IAEA,OAAA1jB,EAEAqL,OAAAvE,GACA,MAAArR,EAAA0D,KAAA4Q,SAAA4yB,SACAxjC,KAAAyjC,OAAAnnC,GACAA,EACA0D,KAAAsrB,OAEAtrB,KAAAwrB,OAGAtZ,OAAA5V,GACA,IAAAonC,EAAA,GACApnC,IACAonC,UAAApnC,OAEA0D,KAAAia,IAAA1I,MAAAmyB,gBAAAA,EAEAxxB,YAAAvE,GACA,IAAA3N,KAAAwa,QAAA6Q,WACA,OAEA,MAAAsY,EAAA3jC,KAAAwa,QAAAopB,YAAA,QAAA5jC,KAAAwa,QAAAqpB,IAAAC,UAAA9jC,KAAAwa,QAAAqpB,IAAAC,SAAAv/B,OAAA,GACAvE,KAAAwa,QAAAgK,MAAA,KAAAlb,EAAAf,YAAAe,EAAAlB,UAAAu7B,GACA3jC,KAAAwa,QAAAgK,MAAA,GAAAvX,QAEAjN,KAAAwa,QAAA0Q,SACA5nB,EAAA0gB,eAAAhkB,KAAAwa,QAAAD,QAEAva,KAAAwa,QAAAoO,SAKA,OADA7O,EAAAkI,kBAAA,cAAAqhB,GACAA,IAEAjoC,OAAA,6CACA,eACA,cACA,gBACA,SAAA0e,EAAAxD,EAAAvG,GACA,aACA,MAAA+zB,EAAA,OACAC,EAAA,OACAC,GACAC,UAAA,YACAC,UAAA,aACAC,MAAA,QACAC,mBAAA,6CACAC,eAAA,2BACAC,sBAAA,aACAC,kBAAA,QACAC,OAAA,mCACA3mC,OAAA,8BACA4mC,UAAA,0DAEA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EACA,GAAA,IAAAF,EAAArgC,OACAugC,EAAAF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACA,CAAA,GAAA,IAAAA,EAAArgC,OAGA,MAAA,IAAAzB,MAAA,gCAAA8hC,EAAA,gDAFAE,EAAAF,EAAAz2B,MAAA,GAIA,MAAA,QAAAoR,SAAAulB,EAAA32B,MAAA,EAAA,GAAA,IAAA,IAAAoR,SAAAulB,EAAA32B,MAAA,EAAA,GAAA,IAAA,IAAAoR,SAAAulB,EAAA32B,MAAA,EAAA,GAAA,IAAA,IAAA02B,EAAA,IAEA,SAAAE,EAAAl+B,EAAA0K,EAAAmO,GACA,IACA7Y,EAAA0K,MAAAA,GAAAmO,EACA,MAAA/c,GACA,cAGAqiC,UAAAjrB,EACA7H,YAAAtB,EAAA1R,EAAAob,GACAH,MAAAvJ,EAAA1R,EAAAob,GACA,MAAA2qB,EAAA1uB,EAAA1B,KAAA7U,KAAAA,KAAAm7B,eACAvqB,EAAA0D,GAAA,YAAAiC,EAAA1B,KAAA7U,KAAAA,KAAAklC,gBACAt0B,EAAA0D,GAAA,kBAAA2wB,GACAr0B,EAAA0D,GAAA,iBAAAiC,EAAA1B,KAAA7U,KAAAA,KAAAmlC,iBACAv0B,EAAA0J,MAAA/D,EAAA1B,KAAA7U,KAAA,WACA,GAAA4Q,EAAA2kB,OAAA3kB,EAAA2kB,MAAA6D,yBAEA,YADAp5B,KAAAwrB,OAGA5a,EAAA0D,GAAA,mBAAA2wB,GACAr0B,EAAA0D,GAAA,eAAA2wB,GACA7/B,OAAA+L,iBAAA,oBAAA8zB,GACAr0B,EAAA0D,GAAA,UAAA,IAAAlP,OAAA6L,oBAAA,oBAAAg0B,IACA,MAAAvX,EAAA1tB,KAAA2a,SAAAkD,cAAA6P,WACA,IAAA,IAAAppB,EAAA,EAAAA,EAAAopB,EAAAnpB,OAAAD,IACAtE,KAAAwa,QAAAwK,mBAAA0I,EAAAppB,IAAA,GAEAtE,KAAAmlC,oBAGAjzB,iBACA,MAAAkzB,GACApV,SAAA,EACAG,UAAA,GAEAkV,EAAArlC,KAAAwa,QAAAqK,aACAygB,EAAAtlC,KAAAwa,QAAAknB,OAAA6D,iBACA,IAAAC,EACAC,EACAC,EACA,IAAA,IAAAphC,EAAA,EAAAA,EAAA+gC,EAAA9gC,OAAAD,IAAA,CACA,MAAA4f,EAAAmhB,EAAA/gC,GACAghC,GAAAA,EAAA9W,SAAA8W,EAAArpB,UAAAqpB,EAAArpB,WAAAiI,EAAAjI,UAAAiI,EAAA+K,QAAAmW,EACAlhB,EAAA+K,OAAAqW,EAAArW,KACAyW,EAAAxhB,EACAwhB,IACAA,EAAAxhB,GAEAohB,IAAAA,EAAA9W,SACAkX,EAAA,KACAF,EAAA,KACAC,EAAA,MACAvhB,EAAA6R,UACA,iBAAA7R,EAAA+K,MAAAuW,EAEAthB,EAAA+K,QAAAmW,IAAAK,IACAA,EAAAvhB,GAFAshB,EAAAthB,GAMAwhB,EACAA,EAAA7P,KAAA,UACA4P,EACAA,EAAA5P,KAAA,UACA2P,IACAA,EAAA3P,KAAA,WAGA3jB,gBACAlS,KAAAwa,QAAA+a,OAAAv1B,KAAAwa,QAAA+a,MAAA6D,yBACAp5B,KAAAwrB,OAEAxrB,KAAAsrB,OAGApZ,WACA,OAAAiI,MAAAhP,SAAA,OAAAmG,UAAA,2BACAuxB,YAAA,MACA8C,cAAA,SAGAzzB,eACA,mBAAA9M,OAAAuvB,QACAvvB,OAAAuvB,OAAAiR,YAAAxgC,UAAApF,KAAAia,KAGA/H,gBACA,MAAAwb,EAAA1tB,KAAAwa,QAAAqK,aACAghB,EAAA7lC,KAAA2a,SAAAkrB,2BAEA,GADA7lC,KAAA8lC,eACAD,EAAA,CACA,MAAAE,KACA,IAAA,IAAAzhC,EAAA,EAAAA,EAAAopB,EAAAnpB,SAAAD,EAAA,CACA,MAAA4f,EAAAwJ,EAAAppB,GACA,YAAA4f,EAAA2R,MAGAkQ,EAAA9lC,KAAAikB,GAGA,YADAlkB,KAAAgmC,eAAAD,GAGA,IAAAE,EAAA,KACAC,EAAA,KACA5hC,EAAAopB,EAAAnpB,OACA,KAAAD,KAAA,CACA,MAAA4f,EAAAwJ,EAAAppB,GACA,YAAA4f,EAAA2R,OACA,iBAAA3R,EAAA+K,KACAgX,EAAA/hB,EAEAgiB,EAAAhiB,GAIAgiB,GACA,QAAAlmC,KAAA2M,aAAA,cACA3M,KAAA4M,aAAA,YAAA,OAEA5M,KAAAgmC,eAAAE,IACAD,IACA,cAAAjmC,KAAA2M,aAAA,cACA3M,KAAA4M,aAAA,YAAA,aAEA5M,KAAAgmC,eAAAC,IAGA/zB,mBAAAgS,GACA,MAAAiiB,EAAAnmC,KAAAwa,QAAA4rB,kBAAAC,YACAliB,EAAAD,EAAAiS,WACA,IAAA7xB,EAAA6f,EAAA5f,OACA,KAAAD,KAAA,CACA,MAAA8f,EAAAD,EAAA7f,GACA,IAAA8f,EACA,SAEA,MAAAkiB,EAAAliB,EAAAmiB,aA+BA,GA9BAJ,EAAAvB,QACA0B,EAAA7U,WAAAlgB,MAAAqzB,MAAAuB,EAAAvB,OAEAuB,EAAAK,aACAzB,EAAAuB,EAAA7U,WAAA,QAAAkT,EAAAwB,EAAAvB,OAAA,OAAAuB,EAAAK,cAEAL,EAAAM,kBACAH,EAAA7U,WAAAlgB,MAAAk1B,gBAAAN,EAAAM,iBAEAN,EAAAO,mBACA3B,EAAAuB,EAAA7U,WAAA,kBAAAkT,EAAAwB,EAAAM,iBAAA,OAAAN,EAAAO,oBAEAP,EAAAQ,cACAR,EAAAS,cACA7B,EAAAuB,EAAA,kBAAA3B,EAAAwB,EAAAQ,YAAAR,EAAAS,gBAEAN,EAAA/0B,MAAAk1B,gBAAAN,EAAAQ,aAGAR,EAAAU,YACA,eAAAV,EAAAU,UACAP,EAAA7U,WAAAlgB,MAAAu1B,0BAAA/C,kBAAAA,kBAAAA,IACA,WAAAoC,EAAAU,UACAP,EAAA7U,WAAAlgB,MAAAu1B,sBAAA/C,cAAAA,cAAAA,IACA,cAAAoC,EAAAU,UACAP,EAAA7U,WAAAlgB,MAAAu1B,sBAAA9C,YAAAA,gBAAAD,aAAAA,IACA,YAAAoC,EAAAU,YACAP,EAAA7U,WAAAlgB,MAAAu1B,sBAAA/C,cAAAA,cAAAA,cAAAA,MAGAoC,EAAAY,aAAA,IAAAZ,EAAAY,YAAA,CACA,MAAAC,EAAA5hC,OAAAqC,WAAA6+B,EAAA/0B,MAAAy1B,UACAV,EAAA/0B,MAAAy1B,SAAAA,EAAAb,EAAAY,YAAA,KACAT,EAAA/0B,MAAAjH,OAAA,OACAg8B,EAAA/0B,MAAAnH,IAAA,OAEA+7B,EAAAc,YAAA,YAAAd,EAAAc,aACA,eAAAd,EAAAc,WACAX,EAAA7U,WAAAlgB,MAAA21B,YAAA,aAEAZ,EAAA7U,WAAAlgB,MAAA01B,WAAAhD,EAAAkC,EAAAc,cAKA/0B,eAAAwb,GAIA,GAHAloB,MAAAvJ,QAAAyxB,KACAA,GAAAA,IAEA,mBAAAtoB,OAAAuvB,QAAAjH,EAAA5W,MAAAoN,IACAA,EAAAiS,YAEA,OAEA,MAAAhS,KACA,IAAA,IAAA7f,EAAA,EAAAA,EAAAopB,EAAAnpB,SAAAD,EAAA,CACA,MAAA4f,EAAAwJ,EAAAppB,GACA,IAAA,IAAA69B,EAAA,EAAAA,EAAAje,EAAAiS,WAAA5xB,SAAA49B,EACAhe,EAAAlkB,KAAAikB,EAAAiS,WAAAgM,IAGA/8B,OAAAuvB,OAAAiR,YAAAxgC,OAAA+e,EAAAnkB,KAAAia,KACA,IAAA,IAAA3V,EAAA,EAAAA,EAAAopB,EAAAnpB,SAAAD,EAAA,CACA,MAAA4f,EAAAwJ,EAAAppB,GACA,IAAA,IAAA69B,EAAA,EAAAA,EAAAje,EAAAiS,WAAA5xB,SAAA49B,EAAA,CACA,MAAAgF,EAAAjjB,EAAAiS,WAAAgM,GAAAoE,aACAv2B,EAAAjE,SAAAo7B,EAAA,sBACAn3B,EAAAjE,SAAAo7B,EAAA,uBAAAjjB,EAAAjI,SAAAiI,EAAAjI,SAAA3X,IAEAtE,KAAAwa,QAAA4rB,mBACApmC,KAAAonC,mBAAAljB,KAWA,OALAnK,EAAAkI,kBAAA,mBAAA+iB,GAGAA,EAAAL,eAAAA,EAEAK,IAEA3pC,OAAA,mCACA,cACA,eACA,SAAA0e,EAAAstB,GACA,mBACAC,UAAAvtB,EACA7H,WACA,MAAAq1B,EAAAvnC,KAAAwa,QAAA+sB,UACAC,EAAAxnC,KAAA6qB,SAAA0c,EAAA,eAAA,gBACAzb,EAAAub,EAAAl8B,SAAA,QACAmG,UAAA,mBACAkgB,UAAAxxB,KAAA6qB,SAAA,mBAAA2c,MAEA3gC,EAAAsT,MAAAhP,SAAA,OACAmG,UAAA,sBACAm2B,IAAA,QAGA,OADA5gC,EAAAwjB,YAAAyB,GACAjlB,GAIA,OADAkT,EAAAkI,kBAAA,iBAAAqlB,GACAA,IAEAjsC,OAAA,0BACA,wBACA,cACA,cACA,cACA,mBACA,SAAAonC,EAAA1oB,EAAAnV,EAAAnF,EAAAiqB,GACA,mBACAge,UAAAjF,EACAvwB,SAAA5F,EAAA6kB,KAAA7lB,MAEA6lB,EAAA1xB,EAAAiH,QACA8qB,UAAA,gEACAlgB,UAAAtR,KAAAsqB,iBACA6G,GACA7lB,EAAA7L,EAAAiH,QAAAtK,KAAA,UAAAkP,GACA,MAAAzE,EAAAkT,EAAA1J,UAAAlF,SAAAvK,KAAAZ,KANA,SAMAmxB,EAAA7lB,GAEA,OADAtL,KAAA2iC,oBAAA97B,GACAA,EAEAqL,SAAAxG,EAAAxM,MACA,MAAAoS,EAAAtR,KAAA2W,YAAA7Z,KAEA,OADA8H,EAAAkB,oEAAAwL,0DACAyI,EAAA1J,UAAA0N,SAAAnd,KAAAZ,KAAA0L,EAAAxM,GAEAgT,SACAiI,MAAA7T,SACAtG,KAAAia,IAAApN,gBAAA,YAEAqF,UACAiI,MAAA9T,UACArG,KAAAia,IAAArN,aAAA,WAAA,YAEAsF,cAAAvE,GACA+b,EAAAhE,WAAA/X,EAAA,UAAA+b,EAAAhE,WAAA/X,EAAA,SACAA,EAAA4F,kBAGA4G,MAAA0F,cAAAlS,IAIA,OADAoM,EAAAkI,kBAAA,SAAAylB,GACAA,IAEArsC,OAAA,mCACA,WACA,cACA,kBACA,mBACA,SAAAqsC,EAAA3tB,EAAAzW,EAAAgG,GACA,mBACAq+B,UAAAD,EACAx1B,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAA4nC,YAAA,EACA5nC,KAAAqa,SAAA,YAAAra,KAAA6nC,iBAEA31B,gBACA,MAAA,sBAEAA,YAAAvE,GACA,MAAAm6B,EAAA9nC,KAAAwa,QAAAD,OACA,GAAAva,KAAA4nC,YAAAj6B,EAAAgG,SAAAhG,EAAAqG,QAAA,CACA,MAAA2vB,EAAA3jC,KAAAwa,QAAAopB,YAAA,QAAA5jC,KAAAwa,QAAAqpB,IAAAC,UAAA9jC,KAAAwa,QAAAqpB,IAAAC,SAAAv/B,OAAA,EAKA,OAJAjB,EAAA0gB,eAAA8jB,SACA9nC,KAAAwa,QAAAgK,MAAA,KAAAlb,EAAAf,YAAAe,EAAAlB,UAAAu7B,GACA3jC,KAAAwa,QAAAgK,MAAA,GAAAvX,SAIA,MAAA86B,EAAA/nC,KAAAwa,QAAAqC,SAAA,cACAmrB,EAAAD,GAAAA,EAAAlrB,SAAA,cACA,IAAAmrB,EAEA,YADAhoC,KAAAwa,QAAAgK,MAAA,GAAAvX,QAGA,MAAAg7B,EAAA,IAAAD,EAAA/6B,QACA3J,EAAAwgB,UAAAgkB,GACAA,EAAA/jB,KAAAkkB,EAAA,QAGAjoC,KAAA+Q,WAAAk3B,EAAA,GAGA/1B,cAAAvE,GACA3N,KAAA4nC,YAAA,EACAztB,MAAA0F,cAAAlS,GAEAuE,gBAAAvE,GACA3N,KAAA4nC,YAAA,GAKA,OAFAD,EAAAt3B,UAAAyyB,aAAA,aACA/oB,EAAAkI,kBAAA,gBAAA0lB,GACAA,IAEAtsC,OAAA,gCACA,WACA,cACA,mBACA,SAAAqsC,EAAA3tB,EAAA2P,GACA,mBACAwe,UAAAR,EACAx1B,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAA8rB,YAAA5sB,GAAAA,EAAA4sB,aAAA9rB,KAAA6qB,SAAA,UAEA3Y,gBACA,0BAAAiI,MAAAmQ,kBAEApY,YAAAvE,GACA3N,KAAAwU,SACApY,KAAA,QACAuf,SAAA,IAGAzJ,cAAAvE,GACA+b,EAAAhE,WAAA/X,EAAA,QACAA,EAAAqF,iBACArF,EAAA4F,kBACAvT,KAAAwU,QAAA,UAEA2F,MAAA0F,cAAAlS,IAKA,OADAoM,EAAAkI,kBAAA,cAAAimB,GACAA,IAEA7sC,OAAA,2CACA,YACA,gBACA,SAAAqsC,EAAA3tB,GACA,mBACAouB,UAAAT,EACAx1B,YAAAtB,EAAA1R,MACAib,MAAAvJ,EAAA1R,GACAA,EAAAkpC,YAAA9oC,IAAAJ,EAAAkpC,QAAAlpC,EAAAkpC,OACApoC,KAAAqa,SAAAzJ,EAAA,OAAA5Q,KAAAqoC,YACAroC,KAAAqa,SAAAzJ,EAAA,QAAA5Q,KAAAsoC,aACAppC,EAAAkpC,QACApoC,KAAAqa,SAAAzJ,EAAA,QAAA5Q,KAAAuoC,aAGAr2B,gBACA,0BAAAiI,MAAAmQ,kBAEApY,YAAAvE,GACA3N,KAAAwa,QAAA0Q,SACAlrB,KAAAwa,QAAAD,OAEAva,KAAAwa,QAAAoO,QAGA1W,aAAAvE,GACA3N,KAAAgM,YAAA,aACAhM,KAAAwa,QAAA0Q,SACAlrB,KAAAsoC,YAAA36B,GAEA3N,KAAAqoC,WAAA16B,GAGAuE,WAAAvE,GACA3N,KAAAgM,YAAA,aACAhM,KAAAgM,YAAA,cACAhM,KAAA+L,SAAA,eACA/L,KAAA8rB,YAAA,SAEA5Z,YAAAvE,GACA3N,KAAAgM,YAAA,eACAhM,KAAA+L,SAAA,cACA/L,KAAA8rB,YAAA,QAEA5Z,YAAAvE,GACA3N,KAAAgM,YAAA,eACAhM,KAAA+L,SAAA,aACA/L,KAAA8rB,YAAA,UACA9rB,KAAAqhB,aAAArhB,KAAAwa,QAAA,SAAAxa,KAAAwoC,eAKA,OAFAL,EAAA93B,UAAAyyB,aAAA,OACA/oB,EAAAkI,kBAAA,aAAAkmB,GACAA,IAEA9sC,OAAA,uCAAA,WACA,aACA,MAAAotC,EAAA,SAAAC,EAAAC,GACAD,EAAAA,EAAA,EAAA,EAAAA,EACA,IAAA9G,EAAA5yB,KAAAoD,MAAAs2B,EAAA,IACAE,EAAA55B,KAAAoD,MAAAs2B,EAAA,GAAA,IACAG,EAAA75B,KAAAoD,MAAAs2B,EAAA,MACA,MAAAI,EAAA95B,KAAAoD,MAAAu2B,EAAA,GAAA,IACAI,EAAA/5B,KAAAoD,MAAAu2B,EAAA,MAOA,OANAlpB,MAAAipB,IAAAA,IAAAM,EAAAA,KACAH,EAAAD,EAAAhH,EAAA,MAEAiH,EAAAA,EAAA,GAAAE,EAAA,EAAAF,EAAA,IAAA,KACAD,IAAAC,GAAAC,GAAA,KAAAF,EAAA,GAAA,IAAAA,EAAAA,GAAA,MACAhH,EAAAA,EAAA,GAAA,IAAAA,EAAAA,IAGA,IAAAqH,EAAAR,EAOA,SAAAS,EAAAR,EAAAC,EAAAD,GACA,OAAAO,EAAAP,EAAAC,GAMA,OAHAO,EAAAC,cAVA,SAAAC,GACAH,EAAAG,GAUAF,EAAAG,gBARA,WACAJ,EAAAR,GASAS,IAEA7tC,OAAA,0DACA,iCACA,kBACA,kBACA,0BACA,mBACA,SAAAmB,EAAAud,EAAA/J,EAAAk5B,EAAAtkC,GACA,mBACA0kC,UAAAvvB,EACA7H,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAqa,SAAAzJ,GACA,aACA,SACA5Q,KAAAupC,eACAvpC,KAAAwpC,kBAEAt3B,WACA,MAAAZ,EAAAtR,KAAAsqB,gBACAzjB,EAAAsT,MAAAhP,SAAA,OACAmG,aAAAA,iCACAkgB,gEAAAxxB,KAAA6qB,SAAA7qB,KAAAypC,wBAOA,OALAzpC,KAAAwc,WAAAxM,EAAA7E,SAAA,QAAAmG,aAAAA,cACAuxB,YAAA,MACA3Y,KAAA,iBAEArjB,EAAAwjB,YAAArqB,KAAAwc,YACA3V,EAEAqL,UACAlS,KAAAwc,WAAA,KACAxc,KAAA0pC,UAAA,KACAvvB,MAAAyB,UAEA1J,gBAAAy3B,EAAA,GACAA,EAAAT,EAAAS,GACA3pC,KAAA4pC,iBAAAD,IAGA3pC,KAAA4pC,eAAAD,EACA3pC,KAAA6pC,2BAAA,8BAAA,KACA,IAAA7pC,KAAAwc,WACA,OAEA,IAAAstB,EAAA9pC,KAAA0pC,UACAI,GAAA9pC,KAAAwc,WAAAiV,aAAAqY,IACAA,EAAA,KACAllC,EAAAkB,KAAA,uJAEA9F,KAAA0pC,UAAAltC,EAAAuO,eAAA/K,KAAA4pC,gBACA5pC,KAAA0pC,YAGAI,EACA9pC,KAAAwc,WAAAutB,aAAA/pC,KAAA0pC,UAAAI,GAEA9pC,KAAAwc,WAAA6N,YAAArqB,KAAA0pC,eAIAx3B,cAAAvE,KAMA,OAHA27B,EAAAj5B,UAAAo5B,WAAA,OACAH,EAAAj5B,UAAAyyB,aAAA,OACA/oB,EAAAkI,kBAAA,cAAAqnB,GACAA,IAEAjuC,OAAA,kEACA,iBACA,mBACA,SAAAiuC,EAAAvvB,GACA,mBACAiwB,UAAAV,EACAp3B,gBACA,MAAA,mBAEAA,cAAAvE,GACA,IAAAg8B,EAEAA,EADA3pC,KAAAwa,QAAAyvB,QACAjqC,KAAAwa,QAAAuI,WAEA/iB,KAAAwa,QAAA0vB,YAAAlqC,KAAAwa,QAAA2vB,WAAAzT,YAAA12B,KAAAwa,QAAAkc,cAEA12B,KAAAwpC,gBAAAG,IAMA,OAHAK,EAAA35B,UAAAo5B,WAAA,eACAO,EAAA35B,UAAAyyB,aAAA,eACA/oB,EAAAkI,kBAAA,qBAAA+nB,GACAA,IAEA3uC,OAAA,8DACA,iBACA,mBACA,SAAAiuC,EAAAvvB,GACA,mBACAqwB,UAAAd,EACAp3B,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAqa,SAAAzJ,EAAA,iBAAA5Q,KAAAupC,eACAvpC,KAAAqa,SAAAzJ,EAAA,YAAA5Q,KAAAupC,eACAvpC,KAAAqa,SAAAzJ,EAAA,iBAAA5Q,KAAAupC,eAEAr3B,gBACA,MAAA,eAEAA,cAAAvE,GACA,MAAAoV,EAAA/iB,KAAAwa,QAAAuI,WACA/iB,KAAAwpC,gBAAAzmB,IAMA,OAHAqnB,EAAA/5B,UAAAo5B,WAAA,WACAW,EAAA/5B,UAAAyyB,aAAA,WACA/oB,EAAAkI,kBAAA,kBAAAmoB,GACAA,IAEA/uC,OAAA,0DACA,mBACA,SAAA0e,GACA,mBACAswB,UAAAtwB,EACA7H,WACA,OAAAiI,MAAAhP,SAAA,OACAmG,UAAA,oCACAkgB,UAAA,8BACA/G,eAAA,KAIA,OADA1Q,EAAAkI,kBAAA,cAAAooB,GACAA,IAEAhvC,OAAA,oEACA,iBACA,kBACA,mBACA,SAAAiuC,EAAAvvB,EAAA/J,GACA,mBACAs6B,UAAAhB,EACAp3B,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAqa,SAAAzJ,EAAA,iBAAA5Q,KAAAupC,eAEAr3B,gBACA,MAAA,qBAEAA,WACA,MAAArL,EAAAsT,MAAAhP,WAEA,OADAtE,EAAAyW,aAAAtN,EAAA7E,SAAA,WAAAsf,eAAA,GAAA,KAAAzqB,KAAAwc,YACA3V,EAEAqL,cAAAvE,GACA,GAAA,iBAAA3N,KAAAwa,QAAAuI,WACA,OAEA,IAAA4mB,EAEAA,EADA3pC,KAAAwa,QAAAyvB,QACA,EACAjqC,KAAAwa,QAAA+vB,qBACAvqC,KAAAwa,QAAA+vB,uBAEAvqC,KAAAwa,QAAAgwB,gBAEAxqC,KAAAwpC,gBAAAG,IAMA,OAHAW,EAAAj6B,UAAAo5B,WAAA,iBACAa,EAAAj6B,UAAAyyB,aAAA,iBACA/oB,EAAAkI,kBAAA,uBAAAqoB,GACAA,IAEAjvC,OAAA,4CACA,eACA,gBACA,SAAA0e,EAAA/J,GACA,mBACAy6B,UAAA1wB,EACA7H,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAA0qC,gBACA1qC,KAAAqa,SAAAra,KAAA4Q,SAAA,iBAAA5Q,KAAA0qC,eAEAx4B,WACA,MAAArL,EAAAsT,MAAAhP,SAAA,OAAAmG,UAAA,iCAMA,OALAtR,KAAAwc,WAAAxM,EAAA7E,SAAA,OACAmG,UAAA,mBACAkgB,4CAAAxxB,KAAA6qB,SAAA,yBAAA7qB,KAAA6qB,SAAA,YACAgY,YAAA,QACAh8B,EAAAwjB,YAAArqB,KAAAwc,YACA3V,EAEAqL,UACAlS,KAAAwc,WAAA,KACArC,MAAAyB,UAEA1J,cAAAvE,GACA3N,KAAA4Q,SAAAmS,aAAAimB,EAAAA,EACAhpC,KAAAsrB,OAEAtrB,KAAAwrB,QAKA,OADAzR,EAAAkI,kBAAA,cAAAwoB,GACAA,IAEApvC,OAAA,4CACA,YACA,eACA,gBACA,SAAAqsC,EAAA3tB,EAAA/J,GACA,mBACA26B,UAAAjD,EACAx1B,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAA4qC,uBACA5qC,KAAAwa,QAAAqwB,aACA7qC,KAAAqa,SAAAra,KAAAwa,QAAAqwB,YAAA,iBAAA7qC,KAAA4qC,sBAGA14B,WACA,MAAArL,EAAAsT,MAAAhP,SAAA,UAAAmG,UAAA,yCAMA,OALAtR,KAAA8qC,QAAA96B,EAAA7E,SAAA,QACAmG,UAAA,wBACAkgB,UAAAxxB,KAAA6qB,SAAA,UACAJ,cAAA,SACA5jB,EAAAwjB,YAAArqB,KAAA8qC,SACAjkC,EAEAqL,wBACAlS,KAAAwa,QAAAqwB,aAAA7qC,KAAAwa,QAAAqwB,YAAAE,cACA/qC,KAAA4M,aAAA,iBAAA,GACA5M,KAAA+L,SAAA,oBACA/L,KAAA8rB,YAAA,0CAEA9rB,KAAA4M,aAAA,iBAAA,GACA5M,KAAAgM,YAAA,oBACAhM,KAAA8rB,YAAA,wCAGA5Z,cACAlS,KAAAwa,QAAAqwB,YAAAG,iBAEA94B,UACAlS,KAAAwa,QAAAqwB,aACA7qC,KAAA2X,WAAA3X,KAAAwa,QAAAqwB,YAAA,iBAAA7qC,KAAA4qC,sBAEA5qC,KAAA8qC,QAAA,KACA3wB,MAAAyB,WAKA,OAFA+uB,EAAAt6B,UAAAyyB,aAAA,uCACA/oB,EAAAkI,kBAAA,aAAA0oB,GACAA,IAEAtvC,OAAA,iCAAA,WACA,aAKA,OAJA,SAAA4vC,EAAA/7B,EAAAD,GAEA,OADAg8B,EAAA78B,OAAA68B,GACAj8B,KAAAE,IAAAD,EAAAD,KAAAC,IAAAC,EAAAuQ,MAAAwrB,GAAA/7B,EAAA+7B,OAIA5vC,OAAA,iCACA,eACA,eACA,eACA,mBACA,iBACA,oBACA,SAAA0e,EAAA/J,EAAAvQ,EAAA6J,EAAA4hC,EAAAxhB,GACA,mBACAyhB,UAAApxB,EACA7H,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAorC,IAAAprC,KAAA6c,SAAA7c,KAAA2a,SAAA0wB,SACArrC,KAAAsrC,WAAAtrC,KAAA2a,SAAA2wB,UACAtrC,KAAAsG,SAEA4L,UACA,OAAAlS,KAAAijC,SAEA/wB,SACAlS,KAAAwuB,YAGAxuB,KAAAqa,SAAA,YAAAra,KAAA6nC,iBACA7nC,KAAAqa,SAAA,aAAAra,KAAA6nC,iBACA7nC,KAAAqa,SAAA,UAAAra,KAAA6f,eACA7f,KAAAqa,SAAA,QAAAra,KAAAkjC,aACAljC,KAAAqa,SAAAra,KAAAwa,QAAA,kBAAAxa,KAAAujC,QACAvjC,KAAAurC,aACAvrC,KAAAqa,SAAAra,KAAAwa,QAAAxa,KAAAurC,YAAAvrC,KAAAujC,QAEAvjC,KAAAgM,YAAA,YACAhM,KAAA4M,aAAA,WAAA,GACA5M,KAAAijC,UAAA,GAEA/wB,UACA,IAAAlS,KAAAwuB,UACA,OAEA,MAAA5a,EAAA5T,KAAAorC,IAAAnxB,IAAAuxB,cACAxrC,KAAA2X,WAAA,YAAA3X,KAAA6nC,iBACA7nC,KAAA2X,WAAA,aAAA3X,KAAA6nC,iBACA7nC,KAAA2X,WAAA,UAAA3X,KAAA6f,eACA7f,KAAA2X,WAAA,QAAA3X,KAAAkjC,aACAljC,KAAA2X,WAAA3X,KAAAwa,QAAA,kBAAAxa,KAAAujC,QACAvjC,KAAA2X,WAAA/D,EAAA,YAAA5T,KAAAyrC,iBACAzrC,KAAA2X,WAAA/D,EAAA,UAAA5T,KAAA0rC,eACA1rC,KAAA2X,WAAA/D,EAAA,YAAA5T,KAAAyrC,iBACAzrC,KAAA2X,WAAA/D,EAAA,WAAA5T,KAAA0rC,eACA1rC,KAAA6M,gBAAA,YACA7M,KAAA+L,SAAA,YACA/L,KAAAurC,aACAvrC,KAAA2X,WAAA3X,KAAAwa,QAAAxa,KAAAurC,YAAAvrC,KAAAujC,QAEAvjC,KAAAijC,UAAA,EAEA/wB,SAAA9V,EAAA+0B,KAAA7lB,MAUA,OATA6lB,EAAA7f,UAAA6f,EAAA7f,UAAA,cACA6f,EAAA1xB,EAAAiH,QAAA6jB,SAAA,GAAA4G,GACA7lB,EAAA7L,EAAAiH,QACAwjB,KAAA,SACAyhB,gBAAA,EACAC,gBAAA,EACAC,gBAAA,IACAthB,SAAA,GACAjf,GACA6O,MAAAhP,SAAA/O,EAAA+0B,EAAA7lB,GAEA4G,gBAAAvE,GACA,MAAAiG,EAAA5T,KAAAorC,IAAAnxB,IAAAuxB,cACA,cAAA79B,EAAAvR,MACAuR,EAAAqF,iBAEA,eAAArF,EAAAvR,MAAAkN,EAAAjB,WACAsF,EAAAqF,iBAEAhD,EAAAjD,qBACA/M,KAAA+L,SAAA,eACA/L,KAAAwU,QAAA,gBACAxU,KAAAqa,SAAAzG,EAAA,YAAA5T,KAAAyrC,iBACAzrC,KAAAqa,SAAAzG,EAAA,UAAA5T,KAAA0rC,eACA1rC,KAAAqa,SAAAzG,EAAA,YAAA5T,KAAAyrC,iBACAzrC,KAAAqa,SAAAzG,EAAA,WAAA5T,KAAA0rC,eACA1rC,KAAAyrC,gBAAA99B,GAEAuE,gBAAAvE,IAEAuE,gBACA,MAAA0B,EAAA5T,KAAAorC,IAAAnxB,IAAAuxB,cACAx7B,EAAA7C,uBACAnN,KAAAgM,YAAA,eACAhM,KAAAwU,QAAA,kBACAxU,KAAA2X,WAAA/D,EAAA,YAAA5T,KAAAyrC,iBACAzrC,KAAA2X,WAAA/D,EAAA,UAAA5T,KAAA0rC,eACA1rC,KAAA2X,WAAA/D,EAAA,YAAA5T,KAAAyrC,iBACAzrC,KAAA2X,WAAA/D,EAAA,WAAA5T,KAAA0rC,eACA1rC,KAAAujC,SAEArxB,SACA,IAAAlS,KAAAia,MAAAja,KAAAorC,IACA,OAEA,MAAAU,EAAA9rC,KAAA+rC,cACA,OAAAD,IAAA9rC,KAAAgsC,UACAF,GAEA9rC,KAAAgsC,UAAAF,EACA9rC,KAAA6pC,2BAAA,gBAAA,KACA,MAAAoC,EAAAjsC,KAAAsrC,WAAA,SAAA,QACAtrC,KAAAorC,IAAAvkC,KAAA0K,MAAA06B,IAAA,IAAAH,GAAAI,QAAA,GAAA,MAEAJ,GAEA55B,cACA,OAAA9D,OAAA88B,EAAAlrC,KAAAmsC,aAAA,EAAA,GAAAD,QAAA,IAEAh6B,kBAAAvE,GACA,MAAAU,EAAA2B,EAAAtC,mBAAA1N,KAAAia,IAAAtM,GACA,OAAA3N,KAAAsrC,WACAj9B,EAAAP,EAEAO,EAAAR,EAEAqE,cAAAvE,GACA+b,EAAAhE,WAAA/X,EAAA,SAAA+b,EAAAhE,WAAA/X,EAAA,SACAA,EAAAqF,iBACArF,EAAA4F,kBACAvT,KAAAosC,YACA1iB,EAAAhE,WAAA/X,EAAA,UAAA+b,EAAAhE,WAAA/X,EAAA,OACAA,EAAAqF,iBACArF,EAAA4F,kBACAvT,KAAAqsC,eAEAlyB,MAAA0F,cAAAlS,GAGAuE,YAAAvE,GACAA,EAAA4F,kBACA5F,EAAAqF,iBAEAd,SAAAo6B,GACA,QAAAhtC,IAAAgtC,EACA,OAAAtsC,KAAAusC,YAAA,EAEAvsC,KAAAusC,YAAAD,EACAtsC,KAAAusC,UACAvsC,KAAA+L,SAAA,uBAEA/L,KAAA+L,SAAA,0BAKA,OADAgO,EAAAkI,kBAAA,SAAAkpB,GACAA,IAEA9vC,OAAA,kEACA,iCACA,kBACA,kBACA,qBACA,SAAAmB,EAAAud,EAAA/J,EAAAk7B,GACA,aACA,MAAAsB,EAAA,CAAA7C,EAAAjnB,IAAAwoB,EAAAvB,EAAAjnB,EAAA,IAAA,EAAA,KAAAwpB,QAAA,GAAA,UACAO,UAAA1yB,EACA7H,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAA0sC,YACA1sC,KAAAqa,SAAAzJ,EAAA,WAAA5Q,KAAAujC,QAEArxB,WACA,MAAArL,EAAAsT,MAAAhP,SAAA,OAAAmG,UAAA,sBACAuG,EAAA7H,EAAA7E,SAAA,QAAAmG,UAAA,qBACAq7B,EAAA38B,EAAA7E,SAAA,QAAAK,YAAAxL,KAAA6qB,SAAA,YACA+hB,EAAApwC,EAAAuO,eAAA,MASA,OARA/K,KAAA6sC,cAAA78B,EAAA7E,SAAA,QACAmG,UAAA,qCACA9F,YAAA,OAEA3E,EAAAwjB,YAAAxS,GACAA,EAAAwS,YAAAsiB,GACA90B,EAAAwS,YAAAuiB,GACA/0B,EAAAwS,YAAArqB,KAAA6sC,eACAhmC,EAEAqL,UACAlS,KAAA0sC,SAAA,KACA1sC,KAAA6sC,cAAA,KACA1yB,MAAAyB,UAEA1J,OAAAvE,GACA3N,KAAA6pC,2BAAA,yBAAA,KACA,MAAAgB,EAAA7qC,KAAAwa,QAAAqwB,YACA/nB,EAAA9iB,KAAAwa,QAAAsI,WACAC,EAAA8nB,GAAAA,EAAAiC,SAAAjC,EAAAkC,cAAA/sC,KAAAwa,QAAAuI,WACAiqB,EAAAhtC,KAAAwa,QAAAwyB,cACAvvB,EAAAzd,KAAA0sC,SACAO,EAAAT,EAAAQ,EAAAjqB,GACA/iB,KAAAktC,WAAAD,IACAjtC,KAAAia,IAAA1I,MAAAlH,MAAA4iC,EACAj9B,EAAAxE,YAAAxL,KAAA6sC,cAAAI,GACAjtC,KAAAktC,SAAAD,GAEA,IAAA,IAAA3oC,EAAA,EAAAA,EAAAwe,EAAAve,OAAAD,IAAA,CACA,MAAAme,EAAAK,EAAAL,MAAAne,GACAoe,EAAAI,EAAAJ,IAAApe,GACA,IAAA6oC,EAAA1vB,EAAAnZ,GACA6oC,IACAA,EAAAntC,KAAAia,IAAAoQ,YAAAra,EAAA7E,YACAsS,EAAAnZ,GAAA6oC,GAEAA,EAAAC,QAAA3qB,QAAAA,GAAA0qB,EAAAC,QAAA1qB,MAAAA,IAGAyqB,EAAAC,QAAA3qB,MAAAA,EACA0qB,EAAAC,QAAA1qB,IAAAA,EACAyqB,EAAA57B,MAAApH,KAAAqiC,EAAA/pB,EAAAuqB,GACAG,EAAA57B,MAAAlH,MAAAmiC,EAAA9pB,EAAAD,EAAAuqB,IAEA,IAAA,IAAA1oC,EAAAmZ,EAAAlZ,OAAAD,EAAAwe,EAAAve,OAAAD,IACAtE,KAAAia,IAAA4B,YAAA4B,EAAAnZ,EAAA,IAEAmZ,EAAAlZ,OAAAue,EAAAve,UAKA,OADAwV,EAAAkI,kBAAA,kBAAAwqB,GACAA,IAEApxC,OAAA,6DACA,kBACA,kBACA,0BACA,kBACA,SAAA0e,EAAA/J,EAAAk5B,EAAA3yB,GACA,mBACA82B,UAAAtzB,EACA7H,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAujC,OAAAhtB,EAAAtB,SAAAsB,EAAA1B,KAAA7U,KAAAA,KAAAujC,QAAAhtB,EAAA3B,yBAEA1C,WACA,OAAAiI,MAAAhP,SAAA,OAAAmG,UAAA,qBAAAmZ,cAAA,SAEAvY,OAAAo7B,EAAAC,EAAA1iC,GACA,MAAA2iC,EAAAx9B,EAAA/F,aAAAjK,KAAAia,KACAwzB,EAAAz9B,EAAA5C,sBAAApN,KAAAwa,QAAA3T,MACA6mC,EAAAJ,EAAAjjC,MAAAkjC,EACA,IAAAE,IAAAD,EACA,OAEA,MAAAG,EAAAL,EAAAnjC,KAAAsjC,EAAAtjC,KAAAujC,EACAE,EAAAN,EAAAjjC,MAAAqjC,GAAAD,EAAA/mB,MAAA4mB,EAAA5mB,OACA,IAAAmnB,EAAAL,EAAAnjC,MAAA,EACAsjC,EAAAE,EACAA,GAAAA,EAAAF,EACAC,EAAAC,IACAA,EAAAD,GAEAC,EAAA,EACAA,EAAA,EACAA,EAAAL,EAAAnjC,QACAwjC,EAAAL,EAAAnjC,OAEAwjC,EAAA7+B,KAAA8+B,MAAAD,GACA7tC,KAAAia,IAAA1I,MAAAmV,UAAAmnB,MACA7tC,KAAA+tC,MAAAljC,GAEAqH,MAAArH,GACAmF,EAAAxE,YAAAxL,KAAAia,IAAApP,GAEAqH,WAAAo7B,EAAAC,EAAA5D,EAAA5B,GACA/nC,KAAA6pC,2BAAA,yBAAA,KACA,IAAAh/B,EACA,MAAAkY,EAAA/iB,KAAAwa,QAAAuI,WACA,GAAA/iB,KAAAwa,QAAAqwB,aAAA7qC,KAAAwa,QAAAqwB,YAAAiC,SAAA,CACA,MAAAkB,EAAAhuC,KAAAwa,QAAAqwB,YAAAmD,aACAC,EAAAD,EAAAT,EAAAS,EACAnjC,GAAAojC,EAAA,EAAA,GAAA,KAAA/E,EAAA+E,EAAAD,QAEAnjC,EAAAq+B,EAAAS,EAAA5mB,GAEA/iB,KAAAujC,OAAA+J,EAAAC,EAAA1iC,GACAk9B,GACAA,OAMA,OADAhuB,EAAAkI,kBAAA,cAAAorB,GACAA,IAEAhyC,OAAA,kEACA,kBACA,sBACA,iBACA,kBACA,SAAA0e,EAAAzQ,EAAAiN,GACA,mBACA23B,UAAAn0B,EACA7H,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAujC,OAAAhtB,EAAAtB,SAAAsB,EAAA1B,KAAA7U,KAAAA,KAAAujC,QAAAhtB,EAAA3B,yBAEA1C,WACA,OAAAiI,MAAAhP,SAAA,OAAAmG,UAAA,qCAAAmZ,cAAA,SAEAvY,OAAAo7B,EAAAC,GACA,MAAAY,EAAAnuC,KAAA6c,SAAA,eACA,IAAAsxB,EACA,OAEA,MAAAxE,EAAA3pC,KAAAwa,QAAA0vB,YAAAlqC,KAAAwa,QAAA2vB,WAAAzT,YAAA12B,KAAAwa,QAAAkc,cACAyX,EAAAC,WAAAd,EAAAC,EAAA5D,IAQA,OALAuE,EAAA79B,UAAAsK,UAAA8C,aACAnU,EAAAL,QAAAK,EAAAxB,YACAomC,EAAA79B,UAAAsK,SAAA8C,SAAAxd,KAAA,eAEA8Z,EAAAkI,kBAAA,kBAAAisB,GACAA,IAEA7yC,OAAA,mEACA,kBACA,iBACA,kBACA,SAAA0e,EAAAxD,GACA,mBACA83B,UAAAt0B,EACA7H,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAujC,OAAAhtB,EAAAtB,SAAAsB,EAAA1B,KAAA7U,KAAAA,KAAAujC,QAAAhtB,EAAA3B,yBAEA1C,WACA,OAAAiI,MAAAhP,SAAA,OAAAmG,UAAA,sBAEAY,OAAAo7B,EAAAC,GACA,MAAA5D,EAAA4D,EAAAvtC,KAAAwa,QAAAuI,WACA/iB,KAAA6c,SAAA,eAAAuxB,WAAAd,EAAAC,EAAA5D,EAAA,KACA3pC,KAAAia,IAAA1I,MAAApH,QAAAmjC,EAAAjjC,MAAAkjC,SAMA,OAFAc,EAAAh+B,UAAAsK,UAAA8C,UAAA,gBACA1D,EAAAkI,kBAAA,mBAAAosB,GACAA,IAEAhzC,OAAA,yDACA,iCACA,sBACA,kBACA,sBACA,kBACA,iBACA,0BACA,sBACA,sBACA,sBACA,sBACA,wBACA,SAAAmB,EAAA2uC,EAAApxB,EAAAzQ,EAAA0G,EAAAuG,EAAA2yB,EAAA5lC,EAAAomB,GACA,aACA,MAAA4kB,EAAA,EACAC,EAAA,SACAC,UAAArD,EACAj5B,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAyuC,oBAEAv8B,oBACAlS,KAAA0uC,QAAAn4B,EAAA1B,KAAA7U,KAAAA,KAAAujC,QACAvjC,KAAAujC,OAAAhtB,EAAAtB,SAAAjV,KAAA0uC,QAAAn4B,EAAA3B,yBACA5U,KAAAqa,SAAAra,KAAAwa,SACA,QACA,iBACA,cACAxa,KAAAujC,QACAvjC,KAAAwa,QAAAqwB,aACA7qC,KAAAqa,SAAAra,KAAAwa,QAAAqwB,YAAA,iBAAA7qC,KAAAujC,QAEAvjC,KAAA2uC,eAAA,KACA3uC,KAAAqa,SAAAra,KAAAwa,SAAA,WAAAxa,KAAA4uC,iBACA5uC,KAAAqa,SAAAra,KAAAwa,SACA,QACA,QACA,WACAxa,KAAA6uC,kBACA,WAAAryC,GAAA,oBAAAA,GACAwD,KAAAqa,SAAA7d,EAAA,mBAAAwD,KAAA8uC,mBAGA58B,kBAAAvP,GACAnG,EAAAs0B,OACA9wB,KAAA6uC,iBAAAlsC,IAEA3C,KAAA4uC,kBACA5uC,KAAAujC,UAGArxB,kBACAlS,KAAA2uC,iBAGA3uC,KAAA2uC,eAAA3uC,KAAA4gB,YAAA5gB,KAAAujC,OAAAhtB,EAAA3B,0BAEA1C,iBAAAvP,GACA3C,KAAAwa,QAAAqwB,aAAA7qC,KAAAwa,QAAAqwB,YAAAiC,UAAAnqC,GAAA,UAAAA,EAAAvG,MAGA4D,KAAA2uC,iBAGA3uC,KAAA2gB,cAAA3gB,KAAA2uC,gBACA3uC,KAAA2uC,eAAA,MAEAz8B,WACA,OAAAiI,MAAAhP,SAAA,OAAAmG,UAAA,wBAAAoZ,aAAA1qB,KAAA6qB,SAAA,kBAEA3Y,OAAAvE,GACA,MAAAs/B,EAAA9yB,MAAAopB,SAwBA,OAvBAvjC,KAAA6pC,2BAAA,iBAAA,KACA,MAAAnT,EAAA12B,KAAAwa,QAAAyvB,QAAAjqC,KAAAwa,QAAAuI,WAAA/iB,KAAA+uC,kBACAlE,EAAA7qC,KAAAwa,QAAAqwB,YACA,IAAA9nB,EAAA/iB,KAAAwa,QAAAuI,WACA8nB,GAAAA,EAAAiC,WACA/pB,EAAA/iB,KAAAwa,QAAAqwB,YAAAmE,mBAEAhvC,KAAAktC,WAAAD,IACAjtC,KAAAia,IAAArN,aAAA,iBAAA,IAAAqgC,GAAAf,QAAA,IACAlsC,KAAAktC,SAAAD,GAEAjtC,KAAAivC,eAAAvY,GAAA12B,KAAAk6B,YAAAnX,IACA/iB,KAAAia,IAAArN,aAAA,iBAAA5M,KAAA6qB,SAAA,qDACAqe,EAAAxS,EAAA3T,GACAmmB,EAAAnmB,EAAAA,IACA,eACA/iB,KAAAivC,aAAAvY,EACA12B,KAAAk6B,UAAAnX,GAEA/iB,KAAAorC,KACAprC,KAAAorC,IAAA7H,OAAAvzB,EAAA5C,sBAAApN,KAAA6G,MAAA7G,KAAA+rC,iBAGAkB,EAEA/6B,kBACA,OAAAlS,KAAAwa,QAAA0vB,YAAAlqC,KAAAwa,QAAA2vB,WAAAzT,YAAA12B,KAAAwa,QAAAkc,cAEAxkB,aACA,MAAAwkB,EAAA12B,KAAA+uC,kBACA,IAAA9B,EACA,MAAApC,EAAA7qC,KAAAwa,QAAAqwB,YASA,OARAA,GAAAA,EAAAiC,UACAG,GAAAvW,EAAAmU,EAAAqE,iBAAArE,EAAAmD,aACAnD,EAAAE,eACAkC,EAAA,IAGAA,EAAAvW,EAAA12B,KAAAwa,QAAAuI,WAEAkqB,EAEA/6B,gBAAAvE,GACAqC,EAAAR,kBAAA7B,KAGAA,EAAA4F,kBACAvT,KAAAwa,QAAA0vB,WAAA,GACAlqC,KAAAmvC,iBAAAnvC,KAAAwa,QAAA0Q,SACAlrB,KAAAwa,QAAAoO,QACAzO,MAAA0tB,gBAAAl6B,IAEAuE,gBAAAvE,GACA,IAAAqC,EAAAR,kBAAA7B,GACA,OAEA,IAAAyhC,EACA,MAAAC,EAAArvC,KAAAsvC,kBAAA3hC,GACAk9B,EAAA7qC,KAAAwa,QAAAqwB,YACA,GAAAA,GAAAA,EAAAiC,SAKA,CACA,GAAAuC,GAAA,IAEA,YADAxE,EAAAG,iBAGA,MAAAkE,EAAArE,EAAAqE,gBACAnC,EAAAlC,EAAAmE,kBAQA,IAPAI,EAAAF,EAAAG,EAAAxE,EAAAmD,eACAjB,IACAqC,EAAArC,GAEAqC,GAAAF,IACAE,EAAAF,EAAA,IAEAE,IAAApG,EAAAA,EACA,YAnBAoG,EAAAC,EAAArvC,KAAAwa,QAAAuI,cACA/iB,KAAAwa,QAAAuI,aACAqsB,GAAA,IAoBApvC,KAAAwa,QAAAkc,YAAA0Y,GAEAl9B,SACAiI,MAAA7T,SACA,MAAAipC,EAAAvvC,KAAA6c,SAAA,oBACA0yB,GAGAA,EAAAjkB,OAEApZ,UACAiI,MAAA9T,UACA,MAAAkpC,EAAAvvC,KAAA6c,SAAA,oBACA0yB,GAGAA,EAAA/jB,OAEAtZ,cAAAvE,GACAwM,MAAAuxB,cAAA/9B,GACAA,GACAA,EAAA4F,kBAEAvT,KAAAwa,QAAA0vB,WAAA,GACAlqC,KAAAwa,QAAAhG,SACApY,KAAA,aACAmS,OAAAvO,KACAu6B,mBAAA,IAEAv6B,KAAAmvC,gBACA7rC,EAAA0gB,eAAAhkB,KAAAwa,QAAAD,QAEAva,KAAA0uC,UAGAx8B,cACAlS,KAAAwa,QAAAkc,YAAA12B,KAAAwa,QAAAkc,cAAA4X,GAEAp8B,WACAlS,KAAAwa,QAAAkc,YAAA12B,KAAAwa,QAAAkc,cAAA4X,GAEAp8B,aAAAvE,GACA3N,KAAAwa,QAAA0Q,SACAlrB,KAAAwa,QAAAD,OAEAva,KAAAwa,QAAAoO,QAGA1W,cAAAvE,GACA,GAAA+b,EAAAhE,WAAA/X,EAAA,UAAA+b,EAAAhE,WAAA/X,EAAA,SACAA,EAAAqF,iBACArF,EAAA4F,kBACAvT,KAAAwvC,aAAA7hC,QACA,GAAA+b,EAAAhE,WAAA/X,EAAA,QACAA,EAAAqF,iBACArF,EAAA4F,kBACAvT,KAAAwa,QAAAkc,YAAA,QACA,GAAAhN,EAAAhE,WAAA/X,EAAA,OACAA,EAAAqF,iBACArF,EAAA4F,kBACAvT,KAAAwa,QAAAkc,YAAA12B,KAAAwa,QAAAuI,iBACA,GAAA,UAAAlkB,KAAA6qB,EAAA/b,IAAA,CACAA,EAAAqF,iBACArF,EAAA4F,kBACA,MAAAk8B,EAAA,IAAA/lB,EAAAnE,MAAAmE,EAAA/b,IAAA+b,EAAAnE,MAAA,IAAA,IACAvlB,KAAAwa,QAAAkc,YAAA12B,KAAAwa,QAAAuI,WAAA0sB,QACA/lB,EAAAhE,WAAA/X,EAAA,SACAA,EAAAqF,iBACArF,EAAA4F,kBACAvT,KAAAwa,QAAAkc,YAAA12B,KAAAwa,QAAAkc,cAAA4X,EAAAC,IACA7kB,EAAAhE,WAAA/X,EAAA,SACAA,EAAAqF,iBACArF,EAAA4F,kBACAvT,KAAAwa,QAAAkc,YAAA12B,KAAAwa,QAAAkc,cAAA4X,EAAAC,IAEAp0B,MAAA0F,cAAAlS,GAGAuE,UACAlS,KAAA6uC,mBACAa,eAAA1vC,KAAAwa,SACA,QACA,iBACA,cACAxa,KAAAujC,QACAvjC,KAAAwa,QAAAqwB,aACA7qC,KAAAqa,SAAAra,KAAAwa,QAAAqwB,YAAA,iBAAA7qC,KAAAujC,QAEAvjC,KAAA2X,WAAA3X,KAAAwa,SAAA,WAAAxa,KAAA4uC,iBACA5uC,KAAA2X,WAAA3X,KAAAwa,SACA,QACA,QACA,WACAxa,KAAA6uC,kBACA,WAAAryC,GAAA,oBAAAA,GACAwD,KAAA2X,WAAAnb,EAAA,mBAAAwD,KAAA8uC,mBAEA30B,MAAAyB,WAcA,OAXA4yB,EAAAn+B,UAAAsK,UACA8C,UACA,kBACA,mBAEA4tB,QAAA,mBAEA/hC,EAAAL,QAAAK,EAAAxB,YACA0mC,EAAAn+B,UAAAsK,SAAA8C,SAAAtY,OAAA,EAAA,EAAA,oBAEA4U,EAAAkI,kBAAA,UAAAusB,GACAA,IAEAnzC,OAAA,iEACA,kBACA,kBACA,oBACA,iBACA,cACA,SAAA0e,EAAA/J,EAAAk7B,EAAA30B,GACA,mBACAo5B,UAAA51B,EACA7H,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAyrC,gBAAAl1B,EAAAtB,SAAAsB,EAAA1B,KAAA7U,KAAAA,KAAAyrC,iBAAAl1B,EAAA3B,yBACA5U,KAAA4vC,yBAAAr5B,EAAAtB,SAAAsB,EAAA1B,KAAA7U,KAAAA,KAAA6vC,iBAAAt5B,EAAA3B,yBACA5U,KAAAsG,SAEA4L,WACA,OAAAiI,MAAAhP,SAAA,OAAAmG,UAAA,qCAEAY,gBAAAvE,GACA,MAAAmiC,EAAA9vC,KAAA6c,SAAA,WACA,IAAAizB,EACA,OAEA,MAAAC,EAAAD,EAAAjzB,SAAA,mBACA0yB,EAAAO,EAAAjzB,SAAA,oBACA,IAAAkzB,IAAAR,EACA,OAEA,MAAAS,EAAAF,EAAAjpC,KACAymC,EAAAt9B,EAAA/F,aAAA+lC,GACA,IAAAzC,EAAAv9B,EAAAtC,mBAAAsiC,EAAAriC,GAAAE,EACA0/B,EAAArC,EAAAqC,EAAA,EAAA,GACAgC,GACAA,EAAAhM,OAAA+J,EAAAC,GAEAwC,GACAA,EAAAxM,OAAA+J,EAAAwC,EAAA/D,eAGA75B,gBAAAvE,GACA,MAAAmiC,EAAA9vC,KAAA6c,SAAA,WACAizB,GACAA,EAAArE,gBAAA99B,GAGAuE,UACA,OAAAlS,KAAAijC,SAEA/wB,UACAlS,KAAAyd,WAAA1Z,QAAA2H,GAAAA,EAAArF,SAAAqF,EAAArF,WACArG,KAAAwuB,YAGAxuB,KAAA2X,YACA,YACA,cACA3X,KAAA6nC,iBACA7nC,KAAA2X,WAAA3X,KAAAia,IAAA,YAAAja,KAAAyrC,iBACAzrC,KAAA0rC,gBACA1rC,KAAA+L,SAAA,YACA/L,KAAAijC,UAAA,GAEA/wB,SACAlS,KAAAyd,WAAA1Z,QAAA2H,GAAAA,EAAApF,QAAAoF,EAAApF,UACAtG,KAAAwuB,YAGAxuB,KAAAqa,UACA,YACA,cACAra,KAAA6nC,iBACA7nC,KAAAqa,SAAAra,KAAAia,IAAA,YAAAja,KAAAyrC,iBACAzrC,KAAAgM,YAAA,YACAhM,KAAAijC,UAAA,GAEA/wB,gBAAAvE,GACA,MAAAiG,EAAA5T,KAAAia,IAAAuxB,cACAsE,EAAA9vC,KAAA6c,SAAA,WACAizB,GACAA,EAAAjI,gBAAAl6B,GAEA3N,KAAAqa,SAAAzG,EAAA,YAAA5T,KAAA4vC,0BACA5vC,KAAAqa,SAAAzG,EAAA,YAAA5T,KAAA4vC,0BACA5vC,KAAAqa,SAAAzG,EAAA,UAAA5T,KAAA0rC,eACA1rC,KAAAqa,SAAAzG,EAAA,WAAA5T,KAAA0rC,eAEAx5B,cAAAvE,GACA,MAAAiG,EAAA5T,KAAAia,IAAAuxB,cACAsE,EAAA9vC,KAAA6c,SAAA,WACAizB,GACAA,EAAApE,cAAA/9B,GAEA3N,KAAA2X,WAAA/D,EAAA,YAAA5T,KAAA4vC,0BACA5vC,KAAA2X,WAAA/D,EAAA,YAAA5T,KAAA4vC,0BACA5vC,KAAA2X,WAAA/D,EAAA,UAAA5T,KAAA0rC,eACA1rC,KAAA2X,WAAA/D,EAAA,WAAA5T,KAAA0rC,gBAKA,OAFAiE,EAAAt/B,UAAAsK,UAAA8C,UAAA,YACA1D,EAAAkI,kBAAA,kBAAA0tB,GACAA,IAEAt0C,OAAA,yDACA,iCACA,YACA,gBACA,SAAAmB,EAAAkrC,EAAA3tB,GACA,mBACAk2B,UAAAvI,EACAx1B,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAqa,SAAAzJ,GACA,wBACA,yBACA5Q,KAAAkwC,8BACAlwC,KAAAqa,SAAAzJ,GACA,iCACA,kBACA5Q,KAAAmwC,qCACAnwC,KAAAqG,UAEA6L,gBACA,wCAAAiI,MAAAmQ,kBAEApY,sCACA1V,EAAA4zC,0BAAA,IAAApwC,KAAAwa,QAAA61B,0BACArwC,KAAAsG,SAEAtG,KAAAqG,UAGA6L,6BAAAvE,GACA3N,KAAAwa,QAAA81B,uBACAtwC,KAAA8rB,YAAA,2BAEA9rB,KAAA8rB,YAAA,sBAEA9rB,KAAAmwC,sCAEAj+B,YAAAvE,GACA3N,KAAAwa,QAAA81B,uBAGAtwC,KAAAwa,QAAA+1B,uBAFAvwC,KAAAwa,QAAAg2B,2BAQA,OAFAP,EAAA5/B,UAAAyyB,aAAA,qBACA/oB,EAAAkI,kBAAA,yBAAAguB,GACAA,IAEA50C,OAAA,iDACA,iCACA,YACA,gBACA,SAAAmB,EAAAkrC,EAAA3tB,GACA,mBACA02B,UAAA/I,EACAx1B,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAqa,SAAAzJ,EAAA,mBAAA5Q,KAAA0wC,yBACA,IAAAl0C,EAAAoU,EAAA+/B,OAAAC,oBACA5wC,KAAAqG,UAGA6L,gBACA,gCAAAiI,MAAAmQ,kBAEApY,uBAAAvE,GACA3N,KAAAwa,QAAAq2B,eACA7wC,KAAA8rB,YAAA,kBAEA9rB,KAAA8rB,YAAA,cAGA5Z,YAAAvE,GACA3N,KAAAwa,QAAAq2B,eAGA7wC,KAAAwa,QAAAs2B,iBAFA9wC,KAAAwa,QAAAu2B,qBAQA,OAFAN,EAAApgC,UAAAyyB,aAAA,aACA/oB,EAAAkI,kBAAA,mBAAAwuB,GACAA,IAEAp1C,OAAA,qEAAA,WACA,aAaA,OAZA,SAAAoF,EAAAmQ,GACAA,EAAA2kB,QAAA3kB,EAAA2kB,MAAA4G,uBACA17B,EAAAsL,SAAA,cAEAtL,EAAA4Z,SAAAzJ,EAAA,YAAA,WACAA,EAAA2kB,MAAA4G,sBAGA17B,EAAAuL,YAAA,cAFAvL,EAAAsL,SAAA,mBAQA1Q,OAAA,2DACA,mBACA,SAAA0e,GACA,mBACAi3B,UAAAj3B,EACA7H,WACA,OAAAiI,MAAAhP,SAAA,OACAmG,UAAA,mBACAkgB,UAAA,4CAKA,OADAzX,EAAAkI,kBAAA,cAAA+uB,GACAA,IAEA31C,OAAA,yDACA,sBACA,kBACA,kBACA,kBACA,SAAA8vC,EAAApxB,EAAA/J,GACA,mBACAihC,UAAA9F,EACAj5B,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAqa,SAAA,eAAAra,KAAAkxC,mBACAlxC,KAAAqa,SAAAzJ,EAAA,eAAA5Q,KAAAmxC,sBACAvgC,EAAA0J,MAAA,IAAAta,KAAAmxC,wBAEAj/B,WACA,OAAAiI,MAAAhP,SAAA,OAAAmG,UAAA,kCACAoZ,aAAA1qB,KAAA6qB,SAAA,gBACAgY,YAAA,WAGA3wB,gBAAAvE,GACAqC,EAAAR,kBAAA7B,IAGAwM,MAAA0tB,gBAAAl6B,GAEAuE,gBAAAvE,GACAqC,EAAAR,kBAAA7B,KAGA3N,KAAAoxC,aACApxC,KAAAwa,QAAAilB,OAAAz/B,KAAAsvC,kBAAA3hC,KAEAuE,aACAlS,KAAAwa,QAAA8kB,SACAt/B,KAAAwa,QAAA8kB,OAAA,GAGAptB,aACA,OAAAlS,KAAAwa,QAAA8kB,QACA,EAEAt/B,KAAAwa,QAAAilB,SAEAvtB,cACAlS,KAAAoxC,aACApxC,KAAAwa,QAAAilB,OAAAz/B,KAAAwa,QAAAilB,SAAA,IAEAvtB,WACAlS,KAAAoxC,aACApxC,KAAAwa,QAAAilB,OAAAz/B,KAAAwa,QAAAilB,SAAA,IAEAvtB,qBAAAvE,GACA,MAAA0jC,EAAArxC,KAAAwa,QAAA8kB,QAAA,EAAAt/B,KAAAsxC,sBACAtxC,KAAAia,IAAArN,aAAA,gBAAAykC,GACArxC,KAAAia,IAAArN,aAAA,iBAAAykC,EAAA,KAEAn/B,sBACA,OAAAlD,KAAA8+B,MAAA,IAAA9tC,KAAAwa,QAAAilB,UAEAvtB,oBACA,MAAAq/B,EAAAvxC,KAAAwa,QAAAilB,SACAz/B,KAAAqhB,aAAA,iBAAA,KACA,IAAArhB,KAAAwa,QAAAilB,UACAz/B,KAAAwa,QAAAg3B,YAAAD,MAWA,OANAN,EAAA5gC,UAAAsK,UACA8C,UAAA,eACA4tB,QAAA,eAEA4F,EAAA5gC,UAAAk7B,YAAA,eACAxxB,EAAAkI,kBAAA,YAAAgvB,GACAA,IAEA51C,OAAA,6DACA,kBACA,yBACA,kBACA,iBACA,gBACA,SAAA0e,EAAA03B,EAAAhyC,EAAA8W,GACA,mBACAm7B,UAAA33B,EACA7H,YAAAtB,EAAA1R,MACAA,EAAAosC,SAAApsC,EAAAosC,WAAA,QACA,IAAApsC,EAAAyyC,WAAAlyC,EAAAmH,QAAA1H,EAAAyyC,cACAzyC,EAAAyyC,UAAAzyC,EAAAyyC,cACAzyC,EAAAyyC,UAAArG,SAAApsC,EAAAosC,UAEAnxB,MAAAvJ,EAAA1R,GACAuyC,EAAAzxC,KAAA4Q,GACA5Q,KAAA4xC,yBAAAr7B,EAAAtB,SAAAsB,EAAA1B,KAAA7U,KAAAA,KAAAyrC,iBAAAl1B,EAAA3B,yBACA5U,KAAAqa,SAAA,YAAAra,KAAA6nC,iBACA7nC,KAAAqa,SAAA,aAAAra,KAAA6nC,iBACA7nC,KAAAqa,SAAAra,KAAA2xC,WACA,QACA,gBACA,KACA3xC,KAAA2xC,UAAA5lC,SAAA,qBACA/L,KAAA+L,SAAA,qBACA/L,KAAAwU,QAAA,kBAEAxU,KAAAqa,SAAAra,KAAA2xC,WACA,OACA,kBACA,KACA3xC,KAAA2xC,UAAA3lC,YAAA,qBACAhM,KAAAgM,YAAA,qBACAhM,KAAAwU,QAAA,oBAGAtC,WACA,IAAA2/B,EAAA,wBAIA,OAHA7xC,KAAA2a,SAAA2wB,WACAuG,EAAA,uBAEA13B,MAAAhP,SAAA,OAAAmG,4CAAAugC,MAEA3/B,gBAAAvE,GACA,MAAAiG,EAAA5T,KAAAia,IAAAuxB,cACAxrC,KAAAqa,SAAAzG,EAAA,YAAA5T,KAAA4xC,0BACA5xC,KAAAqa,SAAAzG,EAAA,YAAA5T,KAAA4xC,0BACA5xC,KAAAqa,SAAAzG,EAAA,UAAA5T,KAAA0rC,eACA1rC,KAAAqa,SAAAzG,EAAA,WAAA5T,KAAA0rC,eAEAx5B,cAAAvE,GACA,MAAAiG,EAAA5T,KAAAia,IAAAuxB,cACAxrC,KAAA2X,WAAA/D,EAAA,YAAA5T,KAAA4xC,0BACA5xC,KAAA2X,WAAA/D,EAAA,YAAA5T,KAAA4xC,0BACA5xC,KAAA2X,WAAA/D,EAAA,UAAA5T,KAAA0rC,eACA1rC,KAAA2X,WAAA/D,EAAA,WAAA5T,KAAA0rC,eAEAx5B,gBAAAvE,GACA3N,KAAA2xC,UAAAlG,gBAAA99B,IAKA,OAFA+jC,EAAArhC,UAAAsK,UAAA8C,UAAA,cACA1D,EAAAkI,kBAAA,gBAAAyvB,GACAA,IAEAr2C,OAAA,mEAAA,WACA,aAaA,OAZA,SAAAoF,EAAAmQ,GACAA,EAAA2kB,QAAA3kB,EAAA2kB,MAAA6G,qBACA37B,EAAAsL,SAAA,cAEAtL,EAAA4Z,SAAAzJ,EAAA,YAAA,WACAA,EAAA2kB,MAAA6G,oBAGA37B,EAAAuL,YAAA,cAFAvL,EAAAsL,SAAA,mBAQA1Q,OAAA,2CACA,YACA,eACA,eACA,sCACA,oBACA,SAAAqsC,EAAA3tB,EAAA/J,EAAA8hC,EAAAxoC,GACA,mBACAyoC,UAAArK,EACAx1B,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACA4yC,EAAA9xC,KAAA4Q,GACA5Q,KAAAqa,SAAAzJ,GACA,YACA,gBACA5Q,KAAAujC,QAEArxB,gBACA,0BAAAiI,MAAAmQ,kBAEApY,YAAAvE,GACA,MAAAqkC,EAAAhyC,KAAAwa,QAAAilB,SACAwS,EAAAjyC,KAAAwa,QAAAg3B,cACA,GAAA,IAAAQ,EAAA,CACA,MAAAE,EAAAD,EAAA,GAAA,GAAAA,EACAjyC,KAAAwa,QAAAilB,OAAAyS,GACAlyC,KAAAwa,QAAA8kB,OAAA,QAEAt/B,KAAAwa,QAAA8kB,OAAAt/B,KAAAwa,QAAA8kB,SAGAptB,OAAAvE,GACA3N,KAAAmyC,cACAnyC,KAAAoyC,qBAEAlgC,cACA,MAAA8/B,EAAAhyC,KAAAwa,QAAAilB,SACA,IAAA96B,EAAA,EACA2E,EAAAL,QAAAjJ,KAAAwa,QAAA+a,OAAAv1B,KAAAwa,QAAA+a,MAAAtb,KACAja,KAAAwa,QAAA8kB,MAAAt/B,KAAAwa,QAAA+a,MAAAtb,IAAAqlB,OAEA,IAAA0S,GAAAhyC,KAAAwa,QAAA8kB,QACA36B,EAAA,EACAqtC,EAAA,IACArtC,EAAA,EACAqtC,EAAA,MACArtC,EAAA,GAEA,IAAA,IAAAL,EAAA,EAAAA,EAAA,EAAAA,IACA0L,EAAAhE,YAAAhM,KAAAia,eAAA3V,KAEA0L,EAAAjE,SAAA/L,KAAAia,eAAAtV,KAEAuN,qBACA,MAAAmgC,EAAAryC,KAAAwa,QAAA8kB,SAAA,IAAAt/B,KAAAwa,QAAAilB,SACAvhC,EAAAm0C,EAAA,SAAA,OACAryC,KAAA8rB,gBAAA5tB,GACA8B,KAAA8rB,YAAA5tB,IAMA,OAFA6zC,EAAA1hC,UAAAyyB,aAAA,OACA/oB,EAAAkI,kBAAA,aAAA8vB,GACAA,IAEA12C,OAAA,4CACA,iCACA,eACA,eACA,kBACA,cACA,mBACA,kCACA,iBACA,SAAAmB,EAAAud,EAAAta,EAAAoW,EAAAU,EAAAmT,GACA,mBACA4oB,UAAAv4B,EACA7H,YAAAtB,EAAA1R,WACA,IAAAA,EAAAqzC,OACArzC,EAAAqzC,OAAArzC,EAAAqzC,OAEArzC,EAAAqzC,QAAA,QAEA,IAAArzC,EAAAszC,eAAA/yC,EAAAmH,QAAA1H,EAAAszC,kBACAtzC,EAAAszC,cAAAtzC,EAAAszC,kBACAtzC,EAAAszC,cAAAlH,UAAApsC,EAAAqzC,QAEAp4B,MAAAvJ,EAAA1R,GACAc,KAAAqa,SAAAzJ,GAAA,aAAA5Q,KAAAyyC,mBACAzyC,KAAAqa,SAAAra,KAAA0yC,WAAA,QAAA1yC,KAAA2yC,gBACA3yC,KAAAqa,SAAAra,KAAAwyC,cAAA,QAAAxyC,KAAA4yC,0BACA5yC,KAAAqa,SAAA,UAAAra,KAAA2yC,gBACA3yC,KAAAqa,SAAA,YAAAra,KAAAmjC,iBACAnjC,KAAAqa,SAAA,WAAAra,KAAAojC,gBACApjC,KAAAqa,SAAAra,KAAAwyC,eAAA,gBAAAxyC,KAAA6yC,eACA7yC,KAAAqa,SAAAra,KAAAwyC,eAAA,kBAAAxyC,KAAA8yC,iBAEA5gC,gBACAlS,KAAA+L,SAAA,qBAEAmG,kBACAlS,KAAAgM,YAAA,qBAEAkG,oBACAlS,KAAAwyC,cAAA3mC,SAAA,eAAA7L,KAAA0yC,WAAA7mC,SAAA,eACA7L,KAAA+L,SAAA,cAEA/L,KAAAwyC,cAAA3mC,SAAA,gBAAA7L,KAAA0yC,WAAA7mC,SAAA,eACA7L,KAAA+L,SAAA,wBAGAmG,WACA,IAAA2/B,EAAA,8BAIA,OAHA7xC,KAAA2a,SAAA43B,SACAV,EAAA,6BAEA13B,MAAAhP,SAAA,OAAAmG,0CAAAugC,MAEA3/B,UACAlS,KAAAojC,iBACAjpB,MAAAyB,UAEA1J,yBAAAvE,GACA+b,EAAAhE,WAAA/X,EAAA,QACA3N,KAAA0yC,WAAAzlC,QAGAiF,gBAAAvE,GACA3N,KAAA+L,SAAA,aACA8J,EAAAvB,GAAA9X,EAAA,QAAA+Z,EAAA1B,KAAA7U,KAAAA,KAAA2yC,iBAEAzgC,eAAAvE,GACA3N,KAAAgM,YAAA,aACA6J,EAAAjQ,IAAApJ,EAAA,QAAA+Z,EAAA1B,KAAA7U,KAAAA,KAAA2yC,iBAEAzgC,eAAAvE,GACA+b,EAAAhE,WAAA/X,EAAA,QACA3N,KAAAojC,kBAWA,OAPAkP,EAAAjiC,UAAAsK,UACA8C,UACA,aACA,kBAGA1D,EAAAkI,kBAAA,cAAAqwB,GACAA,IAEAj3C,OAAA,6BACA,iCACA,eACA,eACA,cACA,kBACA,oBACA,SAAAmB,EAAAud,EAAA/J,EAAAuG,EAAAV,EAAA6T,GACA,mBACAqpB,UAAAh5B,EACA7H,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAA,IACAc,KAAAgzC,YAAA9zC,EAAA+zC,YAEAjzC,KAAAkzC,eAAA,EACAlzC,KAAAqa,SAAA,UAAAra,KAAA6f,eACA7f,KAAAmzC,iBAAA58B,EAAA1B,KAAA7U,KAAAA,KAAAozC,YACApzC,KAAAqzC,qBAAA98B,EAAA1B,KAAA7U,KAAAA,KAAAszC,gBAEAphC,wBAAA4K,GACAA,aAAA/C,IAGA/Z,KAAAqa,SAAAyC,EAAA,OAAA9c,KAAAmzC,kBACAnzC,KAAAqa,SAAAyC,GACA,MACA,SACA9c,KAAAqzC,uBAEAnhC,2BAAA4K,GACAA,aAAA/C,IAGA/Z,KAAA2X,WAAAmF,EAAA,OAAA9c,KAAAmzC,kBACAnzC,KAAA2X,WAAAmF,GACA,MACA,SACA9c,KAAAqzC,uBAEAnhC,YAAA4K,GACA,iBAAAA,IACAA,EAAA9c,KAAA6c,SAAAC,IAEA9c,KAAAuzC,2BAAAz2B,GACA3C,MAAA0B,YAAAiB,GAEA5K,QAAA4K,GACA,MAAA02B,EAAAxzC,KAAA+d,SAAAjB,GACA02B,GACAxzC,KAAAyzC,wBAAAD,GAGAthC,WACA,MAAAwhC,EAAA1zC,KAAA2a,SAAA+4B,eAAA,KACA1zC,KAAAwc,WAAAxM,EAAA7E,SAAAuoC,GAAApiC,UAAA,qBACAtR,KAAAwc,WAAA5P,aAAA,OAAA,QACA,MAAA/F,EAAAsT,MAAAhP,SAAA,OACAI,OAAAvL,KAAAwc,WACAlL,UAAA,aAOA,OALAzK,EAAAwjB,YAAArqB,KAAAwc,YACA3G,EAAAvB,GAAAzN,EAAA,QAAA,SAAA8G,GACAA,EAAAqF,iBACArF,EAAA8F,6BAEA5M,EAEAqL,UACAlS,KAAAwc,WAAA,KACAxc,KAAAmzC,iBAAA,KACAnzC,KAAAqzC,qBAAA,KACAl5B,MAAAyB,UAEA1J,WAAAvE,GACA,MAAAuF,EAAAvF,EAAAuF,eAAA1W,EAAA8vB,cACA,IAAAtsB,KAAAyd,WAAAW,KAAAu1B,GACAA,EAAA9sC,OAAAqM,GACA,CACA,MAAA0gC,EAAA5zC,KAAAgzC,YACAY,GAAAA,EAAAC,gBAAA3gC,IAAA0gC,EAAA/sC,KAAA4qB,YACAmiB,EAAAE,iBAIA5hC,eAAAvE,GACA,GAAA3N,KAAAgzC,YAAA,CACAhzC,KAAAgzC,YAAAc,gBACA,MAAAC,EAAA/zC,KAAAyd,WACA,IAAAjY,MAAAvJ,QAAA83C,GACA,OAEA,MAAAC,EAAAD,EAAA9tC,OAAA6W,GAAAA,EAAAjW,OAAA8G,EAAAY,QAAA,GACA,IAAAylC,EACA,OAEA,4BAAAA,EAAAl3C,QACAkD,KAAAgzC,YAAA/lC,SAIAiF,cAAAvE,GACA+b,EAAAhE,WAAA/X,EAAA,SAAA+b,EAAAhE,WAAA/X,EAAA,SACAA,EAAAqF,iBACArF,EAAA4F,kBACAvT,KAAAqsC,gBACA3iB,EAAAhE,WAAA/X,EAAA,UAAA+b,EAAAhE,WAAA/X,EAAA,SACAA,EAAAqF,iBACArF,EAAA4F,kBACAvT,KAAAosC,YAGAl6B,cACA,IAAA+hC,EAAA,OACA30C,IAAAU,KAAAkzC,gBACAe,EAAAj0C,KAAAkzC,cAAA,GAEAlzC,KAAAiN,MAAAgnC,GAEA/hC,WACA,IAAA+hC,EAAA,OACA30C,IAAAU,KAAAkzC,gBACAe,EAAAj0C,KAAAkzC,cAAA,GAEAlzC,KAAAiN,MAAAgnC,GAEA/hC,MAAAnE,EAAA,GACA,MAAA0P,EAAAzd,KAAAyd,WAAAtP,QACA+lC,EAAAz2B,EAAAlZ,QAAAkZ,EAAA,GAAA5R,SAAA,kBACAqoC,GACAz2B,EAAAlG,QAEAkG,EAAAlZ,OAAA,IACAwJ,EAAA,EACAA,EAAA,EACAA,GAAA0P,EAAAlZ,SACAwJ,EAAA0P,EAAAlZ,OAAA,GAEAvE,KAAAkzC,cAAAnlC,EACA0P,EAAA1P,GAAAkM,IAAAhN,UAKA,OADA8M,EAAAkI,kBAAA,OAAA8wB,GACAA,IAEA13C,OAAA,oCACA,YACA,eACA,SACA,eACA,cACA,kBACA,wBACA,mBACA,oBACA,SAAAqsC,EAAA3tB,EAAAg5B,EAAA/iC,EAAAuG,EAAAV,EAAAiE,EAAAxQ,EAAAogB,GACA,mBACAyqB,UAAAp6B,EACA7H,YAAAtB,EAAA1R,MACAib,MAAAvJ,EAAA1R,GACAc,KAAAgzC,YAAA,IAAAtL,EAAA92B,EAAA1R,GACAc,KAAAgzC,YAAAlnB,YAAA9rB,KAAA8iC,cACA9iC,KAAAgzC,YAAA/4B,IAAArN,aAAA,gBAAA,QACA,MAAAwnC,EAAA1M,EAAAr3B,UAAAia,gBACAtqB,KAAAgzC,YAAA/4B,IAAA3I,UAAAtR,KAAAsqB,gBAAA,IAAA8pB,EACAp0C,KAAAgzC,YAAAhnC,YAAA,eACAhM,KAAA+d,SAAA/d,KAAAgzC,aACAhzC,KAAAujC,SACAvjC,KAAAijC,UAAA,EACAjjC,KAAAqa,SAAAra,KAAAgzC,YAAA,MAAAhzC,KAAAkjC,aACAljC,KAAAqa,SAAAra,KAAAgzC,YAAA,QAAAhzC,KAAAkjC,aACAljC,KAAAqa,SAAAra,KAAAgzC,YAAA,UAAAhzC,KAAA6f,eACA7f,KAAAqa,SAAAra,KAAAgzC,YAAA,aAAA,KACAhzC,KAAA+L,SAAA,aACA/L,KAAAq0C,KAAA/oB,OACAzV,EAAAvB,GAAA9X,SAAA,QAAA+Z,EAAA1B,KAAA7U,KAAAA,KAAAs0C,oBAEAt0C,KAAAqa,SAAA,aAAAra,KAAAu0C,kBACAv0C,KAAAqa,SAAA,UAAAra,KAAAw0C,sBAEAtiC,SACA,MAAAmiC,EAAAr0C,KAAAy0C,aACAz0C,KAAAq0C,OACAr0C,KAAAq0C,KAAAz4B,UACA5b,KAAA6b,YAAA7b,KAAAq0C,OAEAr0C,KAAAq0C,KAAAA,EACAr0C,KAAA+d,SAAAs2B,GACAr0C,KAAA6zC,gBAAA,EACA7zC,KAAAgzC,YAAA/4B,IAAArN,aAAA,gBAAA,SACA5M,KAAA00C,OAAA10C,KAAA00C,MAAAnwC,QAAAvE,KAAA20C,eACA30C,KAAAwrB,OAEAxrB,KAAAsrB,OAGApZ,aACA,MAAAmiC,EAAA,IAAAtB,EAAA/yC,KAAAwa,SAAAy4B,WAAAjzC,OAEA,GADAA,KAAA20C,eAAA,EACA30C,KAAA2a,SAAA6O,MAAA,CACA,MAAAorB,EAAA5kC,EAAA7E,SAAA,MACAmG,UAAA,iBACAkgB,UAAA1X,EAAAhB,YAAA9Y,KAAA2a,SAAA6O,OACAe,UAAA,IAEAvqB,KAAA20C,gBAAA,EACA,MAAAE,EAAA,IAAA96B,EAAA/Z,KAAAwa,SAAA3T,GAAA+tC,IACAP,EAAAS,QAAAD,GAGA,GADA70C,KAAA00C,MAAA10C,KAAA+0C,cACA/0C,KAAA00C,MACA,IAAA,IAAApwC,EAAA,EAAAA,EAAAtE,KAAA00C,MAAAnwC,OAAAD,IACA+vC,EAAAS,QAAA90C,KAAA00C,MAAApwC,IAGA,OAAA+vC,EAEAniC,eAEAA,WACA,OAAAiI,MAAAhP,SAAA,OAAAmG,UAAAtR,KAAAg1C,4BAEA9iC,uBACA,IAAA+iC,EAAA,mBACA,IAAAj1C,KAAA2a,SAAA43B,OACA0C,GAAA,UAEAA,GAAA,SAEA,MAAAb,EAAA1M,EAAAr3B,UAAAia,gBACA,yBAAA2qB,KAAAb,KAAAj6B,MAAAmQ,kBAEApY,gBACA,IAAA+iC,EAAA,kBAMA,OALA,IAAAj1C,KAAA2a,SAAA43B,OACA0C,GAAA,UAEAA,GAAA,4BAEAA,KAAA96B,MAAAmQ,kBAEApY,YAAAhU,EAAA2I,EAAA7G,KAAAgzC,YAAAnsC,MACA,OAAA7G,KAAAgzC,YAAAlnB,YAAA5tB,EAAA2I,GAEAqL,UACAlS,KAAAu0C,mBACAp6B,MAAAyB,UAEA1J,YAAAvE,GACA3N,KAAA6zC,eACA7zC,KAAA8zC,gBAEA9zC,KAAAk1C,cAGAhjC,iBAAAvE,GACA3N,KAAAgM,YAAA,aACA6J,EAAAjQ,IAAApJ,SAAA,QAAA+Z,EAAA1B,KAAA7U,KAAAA,KAAAs0C,kBAEApiC,QACAlS,KAAAgzC,YAAA/lC,QAEAiF,OACAlS,KAAAgzC,YAAApzB,OAEA1N,cAAAvE,GACA+b,EAAAhE,WAAA/X,EAAA,QAAA+b,EAAAhE,WAAA/X,EAAA,QACA3N,KAAA6zC,gBACA7zC,KAAA8zC,gBAEApqB,EAAAhE,WAAA/X,EAAA,SACAA,EAAAqF,iBACAhT,KAAAgzC,YAAA/lC,WAEAyc,EAAAhE,WAAA/X,EAAA,OAAA+b,EAAAhE,WAAA/X,EAAA,WACA3N,KAAA6zC,iBACAlmC,EAAAqF,iBACAhT,KAAAk1C,gBAIAhjC,gBAAAvE,IACA+b,EAAAhE,WAAA/X,EAAA,QAAA+b,EAAAhE,WAAA/X,EAAA,SACA3N,KAAAgM,YAAA,aAGAkG,sBAAAvE,GACA3N,KAAAw0C,qBAAA7mC,GAEAuE,qBAAAvE,IACA+b,EAAAhE,WAAA/X,EAAA,QAAA+b,EAAAhE,WAAA/X,EAAA,UACA3N,KAAA6zC,gBACA7zC,KAAA8zC,gBAEApqB,EAAAhE,WAAA/X,EAAA,SACAA,EAAAqF,iBACAhT,KAAAgzC,YAAA/lC,UAKAiF,cACA,GAAAlS,KAAAijC,SAAA,CAKA,GAJAjjC,KAAA6zC,gBAAA,EACA7zC,KAAAq0C,KAAA/oB,OACAtrB,KAAAq0C,KAAAc,cACAn1C,KAAAgzC,YAAA/4B,IAAArN,aAAA,gBAAA,QACAtD,EAAAL,QAAA+G,EAAA9E,YACA,OAEAlL,KAAAq0C,KAAApnC,SAGAiF,gBACAlS,KAAAijC,WACAjjC,KAAA6zC,gBAAA,EACA7zC,KAAAq0C,KAAAe,gBACAp1C,KAAAq0C,KAAA7oB,OACAxrB,KAAAgzC,YAAA/4B,IAAArN,aAAA,gBAAA,UAGAsF,UACAlS,KAAA8zC,gBACA9zC,KAAAijC,UAAA,EACAjjC,KAAA+L,SAAA,gBACA/L,KAAAgzC,YAAA3sC,UAEA6L,SACAlS,KAAAijC,UAAA,EACAjjC,KAAAgM,YAAA,gBACAhM,KAAAgzC,YAAA1sC,UAIA,OADAyT,EAAAkI,kBAAA,aAAAkyB,GACAA,IAEA94C,OAAA,4CACA,sBACA,eACA,eACA,SAAA84C,EAAAp6B,EAAAxD,GACA,mBACA8+B,UAAAlB,EACAjiC,YAAAtB,EAAA1R,GACA,MAAAwuB,EAAAxuB,EAAAwuB,OAKA,GAJAvT,MAAAvJ,EAAA1R,GACAc,KAAA00C,MAAAnwC,QAAA,GACAvE,KAAAwrB,QAEAkC,EACA,OAEA,MAAA4nB,EAAA/+B,EAAA1B,KAAA7U,KAAAA,KAAAujC,QACA7V,EAAAvc,iBAAA,cAAAmkC,GACA5nB,EAAAvc,iBAAA,WAAAmkC,GACA5nB,EAAAvc,iBAAA,cAAAmkC,GACAt1C,KAAAwa,QAAAlG,GAAA,QAAAghC,GACAt1C,KAAAwa,QAAAlG,GAAA,UAAA,WACAoZ,EAAAzc,oBAAA,cAAAqkC,GACA5nB,EAAAzc,oBAAA,WAAAqkC,GACA5nB,EAAAzc,oBAAA,cAAAqkC,MAKA,OADAv7B,EAAAkI,kBAAA,cAAAozB,GACAA,IAEAh6C,OAAA,oCAAA,WACA,aASA,OAPA,MACA,MACA,KACA,OACA,QACA,UAIAA,OAAA,kCACA,yBACA,eACA,eACA,cACA,oBACA,SAAAonC,EAAA1oB,EAAAta,EAAA81C,EAAA7rB,GACA,mBACA8rB,UAAA/S,EACAvwB,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAy1C,WAAAv2C,EAAAu2C,WACAz1C,KAAA01C,YAAAx2C,EAAA0vB,WAAA,EACA5uB,KAAA21C,gBAAAz2C,EAAAy2C,gBACA31C,KAAA4uB,SAAA5uB,KAAA01C,aACA11C,KAAAy1C,WACAz1C,KAAA21C,gBACA31C,KAAAia,IAAArN,aAAA,OAAA,oBAEA5M,KAAAia,IAAArN,aAAA,OAAA,iBAGA5M,KAAAia,IAAArN,aAAA,OAAA,YAGAsF,SAAA9V,EAAA+0B,EAAA3kB,GAEA,OADAxM,KAAAgjC,gBAAA,EACA7oB,MAAAhP,SAAA,KAAA1L,EAAAiH,QACA4K,UAAA,gBACAkgB,8CAAAxxB,KAAA6qB,SAAA7qB,KAAA2a,SAAAgQ,gBACAJ,UAAA,GACA4G,GAAA3kB,GAEA0F,cAAAvE,GACA4nC,EAAAn3B,KAAAvhB,GAAA6sB,EAAAhE,WAAA/X,EAAA9Q,KACAsd,MAAA0F,cAAAlS,GAGAuE,YAAAvE,GACA3N,KAAA4uB,UAAA,GAEA1c,SAAA0c,GACA5uB,KAAAy1C,aACA7mB,GACA5uB,KAAA+L,SAAA,gBACA/L,KAAAia,IAAArN,aAAA,eAAA,QACA5M,KAAA8rB,YAAA,cACA9rB,KAAA01C,aAAA,IAEA11C,KAAAgM,YAAA,gBACAhM,KAAAia,IAAArN,aAAA,eAAA,SACA5M,KAAA8rB,YAAA,IACA9rB,KAAA01C,aAAA,KAMA,OADA37B,EAAAkI,kBAAA,WAAAuzB,GACAA,IAEAn6C,OAAA,wEACA,iCACA,uBACA,mBACA,SAAAmB,EAAAg5C,EAAAz7B,GACA,mBACA67B,UAAAJ,EACAtjC,YAAAtB,EAAA1R,GACA,MAAAglB,EAAAhlB,EAAAglB,MACAwJ,EAAA9c,EAAAiU,aACA3lB,EAAAyrB,MAAAzG,EAAAyG,OAAAzG,EAAAjI,UAAA,UACA/c,EAAA0vB,SAAA,YAAA1K,EAAA2R,KACA1b,MAAAvJ,EAAA1R,GACAc,KAAAkkB,MAAAA,EACAlkB,KAAA61C,OAAA32C,EAAA22C,QAAA32C,EAAA+vB,MAAAjvB,KAAAkkB,MAAA+K,OAAAhpB,OAAA2C,SACA,MAAAktC,EAAA,IAAAv1C,KACAP,KAAA+1C,mBAAAtgC,MAAAzV,KAAAO,IAEAy1C,EAAA,IAAAz1C,KACAP,KAAAi2C,6BAAAxgC,MAAAzV,KAAAO,IAgBA,GAdAqQ,EAAA0D,IACA,YACA,mBACAwhC,GACApoB,EAAAvc,iBAAA,SAAA2kC,GACApoB,EAAAvc,iBAAA,yBAAA6kC,GACAh2C,KAAAqa,SAAA,UAAA,WACAzJ,EAAAhL,KACA,YACA,mBACAkwC,GACApoB,EAAAzc,oBAAA,SAAA6kC,GACApoB,EAAAzc,oBAAA,yBAAA+kC,UAEA12C,IAAAouB,EAAAwoB,SAAA,CACA,IAAAvoC,EACA3N,KAAAqa,UACA,MACA,SACA,WACA,GAAA,iBAAAjV,OAAA+wC,MACA,IACAxoC,EAAA,IAAAvI,OAAA+wC,MAAA,UACA,MAAAtyB,IAGAlW,IACAA,EAAAnR,EAAA45C,YAAA,UACAC,UAAA,UAAA,GAAA,GAEA3oB,EAAA1X,cAAArI,KAGA3N,KAAA+1C,qBAEA7jC,YAAAvE,GACA,MAAA2oC,EAAAt2C,KAAAkkB,MACAwJ,EAAA1tB,KAAAwa,QAAAqK,aAEA,GADA1K,MAAA+oB,YAAAv1B,GACA+f,EAGA,IAAA,IAAAppB,EAAA,EAAAA,EAAAopB,EAAAnpB,OAAAD,IAAA,CACA,MAAA4f,EAAAwJ,EAAAppB,IACA,IAAAtE,KAAA61C,MAAAr0C,QAAA0iB,EAAA+K,QAGA/K,IAAAoyB,EACA,YAAApyB,EAAA2R,OACA3R,EAAA2R,KAAA,WAEA,aAAA3R,EAAA2R,OACA3R,EAAA2R,KAAA,cAIA3jB,mBAAAvE,GACA,MAAA4oC,EAAA,YAAAv2C,KAAAkkB,MAAA2R,KACA0gB,IAAAv2C,KAAA01C,aACA11C,KAAA4uB,SAAA2nB,GAGArkC,6BAAAvE,GACA,GAAA,YAAA3N,KAAAkkB,MAAA2R,KAAA,CACA,MAAA0P,EAAAvlC,KAAAwa,QAAAknB,OAAA6D,iBACA,GAAAA,GAAAA,EAAA/W,SAAA+W,EAAAtpB,WAAAjc,KAAAkkB,MAAAjI,UAAAspB,EAAAtW,OAAAjvB,KAAAkkB,MAAA+K,KACA,OAEAjvB,KAAAwa,QAAAknB,OAAA6D,kBACA/W,SAAA,EACAvS,SAAAjc,KAAAkkB,MAAAjI,SACAgT,KAAAjvB,KAAAkkB,MAAA+K,OAIA/c,UACAlS,KAAAkkB,MAAA,KACA/J,MAAAyB,WAIA,OADA7B,EAAAkI,kBAAA,oBAAA2zB,GACAA,IAEAv6C,OAAA,4EACA,yBACA,mBACA,SAAAu6C,EAAA77B,GACA,mBACAy8B,UAAAZ,EACA1jC,YAAAtB,EAAA1R,GACAA,EAAAglB,OACAtT,OAAAA,EACAqe,KAAA/vB,EAAA+vB,KACA4mB,MAAA32C,EAAA22C,MACA9f,SAAA,EACAF,KAAA,YAEA32B,EAAA22C,QACA32C,EAAA22C,OAAA32C,EAAA+vB,OAEA/vB,EAAAyrB,MACAzrB,EAAAglB,MAAAyG,MAAAzrB,EAAAyrB,MAEAzrB,EAAAglB,MAAAyG,MAAAzrB,EAAA22C,MAAA11C,KAAA,SAAA,OAEAjB,EAAAu2C,YAAA,EACAv2C,EAAAy2C,iBAAA,EACAx7B,MAAAvJ,EAAA1R,GAEAgT,mBAAAvE,GACA,MAAA+f,EAAA1tB,KAAA4Q,SAAAiU,aACA,IAAA0xB,GAAA,EACA,IAAA,IAAAjyC,EAAA,EAAA0pB,EAAAN,EAAAnpB,OAAAD,EAAA0pB,EAAA1pB,IAAA,CACA,MAAA4f,EAAAwJ,EAAAppB,GACA,GAAAtE,KAAA2a,SAAAk7B,MAAAr0C,QAAA0iB,EAAA+K,OAAA,GAAA,YAAA/K,EAAA2R,KAAA,CACA0gB,GAAA,EACA,OAGAA,IAAAv2C,KAAA01C,aACA11C,KAAA4uB,SAAA2nB,GAGArkC,6BAAAvE,GACA,MAAA+f,EAAA1tB,KAAA4Q,SAAAiU,aACA,IAAA4xB,GAAA,EACA,IAAA,IAAAnyC,EAAA,EAAA0pB,EAAAN,EAAAnpB,OAAAD,EAAA0pB,EAAA1pB,IAAA,CACA,MAAA4f,EAAAwJ,EAAAppB,GACA,IACA,WACA,eACA,aACA9C,QAAA0iB,EAAA+K,OAAA,GAAA,YAAA/K,EAAA2R,KAAA,CACA4gB,GAAA,EACA,OAGAA,IACAz2C,KAAAwa,QAAAknB,OAAA6D,kBAAA/W,SAAA,KAKA,OADAzU,EAAAkI,kBAAA,uBAAAu0B,GACAA,IAEAn7C,OAAA,qEACA,kBACA,kBACA,yBACA,8BACA,SAAAg6C,EAAAt7B,EAAA67B,EAAAY,GACA,mBACAE,UAAArB,EACAnjC,YAAAtB,EAAA1R,MACAA,EAAAwuB,OAAA9c,EAAAiU,aACA1K,MAAAvJ,EAAA1R,GAEAgT,YAAAwiC,KAAAiC,EAAAf,GACA,IAAAjrB,EACA3qB,KAAA42C,SACAjsB,KAAA3qB,KAAA42C,cAEAlC,EAAAz0C,KAAA,IAAAu2C,EAAAx2C,KAAAwa,SACAq7B,MAAA71C,KAAA62C,OACA5nB,KAAAjvB,KAAA82C,MACAnsB,MAAAA,KAEA3qB,KAAA20C,gBAAA,EACA,MAAAjnB,EAAA1tB,KAAAwa,QAAAqK,aACArf,MAAAvJ,QAAA+D,KAAA62C,UACA72C,KAAA62C,QAAA72C,KAAA82C,QAEA,IAAA,IAAAxyC,EAAA,EAAAA,EAAAopB,EAAAnpB,OAAAD,IAAA,CACA,MAAA4f,EAAAwJ,EAAAppB,GACA,GAAAtE,KAAA62C,OAAAr1C,QAAA0iB,EAAA+K,OAAA,EAAA,CACA,MAAAlhB,EAAA,IAAA4oC,EAAA32C,KAAAwa,SACA0J,MAAAA,EACA2xB,MAAA71C,KAAA62C,OACA5nB,KAAAjvB,KAAA82C,MACArB,YAAA,EACAE,iBAAA,IAEA5nC,EAAAhC,gBAAAmY,EAAA+K,kBACAylB,EAAAz0C,KAAA8N,IAGA,OAAA2mC,GAIA,OADA36B,EAAAkI,kBAAA,kBAAAy0B,GACAA,IAEAr7C,OAAA,4EACA,uBACA,kBACA,kBACA,SAAAm6C,EAAAz7B,EAAAxD,GACA,mBACAwgC,UAAAvB,EACAtjC,YAAAtB,EAAA1R,GACA,MAAAglB,EAAAhlB,EAAAglB,MACAE,EAAAllB,EAAAklB,IACAsS,EAAA9lB,EAAA8lB,cACAx3B,EAAAu2C,YAAA,EACAv2C,EAAAy2C,iBAAA,EACAz2C,EAAAyrB,MAAAvG,EAAAlmB,KACAgB,EAAA0vB,SAAAxK,EAAAC,WAAAqS,GAAAA,EAAAtS,EAAAE,QACAnK,MAAAvJ,EAAA1R,GACAc,KAAAkkB,MAAAA,EACAlkB,KAAAokB,IAAAA,EACAF,EAAA/S,iBAAA,YAAAoF,EAAA1B,KAAA7U,KAAAA,KAAAujC,SAEArxB,YAAAvE,GACAwM,MAAA+oB,cACAljC,KAAAwa,QAAAkc,YAAA12B,KAAAokB,IAAAC,WACArkB,KAAAujC,OAAAvjC,KAAAokB,IAAAC,WAEAnS,OAAAvE,GACA,MAAAyW,EAAApkB,KAAAokB,IACAsS,EAAA12B,KAAAwa,QAAAkc,cACA12B,KAAA4uB,SAAAxK,EAAAC,WAAAqS,GAAAA,EAAAtS,EAAAE,UAIA,OADAvK,EAAAkI,kBAAA,wBAAA80B,GACAA,IAEA17C,OAAA,mEACA,sBACA,kBACA,6BACA,4BACA,SAAAq7C,EAAA38B,EAAAg9B,EAAAj9B,GACA,mBACAk9B,UAAAN,EACAxkC,YAAAtB,EAAA1R,EAAAob,GACAH,MAAAvJ,EAAA1R,EAAAob,GAEApI,gBACA,6BAAAiI,MAAAmQ,kBAEApY,uBACA,6BAAAiI,MAAA66B,yBAEA9iC,OAAAvE,GACA3N,KAAAi3C,UAAAtpC,GAAA,aAAAA,EAAAvR,MAAA,gBAAAuR,EAAAvR,OACA4D,KAAAk3C,SAAAl3C,KAAAm3C,qBAEAh9B,MAAAopB,SAEArxB,SAAAgS,GACA,GAAAlkB,KAAAi3C,SAAA/yB,EAAA,CAMA,GAHAlkB,KAAAo3C,iBACAp3C,KAAAo3C,eAAAp3C,KAAAujC,OAAA1uB,KAAA7U,OAEAA,KAAAi3C,OAAA,CACA,MAAAI,EAAAr3C,KAAAwa,QAAAihB,qBAAAC,wBAAA17B,KAAAi3C,QACAI,GACAA,EAAApmC,oBAAA,OAAAjR,KAAAo3C,gBAEAp3C,KAAAi3C,OAAA,KAGA,GADAj3C,KAAAi3C,OAAA/yB,EACAlkB,KAAAi3C,OAAA,CACAj3C,KAAAi3C,OAAAphB,KAAA,SACA,MAAAwhB,EAAAr3C,KAAAwa,QAAAihB,qBAAAC,wBAAA17B,KAAAi3C,QACAI,GACAA,EAAAlmC,iBAAA,OAAAnR,KAAAo3C,kBAIAllC,oBACA,MAAAwb,EAAA1tB,KAAAwa,QAAAqK,iBACA,IAAA,IAAAvgB,EAAAopB,EAAAnpB,OAAA,EAAAD,GAAA,EAAAA,IAAA,CACA,MAAA4f,EAAAwJ,EAAAppB,GACA,GAAA4f,EAAA+K,OAAAjvB,KAAA82C,MACA,OAAA5yB,GAIAhS,iBACA,OAAAlS,KAAAi3C,QAAAj3C,KAAAi3C,OAAAtsB,MACA3qB,KAAAi3C,OAAAtsB,MAEA3qB,KAAA6qB,SAAA/Q,EAAAhB,YAAA9Y,KAAA82C,QAEA5kC,aAEA,OADAlS,KAAA2a,SAAA6O,MAAAxpB,KAAAs3C,iBACAn9B,MAAAs6B,aAEAviC,cACA,MAAAwiC,KACA,IAAA10C,KAAAi3C,OACA,OAAAvC,EAEA,MAAAvwB,EAAAnkB,KAAAi3C,OAAA9yB,KACA,IAAAA,EACA,OAAAuwB,EAEA,IAAA,IAAApwC,EAAA,EAAA0pB,EAAA7J,EAAA5f,OAAAD,EAAA0pB,EAAA1pB,IAAA,CACA,MAAA8f,EAAAD,EAAA7f,GACAizC,EAAA,IAAAR,EAAA/2C,KAAAwa,SACA0J,MAAAlkB,KAAAi3C,OACA7yB,IAAAA,IAEAswB,EAAAz0C,KAAAs3C,GAEA,OAAA7C,GAMA,OAHAsC,EAAA3mC,UAAAymC,MAAA,WACAE,EAAA3mC,UAAAyyB,aAAA,WACA/oB,EAAAkI,kBAAA,iBAAA+0B,GACAA,IAEA37C,OAAA,uEACA,sBACA,kBACA,kBACA,SAAAq7C,EAAA38B,EAAAxD,GACA,mBACAihC,UAAAd,EACAxkC,YAAAtB,EAAA1R,EAAAob,GACAH,MAAAvJ,EAAA1R,EAAAob,GACA,MAAAoT,EAAA9c,EAAAiU,aACAixB,EAAAv/B,EAAA1B,KAAA7U,KAAAA,KAAA+1C,oBACAroB,EAAAvc,iBAAA,SAAA2kC,GACA91C,KAAAqa,SAAA,UAAA,WACAqT,EAAAzc,oBAAA,SAAA6kC,KAGA5jC,mBAAAvE,GACA,MAAA+f,EAAA1tB,KAAA4Q,SAAAiU,aACA,IAAAgM,GAAA,EACA,IAAA,IAAAvsB,EAAA,EAAA0pB,EAAAN,EAAAnpB,OAAAD,EAAA0pB,EAAA1pB,IAAA,CACA,MAAA4f,EAAAwJ,EAAAppB,GACA,GAAA4f,EAAA+K,OAAAjvB,KAAA82C,OAAA,YAAA5yB,EAAA2R,KAAA,CACAhF,GAAA,EACA,OAGAA,EACA7wB,KAAAqG,UAEArG,KAAAsG,SAGA4L,gBACA,iCAAAiI,MAAAmQ,kBAEApY,uBACA,iCAAAiI,MAAA66B,0BAMA,OAHAwC,EAAAnnC,UAAAymC,MAAA,eACAU,EAAAnnC,UAAAyyB,aAAA,eACA/oB,EAAAkI,kBAAA,qBAAAu1B,GACAA,IAEAn8C,OAAA,oEACA,sBACA,mBACA,SAAAq7C,EAAA38B,GACA,mBACA09B,UAAAf,EACAxkC,YAAAtB,EAAA1R,EAAAob,GACAH,MAAAvJ,EAAA1R,EAAAob,GAEApI,gBACA,8BAAAiI,MAAAmQ,kBAEApY,uBACA,8BAAAiI,MAAA66B,0BAMA,OAHAyC,EAAApnC,UAAAymC,MAAA,YACAW,EAAApnC,UAAAyyB,aAAA,YACA/oB,EAAAkI,kBAAA,kBAAAw1B,GACAA,IAEAp8C,OAAA,8EACA,yBACA,mBACA,SAAAu6C,EAAA77B,GACA,mBACA29B,UAAA9B,EACA1jC,YAAAtB,EAAA1R,GACAA,EAAAglB,OACAtT,OAAAA,EACAqe,KAAA/vB,EAAA+vB,KACAtE,MAAAzrB,EAAA+vB,KAAA,YACAwmB,YAAA,EACA1f,SAAA,EACAF,KAAA,YAEA32B,EAAAu2C,YAAA,EACAv2C,EAAApC,KAAA,0BACAqd,MAAAvJ,EAAA1R,GACAc,KAAA+L,SAAA,0BACA/L,KAAA8rB,YAAA,WAAA5sB,EAAA+vB,KAAA,oBAEA/c,YAAAvE,GACA3N,KAAA4Q,SAAAiM,SAAA,qBAAA3Z,QAIA,OADA6W,EAAAkI,kBAAA,0BAAAy1B,GACAA,IAEAr8C,OAAA,mEACA,sBACA,kBACA,gCACA,SAAAq7C,EAAA38B,EAAA29B,GACA,mBACAC,UAAAjB,EACAxkC,YAAAtB,EAAA1R,EAAAob,GACAH,MAAAvJ,EAAA1R,EAAAob,GAEApI,gBACA,6BAAAiI,MAAAmQ,kBAEApY,uBACA,6BAAAiI,MAAA66B,yBAEA9iC,cACA,MAAAwiC,KAKA,OAJA10C,KAAA4Q,SAAA2kB,OAAAv1B,KAAA4Q,SAAA2kB,MAAA6D,2BAAAp5B,KAAA4Q,SAAAiM,SAAA,uBACA63B,EAAAz0C,KAAA,IAAAy3C,EAAA13C,KAAAwa,SAAAyU,KAAAjvB,KAAA82C,SACA92C,KAAA20C,gBAAA,GAEAx6B,MAAA46B,YAAAL,IAMA,OAHAiD,EAAAtnC,UAAAymC,MAAA,WACAa,EAAAtnC,UAAAyyB,aAAA,WACA/oB,EAAAkI,kBAAA,iBAAA01B,GACAA,IAEAt8C,OAAA,uEACA,yBACA,kBACA,mBACA,SAAAu6C,EAAA77B,EAAAta,GACA,mBACAm4C,UAAAhC,EACA1jC,SAAA9V,EAAA+0B,EAAA3kB,GACA,IAAAglB,sCAAAxxB,KAAA6qB,SAAA7qB,KAAA2a,SAAAgQ,SACA,aAAA3qB,KAAA2a,SAAAuJ,MAAA+K,OACAuC,uHAEAxxB,KAAA6qB,SAAA,8BAGA2G,GAAA,UACA,MAAA3qB,EAAAsT,MAAAhP,SAAA/O,EAAAqD,EAAAiH,QAAA8qB,UAAAA,GAAAL,GAAA3kB,GACA,OAAA3F,GAIA,OADAkT,EAAAkI,kBAAA,mBAAA21B,GACAA,IAEAv8C,OAAA,oEACA,sBACA,kBACA,+BACA,wBACA,4BACA,SAAAq7C,EAAA38B,EAAA29B,EAAAE,EAAA99B,GACA,mBACA+9B,UAAAnB,EACAxkC,YAAAtB,EAAA1R,MACAib,MAAAvJ,EAAA1R,GACAc,KAAA42C,OAAA,aAEA,KACA,QACA,QACA,SACAp1C,QAAAxB,KAAAwa,QAAAs9B,YAAA,IACA93C,KAAA42C,OAAA,YAEA52C,KAAAgzC,YAAAlnB,YAAAhS,EAAAhB,YAAA9Y,KAAA42C,SAEA1kC,gBACA,8BAAAiI,MAAAmQ,kBAEApY,uBACA,8BAAAiI,MAAA66B,yBAEA9iC,cACA,IAAAwiC,KAMA,OALA10C,KAAA4Q,SAAA2kB,OAAAv1B,KAAA4Q,SAAA2kB,MAAA6D,2BAAAp5B,KAAA4Q,SAAAiM,SAAA,uBACA63B,EAAAz0C,KAAA,IAAAy3C,EAAA13C,KAAAwa,SAAAyU,KAAAjvB,KAAA42C,UACA52C,KAAA20C,gBAAA,GAEAD,EAAAv6B,MAAA46B,YAAAL,EAAAkD,IAUA,OANAC,EAAAxnC,UAAAwmC,QACA,WACA,aAEAgB,EAAAxnC,UAAAyyB,aAAA,YACA/oB,EAAAkI,kBAAA,iBAAA41B,GACAA,IAEAx8C,OAAA,0EACA,uBACA,kBACA,mBACA,SAAAm6C,EAAAz7B,EAAAta,GACA,mBACAs4C,UAAAvC,EACAtjC,YAAAtB,EAAA1R,GACA,MAAAglB,EAAAhlB,EAAAglB,MACAwJ,EAAA9c,EAAAonC,cACA94C,EAAAyrB,MAAAzG,EAAAyG,OAAAzG,EAAAjI,UAAA,UACA/c,EAAA0vB,SAAA1K,EAAAsK,QACArU,MAAAvJ,EAAA1R,GACAc,KAAAkkB,MAAAA,EACAlkB,KAAA+L,gBAAAmY,EAAA+K,kBACA,MAAA6mB,EAAA,IAAAv1C,KACAP,KAAA+1C,mBAAAtgC,MAAAzV,KAAAO,IAEAmtB,EAAAvc,iBAAA,SAAA2kC,GACA91C,KAAAqa,SAAA,UAAA,KACAqT,EAAAzc,oBAAA,SAAA6kC,KAGA5jC,SAAA9V,EAAA+0B,EAAA3kB,GACA,IAAAglB,sCAAAxxB,KAAA6qB,SAAA7qB,KAAA2a,SAAAgQ,SACA,cAAA3qB,KAAA2a,SAAAuJ,MAAA+K,OACAuC,uHAEAxxB,KAAA6qB,SAAA,kCAGA2G,GAAA,UACA,MAAA3qB,EAAAsT,MAAAhP,SAAA/O,EAAAqD,EAAAiH,QAAA8qB,UAAAA,GAAAL,GAAA3kB,GACA,OAAA3F,EAEAqL,YAAAvE,GACA,MAAA+f,EAAA1tB,KAAAwa,QAAAw9B,cACA79B,MAAA+oB,YAAAv1B,GACA,IAAA,IAAArJ,EAAA,EAAAA,EAAAopB,EAAAnpB,OAAAD,IAAA,CACA,MAAA4f,EAAAwJ,EAAAppB,GACA4f,EAAAsK,QAAAtK,IAAAlkB,KAAAkkB,OAGAhS,mBAAAvE,GACA3N,KAAA4uB,SAAA5uB,KAAAkkB,MAAAsK,UAIA,OADAzU,EAAAkI,kBAAA,qBAAA81B,GACAA,IAEA18C,OAAA,uEACA,kBACA,kBACA,2BACA,SAAAg6C,EAAAt7B,EAAAg+B,GACA,mBACAE,UAAA5C,EACAnjC,YAAAtB,EAAA1R,MACAA,EAAAwuB,OAAA9c,EAAAonC,cACA79B,MAAAvJ,EAAA1R,GAEAgT,gBACA,0BAAAiI,MAAAmQ,kBAEApY,uBACA,0BAAAiI,MAAA66B,yBAEA9iC,YAAAwiC,MACA10C,KAAA20C,eAAA,EACA,MAAAjnB,EAAA1tB,KAAAwa,QAAAw9B,cACA,IAAA,IAAA1zC,EAAA,EAAAA,EAAAopB,EAAAnpB,OAAAD,IAAA,CACA,MAAA4f,EAAAwJ,EAAAppB,GACAowC,EAAAz0C,KAAA,IAAA83C,EAAA/3C,KAAAwa,SACA0J,MAAAA,EACAuxB,YAAA,EACAE,iBAAA,KAGA,OAAAjB,GAKA,OAFAuD,EAAA5nC,UAAAyyB,aAAA,cACA/oB,EAAAkI,kBAAA,mBAAAg2B,GACAA,IAEA58C,OAAA,0EACA,uBACA,mBACA,SAAAm6C,EAAAz7B,GACA,mBACAm+B,UAAA1C,EACAtjC,YAAAtB,EAAA1R,GACA,MAAAyrB,EAAAzrB,EAAAi5C,KACAA,EAAA1wC,WAAAkjB,EAAA,IACAzrB,EAAAyrB,MAAAA,EACAzrB,EAAA0vB,SAAA,IAAAupB,EACAj5C,EAAAu2C,YAAA,EACAv2C,EAAAy2C,iBAAA,EACAx7B,MAAAvJ,EAAA1R,GACAc,KAAA2qB,MAAAA,EACA3qB,KAAAm4C,KAAAA,EACAn4C,KAAAqa,SAAAzJ,EAAA,aAAA5Q,KAAAujC,QAEArxB,YAAAvE,GACAwM,MAAA+oB,cACAljC,KAAA4Q,SAAAwnC,aAAAp4C,KAAAm4C,MAEAjmC,OAAAvE,GACA3N,KAAA4uB,SAAA5uB,KAAA4Q,SAAAwnC,iBAAAp4C,KAAAm4C,OAKA,OAFAD,EAAA7nC,UAAAqjC,cAAA,SACA35B,EAAAkI,kBAAA,uBAAAi2B,GACAA,IAEA78C,OAAA,4EACA,yBACA,kBACA,4BACA,kBACA,mBACA,SAAA84C,EAAApB,EAAAmF,EAAAn+B,EAAA/J,GACA,mBACAqoC,UAAAlE,EACAjiC,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAs4C,mBACAt4C,KAAAu4C,cACAv4C,KAAAqa,SAAAzJ,EAAA,YAAA5Q,KAAAs4C,kBACAt4C,KAAAqa,SAAAzJ,EAAA,aAAA5Q,KAAAu4C,aAEArmC,WACA,MAAArL,EAAAsT,MAAAhP,WAMA,OALAnL,KAAAw4C,SAAAxoC,EAAA7E,SAAA,OACAmG,UAAA,0BACAkgB,UAAA,OAEA3qB,EAAAwjB,YAAArqB,KAAAw4C,UACA3xC,EAEAqL,UACAlS,KAAAw4C,SAAA,KACAr+B,MAAAyB,UAEA1J,gBACA,2BAAAiI,MAAAmQ,kBAEApY,uBACA,2BAAAiI,MAAA66B,yBAEA9iC,aACA,MAAAmiC,EAAA,IAAAtB,EAAA/yC,KAAA4Q,UACA6nC,EAAAz4C,KAAA04C,gBACA,GAAAD,EACA,IAAA,IAAAn0C,EAAAm0C,EAAAl0C,OAAA,EAAAD,GAAA,EAAAA,IACA+vC,EAAAt2B,SAAA,IAAAm6B,EAAAl4C,KAAA4Q,UAAAunC,KAAAM,EAAAn0C,GAAA,OAGA,OAAA+vC,EAEAniC,uBACAlS,KAAA6G,KAAA+F,aAAA,gBAAA5M,KAAA4Q,SAAAwnC,gBAEAlmC,YAAAvE,GACA,MAAAgrC,EAAA34C,KAAA4Q,SAAAwnC,eACAK,EAAAz4C,KAAA04C,gBACA,IAAAE,EAAAH,EAAA,GACA,IAAA,IAAAn0C,EAAA,EAAAA,EAAAm0C,EAAAl0C,OAAAD,IACA,GAAAm0C,EAAAn0C,GAAAq0C,EAAA,CACAC,EAAAH,EAAAn0C,GACA,MAGAtE,KAAA4Q,SAAAwnC,aAAAQ,GAEA1mC,gBACA,OAAAlS,KAAA2a,SAAA+9B,eAAA14C,KAAA2a,SAAAkD,eAAA7d,KAAA2a,SAAAkD,cAAA66B,cAEAxmC,wBACA,OAAAlS,KAAA4Q,SAAA2kB,OAAAv1B,KAAA4Q,SAAA2kB,MAAA+G,sBAAAt8B,KAAA04C,iBAAA14C,KAAA04C,gBAAAn0C,OAAA,EAEA2N,iBAAAvE,GACA3N,KAAA64C,wBACA74C,KAAAgM,YAAA,cAEAhM,KAAA+L,SAAA,cAGAmG,YAAAvE,GACA3N,KAAA64C,0BACA74C,KAAAw4C,SAAAhnB,UAAAxxB,KAAA4Q,SAAAwnC,eAAA,MAMA,OAFAC,EAAAhoC,UAAAyyB,aAAA,gBACA/oB,EAAAkI,kBAAA,yBAAAo2B,GACAA,IAEAh9C,OAAA,sDACA,mBACA,SAAA0e,GACA,mBACA++B,UAAA/+B,EACA7H,gBACA,oBAAAiI,MAAAmQ,kBAEApY,WACA,OAAAiI,MAAAhP,SAAA,OAAAmG,UAAAtR,KAAAsqB,mBAIA,OADAvQ,EAAAkI,kBAAA,SAAA62B,GACAA,IAEAz9C,OAAA,qEACA,WACA,mBACA,SAAAy9C,EAAA/+B,GACA,mBACAg/B,UAAAD,EACA5mC,gBACA,mCAAAiI,MAAAmQ,kBAEApY,WACA,MAAArL,EAAAsT,MAAAhP,UAAAmG,UAAAtR,KAAAsqB,kBAEA,OADAzjB,EAAA2qB,UAAA,IACA3qB,GAIA,OADAkT,EAAAkI,kBAAA,sBAAA82B,GACAA,IAEA19C,OAAA,2CACA,iCACA,eACA,gBACA,uCACA,mCACA,+BACA,yCACA,iBACA,iBACA,sCACA,8BACA,sBACA,iBACA,wCACA,4CACA,yCACA,wCACA,yCACA,4CACA,iDACA,2CACA,SAAAmB,EAAAud,GACA,mBACAi/B,UAAAj/B,EACA7H,WACA,OAAAiI,MAAAhP,SAAA,OACAmG,UAAA,kBACAm2B,IAAA,SA4BA,OAxBAuR,EAAA3oC,UAAAsK,UACA8C,UACA,aACA,cACA,qBACA,cACA,kBACA,kBACA,cACA,aACA,uBACA,sBACA,yBACA,iBACA,qBACA,iBACA,mBACA,qBAGA,yBAAAjhB,GACAw8C,EAAA3oC,UAAAsK,SAAA8C,SAAAtY,OAAA6zC,EAAA3oC,UAAAsK,SAAA8C,SAAAlZ,OAAA,EAAA,EAAA,0BAEAwV,EAAAkI,kBAAA,aAAA+2B,GACAA,IAEA39C,OAAA,iCACA,cACA,kBACA,SAAA0e,EAAA6P,GACA,mBACAqvB,UAAArvB,EACA1X,YAAAtB,EAAA1R,GACAib,MAAAvJ,EAAA1R,GACAc,KAAAqa,SAAAzJ,EAAA,QAAA5Q,KAAAkD,MAEAgP,gBACA,2BAAAiI,MAAAmQ,kBAEApY,UACA,MAAAzU,EAAAuC,KAAA4Q,SAAAnT,QACA,OAAAA,EAAAuC,KAAA6qB,SAAAptB,EAAA0lB,SAAA,IAUA,OAPA81B,EAAA5oC,UAAAsK,SAAAuD,OAAAxX,UAAAkjB,EAAAvZ,UAAAsK,UACAwQ,aAAA,EACAJ,YAAA,EACAW,WAAA,EACAzB,aAAA,IAEAlQ,EAAAkI,kBAAA,eAAAg3B,GACAA,IAEA59C,OAAA,8CACA,eACA,kBACA,eACA,cACA,eACA,gBACA,SAAA0e,EAAA6P,EAAA5Z,EAAAuG,EAAAC,EAAA5R,GACA,aACA,MAAAs0C,EAAA,0BACAC,GACA,OACA,SAEAC,GACA,OACA,QAEAC,GACA,OACA,QAEAC,GACA,OACA,SAEAC,GACA,OACA,WAEAC,GACA,OACA,OAEAC,GACA,OACA,SAEAC,GACA,OACA,UAEAC,GACA,IACA,UAEAC,GACA,MACA,oBAEAC,GACA,IACA,eAEAC,GACArT,iBACA38B,SAAA,yBACA+Q,GAAA,+BACA8P,MAAA,QACAzrB,SACAi6C,EACAM,EACAD,EACAF,EACAF,EACAM,EACAH,EACAF,IAGA3S,mBACA58B,SAAA,2BACA+Q,GAAA,iCACA8P,MAAA,eACAzrB,SACAy6C,EACAC,EACAC,IAGAjV,OACA96B,SAAA,yBACA+Q,GAAA,+BACA8P,MAAA,QACAzrB,SACAu6C,EACAN,EACAK,EACAF,EACAF,EACAM,EACAH,EACAF,IAGAxS,WACA/8B,SAAA,2BACA+Q,GAAA,KACA8P,MAAA,kBACAzrB,UAEA,OACA,SAGA,SACA,WAGA,YACA,cAGA,UACA,YAGA,aACA,gBAIA+nC,YACAn9B,SAAA,4BACA+Q,GAAA,0BACA8P,MAAA,cACAzrB,UAEA,wBACA,4BAGA,qBACA,yBAGA,oBACA,uBAGA,iBACA,oBAGA,SACA,WAGA,SACA,WAGA,aACA,gBAIA6nC,aACAj9B,SAAA,6BACA+Q,GAAA,wBACA8P,MAAA,YACAzrB,UAEA,OACA,QAGA,OACA,QAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA,OACA,SAGA62B,QAAA,EACArB,OAAAqlB,GAAA,SAAAA,EAAA,KAAA3rC,OAAA2rC,IAEAvT,aACA18B,SAAA,6BACA+Q,GAAA,iCACA8P,MAAA,eACAzrB,SACAy6C,EACAC,IAGAjT,aACA78B,SAAA,6BACA+Q,GAAA,2BACA8P,MAAA,SAEAic,eACA98B,SAAA,+BACA+Q,GAAA,6BACA8P,MAAA,eACAzrB,SACA26C,EACAD,EACAD,KAKA,SAAAK,EAAAl6C,EAAA40B,GAIA,GAHAA,IACA50B,EAAA40B,EAAA50B,IAEAA,GAAA,SAAAA,EACA,OAAAA,EANAg6C,EAAAnT,YAAAznC,QAAA46C,EAAArT,gBAAAvnC,cAwBA+6C,UAAArwB,EACA1X,YAAAtB,EAAA1R,GACAA,EAAAwsB,WAAA,EACAvR,MAAAvJ,EAAA1R,GACAc,KAAAm7B,cAAA5kB,EAAA1B,KAAA7U,KAAAA,KAAAm7B,eACAn7B,KAAAgrB,OACAhrB,KAAA8pB,eAAA9pB,KAAA+pB,gBAAA,EACA/pB,KAAAk6C,UAAAlqC,EAAA7E,SAAA,KACAmG,UAAA,mBACA9F,YAAAxL,KAAA6qB,SAAA,2BAEA7qB,KAAA6G,KAAAwjB,YAAArqB,KAAAk6C,WACAl6C,KAAAm6C,mBACA76C,IAAAJ,EAAAk7C,2BACAp6C,KAAA2a,SAAAy/B,yBAAAp6C,KAAA2a,SAAAkD,cAAAu8B,0BAEAp6C,KAAAqa,SAAAra,KAAA2P,EAAA,oBAAA,QAAA,KACA3P,KAAAq6C,eACAr6C,KAAA4rB,UAEA5rB,KAAAqa,SAAAra,KAAA2P,EAAA,uBAAA,QAAA,KACA3P,KAAAm6C,cACAn6C,KAAAm7B,kBAEA3kB,EAAA1a,KAAAg+C,EAAAQ,IACAt6C,KAAAqa,SAAAra,KAAA2P,EAAA2qC,EAAAxwC,UAAA,SAAA9J,KAAAm7B,iBAEAn7B,KAAA2a,SAAAy/B,0BACAp6C,KAAAu6C,kBAGAroC,UACAlS,KAAAk6C,UAAA,KACA//B,MAAAyB,UAEA1J,gBAAArV,EAAA29C,EAAA,GAAAp+C,EAAA,SACA,MAAAk+C,EAAAR,EAAAj9C,GACAge,EAAAy/B,EAAAz/B,GAAA7b,QAAA,KAAAgB,KAAA4a,KACA6/B,GACAD,EACA3/B,GACA1a,KAAA,KAAAsJ,OACA,WACArN,SAAAye,aAAA,UAAAze,EAAA,YAAA,OACA4D,KAAA6qB,SAAAyvB,EAAA3vB,YACAvuB,iCACAq+C,OACAv1C,OAAAo1C,EAAAp7C,QAAA4L,IAAA4vC,IACA,MAAAC,EAAA9/B,EAAA,IAAA6/B,EAAA,GAAA17C,QAAA,OAAA,IACA,sBACA27C,aAAAD,EAAA,2BACAD,KAAAE,MACA36C,KAAA6qB,SAAA6vB,EAAA,IACA,aACAv6C,KAAA,OACA+E,OAAA,aAAA/E,KAAA,IAEA+R,mBACA,MAAAsoC,0BAAAx6C,KAAA4a,MACA,OACA,mEACA4/B,MACAx6C,KAAA6qB,SAAA,QACA,YACA7qB,KAAA46C,gBAAA,QAAAJ,GACA,8CACAx6C,KAAA46C,gBAAA,cAAAJ,GACA,UACA,eACAr6C,KAAA,IAEA+R,mBACA,MAAAsoC,yBAAAx6C,KAAA4a,MACA,OACA,mEACA4/B,MACAx6C,KAAA6qB,SAAA,cACA,YACA7qB,KAAA46C,gBAAA,kBAAAJ,GACA,4CACAx6C,KAAA46C,gBAAA,oBAAAJ,GACA,UACA,eACAr6C,KAAA,IAEA+R,oBACA,MAAAsoC,qBAAAx6C,KAAA4a,MACA,OACA,uEACA4/B,MACAx6C,KAAA6qB,SAAA,UACA,YACA7qB,KAAA46C,gBAAA,cAAAJ,GACA,gDACAx6C,KAAA46C,gBAAA,gBAAAJ,GACA,UACA,eACAr6C,KAAA,IAEA+R,kBACA,OAAAlC,EAAA7E,SAAA,OACAmG,UAAA,4BACAkgB,WACAxxB,KAAA66C,mBACA76C,KAAA86C,mBACA96C,KAAA+6C,qBACA56C,KAAA,MAGA+R,gBACA,OAAAlC,EAAA7E,SAAA,OACAmG,UAAA,0BACAkgB,WACA,wDACAxxB,KAAA46C,gBAAA,cAAA,GAAA,UACA,cACA,sDACA56C,KAAA46C,gBAAA,YAAA,GAAA,UACA,cACA,uDACA56C,KAAA46C,gBAAA,aAAA,GAAA,UACA,eACAz6C,KAAA,MAGA+R,oBACA,MAAA8oC,EAAAh7C,KAAA6qB,SAAA,8CACA,OAAA7a,EAAA7E,SAAA,OACAmG,UAAA,8BACAkgB,sEACAwpB,MACAh7C,KAAA6qB,SAAA,4CACAmwB,WACA,6DACAh7C,KAAA6qB,SAAA,oBACA1qB,KAAA,MAGA+R,UACA,OACAlS,KAAAi7C,kBACAj7C,KAAAk7C,gBACAl7C,KAAAm7C,qBAGAjpC,QACA,OAAAlS,KAAA6qB,SAAA,2BAEA3Y,cACA,OAAAlS,KAAA6qB,SAAA,wEAEA3Y,gBACA,OAAAiI,MAAAmQ,gBAAA,2BAEApY,YACA,OAAAsE,EAAA/P,OAAAqzC,EAAA,CAAAsB,EAAAd,EAAAz9C,KACA,MAAAiD,GA3KA+G,EA2KA7G,KAAA2P,EAAA2qC,EAAAxwC,UA3KA4qB,EA2KA4lB,EAAA5lB,OAzKAslB,EADAnzC,EAAA3H,QAAA2H,EAAA3H,QAAAm8C,eAAAv7C,MACA40B,IA6KA,YAHAp1B,IAAAQ,IACAs7C,EAAAv+C,GAAAiD,GAEAs7C,OA/KA,IAAAv0C,EAAA6tB,EAkLAxiB,UAAAhE,GACAsI,EAAA1a,KAAAg+C,EAAA,CAAAQ,EAAAz9C,MA/KA,SAAAgK,EAAA/G,EAAA40B,GACA,IAAA50B,EACA,OAEA,IAAA,IAAAwE,EAAA,EAAAA,EAAAuC,EAAA3H,QAAAqF,OAAAD,IACA,GAAA01C,EAAAnzC,EAAA3H,QAAAoF,GAAAxE,MAAA40B,KAAA50B,EAAA,CACA+G,EAAAw0C,cAAA/2C,EACA,OAyKAg3C,CAAAt7C,KAAA2P,EAAA2qC,EAAAxwC,UAAAoE,EAAArR,GAAAy9C,EAAA5lB,UAGAxiB,cACAsE,EAAA1a,KAAAg+C,EAAAQ,IACA,MAAAh+B,EAAAg+B,EAAAt0C,eAAA,WAAAs0C,EAAAvkB,QAAA,EACA/1B,KAAA2P,EAAA2qC,EAAAxwC,UAAAuxC,cAAA/+B,IAGApK,kBACA,IAAAhE,EACA,IACAA,EAAA3L,KAAAC,MAAA4C,OAAAm2C,aAAAC,QAAAtC,IACA,MAAAr1B,GACAjf,EAAAkB,KAAA+d,GAEA3V,GACAlO,KAAAy7C,UAAAvtC,GAGAgE,eACA,IAAAlS,KAAA2a,SAAAy/B,yBACA,OAEA,MAAAlsC,EAAAlO,KAAAqmC,YACA,IACAnoB,OAAAC,KAAAjQ,GAAA3J,OACAa,OAAAm2C,aAAAG,QAAAxC,EAAA32C,KAAAoxB,UAAAzlB,IAEA9I,OAAAm2C,aAAAI,WAAAzC,GAEA,MAAAr1B,GACAjf,EAAAkB,KAAA+d,IAGA3R,gBACA,MAAA0pC,EAAA57C,KAAAwa,QAAAqC,SAAA,oBACA++B,GACAA,EAAAzgB,gBAGAjpB,mBACAlS,KAAA4qB,oBAAA,KACA,MAAAmd,EAAA/nC,KAAAwa,QAAAqhC,WACAC,EAAA/T,GAAAA,EAAAgU,eACAC,EAAAjU,GAAAA,EAAAkU,eACAH,EACAA,EAAA7uC,QACA+uC,GACAA,EAAA/uC,SAKA,OADA8M,EAAAkI,kBAAA,oBAAAg4B,GACAA,IAEA5+C,OAAA,kCACA,aACA,iBACA,wBACA,eACA,SAAAkb,EAAAV,EAAAuD,EAAAW,GACA,mBACAmiC,UAAAniC,EACA7H,YAAAtB,EAAA1R,GACA,IAAAi9C,EAAAj9C,EAAAk9C,gBAAAh3C,OAAAg3C,eACA,OAAAl9C,EAAAk9C,iBACAD,GAAA,GAEA,MAAAxhC,EAAAvB,GACAjO,UAAAgxC,EACA3gC,qBAAA,GACAtc,GACAib,MAAAvJ,EAAA+J,GACA3a,KAAAo8C,eAAAl9C,EAAAk9C,gBAAAh3C,OAAAg3C,eACAp8C,KAAAq8C,cAAA,KACAr8C,KAAAs8C,gBAAA,KACAt8C,KAAAu8C,kBAAAhmC,EAAApB,SAAA,KACAnV,KAAAw8C,iBACA,KAAA,EAAAx8C,MACAm8C,GACAn8C,KAAAs8C,gBAAA,IAAAt8C,KAAAo8C,eAAAp8C,KAAAu8C,mBACAv8C,KAAAs8C,gBAAAG,QAAA7rC,EAAA/J,QAEA7G,KAAAq8C,cAAA,MACA,IAAAr8C,KAAAia,MAAAja,KAAAia,IAAAyiC,cACA,OAEA,MAAAH,EAAAv8C,KAAAu8C,kBACA,IAAAI,EAAA38C,KAAA28C,gBAAA,WACA9mC,EAAAjQ,IAAA5F,KAAA,SAAAu8C,GACA1mC,EAAAjQ,IAAA5F,KAAA,SAAA28C,GACAA,EAAA,MAEA9mC,EAAAvB,GAAAtU,KAAAia,IAAAyiC,cAAA,SAAAC,GACA9mC,EAAAvB,GAAAtU,KAAAia,IAAAyiC,cAAA,SAAAH,KAEAv8C,KAAAqhB,aAAA,OAAArhB,KAAAq8C,gBAGAnqC,WACA,OAAAiI,MAAAhP,SAAA,UACAmG,UAAA,qBACAiZ,UAAA,IACAE,cAAA,SAEAvY,gBACAlS,KAAAwa,SAAAxa,KAAAwa,QAAAhG,SAGAxU,KAAAwa,QAAAhG,QAAA,gBAEAtC,UACAlS,KAAAu8C,mBACAv8C,KAAAu8C,kBAAA5mC,SAEA3V,KAAAs8C,kBACAt8C,KAAAwa,QAAA3T,MACA7G,KAAAs8C,gBAAAM,UAAA58C,KAAAwa,QAAA3T,MAEA7G,KAAAs8C,gBAAAO,cAEA78C,KAAAq8C,eACAr8C,KAAA2X,WAAA,OAAA3X,KAAAq8C,eAEAr8C,KAAAia,KAAAja,KAAAia,IAAAyiC,eAAA18C,KAAA28C,iBACA38C,KAAA28C,gBAAA/7C,KAAAZ,KAAAia,IAAAyiC,eAEA18C,KAAAo8C,eAAA,KACAp8C,KAAA88C,eAAA,KACA98C,KAAAu8C,kBAAA,KACAv8C,KAAAq8C,cAAA,KACAliC,MAAAyB,WAIA,OADA7B,EAAAkI,kBAAA,gBAAAi6B,GACAA,IAEA7gD,OAAA,gCACA,cACA,wBACA,kBACA,cACA,SAAA0e,EAAAX,EAAA9P,EAAAiN,GACA,aACA,MAAAwmC,GACAC,kBAAA,GACAC,cAAA,UAEAC,UAAAnjC,EACA7H,YAAAtB,EAAA1R,GACA,MAAAyb,EAAAvB,EAAA2jC,EAAA79C,GAAAiM,UAAA,IACAgP,MAAAvJ,EAAA+J,GACA3a,KAAAm9C,SACAn9C,KAAAqa,SAAAra,KAAAwa,QAAA,iBAAAxa,KAAAo9C,sBACA9zC,EAAAf,YAAA,WAAA/L,UAAA,oBAAAA,UACAwD,KAAAqa,SAAA7d,SAAA,mBAAAwD,KAAAq9C,wBAGAnrC,yBACAlS,KAAAwa,QAAAuI,aAAAimB,EAAAA,IAGAxsC,SAAAs0B,OACA9wB,KAAAs9C,eAEAt9C,KAAAu9C,iBAGArrC,aACA,MAAAstB,EAAAx/B,KAAAwa,QAAAglB,WACA,IAAAA,IAAAA,EAAAj7B,OACA,OAEA,MAAA6qC,EAAAhhC,OAAAhJ,OAAAiN,YAAAC,MAAA45B,QAAA,IACAsR,GAAA,IAAAx9C,KAAAy9C,UAAA,GAAArO,EAAApvC,KAAAy9C,WAAA,IACAz9C,KAAAy9C,UAAArO,EACApvC,KAAA09C,aAAA19C,KAAA29C,cAAAH,EACA,MAAAxO,EAAAhvC,KAAAgvC,kBACAtY,EAAA12B,KAAAwa,QAAAkc,cACA,IAAAknB,EAAA59C,KAAAwa,QAAA0Q,UAAAlrB,KAAA69C,mBAAA7uC,KAAA8uC,IAAA9O,EAAAtY,GAAA12B,KAAA2a,SAAAsiC,cACAj9C,KAAA+9C,iBAAA/O,IAAAhG,EAAAA,IACA4U,GAAA,GAEAA,IAAA59C,KAAAg+C,kBACAh+C,KAAAg+C,gBAAAJ,EACA59C,KAAAwU,QAAA,mBAGAtC,uBACAlS,KAAAwa,QAAAuI,aAAAimB,EAAAA,GAAAhpC,KAAAguC,cAAAhuC,KAAA2a,SAAAqiC,mBACAh9C,KAAAwa,QAAAG,SAAAsjC,QACAj+C,KAAAwa,QAAAzO,SAAA,cAEA/L,KAAAu9C,kBAEAv9C,KAAAwa,QAAAxO,YAAA,cACAhM,KAAAs9C,gBAGAprC,gBACAlS,KAAAk+C,eAGAl+C,KAAA+9C,kBACA/9C,KAAA+9C,gBAAA/9C,KAAAwa,QAAA2jC,cAEAn+C,KAAAo+C,kBAAAp+C,KAAA4gB,YAAA5gB,KAAAq+C,WAAA9nC,EAAA3B,yBACA5U,KAAAq+C,aACAr+C,KAAAqa,SAAAra,KAAAwa,SACA,OACA,SACAxa,KAAAq+C,YACAr+C,KAAA+9C,gBAIA/9C,KAAAqa,SAAAra,KAAAwa,QAAA,SAAAxa,KAAAwoC,eAHAxoC,KAAAqhB,aAAArhB,KAAAwa,QAAA,OAAAxa,KAAAqoC,YACAroC,KAAAqhB,aAAArhB,KAAAwa,QAAA,aAAAxa,KAAAs+C,yBAKApsC,wBACAlS,KAAA+9C,iBAAA,EACA/9C,KAAAqa,SAAAra,KAAAwa,QAAA,SAAAxa,KAAAwoC,cAEAt2B,eACA,MAAAqsC,EAAAvvC,KAAA8uC,IAAA99C,KAAAgvC,kBAAAhvC,KAAAwa,QAAAkc,eACA12B,KAAA69C,mBAAA79C,KAAAw+C,iBAAAD,EAAA,EACAv+C,KAAAw+C,iBAAA,EACAx+C,KAAAq+C,aAEAnsC,aACAlS,KAAAqhB,aAAArhB,KAAAwa,QAAA,aAAAxa,KAAAgrC,gBAEA94B,SACAlS,KAAAy9C,WAAA,EACAz9C,KAAA09C,aAAA,EACA19C,KAAAy+C,cAAA,EACAz+C,KAAAg+C,iBAAA,EACAh+C,KAAA+9C,iBAAA,EACA/9C,KAAA69C,mBAAA,EACA79C,KAAAw+C,iBAAA,EACAx+C,KAAA2gB,cAAA3gB,KAAAo+C,mBACAp+C,KAAAo+C,kBAAA,KAYAp+C,KAAA2X,WAAA3X,KAAAwa,SACA,OACA,SACAxa,KAAAq+C,YACAr+C,KAAA2X,WAAA3X,KAAAwa,QAAA,SAAAxa,KAAAwoC,cACAxoC,KAAA2X,WAAA3X,KAAAwa,QAAA,OAAAxa,KAAAqoC,YACAroC,KAAA2X,WAAA3X,KAAAwa,QAAA,aAAAxa,KAAAs+C,uBACAt+C,KAAA2X,WAAA3X,KAAAwa,QAAA,aAAAxa,KAAAgrC,gBAEA94B,eACAlS,KAAAk+C,eAGAl+C,KAAAm9C,SACAn9C,KAAAwU,QAAA,mBAEAtC,cACA,MAAAstB,EAAAx/B,KAAAwa,QAAAglB,WACAkf,KACA,IAAAp6C,EAAAk7B,EAAAA,EAAAj7B,OAAA,EACA,KAAAD,KACAo6C,EAAAz+C,KAAAu/B,EAAA9c,IAAApe,IAEA,OAAAo6C,EAAAn6C,OAAAm6C,EAAAC,OAAAD,EAAAn6C,OAAA,GAAAykC,EAAAA,EAEA92B,gBACA,MAAAstB,EAAAx/B,KAAAwa,QAAAglB,WACAof,KACA,IAAAt6C,EAAAk7B,EAAAA,EAAAj7B,OAAA,EACA,KAAAD,KACAs6C,EAAA3+C,KAAAu/B,EAAA/c,MAAAne,IAEA,OAAAs6C,EAAAr6C,OAAAq6C,EAAAD,OAAA,GAAA,EAEAzsC,aACA,MAAA88B,EAAAhvC,KAAAgvC,kBACA,OAAAA,IAAAhG,EAAAA,EACA,EAEAgG,EAAAhvC,KAAAkvC,gBAEAh9B,SACA,OAAAlS,KAAAk+C,aAEAhsC,aACA,OAAAlS,KAAA6+C,iBAEA3sC,kBACA,OAAAlS,KAAA29C,cAAA39C,KAAA+sC,cAEA76B,cACA,MAAA66B,EAAA/sC,KAAA+sC,cAKA,OAJA,IAAA/sC,KAAAy+C,cAAA1R,IAAA/sC,KAAAy+C,eACAz+C,KAAA09C,aAAA,GAEA19C,KAAAy+C,aAAA1R,EACA/sC,KAAA09C,aAEAxrC,iBACA,OAAAlS,KAAAg+C,gBAEA9rC,aACA,MAAA,iBAAAlS,KAAAo+C,kBAEAlsC,iBACAlS,KAAA69C,mBAAA,EACA79C,KAAA+qC,eAGA/qC,KAAAw+C,iBAAA,EACAx+C,KAAAwa,QAAAkc,YAAA12B,KAAAgvC,oBAEA98B,UACAlS,KAAA2X,WAAAnb,SAAA,mBAAAwD,KAAAq9C,wBACAr9C,KAAAs9C,eACAnjC,MAAAyB,WAIA,OADA7B,EAAAkI,kBAAA,cAAAi7B,GACAA,IAEA7hD,OAAA,wCACA,iCACA,yBACA,gBACA,SAAAmB,EAAA4c,EAAA9c,GACA,aACA,MAAAwiD,EAAAt6B,IACA,MAAA3d,EAAA2d,EAAA3d,KACA,GAAAA,EAAAomB,aAAA,OAEA,OADAzI,EAAAkV,iBAAA7yB,EAAA+d,MACA,EAEA,MAAAvL,EAAAmL,EAAA1U,GAAA,UACAivC,KACA,IAAAn6B,EAAA,GACA,IAAAvL,EAAA9U,OACA,OAAA,EAEA,IAAA,IAAAD,EAAA,EAAAA,EAAA+U,EAAA9U,OAAAD,IAAA,CACA,MAAAhI,EAAA+c,EAAA/U,GAAAsgB,IACAtoB,IAAA,IAAAyiD,EAAAv9C,QAAAlF,IACAyiD,EAAA9+C,KAAA3D,GAGA,QAAAyiD,EAAAx6C,SAGA,IAAAw6C,EAAAx6C,SACAqgB,EAAAm6B,EAAA,IAEAv6B,EAAAkV,iBAAA9U,IACA,IAEAo6B,EAAA9gC,OAAA0P,kBAAA,aACA1b,MACA,OAAAlS,KAAAi/C,WAAA,GAAAztB,WAEAtf,IAAA6nC,GACA,MAAAmF,EAAA1iD,EAAAC,cAAAuD,KAAAgO,SAAA7K,eACA+7C,EAAA1tB,UAAAuoB,EACA,MAAAoF,EAAA3iD,EAAA4iD,yBACA,KAAAF,EAAAG,WAAA96C,QACA46C,EAAA90B,YAAA60B,EAAAG,WAAA,IAIA,OAFAr/C,KAAAs/C,UAAA,GACAl6C,OAAAm6C,QAAAlvC,UAAAga,YAAAzpB,KAAAZ,KAAAm/C,GACAn/C,KAAAwxB,aAGAguB,EAAA,CAAAC,EAAA34C,KACA,IAAA44C,KACA,IAAA,IAAAp7C,EAAA,EAAAA,EAAAm7C,EAAAl7C,WACAm7C,EAAAxhC,OAAAyhC,yBAAAF,EAAAn7C,GAAAwC,KACA44C,EAAAvpC,KAAAupC,EAAAj8C,KAFAa,KAQA,OAFAo7C,EAAAE,YAAA,EACAF,EAAAG,cAAA,EACAH,GAQAI,EAAA,SAAAt7B,GACA,MAAA3d,EAAA2d,EAAA3d,KACA,GAAAA,EAAAk5C,kBACA,OAEA,MAAAhtC,KACAitC,EAZAx7B,CAAAA,GAAAg7B,GACAh7B,EAAA3d,KACAzB,OAAA66C,iBAAA5vC,UACAjL,OAAAm6C,QAAAlvC,UACA2uC,GACA,aAOAkB,CAAA17B,GACA27B,EAAAC,GAAA,IAAA7/C,KACA,MAAA8/C,EAAAD,EAAA3qC,MAAA5O,EAAAtG,GAEA,OADAu+C,EAAAt6B,GACA67B,IAGA,SACA,cACA,sBACAt8C,QAAAwJ,IACA1G,EAAA0G,KAGAwF,EAAAxF,GAAA1G,EAAA0G,GACA1G,EAAA0G,GAAA4yC,EAAAptC,EAAAxF,OAEA2Q,OAAA0P,eAAA/mB,EAAA,YAAAuS,EAAA4mC,GAAA7pC,IAAAgqC,EAAAH,EAAA7pC,QACAtP,EAAAk5C,kBAAA,MACAl5C,EAAAk5C,kBAAA,KACA7hC,OAAAC,KAAApL,GAAAhP,QAAAwJ,IACA1G,EAAA0G,GAAAwF,EAAAxF,KAEA2Q,OAAA0P,eAAA/mB,EAAA,YAAAm5C,KAEAx7B,EAAA/P,IAAA,YAAA5N,EAAAk5C,oBAEAO,EAAApiC,OAAA0P,kBAAA,OACA1b,MACA,OAAAlS,KAAAitB,aAAA,OACA3wB,EAAAs1B,eAAAxsB,OAAAm6C,QAAAlvC,UAAA1D,aAAA/L,KAAAZ,KAAA,QAEA,IAEAkS,IAAA6nC,GAEA,OADA30C,OAAAm6C,QAAAlvC,UAAAzD,aAAAhM,KAAAZ,KAAA,MAAA+5C,GACAA,KAwDA,OAhDA,SAAAv1B,GACA,IAAAA,EAAA+X,kBACA,OAEA,MAAA11B,EAAA2d,EAAA3d,KACA,GAAAA,EAAA05C,gBACA,OAEA,MAAAC,EAbAh8B,CAAAA,GAAAg7B,GACAh7B,EAAA3d,KACAzB,OAAA66C,iBAAA5vC,UACAiwC,GACA,OASAG,CAAAj8B,GACAk8B,EAAA75C,EAAA+F,aACA+zC,EAAA95C,EAAAywB,KACApZ,OAAA0P,eAAA/mB,EAAA,MAAAuS,EAAAonC,GACArqC,IAAA4jC,IACA,MAAAsG,EAAAG,EAAArqC,IAAAvV,KAAAiG,EAAAkzC,GAEA,OADAv1B,EAAAkV,iBAAA7yB,EAAA+d,KACAy7B,MAGAx5C,EAAA+F,aAAA,EAAA+P,EAAAo9B,KACA,MAAAsG,EAAAK,EAAA9/C,KAAAiG,EAAA8V,EAAAo9B,GAIA,MAHA,OAAAl7C,KAAA8d,IACA6H,EAAAkV,iBAAA7yB,EAAA+d,KAEAy7B,IAEAx5C,EAAAywB,KAAA,MACA,MAAA+oB,EAAAM,EAAA//C,KAAAiG,GAKA,OAJAi4C,EAAAt6B,KACAA,EAAAkV,iBAAA,IACAomB,EAAAt7B,IAEA67B,IAEAx5C,EAAA+5C,WACAp8B,EAAAkV,iBAAA7yB,EAAA+5C,YACA9B,EAAAt6B,IACAs7B,EAAAt7B,GAEA3d,EAAA05C,gBAAA,MACA15C,EAAA05C,gBAAA,KACA15C,EAAAywB,KAAAqpB,EACA95C,EAAA+F,aAAA8zC,EACAxiC,OAAA0P,eAAA/mB,EAAA,MAAA25C,GACA35C,EAAAk5C,mBACAl5C,EAAAk5C,yBAMA1kD,OAAA,gDAAA,WACA,aAqBA,OApBA,SAAAoE,EAAA5C,EAAAgkD,EAAAC,GAAA,GACA,MAAA3qC,EAAArW,GAAAoe,OAAA0P,eAAAnuB,EAAA5C,GACAiD,MAAAA,EACA8/C,YAAA,EACAmB,UAAA,IAEA7hD,GACA2gD,cAAA,EACAD,YAAA,EACA1tC,MACA,MAAApS,EAAA+gD,IAEA,OADA1qC,EAAArW,GACAA,IAGAghD,IACA5hD,EAAAiX,IAAAA,GAEA,OAAA+H,OAAA0P,eAAAnuB,EAAA5C,EAAAqC,MAIA7D,OAAA,8BACA,iCACA,SACA,eACA,eACA,eACA,mBACA,eACA,yBACA,wBACA,wBACA,oBACA,gCACA,oBACA,SACAmB,EACAyhB,EACAjO,EACAgwB,EACAp7B,EACA0E,EACA7J,EACA2Z,EACAU,EACA8e,EACAooB,EACAC,EACA39C,GAEA,aACA,MAAAy0B,EAAAa,EAAAb,OACAQ,EAAAK,EAAAL,aAEA2oB,UAAAjjC,EACA/L,YAAAhT,EAAAob,GACAH,MAAAjb,EAAAob,GACA,MAAAhB,EAAApa,EAAAoa,OACA,IAAA6nC,GAAA,EAUA,GATA7nC,IAAAtZ,KAAAia,IAAA2mC,aAAAtnC,EAAAsL,KAAA1lB,EAAAoN,KAAA,IAAApN,EAAAoN,IAAA80C,mBACAphD,KAAAo9B,UAAA9jB,GAEAtZ,KAAAqhD,gBAAArhD,KAAAia,KAEA/a,EAAAoiD,iBACAthD,KAAAuhD,0BAEAvhD,KAAAwhD,cAAA,EACAxhD,KAAAia,IAAAwnC,gBAAA,CACA,MAAAC,EAAA1hD,KAAAia,IAAAolC,WACA,IAAAsC,EAAAD,EAAAn9C,OACA,MAAAq9C,KACA,KAAAD,KAAA,CACA,MAAAE,EAAAH,EAAAC,GACA3zC,EAAA6zC,EAAA7zC,SAAA7K,cACA,UAAA6K,IACAhO,KAAAo5B,0BAGAp5B,KAAAy7B,qBAAApM,iBAAAwyB,GACA7hD,KAAAg7B,mBAAAnN,SAAAg0B,EAAA39B,OACAlkB,KAAA6kB,aAAAgJ,SAAAg0B,EAAA39B,OACAi9B,GAAAnhD,KAAAia,IAAAgT,aAAA,iBAAA+S,EAAA/N,cAAA4vB,EAAAj9B,OACAu8B,GAAA,IANAS,EAAA3hD,KAAA4hD,IAWA,IAAA,IAAAv9C,EAAA,EAAAA,EAAAs9C,EAAAr9C,OAAAD,IACAtE,KAAAia,IAAA4B,YAAA+lC,EAAAt9C,IAGAtE,KAAA8hD,qBACA9hD,KAAAo5B,0BAAA+nB,GACAv8C,EAAAkB,KAAA,0IAEA9F,KAAA+hD,2CACAz4C,EAAAX,eAAAW,EAAAN,WAAAM,EAAApB,qBAAA,IAAAhJ,EAAAs6B,wBACAx5B,KAAAgiD,aAAA,GAEAhiD,KAAAiiD,yBACAjiD,KAAAkiD,eAEAhwC,UACAlS,KAAAia,KAAAja,KAAAia,IAAAsmC,iBACAvgD,KAAAia,IAAAsmC,kBAEAW,EAAAiB,oBAAAniD,KAAAia,KACAja,KAAA2a,SAAA,KACAR,MAAAyB,UAEA1J,0BACA8uC,EAAAhhD,MAEAkS,0CACA,MAAA2S,EAAA7kB,KAAA6kB,aACA,IAAAu9B,EACA,MAAAC,EAAA,KACAD,KACA,IAAA,IAAA99C,EAAA,EAAAA,EAAAugB,EAAAtgB,OAAAD,IAAA,CACA,MAAA4f,EAAAW,EAAAvgB,GACA,aAAA4f,EAAA+K,MACAmzB,EAAAniD,MACAikB,MAAAA,EACAo+B,WAAAp+B,EAAA2R,SAKAwsB,IACAx9B,EAAA1T,iBAAA,SAAAkxC,GACAriD,KAAAqa,SAAA,UAAA,IAAAwK,EAAA5T,oBAAA,SAAAoxC,IACA,MAAAE,EAAA,KACA,IAAA,IAAAj+C,EAAA,EAAAA,EAAA89C,EAAA79C,OAAAD,IAAA,CACA,MAAAk+C,EAAAJ,EAAA99C,GACA,aAAAk+C,EAAAt+B,MAAA2R,MAAA2sB,EAAAt+B,MAAA2R,OAAA2sB,EAAAF,aACAE,EAAAt+B,MAAA2R,KAAA2sB,EAAAF,YAGAz9B,EAAA5T,oBAAA,SAAAsxC,IAEAviD,KAAAqa,SAAA,wBAAA,KACAwK,EAAA5T,oBAAA,SAAAoxC,GACAx9B,EAAA5T,oBAAA,SAAAsxC,GACA19B,EAAA1T,iBAAA,SAAAoxC,KAEAviD,KAAAqa,SAAA,sBAAA,KACAwK,EAAA5T,oBAAA,SAAAoxC,GACAx9B,EAAA1T,iBAAA,SAAAkxC,GACAx9B,EAAA5T,oBAAA,SAAAsxC,KAGArwC,gBAAA9V,EAAAqmD,GACA,GAAAA,IAAAziD,sBAAA5D,WACA,OAEA,MAAAsmD,EAAAtmD,EAAA+G,cACAnD,QAAA0iD,sBACAxkC,OAAAC,KAAAne,QAAA0iD,sBAAA3+C,QAAA4+C,IACA,MAAAC,EAAA5iD,KAAA6G,QAAA67C,WACAE,EAAA3xC,oBAAA0xC,EAAA3iD,QAAA0iD,qBAAAC,MAGA3iD,sBAAA5D,YAAAqmD,EACAziD,QAAA0iD,qBAAA,KACA1iD,KAAA6iD,0BAAAH,GAEAxwC,0BAAAuwC,GACAziD,KAAA8iD,gBAAA,QAAAL,GAEAvwC,0BAAAuwC,GACAziD,KAAA8iD,gBAAA,QAAAL,GAEAvwC,0BAAApV,GACA,MAAAq0B,EAAA4G,EAAAj7B,GACA8lD,EAAA5iD,KAAA6G,KAAAsqB,EAAAkH,YACA0qB,EAAA/iD,KAAAmxB,EAAAkH,cACA,IAAAr4B,sBAAAmxB,EAAAgH,uBAAAyqB,IAAAA,EAAAzxC,iBACA,OAEA,MAAA6xC,GACA90B,OAAAvrB,IACA,MAAAgL,GACAvR,KAAA,SACAmS,OAAAw0C,EACAE,cAAAF,EACA9vC,WAAA8vC,GAEAA,EAAAvuC,QAAA7G,GACA,SAAA7Q,GACAkD,KAAAu4B,EAAAC,WAAAH,cAAA7jB,QAAA7G,IAGAuE,SAAAvP,GACAogD,EAAAl1B,SAAAlrB,EAAAuhB,QAEAhS,YAAAvP,GACAogD,EAAAp0B,YAAAhsB,EAAAuhB,SAGAg/B,EAAA,WACA,MAAAC,KACA,IAAA,IAAA7+C,EAAA,EAAAA,EAAAy+C,EAAAx+C,OAAAD,IAAA,CACA,IAAA8+C,GAAA,EACA,IAAA,IAAAjhB,EAAA,EAAAA,EAAAygB,EAAAr+C,OAAA49B,IACA,GAAAygB,EAAAzgB,KAAA4gB,EAAAz+C,GAAA,CACA8+C,GAAA,EACA,MAGAA,GACAD,EAAAljD,KAAA8iD,EAAAz+C,IAGA,KAAA6+C,EAAA5+C,QACAw+C,EAAAp0B,YAAAw0B,EAAA5rC,UAGAvX,KAAAmxB,EAAAkH,WAAA,cAAA2qB,EACA9kC,OAAAC,KAAA6kC,GAAAj/C,QAAA4+C,IACA,MAAAvrC,EAAA4rC,EAAAL,GACAC,EAAAzxC,iBAAAwxC,EAAAvrC,GACApX,KAAAqa,SAAA,UAAA1X,GAAAigD,EAAA3xC,oBAAA0xC,EAAAvrC,MAEApX,KAAAqa,SAAA,YAAA6oC,GACAljD,KAAAqa,SAAA,UAAA1X,GAAA3C,KAAA2X,WAAA,YAAAurC,IAEAhxC,qBACA6lB,EAAAtb,MAAA1Y,QAAAjH,IACAkD,KAAA6iD,0BAAA/lD,KAGAoV,WACA,IAAArL,EAAA7G,KAAA2a,SAAArO,IACA,IAAAzF,IAAA7G,KAAA2a,SAAA0oC,iBAAArjD,KAAAsjD,wBAAA,CACA,GAAAz8C,EAAA,CACA,MAAA08C,EAAA18C,EAAAo4C,WAAA,GACAp4C,EAAAwG,YACAxG,EAAAwG,WAAAiQ,aAAAimC,EAAA18C,GAEAq6C,EAAAiB,oBAAAt7C,GACAA,EAAA08C,MACA,CACA18C,EAAArK,EAAAC,cAAA,SACA,MAAA+mD,EAAAxjD,KAAA2a,SAAArO,KAAA0D,EAAA3D,cAAArM,KAAA2a,SAAArO,KACAhB,EAAA8N,KAAAoqC,GACAl6C,EAAAX,gBAAA,IAAA3I,KAAA2a,SAAA6e,+BACAluB,EAAA+f,SAEArb,EAAA7D,cAAAtF,EAAApH,EAAAiH,OAAA4E,GACAuP,GAAA7a,KAAA2a,SAAA8oC,OACAC,MAAA,cAGA78C,EAAA88C,SAAA3jD,KAAA2a,SAAAgpC,cAEA,IAAA3jD,KAAA2a,SAAAipC,SACA5zC,EAAApD,aAAA/F,EAAA,UAAA7G,KAAA2a,SAAAipC,cAEAtkD,IAAAU,KAAA2a,SAAA01B,0BACAxpC,EAAAwpC,wBAAArwC,KAAA2a,SAAA01B,yBAEA,MAAAwT,GACA,OACA,QACA,cACA,YAEA,IAAA,IAAAv/C,EAAA,EAAAA,EAAAu/C,EAAAt/C,OAAAD,IAAA,CACA,MAAA8H,EAAAy3C,EAAAv/C,GACAxE,EAAAE,KAAA2a,SAAAvO,QACA,IAAAtM,IACAA,EACAkQ,EAAApD,aAAA/F,EAAAuF,EAAAA,GAEA4D,EAAAnD,gBAAAhG,EAAAuF,GAEAvF,EAAAuF,GAAAtM,GAGA,OAAA+G,EAEAqL,gBAAArL,GACA,GAAA,IAAAA,EAAAi9C,cAAA,IAAAj9C,EAAAi9C,aACA,OAEA,GAAA,IAAAj9C,EAAAqK,WAAA,CACA,IAAA6yC,GAAA,EACA,MAAAC,EAAA,WACAD,GAAA,GAEA/jD,KAAAqa,SAAA,YAAA2pC,GACA,MAAAC,EAAA,WACAF,GACA/jD,KAAAwU,QAAA,cAWA,OARAxU,KAAAqa,SAAA,iBAAA4pC,QACAjkD,KAAAsa,MAAA,WACAta,KAAA2X,WAAA,YAAAqsC,GACAhkD,KAAA2X,WAAA,iBAAAssC,GACAF,GACA/jD,KAAAwU,QAAA,eAKA,MAAA0vC,GAAA,aACAA,EAAAjkD,KAAA,kBACA4G,EAAAqK,YAAA,GACAgzC,EAAAjkD,KAAA,cAEA4G,EAAAqK,YAAA,GACAgzC,EAAAjkD,KAAA,WAEA4G,EAAAqK,YAAA,GACAgzC,EAAAjkD,KAAA,kBAEAD,KAAAsa,MAAA,WACA4pC,EAAAngD,QAAA,SAAA3H,GACA4D,KAAAwU,QAAApY,IACA4D,QAGAkS,aAAAiyC,GACAnkD,KAAAwhD,aAAA2C,EAEAjyC,YACA,OAAAlS,KAAAwhD,aAEAtvC,eAAAw2B,GACA,IACA1oC,KAAAwhD,cAAAxhD,KAAAia,IAAAmqC,UAAA96C,EAAAJ,cACAlJ,KAAAia,IAAAmqC,SAAA1b,GAEA1oC,KAAAia,IAAAyc,YAAAgS,EAEA,MAAA/lC,GACAiC,EAAAjC,EAAA,mCAGAuP,WACA,GAAAlS,KAAAia,IAAA8I,WAAAimB,EAAAA,GAAA1/B,EAAAxB,YAAAwB,EAAAjB,WAAA,IAAArI,KAAAia,IAAAyc,YAAA,CACA,MAAA2tB,EAAA,KACArkD,KAAAia,IAAAyc,YAAA,IACA12B,KAAAia,IAAA8I,WAAAimB,EAAAA,GACAhpC,KAAAwU,QAAA,kBAEAxU,KAAA2X,WAAA,aAAA0sC,KAIA,OADArkD,KAAAqa,SAAA,aAAAgqC,GACAC,IAEA,OAAAtkD,KAAAia,IAAA8I,UAAAuhC,IAEApyC,QACA,OAAAlS,KAAAia,IAAA1P,YAEA2H,SACA,OAAAlS,KAAAia,IAAAzP,aAEA0H,yBACA,KAAA,+BAAAlS,KAAAia,KACA,OAEA,MAAAsqC,EAAA,WACAvkD,KAAAwU,QAAA,oBAAAq8B,cAAA,KAEA2T,EAAA,WACA,2BAAAxkD,KAAAia,KAAA,uBAAAja,KAAAia,IAAAwqC,yBACAzkD,KAAAqhB,aAAA,sBAAAkjC,GACAvkD,KAAAwU,QAAA,oBACAq8B,cAAA,EACA6T,qBAAA,MAIA1kD,KAAAqa,SAAA,wBAAAmqC,GACAxkD,KAAAqa,SAAA,UAAA,KACAra,KAAA2X,WAAA,wBAAA6sC,GACAxkD,KAAA2X,WAAA,sBAAA4sC,KAGAryC,qBACA,GAAA,mBAAAlS,KAAAia,IAAA0qC,sBAAA,CACA,MAAAt9C,EAAAjC,OAAAgC,WAAAhC,OAAAgC,UAAAC,WAAA,GACA,GAAA,UAAAxI,KAAAwI,KAAA,uBAAAxI,KAAAwI,GACA,OAAA,EAGA,OAAA,EAEA6K,kBACA,MAAAkmB,EAAAp4B,KAAAia,IACA,GAAAme,EAAAlN,QAAAkN,EAAA0rB,cAAA1rB,EAAAwsB,cACAthD,EAAA0gB,eAAAhkB,KAAAia,IAAAM,QACAva,KAAA+Q,WAAA,WACAqnB,EAAAxP,QACA,IACAwP,EAAAusB,wBACA,MAAAhiD,GACA3C,KAAAwU,QAAA,kBAAA7R,KAEA,QAEA,IACAy1B,EAAAusB,wBACA,MAAAhiD,GACA3C,KAAAwU,QAAA,kBAAA7R,IAIAuP,iBACAlS,KAAAia,IAAA4qC,2BAIA7kD,KAAAia,IAAA6qC,uBAHA9kD,KAAAwU,QAAA,kBAAA,IAAA1R,MAAA,gCAKAoP,0BACA,OAAAlS,KAAAia,IAAAu2B,0BAEAt+B,IAAA0S,GACA,QAAAtlB,IAAAslB,EACA,OAAA5kB,KAAAia,IAAA2K,IAEA5kB,KAAAyjC,OAAA7e,GAEA1S,QACAgvC,EAAA6D,kBAAA/kD,KAAAia,KAEA/H,aACA,OAAAlS,KAAAu9B,eACAv9B,KAAAu9B,eAAA3Y,IAEA5kB,KAAAia,IAAA2mC,WAEA1uC,YAAAmN,GACArf,KAAAia,IAAAoR,WAAAhM,EAEAnN,aAAA+c,EAAAtE,EAAA1O,GACA,OAAAjc,KAAAo5B,yBAGAp5B,KAAAia,IAAA+qC,aAAA/1B,EAAAtE,EAAA1O,GAFA9B,MAAA6qC,aAAA/1B,EAAAtE,EAAA1O,GAIA/J,sBAAAhT,GACA,IAAAc,KAAAo5B,yBACA,OAAAjf,MAAAqhB,sBAAAt8B,GAEA,MAAAq8B,EAAA/+B,EAAAC,cAAA,SAmBA,OAlBAyC,EAAA+vB,OACAsM,EAAAtM,KAAA/vB,EAAA+vB,MAEA/vB,EAAAyrB,QACA4Q,EAAA5Q,MAAAzrB,EAAAyrB,QAEAzrB,EAAA+c,UAAA/c,EAAA02B,WACA2F,EAAA3F,QAAA12B,EAAA+c,UAAA/c,EAAA02B,SAEA12B,EAAA62B,UACAwF,EAAAxF,QAAA72B,EAAA62B,SAEA72B,EAAA2b,KACA0gB,EAAA1gB,GAAA3b,EAAA2b,IAEA3b,EAAA0lB,MACA2W,EAAA3W,IAAA1lB,EAAA0lB,KAEA2W,EAEArpB,mBAAAhT,EAAAo8B,GACA,MAAAC,EAAAphB,MAAA6K,mBAAA9lB,EAAAo8B,GAIA,OAHAt7B,KAAAo5B,0BACAp5B,KAAA6G,KAAAwjB,YAAAkR,GAEAA,EAEArpB,sBAAAgS,GAEA,GADA/J,MAAAwgB,sBAAAzW,GACAlkB,KAAAo5B,yBAAA,CACA,MAAA1L,EAAA1tB,KAAA8P,GAAA,SACA,IAAAxL,EAAAopB,EAAAnpB,OACA,KAAAD,KACA4f,IAAAwJ,EAAAppB,IAAA4f,IAAAwJ,EAAAppB,GAAA4f,OACAlkB,KAAA6G,KAAAgV,YAAA6R,EAAAppB,KAKA4N,0BACA,GAAA,mBAAAlS,KAAA6G,KAAAo+C,wBACA,OAAAjlD,KAAA6G,KAAAo+C,0BAEA,MAAAC,KAUA,YATA,IAAAllD,KAAA6G,KAAAs+C,8BAAA,IAAAnlD,KAAA6G,KAAAu+C,0BACAF,EAAAG,mBAAArlD,KAAA6G,KAAAs+C,wBACAD,EAAAI,iBAAAtlD,KAAA6G,KAAAu+C,yBAEAhgD,OAAAiN,aAAA,mBAAAjN,OAAAiN,YAAAC,IACA4yC,EAAAK,aAAAngD,OAAAiN,YAAAC,MACAlN,OAAAiN,aAAAjN,OAAAiN,YAAAmzC,QAAA,iBAAApgD,OAAAiN,YAAAmzC,OAAAC,kBACAP,EAAAK,aAAAngD,OAAAmN,KAAAD,MAAAlN,OAAAiN,YAAAmzC,OAAAC,iBAEAP,GA+JA,IAAAnpB,EAiKA,OA7TAklB,EAAAC,EAAA,WAAA,WACA,IAAAlxC,EAAA9I,SACA,OAEA,MAAAkxB,EAAA57B,EAAAC,cAAA,SACAynB,EAAA1nB,EAAAC,cAAA,SAKA,OAJAynB,EAAA+K,KAAA,WACA/K,EAAA0R,QAAA,KACA1R,EAAAyG,MAAA,UACAyN,EAAA/N,YAAAnG,GACAkU,IAEA8oB,EAAA3e,YAAA,WACA,IACA2e,EAAAwE,SAAAjmB,OAAA,GACA,MAAA98B,GACA,OAAA,EAEA,SAAAu+C,EAAAwE,WAAAxE,EAAAwE,SAAA3pB,cAEAmlB,EAAAnlB,YAAA,SAAA3/B,GACA,OAAA8kD,EAAAwE,SAAA3pB,YAAA3/B,IAEA8kD,EAAAjlB,cAAA,SAAAH,EAAA58B,GACA,OAAAgiD,EAAAnlB,YAAAD,EAAA1/B,OAEA8kD,EAAAyE,iBAAA,WACA,IACA,MAAAlmB,EAAAyhB,EAAAwE,SAAAjmB,OAEA,OADAyhB,EAAAwE,SAAAjmB,OAAAA,EAAA,EAAA,GACAA,IAAAyhB,EAAAwE,SAAAjmB,OACA,MAAA98B,GACA,OAAA,IAGAu+C,EAAA0E,cAAA,WACA,IACA,MAAAtmB,EAAA4hB,EAAAwE,SAAApmB,MAOA,OANA4hB,EAAAwE,SAAApmB,OAAAA,EACA4hB,EAAAwE,SAAApmB,MACAtvB,EAAApD,aAAAs0C,EAAAwE,SAAA,QAAA,SAEA11C,EAAAnD,gBAAAq0C,EAAAwE,SAAA,QAAA,SAEApmB,IAAA4hB,EAAAwE,SAAApmB,MACA,MAAA38B,GACA,OAAA,IAGAu+C,EAAA2E,uBAAA,WACA,GAAAv8C,EAAAxB,YAAAwB,EAAAjB,WAAAiB,EAAAhB,eAAA,GACA,OAAA,EAEA,IACA,MAAA8vC,EAAA8I,EAAAwE,SAAAtN,aAEA,OADA8I,EAAAwE,SAAAtN,aAAAA,EAAA,EAAA,GACAA,IAAA8I,EAAAwE,SAAAtN,aACA,MAAAz1C,GACA,OAAA,IAGAu+C,EAAA4E,sBAAA,WACA,IACA,MAAA9pD,EAAA,OAEAkiB,OAAA0P,eAAApxB,EAAAC,cAAA,SAAA,OACAgH,IAAAzH,EACAma,IAAAna,IAEAkiB,OAAA0P,eAAApxB,EAAAC,cAAA,SAAA,OACAgH,IAAAzH,EACAma,IAAAna,IAEAkiB,OAAA0P,eAAApxB,EAAAC,cAAA,SAAA,aACAgH,IAAAzH,EACAma,IAAAna,IAEAkiB,OAAA0P,eAAApxB,EAAAC,cAAA,SAAA,aACAgH,IAAAzH,EACAma,IAAAna,IAEA,MAAA2G,GACA,OAAA,EAEA,OAAA,GAEAu+C,EAAA6E,yBAAA,WACA,OAAAz8C,EAAAJ,eAAAI,EAAAL,QAAAK,EAAAjB,WAEA64C,EAAA8E,0BAAA,WACA,SAAA9E,EAAAwE,WAAAxE,EAAAwE,SAAAO,cAEA/E,EAAAgF,0BAAA,WACA,SAAAhF,EAAAwE,WAAAxE,EAAAwE,SAAA1N,cAEAkJ,EAAArrC,QACA,YACA,UACA,QACA,QACA,UACA,UACA,iBACA,aACA,UACA,iBACA,UACA,UACA,UACA,SACA,QACA,iBACA,aACA,WACA,OACA,QACA,aACA,SACA,kBAIA,wBACA,qBAGA,sBACA,kBAGA,uBACA,2BAGA,oBACA,0BAGA,2BACA,6BAGA,4BACA,8BAGA,4BACA,8BAEA9R,QAAA,UAAAlH,EAAAyI,IACA27C,EAAAC,EAAA7wC,UAAAxT,EAAA,IAAAqkD,EAAA57C,MAAA,KAEA47C,EAAA7wC,UAAAizC,yBAAAh6C,EAAAL,OACAi4C,EAAA7wC,UAAAgsB,0BAAA,EACA6kB,EAAA7wC,UAAAyoB,wBAAA,EACAooB,EAAA7wC,UAAA2oB,0BAAA,EAEAkoB,EAAAiF,iBAAA,WACA78C,EAAAvB,iBAAA,IAAAuB,EAAAnB,aAAAmB,EAAAjB,YACA0zB,EAAAmlB,EAAAwE,UAAAxE,EAAAwE,SAAA/uC,YAAAtG,UAAA0rB,YACAmlB,EAAAwE,SAAA/uC,YAAAtG,UAAA0rB,YAAA,SAAA3/B,GAEA,OAAAA,GADA,4CACAyC,KAAAzC,GACA,QAEA2/B,EAAAn7B,KAAAZ,KAAA5D,MAIA8kD,EAAAkF,mBAAA,WACA,MAAAC,EAAAnF,EAAAwE,SAAA/uC,YAAAtG,UAAA0rB,YAIA,OAHAA,IACAmlB,EAAAwE,SAAA/uC,YAAAtG,UAAA0rB,YAAAA,GAEAsqB,GAEAnF,EAAAiF,mBACAjF,EAAAiB,oBAAA,SAAAt7C,GACA,GAAAA,EAAA,CAMA,IAHAA,EAAAwG,YACAxG,EAAAwG,WAAAwO,YAAAhV,GAEAA,EAAA46C,iBACA56C,EAAAgV,YAAAhV,EAAA4qB,YAEA5qB,EAAAgG,gBAAA,OACA,mBAAAhG,EAAAywB,MACA,WACA,IACAzwB,EAAAywB,OACA,MAAA30B,KAHA,KAQAu+C,EAAA6D,kBAAA,SAAAl+C,GACA,IAAAA,EACA,OAEA,MAAAwS,EAAAxS,EAAAimB,iBAAA,UACA,IAAAxoB,EAAA+U,EAAA9U,OACA,KAAAD,KACAuC,EAAAgV,YAAAxC,EAAA/U,IAEAuC,EAAAgG,gBAAA,OACA,mBAAAhG,EAAAywB,MACA,WACA,IACAzwB,EAAAywB,OACA,MAAA30B,KAHA,KASA,QACA,eACA,WACA,WACA,OACA,eACAoB,QAAA,SAAA+C,GACAo6C,EAAA7wC,UAAAvJ,GAAA,WACA,OAAA9G,KAAAia,IAAAnT,IAAA9G,KAAAia,IAAAgT,aAAAnmB,OAIA,QACA,eACA,WACA,OACA,eACA/C,QAAA,SAAA+C,GACAo6C,EAAA7wC,UAAA,MAAAyJ,EAAAhB,YAAAhS,IAAA,SAAAizC,GACA/5C,KAAAia,IAAAnT,GAAAizC,EACAA,EACA/5C,KAAAia,IAAArN,aAAA9F,EAAAA,GAEA9G,KAAAia,IAAApN,gBAAA/F,OAKA,SACA,cACA,WACA,SACA,SACA,UACA,QACA,UACA,WACA,QACA,eACA,sBACA,0BACA,SACA,eACA,aACA,aACA,cACA,eACA/C,QAAA,SAAA+C,GACAo6C,EAAA7wC,UAAAvJ,GAAA,WACA,OAAA9G,KAAAia,IAAAnT,OAIA,SACA,MACA,SACA,UACA,eACA,sBACA,0BACA,eACA/C,QAAA,SAAA+C,GACAo6C,EAAA7wC,UAAA,MAAAyJ,EAAAhB,YAAAhS,IAAA,SAAAizC,GACA/5C,KAAAia,IAAAnT,GAAAizC,MAIA,QACA,OACA,QACAh2C,QAAA,SAAA+C,GACAo6C,EAAA7wC,UAAAvJ,GAAA,WACA,OAAA9G,KAAAia,IAAAnT,QAGAmX,EAAAue,mBAAA0kB,GACAA,EAAA7jB,uBACA6jB,EAAA7jB,oBAAAtB,YAAA,SAAA3/B,GACA,IACA,OAAA8kD,EAAAwE,SAAA3pB,YAAA3/B,GACA,MAAAuG,GACA,MAAA,KAGAu+C,EAAA7jB,oBAAAL,gBAAA,SAAA1jB,EAAApa,GACA,GAAAoa,EAAAld,KACA,OAAA8kD,EAAA7jB,oBAAAtB,YAAAziB,EAAAld,MACA,GAAAkd,EAAAsL,IAAA,CACA,MAAA2c,EAAAvB,EAAAnO,iBAAAvY,EAAAsL,KACA,OAAAs8B,EAAA7jB,oBAAAtB,qBAAAwF,KAEA,MAAA,IAEA2f,EAAA7jB,oBAAAG,aAAA,SAAAlkB,EAAAkL,EAAAtlB,GACAslB,EAAAif,OAAAnqB,EAAAsL,MAEAs8B,EAAA7jB,oBAAAzhB,QAAA,aAEAslC,EAAAxkB,sBAAAwkB,EAAA7jB,qBACApf,EAAAyf,aAAA,QAAAwjB,GACAA,IAEA7lD,OAAA,0BACA,iCACA,cACA,mBACA,iBACA,cACA,aACA,eACA,kBACA,cACA,uBACA,sBACA,iBACA,qBACA,mBACA,gBACA,yBACA,cACA,wBACA,kBACA,qCACA,iBACA,cACA,oBACA,uBACA,wBACA,oBACA,kBACA,gBACA,iBACA,8BACA,oBACA,oBACA,iBACA,4BACA,kBACA,+BACA,mBACA,iBACA,gBACA,SACAmB,EACAud,EACA9B,EACApC,EACA7F,EACAuG,EACAxE,EACAzI,EACA1E,EACAkV,EACA8I,EACA+V,EACA2tB,EACAriD,EACAif,EACAqjC,EACA9mD,EACA2Z,EACA9V,EACAkjD,EACA58B,EACA3L,EACAggB,EACArF,EACAkJ,EACAD,EACAnY,GAEA,aACA,MAAA+8B,GACA,WACA,QACA,UACA,UACA,UACA,iBACA,aACA,aACA,SACA,eACA,mBAEAC,GACAC,QAAA,UACAC,eAAA,iBACAC,QAAA,UACAC,OAAA,UAEAC,GACA,OACA,SACA,QACA,SACA,QACA,SACA,QAEAC,KACAD,EAAAhjD,QAAAwJ,IACA,MAAAwsC,EAAA,MAAAxsC,EAAA05C,OAAA,QAAA15C,EAAA25C,UAAA,KAAA35C,EACAy5C,EAAAz5C,iBAAAwsC,MAEA,MAAAoN,GACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,KACAC,OAAA,KACAC,KAAA1e,EAAAA,SAEAnnB,UAAA9H,EACA7H,YAAA5F,EAAApN,EAAAob,GAOA,GANAhO,EAAAuO,GAAAvO,EAAAuO,IAAA3b,EAAA2b,iBAAA9I,EAAAF,aACA3S,EAAAO,EAAAiH,OAAAmb,EAAA8lC,eAAAr7C,GAAApN,IACAqc,cAAA,EACArc,EAAAiM,UAAA,EACAjM,EAAA+Y,SAAA,EACA/Y,EAAAsc,qBAAA,GACAtc,EAAA+c,SACA,GAAA,mBAAA3P,EAAAs7C,QAAA,CACA,MAAAA,EAAAt7C,EAAAs7C,QAAA,UACAA,GAAAA,EAAAj7C,eACAzN,EAAA+c,SAAA2rC,EAAAj7C,aAAA,aAEA,CACA,IAAAgnC,EAAArnC,EACA,KAAAqnC,GAAA,IAAAA,EAAAhqC,UAAA,CACA,GAAAqG,EAAA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","file":"../skylark-videojs.js","sourcesContent":["define('skylark-net-http/xhr',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-async/Deferred\",\r\n  \"skylark-langx-emitter/Evented\",\r\n  \"./http\"\r\n],function(skylark,types,objects,arrays,funcs,Deferred,Evented,http){\r\n\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: false,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            traditional : false,\r\n            \r\n            xhrFields : {\r\n                withCredentials : false\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                if (type(options.data) != \"string\") {\r\n                    options.data = param(options.data, options.traditional);\r\n                }\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n        \r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) {\r\n                  value = value();\r\n                }\r\n                if (value == null) {\r\n                  value = \"\";\r\n                }\r\n                this.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n            };\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                if (options.beforeSend) {\r\n                    options.beforeSend.call(this, xhr, options);\r\n                }                \r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = options.contentType || (isFormData ? false : 'application/x-www-form-urlencoded');\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                if (dataType == \"blob\" || dataType == \"arraybuffer\") {\r\n                    xhr.responseType = dataType;\r\n                }\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        //result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(xhr.responseText);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(xhr.responseText) ? null : JSON.parse(xhr.responseText);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = xhr.response; // new Blob([xhr.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n                \r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = value;\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    //xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest'); // del for s02\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn http.Xhr = Xhr;\t\r\n});\ndefine('skylark-videojs/fullscreen-api',[], function () {\n    'use strict';\n    const FullscreenApi = { prefixed: true };\n    const apiMap = [\n        [\n            'requestFullscreen',\n            'exitFullscreen',\n            'fullscreenElement',\n            'fullscreenEnabled',\n            'fullscreenchange',\n            'fullscreenerror',\n            'fullscreen'\n        ],\n        [\n            'webkitRequestFullscreen',\n            'webkitExitFullscreen',\n            'webkitFullscreenElement',\n            'webkitFullscreenEnabled',\n            'webkitfullscreenchange',\n            'webkitfullscreenerror',\n            '-webkit-full-screen'\n        ],\n        [\n            'mozRequestFullScreen',\n            'mozCancelFullScreen',\n            'mozFullScreenElement',\n            'mozFullScreenEnabled',\n            'mozfullscreenchange',\n            'mozfullscreenerror',\n            '-moz-full-screen'\n        ],\n        [\n            'msRequestFullscreen',\n            'msExitFullscreen',\n            'msFullscreenElement',\n            'msFullscreenEnabled',\n            'MSFullscreenChange',\n            'MSFullscreenError',\n            '-ms-fullscreen'\n        ]\n    ];\n    const specApi = apiMap[0];\n    let browserApi;\n    for (let i = 0; i < apiMap.length; i++) {\n        if (apiMap[i][1] in document) {\n            browserApi = apiMap[i];\n            break;\n        }\n    }\n    if (browserApi) {\n        for (let i = 0; i < browserApi.length; i++) {\n            FullscreenApi[specApi[i]] = browserApi[i];\n        }\n        FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n    }\n    return FullscreenApi;\n});\ndefine('skylark-videojs/utils/create-logger',[], function () {\n    'use strict';\n    let history = [];\n    const LogByTypeFactory = (name, log) => (type, level, args) => {\n        const lvl = log.levels[level];\n        const lvlRegExp = new RegExp(`^(${ lvl })$`);\n        if (type !== 'log') {\n            args.unshift(type.toUpperCase() + ':');\n        }\n        args.unshift(name + ':');\n        if (history) {\n            history.push([].concat(args));\n            const splice = history.length - 1000;\n            history.splice(0, splice > 0 ? splice : 0);\n        }\n        if (!window.console) {\n            return;\n        }\n        let fn = window.console[type];\n        if (!fn && type === 'debug') {\n            fn = window.console.info || window.console.log;\n        }\n        if (!fn || !lvl || !lvlRegExp.test(type)) {\n            return;\n        }\n        fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n    };\n    return function createLogger(name) {\n        let level = 'info';\n        let logByType;\n        const log = function (...args) {\n            logByType('log', level, args);\n        };\n        logByType = LogByTypeFactory(name, log);\n        log.createLogger = subname => createLogger(name + ': ' + subname);\n        log.levels = {\n            all: 'debug|log|warn|error',\n            off: '',\n            debug: 'debug|log|warn|error',\n            info: 'log|warn|error',\n            warn: 'warn|error',\n            error: 'error',\n            DEFAULT: level\n        };\n        log.level = lvl => {\n            if (typeof lvl === 'string') {\n                if (!log.levels.hasOwnProperty(lvl)) {\n                    throw new Error(`\"${ lvl }\" in not a valid log level`);\n                }\n                level = lvl;\n            }\n            return level;\n        };\n        log.history = () => history ? [].concat(history) : [];\n        log.history.filter = fname => {\n            return (history || []).filter(historyItem => {\n                return new RegExp(`.*${ fname }.*`).test(historyItem[0]);\n            });\n        };\n        log.history.clear = () => {\n            if (history) {\n                history.length = 0;\n            }\n        };\n        log.history.disable = () => {\n            if (history !== null) {\n                history.length = 0;\n                history = null;\n            }\n        };\n        log.history.enable = () => {\n            if (history === null) {\n                history = [];\n            }\n        };\n        log.error = (...args) => logByType('error', level, args);\n        log.warn = (...args) => logByType('warn', level, args);\n        log.debug = (...args) => logByType('debug', level, args);\n        return log;\n    };\n});\ndefine('skylark-videojs/utils/log',['./create-logger'], function (createLogger) {\n    'use strict';\n    const log = createLogger('VIDEOJS');\n    log.createLogger = createLogger;\n    return log;\n});\ndefine('skylark-videojs/utils/obj',[\n    \"skylark-langx\"\n],function (langx) {\n    'use strict';\n\n    /*\n    const toString = Object.prototype.toString;\n    const keys = function (object) {\n        return isObject(object) ? Object.keys(object) : [];\n    };\n    function each(object, fn) {\n        keys(object).forEach(key => fn(object[key], key));\n    }\n    function reduce(object, fn, initial = 0) {\n        return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n    }\n    function assign(target, ...sources) {\n        if (Object.assign) {\n            return Object.assign(target, ...sources);\n        }\n        sources.forEach(source => {\n            if (!source) {\n                return;\n            }\n            each(source, (value, key) => {\n                target[key] = value;\n            });\n        });\n        return target;\n    }\n    function isObject(value) {\n        return !!value && typeof value === 'object';\n    }\n    function isPlain(value) {\n        return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n    }\n\n    */\n    return {\n        each : function(object,fn) {\n            return langx.each(object,fn,true/*isForEach*/);\n        },\n        reduce: langx.reduce,\n        assign: langx.mixin,\n        isObject: langx.isObject,\n        isPlain: langx.isPlainObject\n    };\n});\ndefine('skylark-videojs/utils/computed-style',[\n    'skylark-langx-globals/window'\n], function (window) {\n    'use strict';\n    function computedStyle(el, prop) {\n        if (!el || !prop) {\n            return '';\n        }\n        if (typeof window.getComputedStyle === 'function') {\n            const computedStyleValue = window.getComputedStyle(el);\n            return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n        }\n        return '';\n    }\n    return computedStyle;\n});\ndefine('skylark-videojs/utils/browser',[\n    \"skylark-langx-globals/window\",\n    \"skylark-langx-globals/document\"\n], function (window,document) {\n    'use strict';\n\n    function isReal() {\n        return document === window.document;\n    }\n\n    const USER_AGENT = window.navigator && window.navigator.userAgent || '';\n    const webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\n    const appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n    const IS_IPOD = /iPod/i.test(USER_AGENT);\n    const IOS_VERSION = function () {\n        const match = USER_AGENT.match(/OS (\\d+)_/i);\n        if (match && match[1]) {\n            return match[1];\n        }\n        return null;\n    }();\n    const IS_ANDROID = /Android/i.test(USER_AGENT);\n    const ANDROID_VERSION = function () {\n        const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n        if (!match) {\n            return null;\n        }\n        const major = match[1] && parseFloat(match[1]);\n        const minor = match[2] && parseFloat(match[2]);\n        if (major && minor) {\n            return parseFloat(match[1] + '.' + match[2]);\n        } else if (major) {\n            return major;\n        }\n        return null;\n    }();\n    const IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n    const IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n    const IS_EDGE = /Edg/i.test(USER_AGENT);\n    const IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n    const CHROME_VERSION = function () {\n        const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n        if (match && match[2]) {\n            return parseFloat(match[2]);\n        }\n        return null;\n    }();\n    const IE_VERSION = function () {\n        const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n        let version = result && parseFloat(result[1]);\n        if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n            version = 11;\n        }\n        return version;\n    }();\n    const IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n    const IS_WINDOWS = /Windows/i.test(USER_AGENT);\n    const TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch));\n    const IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n    const IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n    const IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n    const IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n    return {\n        IS_IPOD: IS_IPOD,\n        IOS_VERSION: IOS_VERSION,\n        IS_ANDROID: IS_ANDROID,\n        ANDROID_VERSION: ANDROID_VERSION,\n        IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n        IS_FIREFOX: IS_FIREFOX,\n        IS_EDGE: IS_EDGE,\n        IS_CHROME: IS_CHROME,\n        CHROME_VERSION: CHROME_VERSION,\n        IE_VERSION: IE_VERSION,\n        IS_SAFARI: IS_SAFARI,\n        IS_WINDOWS: IS_WINDOWS,\n        TOUCH_ENABLED: TOUCH_ENABLED,\n        IS_IPAD: IS_IPAD,\n        IS_IPHONE: IS_IPHONE,\n        IS_IOS: IS_IOS,\n        IS_ANY_SAFARI: IS_ANY_SAFARI,\n\n        isReal\n    };\n});\ndefine('skylark-videojs/utils/dom',[\n    \"skylark-langx-globals/window\",\n    \"skylark-langx-globals/document\",   \n    \"skylark-domx\",\n    '../fullscreen-api',\n    './log',\n    './obj',\n    './computed-style',\n    './browser'\n], function (window,document,domx,fs, log, obj, computedStyle, browser) {\n    'use strict';\n    function isNonBlankString(str) {\n        return typeof str === 'string' && Boolean(str.trim());\n    }\n    function throwIfWhitespace(str) {\n        if (str.indexOf(' ') >= 0) {\n            throw new Error('class has illegal whitespace characters');\n        }\n    }\n    function classRegExp(className) {\n        return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n    }\n\n    function isEl(value) {\n        return obj.isObject(value) && value.nodeType === 1;\n    }\n    function isInFrame() {\n        try {\n            return window.parent !== window.self;\n        } catch (x) {\n            return true;\n        }\n    }\n    function createQuerier(method) {\n        return function (selector, context) {\n            if (!isNonBlankString(selector)) {\n                return document[method](null);\n            }\n            if (isNonBlankString(context)) {\n                context = document.querySelector(context);\n            }\n            const ctx = isEl(context) ? context : document;\n            return ctx[method] && ctx[method](selector);\n        };\n    }\n    function createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n        const el = document.createElement(tagName);\n        Object.getOwnPropertyNames(properties).forEach(function (propName) {\n            const val = properties[propName];\n            if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n                log.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + `createEl(type, properties, attributes). Attempting to set ${ propName } to ${ val }.`);\n                el.setAttribute(propName, val);\n            } else if (propName === 'textContent') {\n                textContent(el, val);\n            } else if (el[propName] !== val || propName === 'tabIndex') {\n                el[propName] = val;\n            }\n        });\n        Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n            el.setAttribute(attrName, attributes[attrName]);\n        });\n        if (content) {\n            appendContent(el, content);\n        }\n        return el;\n    }\n    function textContent(el, text) {\n        if (typeof el.textContent === 'undefined') {\n            el.innerText = text;\n        } else {\n            el.textContent = text;\n        }\n        return el;\n    }\n    function prependTo(child, parent) {\n        if (parent.firstChild) {\n            parent.insertBefore(child, parent.firstChild);\n        } else {\n            parent.appendChild(child);\n        }\n    }\n    function hasClass(element, classToCheck) {\n        throwIfWhitespace(classToCheck);\n        if (element.classList) {\n            return element.classList.contains(classToCheck);\n        }\n        return classRegExp(classToCheck).test(element.className);\n    }\n    function addClass(element, classToAdd) {\n        if (element.classList) {\n            element.classList.add(classToAdd);\n        } else if (!hasClass(element, classToAdd)) {\n            element.className = (element.className + ' ' + classToAdd).trim();\n        }\n        return element;\n    }\n    function removeClass(element, classToRemove) {\n        if (element.classList) {\n            element.classList.remove(classToRemove);\n        } else {\n            throwIfWhitespace(classToRemove);\n            element.className = element.className.split(/\\s+/).filter(function (c) {\n                return c !== classToRemove;\n            }).join(' ');\n        }\n        return element;\n    }\n    function toggleClass(element, classToToggle, predicate) {\n        const has = hasClass(element, classToToggle);\n        if (typeof predicate === 'function') {\n            predicate = predicate(element, classToToggle);\n        }\n        if (typeof predicate !== 'boolean') {\n            predicate = !has;\n        }\n        if (predicate === has) {\n            return;\n        }\n        if (predicate) {\n            addClass(element, classToToggle);\n        } else {\n            removeClass(element, classToToggle);\n        }\n        return element;\n    }\n    function setAttributes(el, attributes) {\n        Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n            const attrValue = attributes[attrName];\n            if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n                el.removeAttribute(attrName);\n            } else {\n                el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n            }\n        });\n    }\n    function getAttributes(tag) {\n        const obj = {};\n        const knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n        if (tag && tag.attributes && tag.attributes.length > 0) {\n            const attrs = tag.attributes;\n            for (let i = attrs.length - 1; i >= 0; i--) {\n                const attrName = attrs[i].name;\n                let attrVal = attrs[i].value;\n                if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n                    attrVal = attrVal !== null ? true : false;\n                }\n                obj[attrName] = attrVal;\n            }\n        }\n        return obj;\n    }\n    function getAttribute(el, attribute) {\n        return el.getAttribute(attribute);\n    }\n    function setAttribute(el, attribute, value) {\n        el.setAttribute(attribute, value);\n    }\n    function removeAttribute(el, attribute) {\n        el.removeAttribute(attribute);\n    }\n    function blockTextSelection() {\n        document.body.focus();\n        document.onselectstart = function () {\n            return false;\n        };\n    }\n    function unblockTextSelection() {\n        document.onselectstart = function () {\n            return true;\n        };\n    }\n    function getBoundingClientRect(el) {\n        if (el && el.getBoundingClientRect && el.parentNode) {\n            const rect = el.getBoundingClientRect();\n            const result = {};\n            [\n                'bottom',\n                'height',\n                'left',\n                'right',\n                'top',\n                'width'\n            ].forEach(k => {\n                if (rect[k] !== undefined) {\n                    result[k] = rect[k];\n                }\n            });\n            if (!result.height) {\n                result.height = parseFloat(computedStyle(el, 'height'));\n            }\n            if (!result.width) {\n                result.width = parseFloat(computedStyle(el, 'width'));\n            }\n            return result;\n        }\n    }\n    function findPosition(el) {\n        if (!el || el && !el.offsetParent) {\n            return {\n                left: 0,\n                top: 0,\n                width: 0,\n                height: 0\n            };\n        }\n        const width = el.offsetWidth;\n        const height = el.offsetHeight;\n        let left = 0;\n        let top = 0;\n        while (el.offsetParent && el !== document[fs.fullscreenElement]) {\n            left += el.offsetLeft;\n            top += el.offsetTop;\n            el = el.offsetParent;\n        }\n        return {\n            left,\n            top,\n            width,\n            height\n        };\n    }\n    function getPointerPosition(el, event) {\n        const translated = {\n            x: 0,\n            y: 0\n        };\n        if (browser.IS_IOS) {\n            let item = el;\n            while (item && item.nodeName.toLowerCase() !== 'html') {\n                const transform = computedStyle(item, 'transform');\n                if (/^matrix/.test(transform)) {\n                    const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n                    translated.x += values[4];\n                    translated.y += values[5];\n                } else if (/^matrix3d/.test(transform)) {\n                    const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n                    translated.x += values[12];\n                    translated.y += values[13];\n                }\n                item = item.parentNode;\n            }\n        }\n        const position = {};\n        const boxTarget = findPosition(event.target);\n        const box = findPosition(el);\n        const boxW = box.width;\n        const boxH = box.height;\n        let offsetY = event.offsetY - (box.top - boxTarget.top);\n        let offsetX = event.offsetX - (box.left - boxTarget.left);\n        if (event.changedTouches) {\n            offsetX = event.changedTouches[0].pageX - box.left;\n            offsetY = event.changedTouches[0].pageY + box.top;\n            if (browser.IS_IOS) {\n                offsetX -= translated.x;\n                offsetY -= translated.y;\n            }\n        }\n        position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n        position.x = Math.max(0, Math.min(1, offsetX / boxW));\n        return position;\n    }\n    function isTextNode(value) {\n        return obj.isObject(value) && value.nodeType === 3;\n    }\n    function emptyEl(el) {\n        while (el.firstChild) {\n            el.removeChild(el.firstChild);\n        }\n        return el;\n    }\n    function normalizeContent(content) {\n        if (typeof content === 'function') {\n            content = content();\n        }\n        return (Array.isArray(content) ? content : [content]).map(value => {\n            if (typeof value === 'function') {\n                value = value();\n            }\n            if (isEl(value) || isTextNode(value)) {\n                return value;\n            }\n            if (typeof value === 'string' && /\\S/.test(value)) {\n                return document.createTextNode(value);\n            }\n        }).filter(value => value);\n    }\n    function appendContent(el, content) {\n        normalizeContent(content).forEach(node => el.appendChild(node));\n        return el;\n    }\n    function insertContent(el, content) {\n        return appendContent(emptyEl(el), content);\n    }\n    function isSingleLeftClick(event) {\n        if (event.button === undefined && event.buttons === undefined) {\n            return true;\n        }\n        if (event.button === 0 && event.buttons === undefined) {\n            return true;\n        }\n        if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n            return true;\n        }\n        if (event.button !== 0 || event.buttons !== 1) {\n            return false;\n        }\n        return true;\n    }\n    const $ = createQuerier('querySelector');\n    const $$ = createQuerier('querySelectorAll');\n    return {\n        isReal: browser.isReal,\n        isEl: domx.noder.isElement,// isEl,\n        isInFrame: domx.noder.isInFrame, //isInFrame,\n        createEl:  function (tagName = 'div', properties = {}, attributes = {}, content) { //createEl,\n            var el  = domx.noder.createElement(tagName,properties,attributes);\n            if (content) {\n                domx.noder.append(el,content)\n            }\n            return el;\n        }, \n        textContent: domx.data.text, //textContent,\n        prependTo: function (child, parent) { //prependTo,\n            domx.noder.prepend(parent,child);\n        },\n        hasClass: domx.styler.hasClass, //hasClass,\n        addClass: domx.styler.addClass,  //addClass,\n        removeClass: domx.styler.removeClass, //removeClass,\n        toggleClass: domx.styler.toogleClass, //toggleClass,\n        setAttributes: domx.data.attr, // setAttributes,\n        getAttributes: getAttributes,\n        getAttribute: domx.data.attr, //getAttribute,\n        setAttribute: domx.data.attr, //setAttribute,\n        removeAttribute: domx.data.removeAttr, //removeAttribute,\n        blockTextSelection: blockTextSelection,\n        unblockTextSelection: unblockTextSelection,\n        getBoundingClientRect: getBoundingClientRect,\n        findPosition: domx.geom.pageRect, //findPosition,\n        getPointerPosition: getPointerPosition,\n        isTextNode: domx.noder.isTextNode,// isTextNode,\n        emptyEl: domx.noder.empty, //emptyEl,\n        normalizeContent: normalizeContent,\n        appendContent: domx.noder.append,//appendContent,\n        insertContent: function(el,content) { //insertContent,\n            domx.noder.empty(el);\n            domx.noder.append(el,content);\n            return el;\n        },\n        isSingleLeftClick: isSingleLeftClick,\n        $: function(selector,context) {\n            context = context || document;\n            return domx.finder.find(context,selector);\n        },\n        $$: function(selector,context) {\n            context = context || document;\n            return domx.finder.findAll(context,selector);\n        }\n    };\n});\ndefine('skylark-videojs/setup',[\n    'skylark-langx-globals/document',\n    './utils/dom'\n], function (document,Dom) {\n    'use strict';\n    let _windowLoaded = false;\n    let videojs;\n    const autoSetup = function () {\n        if (!Dom.isReal() || videojs.options.autoSetup === false) {\n            return;\n        }\n        const vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n        const audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n        const divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n        const mediaEls = vids.concat(audios, divs);\n        if (mediaEls && mediaEls.length > 0) {\n            for (let i = 0, e = mediaEls.length; i < e; i++) {\n                const mediaEl = mediaEls[i];\n                if (mediaEl && mediaEl.getAttribute) {\n                    if (mediaEl.player === undefined) {\n                        const options = mediaEl.getAttribute('data-setup');\n                        if (options !== null) {\n                            videojs(mediaEl);\n                        }\n                    }\n                } else {\n                    autoSetupTimeout(1);\n                    break;\n                }\n            }\n        } else if (!_windowLoaded) {\n            autoSetupTimeout(1);\n        }\n    };\n    function autoSetupTimeout(wait, vjs) {\n        if (vjs) {\n            videojs = vjs;\n        }\n        window.setTimeout(autoSetup, wait);\n    }\n    function setWindowLoaded() {\n        _windowLoaded = true;\n        window.removeEventListener('load', setWindowLoaded);\n    }\n    if (Dom.isReal()) {\n        if (document.readyState === 'complete') {\n            setWindowLoaded();\n        } else {\n            window.addEventListener('load', setWindowLoaded);\n        }\n    }\n    const hasLoaded = function () {\n        return _windowLoaded;\n    };\n    return {\n        autoSetup,\n        autoSetupTimeout,\n        hasLoaded\n    };\n});\ndefine('skylark-videojs/utils/stylesheet',[\n    'skylark-langx-globals/document'\n], function (document) {\n    'use strict';\n    const createStyleElement = function (className) {\n        const style = document.createElement('style');\n        style.className = className;\n        return style;\n    };\n    const setTextContent = function (el, content) {\n        if (el.styleSheet) {\n            el.styleSheet.cssText = content;\n        } else {\n            el.textContent = content;\n        }\n    };\n    return {\n        createStyleElement: createStyleElement,\n        setTextContent: setTextContent\n    };\n});\ndefine('skylark-videojs/utils/guid',[],function () {\n    'use strict';\n    const _initialGuid = 3;\n    let _guid = _initialGuid;\n    function newGUID() {\n        return _guid++;\n    }\n    function resetGuidInTestsOnly() {\n        _guid = _initialGuid;\n    }\n    return {\n        newGUID: newGUID,\n        resetGuidInTestsOnly: resetGuidInTestsOnly\n    };\n});\ndefine('skylark-videojs/utils/dom-data',[\n    './log',\n    './guid'\n], function (log, Guid) {\n    'use strict';\n    let FakeWeakMap;\n    if (!window.WeakMap) {\n        FakeWeakMap = class {\n            constructor() {\n                this.vdata = 'vdata' + Math.floor(window.performance && window.performance.now() || Date.now());\n                this.data = {};\n            }\n            set(key, value) {\n                const access = key[this.vdata] || Guid.newGUID();\n                if (!key[this.vdata]) {\n                    key[this.vdata] = access;\n                }\n                this.data[access] = value;\n                return this;\n            }\n            get(key) {\n                const access = key[this.vdata];\n                if (access) {\n                    return this.data[access];\n                }\n                log('We have no data for this element', key);\n                return undefined;\n            }\n            has(key) {\n                const access = key[this.vdata];\n                return access in this.data;\n            }\n            delete(key) {\n                const access = key[this.vdata];\n                if (access) {\n                    delete this.data[access];\n                    delete key[this.vdata];\n                }\n            }\n        };\n    }\n    return window.WeakMap ? new WeakMap() : new FakeWeakMap();\n});\ndefine('skylark-videojs/utils/events',[\n    'skylark-langx-globals/document',\n    \"skylark-domx\",\n    './dom-data',\n    './guid',\n    './log'\n], function (document, domx, DomData, Guid, log) {\n    'use strict';\n    function _cleanUpEvents(elem, type) {\n        if (!DomData.has(elem)) {\n            return;\n        }\n        const data = DomData.get(elem);\n        if (data.handlers[type].length === 0) {\n            delete data.handlers[type];\n            if (elem.removeEventListener) {\n                elem.removeEventListener(type, data.dispatcher, false);\n            } else if (elem.detachEvent) {\n                elem.detachEvent('on' + type, data.dispatcher);\n            }\n        }\n        if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n            delete data.handlers;\n            delete data.dispatcher;\n            delete data.disabled;\n        }\n        if (Object.getOwnPropertyNames(data).length === 0) {\n            DomData.delete(elem);\n        }\n    }\n    function _handleMultipleEvents(fn, elem, types, callback) {\n        types.forEach(function (type) {\n            fn(elem, type, callback);\n        });\n    }\n    function fixEvent(event) {\n        if (event.fixed_) {\n            return event;\n        }\n        function returnTrue() {\n            return true;\n        }\n        function returnFalse() {\n            return false;\n        }\n        if (!event || !event.isPropagationStopped) {\n            const old = event || window.event;\n            event = {};\n            for (const key in old) {\n                if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n                    if (!(key === 'returnValue' && old.preventDefault)) {\n                        event[key] = old[key];\n                    }\n                }\n            }\n            if (!event.target) {\n                event.target = event.srcElement || document;\n            }\n            if (!event.relatedTarget) {\n                event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n            }\n            event.preventDefault = function () {\n                if (old.preventDefault) {\n                    old.preventDefault();\n                }\n                event.returnValue = false;\n                old.returnValue = false;\n                event.defaultPrevented = true;\n            };\n            event.defaultPrevented = false;\n            event.stopPropagation = function () {\n                if (old.stopPropagation) {\n                    old.stopPropagation();\n                }\n                event.cancelBubble = true;\n                old.cancelBubble = true;\n                event.isPropagationStopped = returnTrue;\n            };\n            event.isPropagationStopped = returnFalse;\n            event.stopImmediatePropagation = function () {\n                if (old.stopImmediatePropagation) {\n                    old.stopImmediatePropagation();\n                }\n                event.isImmediatePropagationStopped = returnTrue;\n                event.stopPropagation();\n            };\n            event.isImmediatePropagationStopped = returnFalse;\n            if (event.clientX !== null && event.clientX !== undefined) {\n                const doc = document.documentElement;\n                const body = document.body;\n                event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n                event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n            }\n            event.which = event.charCode || event.keyCode;\n            if (event.button !== null && event.button !== undefined) {\n                event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n            }\n        }\n        event.fixed_ = true;\n        return event;\n    }\n    let _supportsPassive;\n    const supportsPassive = function () {\n        if (typeof _supportsPassive !== 'boolean') {\n            _supportsPassive = false;\n            try {\n                const opts = Object.defineProperty({}, 'passive', {\n                    get() {\n                        _supportsPassive = true;\n                    }\n                });\n                window.addEventListener('test', null, opts);\n                window.removeEventListener('test', null, opts);\n            } catch (e) {\n            }\n        }\n        return _supportsPassive;\n    };\n    const passiveEvents = [\n        'touchstart',\n        'touchmove'\n    ];\n    function on(elem, type, fn) {\n        if (Array.isArray(type)) {\n            return _handleMultipleEvents(on, elem, type, fn);\n        }\n        if (!DomData.has(elem)) {\n            DomData.set(elem, {});\n        }\n        const data = DomData.get(elem);\n        if (!data.handlers) {\n            data.handlers = {};\n        }\n        if (!data.handlers[type]) {\n            data.handlers[type] = [];\n        }\n        if (!fn.guid) {\n            fn.guid = Guid.newGUID();\n        }\n        data.handlers[type].push(fn);\n        if (!data.dispatcher) {\n            data.disabled = false;\n            data.dispatcher = function (event, hash) {\n                if (data.disabled) {\n                    return;\n                }\n                event = fixEvent(event);\n                const handlers = data.handlers[event.type];\n                if (handlers) {\n                    const handlersCopy = handlers.slice(0);\n                    for (let m = 0, n = handlersCopy.length; m < n; m++) {\n                        if (event.isImmediatePropagationStopped()) {\n                            break;\n                        } else {\n                            try {\n                                handlersCopy[m].call(elem, event, hash);\n                            } catch (e) {\n                                log.error(e);\n                            }\n                        }\n                    }\n                }\n            };\n        }\n        if (data.handlers[type].length === 1) {\n            if (elem.addEventListener) {\n                let options = false;\n                if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n                    options = { passive: true };\n                }\n                elem.addEventListener(type, data.dispatcher, options);\n            } else if (elem.attachEvent) {\n                elem.attachEvent('on' + type, data.dispatcher);\n            }\n        }\n    }\n    function off(elem, type, fn) {\n        if (!DomData.has(elem)) {\n            return;\n        }\n        const data = DomData.get(elem);\n        if (!data.handlers) {\n            return;\n        }\n        if (Array.isArray(type)) {\n            return _handleMultipleEvents(off, elem, type, fn);\n        }\n        const removeType = function (el, t) {\n            data.handlers[t] = [];\n            _cleanUpEvents(el, t);\n        };\n        if (type === undefined) {\n            for (const t in data.handlers) {\n                if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n                    removeType(elem, t);\n                }\n            }\n            return;\n        }\n        const handlers = data.handlers[type];\n        if (!handlers) {\n            return;\n        }\n        if (!fn) {\n            removeType(elem, type);\n            return;\n        }\n        if (fn.guid) {\n            for (let n = 0; n < handlers.length; n++) {\n                if (handlers[n].guid === fn.guid) {\n                    handlers.splice(n--, 1);\n                }\n            }\n        }\n        _cleanUpEvents(elem, type);\n    }\n    function trigger(elem, event, hash) {\n        const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n        const parent = elem.parentNode || elem.ownerDocument;\n        if (typeof event === 'string') {\n            event = {\n                type: event,\n                target: elem\n            };\n        } else if (!event.target) {\n            event.target = elem;\n        }\n        event = fixEvent(event);\n        if (elemData.dispatcher) {\n            elemData.dispatcher.call(elem, event, hash);\n        }\n        if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n            trigger.call(null, parent, event, hash);\n        } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n            if (!DomData.has(event.target)) {\n                DomData.set(event.target, {});\n            }\n            const targetData = DomData.get(event.target);\n            if (event.target[event.type]) {\n                targetData.disabled = true;\n                if (typeof event.target[event.type] === 'function') {\n                    event.target[event.type]();\n                }\n                targetData.disabled = false;\n            }\n        }\n        return !event.defaultPrevented;\n    }\n    function one(elem, type, fn) {\n        if (Array.isArray(type)) {\n            return _handleMultipleEvents(one, elem, type, fn);\n        }\n        const func = function () {\n            off(elem, type, func);\n            fn.apply(this, arguments);\n        };\n        func.guid = fn.guid = fn.guid || Guid.newGUID();\n        on(elem, type, func);\n    }\n    function any(elem, type, fn) {\n        const func = function () {\n            off(elem, type, func);\n            fn.apply(this, arguments);\n        };\n        func.guid = fn.guid = fn.guid || Guid.newGUID();\n        on(elem, type, func);\n    }\n    return {\n        fixEvent: fixEvent,\n        on: domx.eventer.on, //on,\n        off: domx.eventer.off, //off,\n        trigger: domx.eventer.trigger, //trigger,\n        one: domx.eventer.one, //one,\n        any: domx.eventer.one //any\n    };\n});\ndefine('skylark-videojs/utils/fn',[\n    './guid'\n], function (GUID) {\n    'use strict';\n    const UPDATE_REFRESH_INTERVAL = 30;\n    const bind = function (context, fn, uid) {\n        if (!fn.guid) {\n            fn.guid = GUID.newGUID();\n        }\n        const bound = fn.bind(context);\n        bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n        return bound;\n    };\n    const throttle = function (fn, wait) {\n        let last = window.performance.now();\n        const throttled = function (...args) {\n            const now = window.performance.now();\n            if (now - last >= wait) {\n                fn(...args);\n                last = now;\n            }\n        };\n        return throttled;\n    };\n    const debounce = function (func, wait, immediate, context = window) {\n        let timeout;\n        const cancel = () => {\n            context.clearTimeout(timeout);\n            timeout = null;\n        };\n        const debounced = function () {\n            const self = this;\n            const args = arguments;\n            let later = function () {\n                timeout = null;\n                later = null;\n                if (!immediate) {\n                    func.apply(self, args);\n                }\n            };\n            if (!timeout && immediate) {\n                func.apply(self, args);\n            }\n            context.clearTimeout(timeout);\n            timeout = context.setTimeout(later, wait);\n        };\n        debounced.cancel = cancel;\n        return debounced;\n    };\n    return {\n        UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n        bind: bind,\n        throttle: throttle,\n        debounce: debounce\n    };\n});\ndefine('skylark-videojs/event-target',[\n    \"skylark-langx-events/Emitter\",\n    './utils/events'\n], function (Emitter,Events) {\n    'use strict';\n\n    /*\n    const EventTarget = function () {\n    };\n    EventTarget.prototype.allowedEvents_ = {};\n    EventTarget.prototype.on = function (type, fn) {\n        const ael = this.addEventListener;\n        this.addEventListener = () => {\n        };\n        Events.on(this, type, fn);\n        this.addEventListener = ael;\n    };\n    EventTarget.prototype.addEventListener = EventTarget.prototype.on;\n    EventTarget.prototype.off = function (type, fn) {\n        Events.off(this, type, fn);\n    };\n    EventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n    EventTarget.prototype.one = function (type, fn) {\n        const ael = this.addEventListener;\n        this.addEventListener = () => {\n        };\n        Events.one(this, type, fn);\n        this.addEventListener = ael;\n    };\n    EventTarget.prototype.any = function (type, fn) {\n        const ael = this.addEventListener;\n        this.addEventListener = () => {\n        };\n        Events.any(this, type, fn);\n        this.addEventListener = ael;\n    };\n    EventTarget.prototype.trigger = function (event) {\n        const type = event.type || event;\n        if (typeof event === 'string') {\n            event = { type };\n        }\n        event = Events.fixEvent(event);\n        if (this.allowedEvents_[type] && this['on' + type]) {\n            this['on' + type](event);\n        }\n        Events.trigger(this, event);\n    };\n    EventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n    */\n\n    var EventTarget = Emitter.inherit({});\n    EventTarget.prototype.addEventListener = EventTarget.prototype.on;\n    EventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n    EventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n    EventTarget.prototype.any = EventTarget.prototype.one;\n\n    let EVENT_MAP;\n    EventTarget.prototype.queueTrigger = function (event) {\n        if (!EVENT_MAP) {\n            EVENT_MAP = new Map();\n        }\n        const type = event.type || event;\n        let map = EVENT_MAP.get(this);\n        if (!map) {\n            map = new Map();\n            EVENT_MAP.set(this, map);\n        }\n        const oldTimeout = map.get(type);\n        map.delete(type);\n        window.clearTimeout(oldTimeout);\n        const timeout = window.setTimeout(() => {\n            if (map.size === 0) {\n                map = null;\n                EVENT_MAP.delete(this);\n            }\n            this.trigger(event);\n        }, 0);\n        map.set(type, timeout);\n    };\n\n    return EventTarget;\n});\ndefine('skylark-videojs/mixins/evented',[\n    '../utils/dom',\n    '../utils/events',\n    '../utils/fn',\n    '../utils/obj',\n    '../event-target',\n    '../utils/log'\n], function (Dom, Events, Fn, Obj, EventTarget, log) {\n    'use strict';\n    const objName = obj => {\n        if (typeof obj.name === 'function') {\n            return obj.name();\n        }\n        if (typeof obj.name === 'string') {\n            return obj.name;\n        }\n        if (obj.name_) {\n            return obj.name_;\n        }\n        if (obj.constructor && obj.constructor.name) {\n            return obj.constructor.name;\n        }\n        return typeof obj;\n    };\n    const isEvented = object => object instanceof EventTarget || !!object.eventBusEl_ && [\n        'on',\n        'one',\n        'off',\n        'trigger'\n    ].every(k => typeof object[k] === 'function');\n    const addEventedCallback = (target, callback) => {\n        if (isEvented(target)) {\n            callback();\n        } else {\n            if (!target.eventedCallbacks) {\n                target.eventedCallbacks = [];\n            }\n            target.eventedCallbacks.push(callback);\n        }\n    };\n    const isValidEventType = type => typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n    const validateTarget = (target, obj, fnName) => {\n        if (!target || !target.nodeName && !isEvented(target)) {\n            throw new Error(`Invalid target for ${ objName(obj) }#${ fnName }; must be a DOM node or evented object.`);\n        }\n    };\n    const validateEventType = (type, obj, fnName) => {\n        if (!isValidEventType(type)) {\n            throw new Error(`Invalid event type for ${ objName(obj) }#${ fnName }; must be a non-empty string or array.`);\n        }\n    };\n    const validateListener = (listener, obj, fnName) => {\n        if (typeof listener !== 'function') {\n            throw new Error(`Invalid listener for ${ objName(obj) }#${ fnName }; must be a function.`);\n        }\n    };\n    const normalizeListenArgs = (self, args, fnName) => {\n        const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n        let target;\n        let type;\n        let listener;\n        if (isTargetingSelf) {\n            target = self.eventBusEl_;\n            if (args.length >= 3) {\n                args.shift();\n            }\n            [type, listener] = args;\n        } else {\n            [target, type, listener] = args;\n        }\n        validateTarget(target, self, fnName);\n        validateEventType(type, self, fnName);\n        validateListener(listener, self, fnName);\n        listener = Fn.bind(self, listener);\n        return {\n            isTargetingSelf,\n            target,\n            type,\n            listener\n        };\n    };\n    const listen = (target, method, type, listener) => {\n        validateTarget(target, target, method);\n        if (target.nodeName) {\n            Events[method](target, type, listener);\n        } else {\n            target[method](type, listener);\n        }\n    };\n    const EventedMixin = {\n        on(...args) {\n            const {isTargetingSelf, target, type, listener} = normalizeListenArgs(this, args, 'on');\n            listen(target, 'on', type, listener);\n            if (!isTargetingSelf) {\n                const removeListenerOnDispose = () => this.unlistenTo(target, type, listener);\n                removeListenerOnDispose.guid = listener.guid;\n                const removeRemoverOnTargetDispose = () => this.unlistenTo('dispose', removeListenerOnDispose);\n                removeRemoverOnTargetDispose.guid = listener.guid;\n                listen(this, 'on', 'dispose', removeListenerOnDispose);\n                listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n            }\n        },\n        one(...args) {\n            const {isTargetingSelf, target, type, listener} = normalizeListenArgs(this, args, 'one');\n            if (isTargetingSelf) {\n                listen(target, 'one', type, listener);\n            } else {\n                const wrapper = (...largs) => {\n                    this.unlistenTo(target, type, wrapper);\n                    listener.apply(null, largs);\n                };\n                wrapper.guid = listener.guid;\n                listen(target, 'one', type, wrapper);\n            }\n        },\n        any(...args) {\n            const {isTargetingSelf, target, type, listener} = normalizeListenArgs(this, args, 'any');\n            if (isTargetingSelf) {\n                listen(target, 'any', type, listener);\n            } else {\n                const wrapper = (...largs) => {\n                    this.unlistenTo(target, type, wrapper);\n                    listener.apply(null, largs);\n                };\n                wrapper.guid = listener.guid;\n                listen(target, 'any', type, wrapper);\n            }\n        },\n        off(targetOrType, typeOrListener, listener) {\n            if (!targetOrType || isValidEventType(targetOrType)) {\n                Events.off(this.eventBusEl_, targetOrType, typeOrListener);\n            } else {\n                const target = targetOrType;\n                const type = typeOrListener;\n                validateTarget(target, this, 'off');\n                validateEventType(type, this, 'off');\n                validateListener(listener, this, 'off');\n                listener = Fn.bind(this, listener);\n                this.unlistenTo('dispose', listener);\n                if (target.nodeName) {\n                    Events.off(target, type, listener);\n                    Events.off(target, 'dispose', listener);\n                } else if (isEvented(target)) {\n                    target.off(type, listener);\n                    target.off('dispose', listener);\n                }\n            }\n        },\n        trigger(event, hash) {\n            validateTarget(this.eventBusEl_, this, 'trigger');\n            const type = event && typeof event !== 'string' ? event.type : event;\n            if (!isValidEventType(type)) {\n                const error = `Invalid event type for ${ objName(this) }#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.';\n                if (event) {\n                    (this.log || log).error(error);\n                } else {\n                    throw new Error(error);\n                }\n            }\n            return Events.trigger(this.eventBusEl_, event, hash);\n        }\n    };\n    function evented(target, options = {}) {\n        const {eventBusKey} = options;\n        if (eventBusKey) {\n            if (!target[eventBusKey].nodeName) {\n                throw new Error(`The eventBusKey \"${ eventBusKey }\" does not refer to an element.`);\n            }\n            target.eventBusEl_ = target[eventBusKey];\n        } else {\n            target.eventBusEl_ = Dom.createEl('span', { className: 'vjs-event-bus' });\n        }\n        Obj.assign(target, EventedMixin);\n        if (target.eventedCallbacks) {\n            target.eventedCallbacks.forEach(callback => {\n                callback();\n            });\n        }\n        target.on('dispose', () => {\n            target.off();\n            window.setTimeout(() => {\n                target.eventBusEl_ = null;\n            }, 0);\n        });\n        return target;\n    }\n\n    evented.isEvented = isEvented;\n    evented.addEventedCallback = addEventedCallback;\n\n    return evented;\n    \n});\ndefine('skylark-videojs/mixins/stateful',[\n    './evented',\n    '../utils/obj'\n], function (evented, Obj) {\n    'use strict';\n    const StatefulMixin = {\n        state: {},\n        setState(stateUpdates) {\n            if (typeof stateUpdates === 'function') {\n                stateUpdates = stateUpdates();\n            }\n            let changes;\n            Obj.each(stateUpdates, (value, key) => {\n                if (this.state[key] !== value) {\n                    changes = changes || {};\n                    changes[key] = {\n                        from: this.state[key],\n                        to: value\n                    };\n                }\n                this.state[key] = value;\n            });\n            if (changes && evented.isEvented(this)) {\n                this.trigger({\n                    changes,\n                    type: 'statechanged'\n                });\n            }\n            return changes;\n        }\n    };\n    function stateful(target, defaultState) {\n        Obj.assign(target, StatefulMixin);\n        target.state = Obj.assign({}, target.state, defaultState);\n        if (typeof target.handleStateChanged === 'function' && evented.isEvented(target)) {\n            target.on('statechanged', target.handleStateChanged);\n        }\n        return target;\n    }\n    return stateful;\n});\ndefine('skylark-videojs/utils/string-cases',[],function () {\n    'use strict';\n    const toLowerCase = function (string) {\n        if (typeof string !== 'string') {\n            return string;\n        }\n        return string.replace(/./, w => w.toLowerCase());\n    };\n    const toTitleCase = function (string) {\n        if (typeof string !== 'string') {\n            return string;\n        }\n        return string.replace(/./, w => w.toUpperCase());\n    };\n    const titleCaseEquals = function (str1, str2) {\n        return toTitleCase(str1) === toTitleCase(str2);\n    };\n    return {\n        toLowerCase: toLowerCase,\n        toTitleCase: toTitleCase,\n        titleCaseEquals: titleCaseEquals\n    };\n});\ndefine('skylark-videojs/utils/merge-options',['./obj'], function (obj) {\n    'use strict';\n    function mergeOptions(...sources) {\n        const result = {};\n        sources.forEach(source => {\n            if (!source) {\n                return;\n            }\n            obj.each(source, (value, key) => {\n                if (!obj.isPlain(value)) {\n                    result[key] = value;\n                    return;\n                }\n                if (!obj.isPlain(result[key])) {\n                    result[key] = {};\n                }\n                result[key] = mergeOptions(result[key], value);\n            });\n        });\n        return result;\n    }\n    return mergeOptions;\n});\ndefine('skylark-videojs/utils/map',[], function () {\n    'use strict';\n    class MapSham {\n        constructor() {\n            this.map_ = {};\n        }\n        has(key) {\n            return key in this.map_;\n        }\n        delete(key) {\n            const has = this.has(key);\n            delete this.map_[key];\n            return has;\n        }\n        set(key, value) {\n            this.map_[key] = value;\n            return this;\n        }\n        forEach(callback, thisArg) {\n            for (const key in this.map_) {\n                callback.call(thisArg, this.map_[key], key, this);\n            }\n        }\n    }\n    return window.Map ? window.Map : MapSham;\n});\ndefine('skylark-videojs/utils/set',[], function () {\n    'use strict';\n    class SetSham {\n        constructor() {\n            this.set_ = {};\n        }\n        has(key) {\n            return key in this.set_;\n        }\n        delete(key) {\n            const has = this.has(key);\n            delete this.set_[key];\n            return has;\n        }\n        add(key) {\n            this.set_[key] = 1;\n            return this;\n        }\n        forEach(callback, thisArg) {\n            for (const key in this.set_) {\n                callback.call(thisArg, key, key, this);\n            }\n        }\n    }\n    return window.Set ? window.Set : SetSham;\n});\ndefine('skylark-videojs/component',[\n    \"skylark-langx\",\n    \"skylark-domx-eventer\",\n    \"skylark-widgets-base/Widget\",\n    './mixins/evented',\n    './mixins/stateful',\n    './utils/dom',\n    './utils/dom-data',\n    './utils/fn',\n    './utils/guid',\n    './utils/string-cases',\n    './utils/merge-options',\n    './utils/computed-style',\n    './utils/map',\n    './utils/set'\n], function (langx,eventer,Widget,evented, stateful, Dom, DomData, Fn, Guid, stringCases, mergeOptions, computedStyle, Map, Set) {\n    'use strict';\n    class Component extends Widget {\n        on(events, selector, data, callback, ctx, /*used internally*/ one) {\n            if (this.el_ && eventer.isNativeEvent(events)) {\n                eventer.on(this.el_,events,selector,data,callback,ctx,one);\n            } else {\n                super.on(events, selector, data, callback, ctx,  one);\n            }\n        }   \n\n        off(events, callback) {\n            if (this.el_ && eventer.isNativeEvent(events)) {\n                eventer.off(this.el_,events,callback);\n            } else {\n                super.off(events,callback);\n            }\n        }\n\n        listenTo (obj, event, callback, /*used internally*/ one) {\n            if (langx.isString(obj) || langx.isArray(obj)) {\n                one = callback;\n                callback = event;\n                event = obj;\n                if (this.el_ && eventer.isNativeEvent(event)) {\n                    eventer.on(this.el_,event,callback,this,one);\n                } else {\n                    this.on(event,callback,this,one);\n                }\n            } else {\n                if (obj.nodeType) {\n                    eventer.on(obj,event,callback,this,one)\n                } else {\n                    super.listenTo(obj,event,callback,one)\n                }                \n            }\n        }\n\n        unlistenTo(obj, event, callback) {\n            if (langx.isString(obj) || langx.isArray(obj)) {\n                callback = event;\n                event = obj;\n                if (this.el_ && eventer.isNativeEvent(event)) {\n                    eventer.off(this.el_,event,callback);\n                } else {\n                    this.off(event,callback);                   \n                }\n            } else {\n                if (obj.nodeType) {\n                    eventer.off(obj,event,callback)\n                } else {\n                    super.unlistenTo(obj,event,callback)\n                }\n            }\n        }\n\n        _create() {\n\n        }\n\n\n        _construct(player, options, ready) {\n            /*\n            var el;\n            if (options.el) {\n               el = options.el;\n            } else if (options.createEl !== false) {\n                el = this.createEl();\n            }\n            super(el);\n            */\n\n            if (!player && this.play) {\n                this.player_ = player = this;\n            } else {\n                this.player_ = player;\n            }\n            this.isDisposed_ = false;\n            this.parentComponent_ = null;\n            this.options_ = mergeOptions({}, this.options_);\n            options = this.options_ = mergeOptions(this.options_, options);\n            this.id_ = options.id || options.el && options.el.id;\n            if (!this.id_) {\n                const id = player && player.id && player.id() || 'no_player';\n                this.id_ = `${ id }_component_${ Guid.newGUID() }`;\n            }\n            this.name_ = options.name || null;\n            if (options.el) {\n               this.el_ = options.el;\n            } else if (options.createEl !== false) {\n                this.el_ = this.createEl();\n            }\n            //this.el_ = this._elm;\n\n            if (options.evented !== false) {\n                ///evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n                this.handleLanguagechange = this.handleLanguagechange.bind(this);\n                ///this.listenTo(this.player_, 'languagechange', this.handleLanguagechange);\n                this.listenTo(this.player_, 'languagechange', this.handleLanguagechange);\n            }\n\n\n            stateful(this, this.constructor.defaultState);\n            this.children_ = [];\n            this.childIndex_ = {};\n            this.childNameIndex_ = {};\n            this.setTimeoutIds_ = new Set();\n            this.setIntervalIds_ = new Set();\n            this.rafIds_ = new Set();\n            this.namedRafs_ = new Map();\n            this.clearingTimersOnDispose_ = false;\n            if (options.initChildren !== false) {\n                this.initChildren();\n            }\n            this.ready(ready);\n            if (options.reportTouchActivity !== false) {\n                this.enableTouchActivity();\n            }\n        }\n        dispose() {\n            if (this.isDisposed_) {\n                return;\n            }\n            if (this.readyQueue_) {\n                this.readyQueue_.length = 0;\n            }\n            this.trigger({\n                type: 'dispose',\n                bubbles: false\n            });\n            this.isDisposed_ = true;\n            if (this.children_) {\n                for (let i = this.children_.length - 1; i >= 0; i--) {\n                    if (this.children_[i].dispose) {\n                        this.children_[i].dispose();\n                    }\n                }\n            }\n            this.children_ = null;\n            this.childIndex_ = null;\n            this.childNameIndex_ = null;\n            this.parentComponent_ = null;\n            if (this.el_) {\n                if (this.el_.parentNode) {\n                    this.el_.parentNode.removeChild(this.el_);\n                }\n                ///if (DomData.has(this.el_)) {\n                ///    DomData.delete(this.el_);\n                ///}\n                eventer.clear(this.el_);\n                this.el_ = null;\n            }\n            this.player_ = null;\n        }\n        isDisposed() {\n            return Boolean(this.isDisposed_);\n        }\n        player() {\n            return this.player_;\n        }\n        options(obj) {\n            if (!obj) {\n                return this.options_;\n            }\n            this.options_ = mergeOptions(this.options_, obj);\n            return this.options_;\n        }\n        el() {\n            return this.el_;\n        }\n        createEl(tagName, properties, attributes) {\n            return Dom.createEl(tagName, properties, attributes);\n        }\n        localize(string, tokens, defaultValue = string) {\n            const code = this.player_.language && this.player_.language();\n            const languages = this.player_.languages && this.player_.languages();\n            const language = languages && languages[code];\n            const primaryCode = code && code.split('-')[0];\n            const primaryLang = languages && languages[primaryCode];\n            let localizedString = defaultValue;\n            if (language && language[string]) {\n                localizedString = language[string];\n            } else if (primaryLang && primaryLang[string]) {\n                localizedString = primaryLang[string];\n            }\n            if (tokens) {\n                localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n                    const value = tokens[index - 1];\n                    let ret = value;\n                    if (typeof value === 'undefined') {\n                        ret = match;\n                    }\n                    return ret;\n                });\n            }\n            return localizedString;\n        }\n        handleLanguagechange() {\n        }\n        contentEl() {\n            return this.contentEl_ || this.el_;\n        }\n        id() {\n            return this.id_;\n        }\n        name() {\n            return this.name_;\n        }\n        children() {\n            return this.children_;\n        }\n        getChildById(id) {\n            return this.childIndex_[id];\n        }\n        getChild(name) {\n            if (!name) {\n                return;\n            }\n            return this.childNameIndex_[name];\n        }\n        getDescendant(...names) {\n            names = names.reduce((acc, n) => acc.concat(n), []);\n            let currentChild = this;\n            for (let i = 0; i < names.length; i++) {\n                currentChild = currentChild.getChild(names[i]);\n                if (!currentChild || !currentChild.getChild) {\n                    return;\n                }\n            }\n            return currentChild;\n        }\n        addChild(child, options = {}, index = this.children_.length) {\n            let component;\n            let componentName;\n            if (typeof child === 'string') {\n                componentName = stringCases.toTitleCase(child);\n                const componentClassName = options.componentClass || componentName;\n                options.name = componentName;\n                const ComponentClass = Component.getComponent(componentClassName);\n                if (!ComponentClass) {\n                    throw new Error(`Component ${ componentClassName } does not exist`);\n                }\n                if (typeof ComponentClass !== 'function') {\n                    return null;\n                }\n                component = new ComponentClass(this.player_ || this, options);\n            } else {\n                component = child;\n            }\n            if (component.parentComponent_) {\n                component.parentComponent_.removeChild(component);\n            }\n            this.children_.splice(index, 0, component);\n            component.parentComponent_ = this;\n            if (typeof component.id === 'function') {\n                this.childIndex_[component.id()] = component;\n            }\n            componentName = componentName || component.name && stringCases.toTitleCase(component.name());\n            if (componentName) {\n                this.childNameIndex_[componentName] = component;\n                this.childNameIndex_[stringCases.toLowerCase(componentName)] = component;\n            }\n            if (typeof component.el === 'function' && component.el()) {\n                let refNode = null;\n                if (this.children_[index + 1]) {\n                    if (this.children_[index + 1].el_) {\n                        refNode = this.children_[index + 1].el_;\n                    } else if (Dom.isEl(this.children_[index + 1])) {\n                        refNode = this.children_[index + 1];\n                    }\n                }\n                this.contentEl().insertBefore(component.el(), refNode);\n            }\n            return component;\n        }\n        removeChild(component) {\n            if (typeof component === 'string') {\n                component = this.getChild(component);\n            }\n            if (!component || !this.children_) {\n                return;\n            }\n            let childFound = false;\n            for (let i = this.children_.length - 1; i >= 0; i--) {\n                if (this.children_[i] === component) {\n                    childFound = true;\n                    this.children_.splice(i, 1);\n                    break;\n                }\n            }\n            if (!childFound) {\n                return;\n            }\n            component.parentComponent_ = null;\n            this.childIndex_[component.id()] = null;\n            this.childNameIndex_[stringCases.toTitleCase(component.name())] = null;\n            this.childNameIndex_[stringCases.toLowerCase(component.name())] = null;\n            const compEl = component.el();\n            if (compEl && compEl.parentNode === this.contentEl()) {\n                this.contentEl().removeChild(component.el());\n            }\n        }\n        initChildren() {\n            const children = this.options_.children;\n            if (children) {\n                const parentOptions = this.options_;\n                const handleAdd = child => {\n                    const name = child.name;\n                    let opts = child.opts;\n                    if (parentOptions[name] !== undefined) {\n                        opts = parentOptions[name];\n                    }\n                    if (opts === false) {\n                        return;\n                    }\n                    if (opts === true) {\n                        opts = {};\n                    }\n                    opts.playerOptions = this.options_.playerOptions;\n                    const newChild = this.addChild(name, opts);\n                    if (newChild) {\n                        this[name] = newChild;\n                    }\n                };\n                let workingChildren;\n                const Tech = Component.getComponent('Tech');\n                if (Array.isArray(children)) {\n                    workingChildren = children;\n                } else {\n                    workingChildren = Object.keys(children);\n                }\n                workingChildren.concat(Object.keys(this.options_).filter(function (child) {\n                    return !workingChildren.some(function (wchild) {\n                        if (typeof wchild === 'string') {\n                            return child === wchild;\n                        }\n                        return child === wchild.name;\n                    });\n                })).map(child => {\n                    let name;\n                    let opts;\n                    if (typeof child === 'string') {\n                        name = child;\n                        opts = children[name] || this.options_[name] || {};\n                    } else {\n                        name = child.name;\n                        opts = child;\n                    }\n                    return {\n                        name,\n                        opts\n                    };\n                }).filter(child => {\n                    const c = Component.getComponent(child.opts.componentClass || stringCases.toTitleCase(child.name));\n                    return c && !Tech.isTech(c);\n                }).forEach(handleAdd);\n            }\n        }\n        buildCSSClass() {\n            return '';\n        }\n        ready(fn, sync = false) {\n            if (!fn) {\n                return;\n            }\n            if (!this.isReady_) {\n                this.readyQueue_ = this.readyQueue_ || [];\n                this.readyQueue_.push(fn);\n                return;\n            }\n            if (sync) {\n                fn.call(this);\n            } else {\n                this.setTimeout(fn, 1);\n            }\n        }\n        triggerReady() {\n            this.isReady_ = true;\n            this.setTimeout(function () {\n                const readyQueue = this.readyQueue_;\n                this.readyQueue_ = [];\n                if (readyQueue && readyQueue.length > 0) {\n                    readyQueue.forEach(function (fn) {\n                        fn.call(this);\n                    }, this);\n                }\n                this.trigger('ready');\n            }, 1);\n        }\n        $(selector, context) {\n            return Dom.$(selector, context || this.contentEl());\n        }\n        $$(selector, context) {\n            return Dom.$$(selector, context || this.contentEl());\n        }\n        hasClass(classToCheck) {\n            return Dom.hasClass(this.el_, classToCheck);\n        }\n        addClass(classToAdd) {\n            Dom.addClass(this.el_, classToAdd);\n        }\n        removeClass(classToRemove) {\n            Dom.removeClass(this.el_, classToRemove);\n        }\n        toggleClass(classToToggle, predicate) {\n            Dom.toggleClass(this.el_, classToToggle, predicate);\n        }\n        show() {\n            this.removeClass('vjs-hidden');\n        }\n        hide() {\n            this.addClass('vjs-hidden');\n        }\n        lockShowing() {\n            this.addClass('vjs-lock-showing');\n        }\n        unlockShowing() {\n            this.removeClass('vjs-lock-showing');\n        }\n        getAttribute(attribute) {\n            return Dom.getAttribute(this.el_, attribute);\n        }\n        setAttribute(attribute, value) {\n            Dom.setAttribute(this.el_, attribute, value);\n        }\n        removeAttribute(attribute) {\n            Dom.removeAttribute(this.el_, attribute);\n        }\n        width(num, skipListeners) {\n            return this.dimension('width', num, skipListeners);\n        }\n        height(num, skipListeners) {\n            return this.dimension('height', num, skipListeners);\n        }\n        dimensions(width, height) {\n            this.width(width, true);\n            this.height(height);\n        }\n        dimension(widthOrHeight, num, skipListeners) {\n            if (num !== undefined) {\n                if (num === null || num !== num) {\n                    num = 0;\n                }\n                if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n                    this.el_.style[widthOrHeight] = num;\n                } else if (num === 'auto') {\n                    this.el_.style[widthOrHeight] = '';\n                } else {\n                    this.el_.style[widthOrHeight] = num + 'px';\n                }\n                if (!skipListeners) {\n                    this.trigger('componentresize');\n                }\n                return;\n            }\n            if (!this.el_) {\n                return 0;\n            }\n            const val = this.el_.style[widthOrHeight];\n            const pxIndex = val.indexOf('px');\n            if (pxIndex !== -1) {\n                return parseInt(val.slice(0, pxIndex), 10);\n            }\n            return parseInt(this.el_['offset' + stringCases.toTitleCase(widthOrHeight)], 10);\n        }\n        currentDimension(widthOrHeight) {\n            let computedWidthOrHeight = 0;\n            if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n                throw new Error('currentDimension only accepts width or height value');\n            }\n            computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n            computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n            if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n                const rule = `offset${ stringCases.toTitleCase(widthOrHeight) }`;\n                computedWidthOrHeight = this.el_[rule];\n            }\n            return computedWidthOrHeight;\n        }\n        currentDimensions() {\n            return {\n                width: this.currentDimension('width'),\n                height: this.currentDimension('height')\n            };\n        }\n        currentWidth() {\n            return this.currentDimension('width');\n        }\n        currentHeight() {\n            return this.currentDimension('height');\n        }\n        focus() {\n            this.el_.focus();\n        }\n        blur() {\n            this.el_.blur();\n        }\n        handleKeyDown(event) {\n            if (this.player_) {\n                event.stopPropagation();\n                this.player_.handleKeyDown(event);\n            }\n        }\n        handleKeyPress(event) {\n            this.handleKeyDown(event);\n        }\n        emitTapEvents() {\n            let touchStart = 0;\n            let firstTouch = null;\n            const tapMovementThreshold = 10;\n            const touchTimeThreshold = 200;\n            let couldBeTap;\n            this.listenTo('touchstart', function (event) {\n                if (event.touches.length === 1) {\n                    firstTouch = {\n                        pageX: event.touches[0].pageX,\n                        pageY: event.touches[0].pageY\n                    };\n                    touchStart = window.performance.now();\n                    couldBeTap = true;\n                }\n            });\n            this.listenTo('touchmove', function (event) {\n                if (event.touches.length > 1) {\n                    couldBeTap = false;\n                } else if (firstTouch) {\n                    const xdiff = event.touches[0].pageX - firstTouch.pageX;\n                    const ydiff = event.touches[0].pageY - firstTouch.pageY;\n                    const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n                    if (touchDistance > tapMovementThreshold) {\n                        couldBeTap = false;\n                    }\n                }\n            });\n            const noTap = function () {\n                couldBeTap = false;\n            };\n            this.listenTo('touchleave', noTap);\n            this.listenTo('touchcancel', noTap);\n            this.listenTo('touchend', function (event) {\n                firstTouch = null;\n                if (couldBeTap === true) {\n                    const touchTime = window.performance.now() - touchStart;\n                    if (touchTime < touchTimeThreshold) {\n                        event.preventDefault();\n                        this.trigger('tap');\n                    }\n                }\n            });\n        }\n        enableTouchActivity() {\n            if (!this.player() || !this.player().reportUserActivity) {\n                return;\n            }\n            const report = Fn.bind(this.player(), this.player().reportUserActivity);\n            let touchHolding;\n            this.listenTo('touchstart', function () {\n                report();\n                this.clearInterval(touchHolding);\n                touchHolding = this.setInterval(report, 250);\n            });\n            const touchEnd = function (event) {\n                report();\n                this.clearInterval(touchHolding);\n            };\n            this.listenTo('touchmove', report);\n            this.listenTo('touchend', touchEnd);\n            this.listenTo('touchcancel', touchEnd);\n        }\n        setTimeout(fn, timeout) {\n            var timeoutId, disposeFn;\n            fn = Fn.bind(this, fn);\n            this.clearTimersOnDispose_();\n            timeoutId = window.setTimeout(() => {\n                if (this.setTimeoutIds_.has(timeoutId)) {\n                    this.setTimeoutIds_.delete(timeoutId);\n                }\n                fn();\n            }, timeout);\n            this.setTimeoutIds_.add(timeoutId);\n            return timeoutId;\n        }\n        clearTimeout(timeoutId) {\n            if (this.setTimeoutIds_.has(timeoutId)) {\n                this.setTimeoutIds_.delete(timeoutId);\n                window.clearTimeout(timeoutId);\n            }\n            return timeoutId;\n        }\n        setInterval(fn, interval) {\n            fn = Fn.bind(this, fn);\n            this.clearTimersOnDispose_();\n            const intervalId = window.setInterval(fn, interval);\n            this.setIntervalIds_.add(intervalId);\n            return intervalId;\n        }\n        clearInterval(intervalId) {\n            if (this.setIntervalIds_.has(intervalId)) {\n                this.setIntervalIds_.delete(intervalId);\n                window.clearInterval(intervalId);\n            }\n            return intervalId;\n        }\n        requestAnimationFrame(fn) {\n            if (!this.supportsRaf_) {\n                return this.setTimeout(fn, 1000 / 60);\n            }\n            this.clearTimersOnDispose_();\n            var id;\n            fn = Fn.bind(this, fn);\n            id = window.requestAnimationFrame(() => {\n                if (this.rafIds_.has(id)) {\n                    this.rafIds_.delete(id);\n                }\n                fn();\n            });\n            this.rafIds_.add(id);\n            return id;\n        }\n        requestNamedAnimationFrame(name, fn) {\n            if (this.namedRafs_.has(name)) {\n                return;\n            }\n            this.clearTimersOnDispose_();\n            fn = Fn.bind(this, fn);\n            const id = this.requestAnimationFrame(() => {\n                fn();\n                if (this.namedRafs_.has(name)) {\n                    this.namedRafs_.delete(name);\n                }\n            });\n            this.namedRafs_.set(name, id);\n            return name;\n        }\n        cancelNamedAnimationFrame(name) {\n            if (!this.namedRafs_.has(name)) {\n                return;\n            }\n            this.cancelAnimationFrame(this.namedRafs_.get(name));\n            this.namedRafs_.delete(name);\n        }\n        cancelAnimationFrame(id) {\n            if (!this.supportsRaf_) {\n                return this.clearTimeout(id);\n            }\n            if (this.rafIds_.has(id)) {\n                this.rafIds_.delete(id);\n                window.cancelAnimationFrame(id);\n            }\n            return id;\n        }\n        clearTimersOnDispose_() {\n            if (this.clearingTimersOnDispose_) {\n                return;\n            }\n            this.clearingTimersOnDispose_ = true;\n            this.listenToOnce('dispose', () => {\n                [\n                    [\n                        'namedRafs_',\n                        'cancelNamedAnimationFrame'\n                    ],\n                    [\n                        'rafIds_',\n                        'cancelAnimationFrame'\n                    ],\n                    [\n                        'setTimeoutIds_',\n                        'clearTimeout'\n                    ],\n                    [\n                        'setIntervalIds_',\n                        'clearInterval'\n                    ]\n                ].forEach(([idName, cancelName]) => {\n                    this[idName].forEach((val, key) => this[cancelName](key));\n                });\n                this.clearingTimersOnDispose_ = false;\n            });\n        }\n        static registerComponent(name, ComponentToRegister) {\n            if (typeof name !== 'string' || !name) {\n                throw new Error(`Illegal component name, \"${ name }\"; must be a non-empty string.`);\n            }\n            const Tech = Component.getComponent('Tech');\n            const isTech = Tech && Tech.isTech(ComponentToRegister);\n            const isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n            if (isTech || !isComp) {\n                let reason;\n                if (isTech) {\n                    reason = 'techs must be registered using Tech.registerTech()';\n                } else {\n                    reason = 'must be a Component subclass';\n                }\n                throw new Error(`Illegal component, \"${ name }\"; ${ reason }.`);\n            }\n            name = stringCases.toTitleCase(name);\n            if (!Component.components_) {\n                Component.components_ = {};\n            }\n            const Player = Component.getComponent('Player');\n            if (name === 'Player' && Player && Player.players) {\n                const players = Player.players;\n                const playerNames = Object.keys(players);\n                if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n                    throw new Error('Can not register Player component after player has been created.');\n                }\n            }\n            Component.components_[name] = ComponentToRegister;\n            Component.components_[stringCases.toLowerCase(name)] = ComponentToRegister;\n            return ComponentToRegister;\n        }\n        static getComponent(name) {\n            if (!name || !Component.components_) {\n                return;\n            }\n            return Component.components_[name];\n        }\n    }\n    Component.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n    Component.registerComponent('Component', Component);\n    return Component;\n});\ndefine('skylark-videojs/utils/time-ranges',[],function () {\n    'use strict';\n    function rangeCheck(fnName, index, maxIndex) {\n        if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n            throw new Error(`Failed to execute '${ fnName }' on 'TimeRanges': The index provided (${ index }) is non-numeric or out of bounds (0-${ maxIndex }).`);\n        }\n    }\n    function getRange(fnName, valueIndex, ranges, rangeIndex) {\n        rangeCheck(fnName, rangeIndex, ranges.length - 1);\n        return ranges[rangeIndex][valueIndex];\n    }\n    function createTimeRangesObj(ranges) {\n        if (ranges === undefined || ranges.length === 0) {\n            return {\n                length: 0,\n                start() {\n                    throw new Error('This TimeRanges object is empty');\n                },\n                end() {\n                    throw new Error('This TimeRanges object is empty');\n                }\n            };\n        }\n        return {\n            length: ranges.length,\n            start: getRange.bind(null, 'start', 0, ranges),\n            end: getRange.bind(null, 'end', 1, ranges)\n        };\n    }\n    function createTimeRanges(start, end) {\n        if (Array.isArray(start)) {\n            return createTimeRangesObj(start);\n        } else if (start === undefined || end === undefined) {\n            return createTimeRangesObj();\n        }\n        return createTimeRangesObj([[\n                start,\n                end\n            ]]);\n    }\n    return {\n        createTimeRanges: createTimeRanges,\n        createTimeRanges\n    };\n});\ndefine('skylark-videojs/utils/buffer',['./time-ranges'], function (timeRages) {\n    'use strict';\n    function bufferedPercent(buffered, duration) {\n        let bufferedDuration = 0;\n        let start;\n        let end;\n        if (!duration) {\n            return 0;\n        }\n        if (!buffered || !buffered.length) {\n            buffered = timeRages.createTimeRange(0, 0);\n        }\n        for (let i = 0; i < buffered.length; i++) {\n            start = buffered.start(i);\n            end = buffered.end(i);\n            if (end > duration) {\n                end = duration;\n            }\n            bufferedDuration += end - start;\n        }\n        return bufferedDuration / duration;\n    }\n    return { bufferedPercent: bufferedPercent };\n});\ndefine('skylark-videojs/media-error',['./utils/obj'], function (obj) {\n    'use strict';\n    function MediaError(value) {\n        if (value instanceof MediaError) {\n            return value;\n        }\n        if (typeof value === 'number') {\n            this.code = value;\n        } else if (typeof value === 'string') {\n            this.message = value;\n        } else if (obj.isObject(value)) {\n            if (typeof value.code === 'number') {\n                this.code = value.code;\n            }\n            obj.assign(this, value);\n        }\n        if (!this.message) {\n            this.message = MediaError.defaultMessages[this.code] || '';\n        }\n    }\n    MediaError.prototype.code = 0;\n    MediaError.prototype.message = '';\n    MediaError.prototype.status = null;\n    MediaError.errorTypes = [\n        'MEDIA_ERR_CUSTOM',\n        'MEDIA_ERR_ABORTED',\n        'MEDIA_ERR_NETWORK',\n        'MEDIA_ERR_DECODE',\n        'MEDIA_ERR_SRC_NOT_SUPPORTED',\n        'MEDIA_ERR_ENCRYPTED'\n    ];\n    MediaError.defaultMessages = {\n        1: 'You aborted the media playback',\n        2: 'A network error caused the media download to fail part-way.',\n        3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n        4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n        5: 'The media is encrypted and we do not have the keys to decrypt it.'\n    };\n    for (let errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n        MediaError[MediaError.errorTypes[errNum]] = errNum;\n        MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n    }\n    return MediaError;\n});\ndefine('skylark-videojs/utils/safeParseTuple',[],function(){\r\n\tfunction safeParseTuple(obj, reviver) {\r\n\t    var json\r\n\t    var error = null\r\n\r\n\t    try {\r\n\t        json = JSON.parse(obj, reviver)\r\n\t    } catch (err) {\r\n\t        error = err\r\n\t    }\r\n\r\n\t    return [error, json]\r\n\t}\r\n\r\n\treturn \tsafeParseTuple;\r\n});\r\n\r\n\ndefine('skylark-videojs/utils/promise',[],function () {\n    'use strict';\n    function isPromise(value) {\n        return value !== undefined && value !== null && typeof value.then === 'function';\n    }\n    function silencePromise(value) {\n        if (isPromise(value)) {\n            value.then(null, e => {\n            });\n        }\n    }\n    return {\n        isPromise: isPromise,\n        silencePromise: silencePromise\n    };\n});\ndefine('skylark-videojs/tracks/text-track-list-converter',[],function () {\n    'use strict';\n    const trackToJson_ = function (track) {\n        const ret = [\n            'kind',\n            'label',\n            'language',\n            'id',\n            'inBandMetadataTrackDispatchType',\n            'mode',\n            'src'\n        ].reduce((acc, prop, i) => {\n            if (track[prop]) {\n                acc[prop] = track[prop];\n            }\n            return acc;\n        }, {\n            cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n                return {\n                    startTime: cue.startTime,\n                    endTime: cue.endTime,\n                    text: cue.text,\n                    id: cue.id\n                };\n            })\n        });\n        return ret;\n    };\n    const textTracksToJson = function (tech) {\n        const trackEls = tech.$$('track');\n        const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n        const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n            const json = trackToJson_(trackEl.track);\n            if (trackEl.src) {\n                json.src = trackEl.src;\n            }\n            return json;\n        });\n        return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n            return trackObjs.indexOf(track) === -1;\n        }).map(trackToJson_));\n    };\n    const jsonToTextTracks = function (json, tech) {\n        json.forEach(function (track) {\n            const addedTrack = tech.addRemoteTextTrack(track).track;\n            if (!track.src && track.cues) {\n                track.cues.forEach(cue => addedTrack.addCue(cue));\n            }\n        });\n        return tech.textTracks();\n    };\n    return {\n        textTracksToJson,\n        jsonToTextTracks,\n        trackToJson_\n    };\n});\ndefine('skylark-videojs/utils/keycode',[],function(){\r\n  // Source: http://jsfiddle.net/vWx8V/\r\n  // http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\r\n\r\n  /**\r\n   * Conenience method returns corresponding value for given keyName or keyCode.\r\n   *\r\n   * @param {Mixed} keyCode {Number} or keyName {String}\r\n   * @return {Mixed}\r\n   * @api public\r\n   */\r\n\r\n  function keyCode(searchInput) {\r\n    // Keyboard Events\r\n    if (searchInput && 'object' === typeof searchInput) {\r\n      var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\r\n      if (hasKeyCode) searchInput = hasKeyCode\r\n    }\r\n\r\n    // Numbers\r\n    if ('number' === typeof searchInput) return names[searchInput]\r\n\r\n    // Everything else (cast to string)\r\n    var search = String(searchInput)\r\n\r\n    // check codes\r\n    var foundNamedKey = codes[search.toLowerCase()]\r\n    if (foundNamedKey) return foundNamedKey\r\n\r\n    // check aliases\r\n    var foundNamedKey = aliases[search.toLowerCase()]\r\n    if (foundNamedKey) return foundNamedKey\r\n\r\n    // weird character?\r\n    if (search.length === 1) return search.charCodeAt(0)\r\n\r\n    return undefined\r\n  }\r\n\r\n  /**\r\n   * Compares a keyboard event with a given keyCode or keyName.\r\n   *\r\n   * @param {Event} event Keyboard event that should be tested\r\n   * @param {Mixed} keyCode {Number} or keyName {String}\r\n   * @return {Boolean}\r\n   * @api public\r\n   */\r\n  keyCode.isEventKey = function isEventKey(event, nameOrCode) {\r\n    if (event && 'object' === typeof event) {\r\n      var keyCode = event.which || event.keyCode || event.charCode\r\n      if (keyCode === null || keyCode === undefined) { return false; }\r\n      if (typeof nameOrCode === 'string') {\r\n        // check codes\r\n        var foundNamedKey = codes[nameOrCode.toLowerCase()]\r\n        if (foundNamedKey) { return foundNamedKey === keyCode; }\r\n      \r\n        // check aliases\r\n        var foundNamedKey = aliases[nameOrCode.toLowerCase()]\r\n        if (foundNamedKey) { return foundNamedKey === keyCode; }\r\n      } else if (typeof nameOrCode === 'number') {\r\n        return nameOrCode === keyCode;\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  var exports = keyCode;\r\n\r\n  /**\r\n   * Get by name\r\n   *\r\n   *   exports.code['enter'] // => 13\r\n   */\r\n\r\n  var codes = exports.code = exports.codes = {\r\n    'backspace': 8,\r\n    'tab': 9,\r\n    'enter': 13,\r\n    'shift': 16,\r\n    'ctrl': 17,\r\n    'alt': 18,\r\n    'pause/break': 19,\r\n    'caps lock': 20,\r\n    'esc': 27,\r\n    'space': 32,\r\n    'page up': 33,\r\n    'page down': 34,\r\n    'end': 35,\r\n    'home': 36,\r\n    'left': 37,\r\n    'up': 38,\r\n    'right': 39,\r\n    'down': 40,\r\n    'insert': 45,\r\n    'delete': 46,\r\n    'command': 91,\r\n    'left command': 91,\r\n    'right command': 93,\r\n    'numpad *': 106,\r\n    'numpad +': 107,\r\n    'numpad -': 109,\r\n    'numpad .': 110,\r\n    'numpad /': 111,\r\n    'num lock': 144,\r\n    'scroll lock': 145,\r\n    'my computer': 182,\r\n    'my calculator': 183,\r\n    ';': 186,\r\n    '=': 187,\r\n    ',': 188,\r\n    '-': 189,\r\n    '.': 190,\r\n    '/': 191,\r\n    '`': 192,\r\n    '[': 219,\r\n    '\\\\': 220,\r\n    ']': 221,\r\n    \"'\": 222\r\n  }\r\n\r\n  // Helper aliases\r\n\r\n  var aliases = exports.aliases = {\r\n    'windows': 91,\r\n    '⇧': 16,\r\n    '⌥': 18,\r\n    '⌃': 17,\r\n    '⌘': 91,\r\n    'ctl': 17,\r\n    'control': 17,\r\n    'option': 18,\r\n    'pause': 19,\r\n    'break': 19,\r\n    'caps': 20,\r\n    'return': 13,\r\n    'escape': 27,\r\n    'spc': 32,\r\n    'spacebar': 32,\r\n    'pgup': 33,\r\n    'pgdn': 34,\r\n    'ins': 45,\r\n    'del': 46,\r\n    'cmd': 91\r\n  }\r\n\r\n  /*!\r\n   * Programatically add the following\r\n   */\r\n\r\n  // lower case chars\r\n  for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\r\n\r\n  // numbers\r\n  for (var i = 48; i < 58; i++) codes[i - 48] = i\r\n\r\n  // function keys\r\n  for (i = 1; i < 13; i++) codes['f'+i] = i + 111\r\n\r\n  // numpad keys\r\n  for (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\r\n\r\n  /**\r\n   * Get by code\r\n   *\r\n   *   exports.name[13] // => 'Enter'\r\n   */\r\n\r\n  var names = exports.names = exports.title = {} // title for backward compat\r\n\r\n  // Create reverse mapping\r\n  for (i in codes) names[codes[i]] = i\r\n\r\n  // Add aliases\r\n  for (var alias in aliases) {\r\n    codes[alias] = aliases[alias]\r\n  }\r\n\r\n  return exports;\r\n\r\n});\ndefine('skylark-videojs/modal-dialog',[\n    'skylark-langx-globals/document',\n    './utils/dom',\n    './component',\n    './utils/keycode'\n], function (document,Dom, Component, keycode) {\n    'use strict';\n    const MODAL_CLASS_NAME = 'vjs-modal-dialog';\n    class ModalDialog extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n            this.closeable(!this.options_.uncloseable);\n            this.content(this.options_.content);\n            this.contentEl_ = Dom.createEl('div', { className: `${ MODAL_CLASS_NAME }-content` }, { role: 'document' });\n            this.descEl_ = Dom.createEl('p', {\n                className: `${ MODAL_CLASS_NAME }-description vjs-control-text`,\n                id: this.el().getAttribute('aria-describedby')\n            });\n            Dom.textContent(this.descEl_, this.description());\n            this.el_.appendChild(this.descEl_);\n            this.el_.appendChild(this.contentEl_);\n        }\n        createEl() {\n            return super.createEl('div', {\n                className: this.buildCSSClass(),\n                tabIndex: -1\n            }, {\n                'aria-describedby': `${ this.id() }_description`,\n                'aria-hidden': 'true',\n                'aria-label': this.label(),\n                'role': 'dialog'\n            });\n        }\n        dispose() {\n            this.contentEl_ = null;\n            this.descEl_ = null;\n            this.previouslyActiveEl_ = null;\n            super.dispose();\n        }\n        buildCSSClass() {\n            return `${ MODAL_CLASS_NAME } vjs-hidden ${ super.buildCSSClass() }`;\n        }\n        label() {\n            return this.localize(this.options_.label || 'Modal Window');\n        }\n        description() {\n            let desc = this.options_.description || this.localize('This is a modal window.');\n            if (this.closeable()) {\n                desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n            }\n            return desc;\n        }\n        open() {\n            if (!this.opened_) {\n                const player = this.player();\n                this.trigger('beforemodalopen');\n                this.opened_ = true;\n                if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n                    this.fill();\n                }\n                this.wasPlaying_ = !player.paused();\n                if (this.options_.pauseOnOpen && this.wasPlaying_) {\n                    player.pause();\n                }\n                this.listenTo('keydown', this.handleKeyDown);\n                this.hadControls_ = player.controls();\n                player.controls(false);\n                this.show();\n                this.conditionalFocus_();\n                this.el().setAttribute('aria-hidden', 'false');\n                this.trigger('modalopen');\n                this.hasBeenOpened_ = true;\n            }\n        }\n        opened(value) {\n            if (typeof value === 'boolean') {\n                this[value ? 'open' : 'close']();\n            }\n            return this.opened_;\n        }\n        close() {\n            if (!this.opened_) {\n                return;\n            }\n            const player = this.player();\n            this.trigger('beforemodalclose');\n            this.opened_ = false;\n            if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n                player.play();\n            }\n            this.unlistenTo('keydown', this.handleKeyDown);\n            if (this.hadControls_) {\n                player.controls(true);\n            }\n            this.hide();\n            this.el().setAttribute('aria-hidden', 'true');\n            this.trigger('modalclose');\n            this.conditionalBlur_();\n            if (this.options_.temporary) {\n                this.dispose();\n            }\n        }\n        closeable(value) {\n            if (typeof value === 'boolean') {\n                const closeable = this.closeable_ = !!value;\n                let close = this.getChild('closeButton');\n                if (closeable && !close) {\n                    const temp = this.contentEl_;\n                    this.contentEl_ = this.el_;\n                    close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n                    this.contentEl_ = temp;\n                    this.listenTo(close, 'close', this.close);\n                }\n                if (!closeable && close) {\n                    this.unlistenTo(close, 'close', this.close);\n                    this.removeChild(close);\n                    close.dispose();\n                }\n            }\n            return this.closeable_;\n        }\n        fill() {\n            this.fillWith(this.content());\n        }\n        fillWith(content) {\n            const contentEl = this.contentEl();\n            const parentEl = contentEl.parentNode;\n            const nextSiblingEl = contentEl.nextSibling;\n            this.trigger('beforemodalfill');\n            this.hasBeenFilled_ = true;\n            parentEl.removeChild(contentEl);\n            this.empty();\n            Dom.insertContent(contentEl, content);\n            this.trigger('modalfill');\n            if (nextSiblingEl) {\n                parentEl.insertBefore(contentEl, nextSiblingEl);\n            } else {\n                parentEl.appendChild(contentEl);\n            }\n            const closeButton = this.getChild('closeButton');\n            if (closeButton) {\n                parentEl.appendChild(closeButton.el_);\n            }\n        }\n        empty() {\n            this.trigger('beforemodalempty');\n            Dom.emptyEl(this.contentEl());\n            this.trigger('modalempty');\n        }\n        content(value) {\n            if (typeof value !== 'undefined') {\n                this.content_ = value;\n            }\n            return this.content_;\n        }\n        conditionalFocus_() {\n            const activeEl = document.activeElement;\n            const playerEl = this.player_.el_;\n            this.previouslyActiveEl_ = null;\n            if (playerEl.contains(activeEl) || playerEl === activeEl) {\n                this.previouslyActiveEl_ = activeEl;\n                this.focus();\n            }\n        }\n        conditionalBlur_() {\n            if (this.previouslyActiveEl_) {\n                this.previouslyActiveEl_.focus();\n                this.previouslyActiveEl_ = null;\n            }\n        }\n        handleKeyDown(event) {\n            event.stopPropagation();\n            if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n                event.preventDefault();\n                this.close();\n                return;\n            }\n            if (!keycode.isEventKey(event, 'Tab')) {\n                return;\n            }\n            const focusableEls = this.focusableEls_();\n            const activeEl = this.el_.querySelector(':focus');\n            let focusIndex;\n            for (let i = 0; i < focusableEls.length; i++) {\n                if (activeEl === focusableEls[i]) {\n                    focusIndex = i;\n                    break;\n                }\n            }\n            if (document.activeElement === this.el_) {\n                focusIndex = 0;\n            }\n            if (event.shiftKey && focusIndex === 0) {\n                focusableEls[focusableEls.length - 1].focus();\n                event.preventDefault();\n            } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n                focusableEls[0].focus();\n                event.preventDefault();\n            }\n        }\n        focusableEls_() {\n            const allChildren = this.el_.querySelectorAll('*');\n            return Array.prototype.filter.call(allChildren, child => {\n                return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || (child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement) || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n            });\n        }\n    }\n    ModalDialog.prototype.options_ = {\n        pauseOnOpen: true,\n        temporary: true\n    };\n    Component.registerComponent('ModalDialog', ModalDialog);\n    return ModalDialog;\n});\ndefine('skylark-videojs/tracks/track-list',[\n    '../event-target',\n    '../mixins/evented'\n], function (EventTarget, evented) {\n    'use strict';\n    class TrackList extends EventTarget {\n        constructor(tracks = []) {\n            super();\n            this.tracks_ = [];\n            Object.defineProperty(this, 'length', {\n                get() {\n                    return this.tracks_.length;\n                }\n            });\n            for (let i = 0; i < tracks.length; i++) {\n                this.addTrack(tracks[i]);\n            }\n        }\n        addTrack(track) {\n            const index = this.tracks_.length;\n            if (!('' + index in this)) {\n                Object.defineProperty(this, index, {\n                    get() {\n                        return this.tracks_[index];\n                    }\n                });\n            }\n            if (this.tracks_.indexOf(track) === -1) {\n                this.tracks_.push(track);\n                this.trigger({\n                    track,\n                    type: 'addtrack',\n                    target: this\n                });\n            }\n            track.labelchange_ = () => {\n                this.trigger({\n                    track,\n                    type: 'labelchange',\n                    target: this\n                });\n            };\n            if (evented.isEvented(track)) {\n                track.addEventListener('labelchange', track.labelchange_);\n            }\n        }\n        removeTrack(rtrack) {\n            let track;\n            for (let i = 0, l = this.length; i < l; i++) {\n                if (this[i] === rtrack) {\n                    track = this[i];\n                    if (track.off) {\n                        track.off();\n                    }\n                    this.tracks_.splice(i, 1);\n                    break;\n                }\n            }\n            if (!track) {\n                return;\n            }\n            this.trigger({\n                track,\n                type: 'removetrack',\n                target: this\n            });\n        }\n        getTrackById(id) {\n            let result = null;\n            for (let i = 0, l = this.length; i < l; i++) {\n                const track = this[i];\n                if (track.id === id) {\n                    result = track;\n                    break;\n                }\n            }\n            return result;\n        }\n    }\n    TrackList.prototype.allowedEvents_ = {\n        change: 'change',\n        addtrack: 'addtrack',\n        removetrack: 'removetrack',\n        labelchange: 'labelchange'\n    };\n    for (const event in TrackList.prototype.allowedEvents_) {\n        TrackList.prototype['on' + event] = null;\n    }\n    return TrackList;\n});\ndefine('skylark-videojs/tracks/audio-track-list',[\n    './track-list'\n], function (TrackList) {\n    'use strict';\n    const disableOthers = function (list, track) {\n        for (let i = 0; i < list.length; i++) {\n            if (!Object.keys(list[i]).length || track.id === list[i].id) {\n                continue;\n            }\n            list[i].enabled = false;\n        }\n    };\n    class AudioTrackList extends TrackList {\n        constructor(tracks = []) {\n            for (let i = tracks.length - 1; i >= 0; i--) {\n                if (tracks[i].enabled) {\n                    disableOthers(tracks, tracks[i]);\n                    break;\n                }\n            }\n            super(tracks);\n            this.changing_ = false;\n        }\n        addTrack(track) {\n            if (track.enabled) {\n                disableOthers(this, track);\n            }\n            super.addTrack(track);\n            if (!track.addEventListener) {\n                return;\n            }\n            track.enabledChange_ = () => {\n                if (this.changing_) {\n                    return;\n                }\n                this.changing_ = true;\n                disableOthers(this, track);\n                this.changing_ = false;\n                this.trigger('change');\n            };\n            track.addEventListener('enabledchange', track.enabledChange_);\n        }\n        removeTrack(rtrack) {\n            super.removeTrack(rtrack);\n            if (rtrack.removeEventListener && rtrack.enabledChange_) {\n                rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n                rtrack.enabledChange_ = null;\n            }\n        }\n    }\n    return AudioTrackList;\n});\ndefine('skylark-videojs/tracks/video-track-list',['./track-list'], function (TrackList) {\n    'use strict';\n    const disableOthers = function (list, track) {\n        for (let i = 0; i < list.length; i++) {\n            if (!Object.keys(list[i]).length || track.id === list[i].id) {\n                continue;\n            }\n            list[i].selected = false;\n        }\n    };\n    class VideoTrackList extends TrackList {\n        constructor(tracks = []) {\n            for (let i = tracks.length - 1; i >= 0; i--) {\n                if (tracks[i].selected) {\n                    disableOthers(tracks, tracks[i]);\n                    break;\n                }\n            }\n            super(tracks);\n            this.changing_ = false;\n            Object.defineProperty(this, 'selectedIndex', {\n                get() {\n                    for (let i = 0; i < this.length; i++) {\n                        if (this[i].selected) {\n                            return i;\n                        }\n                    }\n                    return -1;\n                },\n                set() {\n                }\n            });\n        }\n        addTrack(track) {\n            if (track.selected) {\n                disableOthers(this, track);\n            }\n            super.addTrack(track);\n            if (!track.addEventListener) {\n                return;\n            }\n            track.selectedChange_ = () => {\n                if (this.changing_) {\n                    return;\n                }\n                this.changing_ = true;\n                disableOthers(this, track);\n                this.changing_ = false;\n                this.trigger('change');\n            };\n            track.addEventListener('selectedchange', track.selectedChange_);\n        }\n        removeTrack(rtrack) {\n            super.removeTrack(rtrack);\n            if (rtrack.removeEventListener && rtrack.selectedChange_) {\n                rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n                rtrack.selectedChange_ = null;\n            }\n        }\n    }\n    return VideoTrackList;\n});\ndefine('skylark-videojs/tracks/text-track-list',[\n    './track-list'\n], function (TrackList) {\n\n    'use strict';\n    \n    class TextTrackList extends TrackList {\n        addTrack(track) {\n            super.addTrack(track);\n            if (!this.queueChange_) {\n                this.queueChange_ = () => this.queueTrigger('change');\n            }\n            if (!this.triggerSelectedlanguagechange) {\n                this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n            }\n            track.addEventListener('modechange', this.queueChange_);\n            const nonLanguageTextTrackKind = [\n                'metadata',\n                'chapters'\n            ];\n            if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n                track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n            }\n        }\n        removeTrack(rtrack) {\n            super.removeTrack(rtrack);\n            if (rtrack.removeEventListener) {\n                if (this.queueChange_) {\n                    rtrack.removeEventListener('modechange', this.queueChange_);\n                }\n                if (this.selectedlanguagechange_) {\n                    rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n                }\n            }\n        }\n    }\n\n    return TextTrackList;\n});\ndefine('skylark-videojs/tracks/html-track-element-list',[],function () {\n    'use strict';\n    class HtmlTrackElementList {\n        constructor(trackElements = []) {\n            this.trackElements_ = [];\n            Object.defineProperty(this, 'length', {\n                get() {\n                    return this.trackElements_.length;\n                }\n            });\n            for (let i = 0, length = trackElements.length; i < length; i++) {\n                this.addTrackElement_(trackElements[i]);\n            }\n        }\n        addTrackElement_(trackElement) {\n            const index = this.trackElements_.length;\n            if (!('' + index in this)) {\n                Object.defineProperty(this, index, {\n                    get() {\n                        return this.trackElements_[index];\n                    }\n                });\n            }\n            if (this.trackElements_.indexOf(trackElement) === -1) {\n                this.trackElements_.push(trackElement);\n            }\n        }\n        getTrackElementByTrack_(track) {\n            let trackElement_;\n            for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n                if (track === this.trackElements_[i].track) {\n                    trackElement_ = this.trackElements_[i];\n                    break;\n                }\n            }\n            return trackElement_;\n        }\n        removeTrackElement_(trackElement) {\n            for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n                if (trackElement === this.trackElements_[i]) {\n                    if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n                        this.trackElements_[i].track.off();\n                    }\n                    if (typeof this.trackElements_[i].off === 'function') {\n                        this.trackElements_[i].off();\n                    }\n                    this.trackElements_.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n    return HtmlTrackElementList;\n});\ndefine('skylark-videojs/tracks/text-track-cue-list',[],function () {\n    'use strict';\n    class TextTrackCueList {\n        constructor(cues) {\n            TextTrackCueList.prototype.setCues_.call(this, cues);\n            Object.defineProperty(this, 'length', {\n                get() {\n                    return this.length_;\n                }\n            });\n        }\n        setCues_(cues) {\n            const oldLength = this.length || 0;\n            let i = 0;\n            const l = cues.length;\n            this.cues_ = cues;\n            this.length_ = cues.length;\n            const defineProp = function (index) {\n                if (!('' + index in this)) {\n                    Object.defineProperty(this, '' + index, {\n                        get() {\n                            return this.cues_[index];\n                        }\n                    });\n                }\n            };\n            if (oldLength < l) {\n                i = oldLength;\n                for (; i < l; i++) {\n                    defineProp.call(this, i);\n                }\n            }\n        }\n        getCueById(id) {\n            let result = null;\n            for (let i = 0, l = this.length; i < l; i++) {\n                const cue = this[i];\n                if (cue.id === id) {\n                    result = cue;\n                    break;\n                }\n            }\n            return result;\n        }\n    }\n    return TextTrackCueList;\n});\ndefine('skylark-videojs/tracks/track-enums',[],function () {\n    'use strict';\n    const VideoTrackKind = {\n        alternative: 'alternative',\n        captions: 'captions',\n        main: 'main',\n        sign: 'sign',\n        subtitles: 'subtitles',\n        commentary: 'commentary'\n    };\n    const AudioTrackKind = {\n        'alternative': 'alternative',\n        'descriptions': 'descriptions',\n        'main': 'main',\n        'main-desc': 'main-desc',\n        'translation': 'translation',\n        'commentary': 'commentary'\n    };\n    const TextTrackKind = {\n        subtitles: 'subtitles',\n        captions: 'captions',\n        descriptions: 'descriptions',\n        chapters: 'chapters',\n        metadata: 'metadata'\n    };\n    const TextTrackMode = {\n        disabled: 'disabled',\n        hidden: 'hidden',\n        showing: 'showing'\n    };\n    return {\n        VideoTrackKind: VideoTrackKind,\n        AudioTrackKind: AudioTrackKind,\n        TextTrackKind: TextTrackKind,\n        TextTrackMode: TextTrackMode\n    };\n});\ndefine('skylark-videojs/tracks/track',[\n    '../utils/guid',\n    '../event-target'\n], function (Guid, EventTarget) {\n    'use strict';\n    class Track extends EventTarget {\n        constructor(options = {}) {\n            super();\n            const trackProps = {\n                id: options.id || 'vjs_track_' + Guid.newGUID(),\n                kind: options.kind || '',\n                language: options.language || ''\n            };\n            let label = options.label || '';\n            for (const key in trackProps) {\n                Object.defineProperty(this, key, {\n                    get() {\n                        return trackProps[key];\n                    },\n                    set() {\n                    }\n                });\n            }\n            Object.defineProperty(this, 'label', {\n                get() {\n                    return label;\n                },\n                set(newLabel) {\n                    if (newLabel !== label) {\n                        label = newLabel;\n                        this.trigger('labelchange');\n                    }\n                }\n            });\n        }\n    }\n    return Track;\n});\ndefine('skylark-videojs/utils/url',[\n    'skylark-langx-globals/document'\n], function (document) {\n    'use strict';\n    const parseUrl = function (url) {\n        const props = [\n            'protocol',\n            'hostname',\n            'port',\n            'pathname',\n            'search',\n            'hash',\n            'host'\n        ];\n        let a = document.createElement('a');\n        a.href = url;\n        const addToBody = a.host === '' && a.protocol !== 'file:';\n        let div;\n        if (addToBody) {\n            div = document.createElement('div');\n            div.innerHTML = `<a href=\"${ url }\"></a>`;\n            a = div.firstChild;\n            div.setAttribute('style', 'display:none; position:absolute;');\n            document.body.appendChild(div);\n        }\n        const details = {};\n        for (let i = 0; i < props.length; i++) {\n            details[props[i]] = a[props[i]];\n        }\n        if (details.protocol === 'http:') {\n            details.host = details.host.replace(/:80$/, '');\n        }\n        if (details.protocol === 'https:') {\n            details.host = details.host.replace(/:443$/, '');\n        }\n        if (!details.protocol) {\n            details.protocol = window.location.protocol;\n        }\n        if (addToBody) {\n            document.body.removeChild(div);\n        }\n        return details;\n    };\n    const getAbsoluteURL = function (url) {\n        if (!url.match(/^https?:\\/\\//)) {\n            const div = document.createElement('div');\n            div.innerHTML = `<a href=\"${ url }\">x</a>`;\n            url = div.firstChild.href;\n        }\n        return url;\n    };\n    const getFileExtension = function (path) {\n        if (typeof path === 'string') {\n            const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n            const pathParts = splitPathRe.exec(path);\n            if (pathParts) {\n                return pathParts.pop().toLowerCase();\n            }\n        }\n        return '';\n    };\n    const isCrossOrigin = function (url, winLoc = window.location) {\n        const urlInfo = parseUrl(url);\n        const srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n        const crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n        return crossOrigin;\n    };\n    return {\n        parseUrl: parseUrl,\n        getAbsoluteURL: getAbsoluteURL,\n        getFileExtension: getFileExtension,\n        isCrossOrigin: isCrossOrigin\n    };\n});\ndefine('skylark-videojs/utils/xhr',[\r\n\t\"skylark-langx-globals/window\",\r\n\t\"skylark-langx-objects\",\r\n\t\"skylark-langx-types\",\r\n\t\"skylark-net-http/xhr\"\r\n],function(window,objects,types,_xhr){\r\n\r\n\t\"use strict\";\r\n\r\n\t/**\r\n\t * @license\r\n\t * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\r\n\t * Copyright (c) 2014 David Björklund\r\n\t * Available under the MIT license\r\n\t * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\r\n\t */\r\n\r\n\tvar parseHeaders = function(headers) {\r\n\t    var result = {};\r\n\r\n\t    if (!headers) {\r\n\t        return result;\r\n\t    }\r\n\r\n\t    headers.trim().split('\\n').forEach(function(row) {\r\n\t        var index = row.indexOf(':');\r\n\t        var key = row.slice(0, index).trim().toLowerCase();\r\n\t        var value = row.slice(index + 1).trim();\r\n\r\n\t        if (typeof(result[key]) === 'undefined') {\r\n\t          result[key] = value\r\n\t        } else if (Array.isArray(result[key])) {\r\n\t          result[key].push(value)\r\n\t        } else {\r\n\t          result[key] = [ result[key], value ]\r\n\t        }\r\n\t    });\r\n\r\n\t    return result;\r\n\t};\r\n\r\n\r\n\tcreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\r\n\tcreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\r\n\r\n\tforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\r\n\t    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\r\n\t        options = initParams(uri, options, callback)\r\n\t        options.method = method.toUpperCase()\r\n\t        return _createXHR(options)\r\n\t    }\r\n\t})\r\n\r\n\tfunction forEachArray(array, iterator) {\r\n\t    for (var i = 0; i < array.length; i++) {\r\n\t        iterator(array[i])\r\n\t    }\r\n\t}\r\n\r\n\tfunction isEmpty(obj){\r\n\t    for(var i in obj){\r\n\t        if(obj.hasOwnProperty(i)) return false\r\n\t    }\r\n\t    return true\r\n\t}\r\n\r\n\tfunction initParams(uri, options, callback) {\r\n\t    var params = uri\r\n\r\n\t    if (types.isFunction(options)) {\r\n\t        callback = options\r\n\t        if (typeof uri === \"string\") {\r\n\t            params = {uri:uri}\r\n\t        }\r\n\t    } else {\r\n\t        params = objects.mixin({}, options, {uri: uri})\r\n\t    }\r\n\r\n\t    params.callback = callback\r\n\t    return params\r\n\t}\r\n\r\n\tfunction createXHR(uri, options, callback) {\r\n\t    options = initParams(uri, options, callback)\r\n\t    return _createXHR(options)\r\n\t}\r\n\r\n\tfunction _createXHR(options) {\r\n\t    if(typeof options.callback === \"undefined\"){\r\n\t        throw new Error(\"callback argument missing\")\r\n\t    }\r\n\r\n\t    var called = false\r\n\t    var callback = function cbOnce(err, response, body){\r\n\t        if(!called){\r\n\t            called = true\r\n\t            options.callback(err, response, body)\r\n\t        }\r\n\t    }\r\n\r\n\t    function readystatechange() {\r\n\t        if (xhr.readyState === 4) {\r\n\t            setTimeout(loadFunc, 0)\r\n\t        }\r\n\t    }\r\n\r\n\t    function getBody() {\r\n\t        // Chrome with requestType=blob throws errors arround when even testing access to responseText\r\n\t        var body = undefined\r\n\r\n\t        if (xhr.response) {\r\n\t            body = xhr.response\r\n\t        } else {\r\n\t            body = xhr.responseText || getXml(xhr)\r\n\t        }\r\n\r\n\t        if (isJson) {\r\n\t            try {\r\n\t                body = JSON.parse(body)\r\n\t            } catch (e) {}\r\n\t        }\r\n\r\n\t        return body\r\n\t    }\r\n\r\n\t    function errorFunc(evt) {\r\n\t        clearTimeout(timeoutTimer)\r\n\t        if(!(evt instanceof Error)){\r\n\t            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\r\n\t        }\r\n\t        evt.statusCode = 0\r\n\t        return callback(evt, failureResponse)\r\n\t    }\r\n\r\n\t    // will load the data & process the response in a special response object\r\n\t    function loadFunc() {\r\n\t        if (aborted) return\r\n\t        var status\r\n\t        clearTimeout(timeoutTimer)\r\n\t        if(options.useXDR && xhr.status===undefined) {\r\n\t            //IE8 CORS GET successful response doesn't have a status field, but body is fine\r\n\t            status = 200\r\n\t        } else {\r\n\t            status = (xhr.status === 1223 ? 204 : xhr.status)\r\n\t        }\r\n\t        var response = failureResponse\r\n\t        var err = null\r\n\r\n\t        if (status !== 0){\r\n\t            response = {\r\n\t                body: getBody(),\r\n\t                statusCode: status,\r\n\t                method: method,\r\n\t                headers: {},\r\n\t                url: uri,\r\n\t                rawRequest: xhr\r\n\t            }\r\n\t            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\r\n\t                response.headers = parseHeaders(xhr.getAllResponseHeaders())\r\n\t            }\r\n\t        } else {\r\n\t            err = new Error(\"Internal XMLHttpRequest Error\")\r\n\t        }\r\n\t        return callback(err, response, response.body)\r\n\t    }\r\n\r\n\t    var xhr = options.xhr || null\r\n\r\n\t    if (!xhr) {\r\n\t        if (options.cors || options.useXDR) {\r\n\t            xhr = new createXHR.XDomainRequest()\r\n\t        }else{\r\n\t            xhr = new createXHR.XMLHttpRequest()\r\n\t        }\r\n\t    }\r\n\r\n\t    var key\r\n\t    var aborted\r\n\t    var uri = xhr.url = options.uri || options.url\r\n\t    var method = xhr.method = options.method || \"GET\"\r\n\t    var body = options.body || options.data\r\n\t    var headers = xhr.headers = options.headers || {}\r\n\t    var sync = !!options.sync\r\n\t    var isJson = false\r\n\t    var timeoutTimer\r\n\t    var failureResponse = {\r\n\t        body: undefined,\r\n\t        headers: {},\r\n\t        statusCode: 0,\r\n\t        method: method,\r\n\t        url: uri,\r\n\t        rawRequest: xhr\r\n\t    }\r\n\r\n\t    if (\"json\" in options && options.json !== false) {\r\n\t        isJson = true\r\n\t        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\r\n\t        if (method !== \"GET\" && method !== \"HEAD\") {\r\n\t            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\r\n\t            body = JSON.stringify(options.json === true ? body : options.json)\r\n\t        }\r\n\t    }\r\n\r\n\t    xhr.onreadystatechange = readystatechange\r\n\t    xhr.onload = loadFunc\r\n\t    xhr.onerror = errorFunc\r\n\t    // IE9 must have onprogress be set to a unique function.\r\n\t    xhr.onprogress = function () {\r\n\t        // IE must die\r\n\t    }\r\n\t    xhr.onabort = function(){\r\n\t        aborted = true;\r\n\t    }\r\n\t    xhr.ontimeout = errorFunc\r\n\t    xhr.open(method, uri, !sync, options.username, options.password)\r\n\t    //has to be after open\r\n\t    if(!sync) {\r\n\t        xhr.withCredentials = !!options.withCredentials\r\n\t    }\r\n\t    // Cannot set timeout with sync request\r\n\t    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\r\n\t    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\r\n\t    if (!sync && options.timeout > 0 ) {\r\n\t        timeoutTimer = setTimeout(function(){\r\n\t            if (aborted) return\r\n\t            aborted = true//IE9 may still call readystatechange\r\n\t            xhr.abort(\"timeout\")\r\n\t            var e = new Error(\"XMLHttpRequest timeout\")\r\n\t            e.code = \"ETIMEDOUT\"\r\n\t            errorFunc(e)\r\n\t        }, options.timeout )\r\n\t    }\r\n\r\n\t    if (xhr.setRequestHeader) {\r\n\t        for(key in headers){\r\n\t            if(headers.hasOwnProperty(key)){\r\n\t                xhr.setRequestHeader(key, headers[key])\r\n\t            }\r\n\t        }\r\n\t    } else if (options.headers && !isEmpty(options.headers)) {\r\n\t        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\r\n\t    }\r\n\r\n\t    if (\"responseType\" in options) {\r\n\t        xhr.responseType = options.responseType\r\n\t    }\r\n\r\n\t    if (\"beforeSend\" in options &&\r\n\t        typeof options.beforeSend === \"function\"\r\n\t    ) {\r\n\t        options.beforeSend(xhr)\r\n\t    }\r\n\r\n\t    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\r\n\t    // XMLHttpRequest spec says to pass null as body to indicate no body\r\n\t    // See https://github.com/naugtur/xhr/issues/100.\r\n\t    xhr.send(body || null)\r\n\r\n\t    return xhr\r\n\r\n\r\n\t}\r\n\r\n\tfunction getXml(xhr) {\r\n\t    // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\r\n\t    // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\r\n\t    try {\r\n\t        if (xhr.responseType === \"document\") {\r\n\t            return xhr.responseXML\r\n\t        }\r\n\t        var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\r\n\t        if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\r\n\t            return xhr.responseXML\r\n\t        }\r\n\t    } catch (e) {}\r\n\r\n\t    return null\r\n\t}\r\n\r\n\tfunction noop() {}\r\n\r\n\treturn createXHR;\r\n\r\n\r\n});\ndefine('skylark-videojs/tracks/text-track',[\n    'skylark-videojs-vtt',\n    './text-track-cue-list',\n    '../utils/fn',\n    './track-enums',\n    '../utils/log',\n    './track',\n    '../utils/url',\n    '../utils/xhr',\n    '../utils/merge-options'\n], function (vtt,TextTrackCueList, Fn, TrackEnums, log, Track, url, XHR, merge) {\n    'use strict';\n    const parseCues = function (srcContent, track) {\n        const parser = new vtt.WebVTT.Parser(window, vtt, vtt.WebVTT.StringDecoder());\n        const errors = [];\n        parser.oncue = function (cue) {\n            track.addCue(cue);\n        };\n        parser.onparsingerror = function (error) {\n            errors.push(error);\n        };\n        parser.onflush = function () {\n            track.trigger({\n                type: 'loadeddata',\n                target: track\n            });\n        };\n        parser.parse(srcContent);\n        if (errors.length > 0) {\n            if (window.console && window.console.groupCollapsed) {\n                window.console.groupCollapsed(`Text Track parsing errors for ${ track.src }`);\n            }\n            errors.forEach(error => log.error(error));\n            if (window.console && window.console.groupEnd) {\n                window.console.groupEnd();\n            }\n        }\n        parser.flush();\n    };\n    const loadTrack = function (src, track) {\n        const opts = { uri: src };\n        const crossOrigin = url.isCrossOrigin(src);\n        if (crossOrigin) {\n            opts.cors = crossOrigin;\n        }\n        const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n        if (withCredentials) {\n            opts.withCredentials = withCredentials;\n        }\n        XHR(opts, Fn.bind(this, function (err, response, responseBody) {\n            if (err) {\n                return log.error(err, response);\n            }\n            track.loaded_ = true;\n            if (typeof vtt.WebVTT !== 'function') {\n                if (track.tech_) {\n                    track.tech_.any([\n                        'vttjsloaded',\n                        'vttjserror'\n                    ], event => {\n                        if (event.type === 'vttjserror') {\n                            log.error(`vttjs failed to load, stopping trying to process ${ track.src }`);\n                            return;\n                        }\n                        return parseCues(responseBody, track);\n                    });\n                }\n            } else {\n                parseCues(responseBody, track);\n            }\n        }));\n    };\n    class TextTrack extends Track {\n        constructor(options = {}) {\n            if (!options.tech) {\n                throw new Error('A tech was not provided.');\n            }\n            const settings = merge(options, {\n                kind: TrackEnums.TextTrackKind[options.kind] || 'subtitles',\n                language: options.language || options.srclang || ''\n            });\n            let mode = TrackEnums.TextTrackMode[settings.mode] || 'disabled';\n            const default_ = settings.default;\n            if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n                mode = 'hidden';\n            }\n            super(settings);\n            this.tech_ = settings.tech;\n            this.cues_ = [];\n            this.activeCues_ = [];\n            this.preload_ = this.tech_.preloadTextTracks !== false;\n            const cues = new TextTrackCueList(this.cues_);\n            const activeCues = new TextTrackCueList(this.activeCues_);\n            let changed = false;\n            const timeupdateHandler = Fn.bind(this, function () {\n                if (!this.tech_.isReady_ || this.tech_.isDisposed()) {\n                    return;\n                }\n                this.activeCues = this.activeCues;\n                if (changed) {\n                    this.trigger('cuechange');\n                    changed = false;\n                }\n            });\n            const disposeHandler = () => {\n                this.tech_.off('timeupdate', timeupdateHandler);\n            };\n            this.tech_.one('dispose', disposeHandler);\n            if (mode !== 'disabled') {\n                this.tech_.on('timeupdate', timeupdateHandler);\n            }\n            Object.defineProperties(this, {\n                default: {\n                    get() {\n                        return default_;\n                    },\n                    set() {\n                    }\n                },\n                mode: {\n                    get() {\n                        return mode;\n                    },\n                    set(newMode) {\n                        if (!TrackEnums.TextTrackMode[newMode]) {\n                            return;\n                        }\n                        if (mode === newMode) {\n                            return;\n                        }\n                        mode = newMode;\n                        if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n                            loadTrack(this.src, this);\n                        }\n                        this.tech_.off('timeupdate', timeupdateHandler);\n                        if (mode !== 'disabled') {\n                            this.tech_.on('timeupdate', timeupdateHandler);\n                        }\n                        this.trigger('modechange');\n                    }\n                },\n                cues: {\n                    get() {\n                        if (!this.loaded_) {\n                            return null;\n                        }\n                        return cues;\n                    },\n                    set() {\n                    }\n                },\n                activeCues: {\n                    get() {\n                        if (!this.loaded_) {\n                            return null;\n                        }\n                        if (this.cues.length === 0) {\n                            return activeCues;\n                        }\n                        const ct = this.tech_.currentTime();\n                        const active = [];\n                        for (let i = 0, l = this.cues.length; i < l; i++) {\n                            const cue = this.cues[i];\n                            if (cue.startTime <= ct && cue.endTime >= ct) {\n                                active.push(cue);\n                            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n                                active.push(cue);\n                            }\n                        }\n                        changed = false;\n                        if (active.length !== this.activeCues_.length) {\n                            changed = true;\n                        } else {\n                            for (let i = 0; i < active.length; i++) {\n                                if (this.activeCues_.indexOf(active[i]) === -1) {\n                                    changed = true;\n                                }\n                            }\n                        }\n                        this.activeCues_ = active;\n                        activeCues.setCues_(this.activeCues_);\n                        return activeCues;\n                    },\n                    set() {\n                    }\n                }\n            });\n            if (settings.src) {\n                this.src = settings.src;\n                if (!this.preload_) {\n                    this.loaded_ = true;\n                }\n                if (this.preload_ || default_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n                    loadTrack(this.src, this);\n                }\n            } else {\n                this.loaded_ = true;\n            }\n        }\n        addCue(originalCue) {\n            let cue = originalCue;\n            if (vtt && !(originalCue instanceof vtt.VTTCue)) {\n                cue = new vtt.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n                for (const prop in originalCue) {\n                    if (!(prop in cue)) {\n                        cue[prop] = originalCue[prop];\n                    }\n                }\n                cue.id = originalCue.id;\n                cue.originalCue_ = originalCue;\n            }\n            const tracks = this.tech_.textTracks();\n            for (let i = 0; i < tracks.length; i++) {\n                if (tracks[i] !== this) {\n                    tracks[i].removeCue(cue);\n                }\n            }\n            this.cues_.push(cue);\n            this.cues.setCues_(this.cues_);\n        }\n        removeCue(removeCue) {\n            let i = this.cues_.length;\n            while (i--) {\n                const cue = this.cues_[i];\n                if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n                    this.cues_.splice(i, 1);\n                    this.cues.setCues_(this.cues_);\n                    break;\n                }\n            }\n        }\n    }\n    TextTrack.prototype.allowedEvents_ = { cuechange: 'cuechange' };\n    return TextTrack;\n});\ndefine('skylark-videojs/tracks/audio-track',[\n    './track-enums',\n    './track',\n    '../utils/merge-options'\n], function (TrackEnums, Track, merge) {\n    'use strict';\n    class AudioTrack extends Track {\n        constructor(options = {}) {\n            const settings = merge(options, { kind: TrackEnums.AudioTrackKind[options.kind] || '' });\n            super(settings);\n            let enabled = false;\n            Object.defineProperty(this, 'enabled', {\n                get() {\n                    return enabled;\n                },\n                set(newEnabled) {\n                    if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n                        return;\n                    }\n                    enabled = newEnabled;\n                    this.trigger('enabledchange');\n                }\n            });\n            if (settings.enabled) {\n                this.enabled = settings.enabled;\n            }\n            this.loaded_ = true;\n        }\n    }\n    return AudioTrack;\n});\ndefine('skylark-videojs/tracks/video-track',[\n    './track-enums',\n    './track',\n    '../utils/merge-options'\n], function (TrackEnums, Track, merge) {\n    'use strict';\n    class VideoTrack extends Track {\n        constructor(options = {}) {\n            const settings = merge(options, { kind: TrackEnums.VideoTrackKind[options.kind] || '' });\n            super(settings);\n            let selected = false;\n            Object.defineProperty(this, 'selected', {\n                get() {\n                    return selected;\n                },\n                set(newSelected) {\n                    if (typeof newSelected !== 'boolean' || newSelected === selected) {\n                        return;\n                    }\n                    selected = newSelected;\n                    this.trigger('selectedchange');\n                }\n            });\n            if (settings.selected) {\n                this.selected = settings.selected;\n            }\n        }\n    }\n    return VideoTrack;\n});\ndefine('skylark-videojs/tracks/html-track-element',[\n    '../event-target',\n    '../tracks/text-track'\n], function (EventTarget, TextTrack) {\n    'use strict';\n    const NONE = 0;\n    const LOADING = 1;\n    const LOADED = 2;\n    const ERROR = 3;\n    class HTMLTrackElement extends EventTarget {\n        constructor(options = {}) {\n            super();\n            let readyState;\n            const track = new TextTrack(options);\n            this.kind = track.kind;\n            this.src = track.src;\n            this.srclang = track.language;\n            this.label = track.label;\n            this.default = track.default;\n            Object.defineProperties(this, {\n                readyState: {\n                    get() {\n                        return readyState;\n                    }\n                },\n                track: {\n                    get() {\n                        return track;\n                    }\n                }\n            });\n            readyState = NONE;\n            track.addEventListener('loadeddata', () => {\n                readyState = LOADED;\n                this.trigger({\n                    type: 'load',\n                    target: this\n                });\n            });\n        }\n    }\n    HTMLTrackElement.prototype.allowedEvents_ = { load: 'load' };\n    HTMLTrackElement.NONE = NONE;\n    HTMLTrackElement.LOADING = LOADING;\n    HTMLTrackElement.LOADED = LOADED;\n    HTMLTrackElement.ERROR = ERROR;\n    return HTMLTrackElement;\n});\ndefine('skylark-videojs/tracks/track-types',[\n    './audio-track-list',\n    './video-track-list',\n    './text-track-list',\n    './html-track-element-list',\n    './text-track',\n    './audio-track',\n    './video-track',\n    './html-track-element'\n], function (AudioTrackList, VideoTrackList, TextTrackList, HtmlTrackElementList, TextTrack, AudioTrack, VideoTrack, HTMLTrackElement) {\n    'use strict';\n    const NORMAL = {\n        audio: {\n            ListClass: AudioTrackList,\n            TrackClass: AudioTrack,\n            capitalName: 'Audio'\n        },\n        video: {\n            ListClass: VideoTrackList,\n            TrackClass: VideoTrack,\n            capitalName: 'Video'\n        },\n        text: {\n            ListClass: TextTrackList,\n            TrackClass: TextTrack,\n            capitalName: 'Text'\n        }\n    };\n    Object.keys(NORMAL).forEach(function (type) {\n        NORMAL[type].getterName = `${ type }Tracks`;\n        NORMAL[type].privateName = `${ type }Tracks_`;\n    });\n    const REMOTE = {\n        remoteText: {\n            ListClass: TextTrackList,\n            TrackClass: TextTrack,\n            capitalName: 'RemoteText',\n            getterName: 'remoteTextTracks',\n            privateName: 'remoteTextTracks_'\n        },\n        remoteTextEl: {\n            ListClass: HtmlTrackElementList,\n            TrackClass: HTMLTrackElement,\n            capitalName: 'RemoteTextTrackEls',\n            getterName: 'remoteTextTrackEls',\n            privateName: 'remoteTextTrackEls_'\n        }\n    };\n    const ALL = Object.assign({}, NORMAL, REMOTE);\n    REMOTE.names = Object.keys(REMOTE);\n    NORMAL.names = Object.keys(NORMAL);\n    ALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n    return {\n        NORMAL,\n        REMOTE,\n        ALL\n    };\n});\ndefine('skylark-videojs/tech/tech',[\n    'skylark-langx-globals/window',\n    'skylark-langx-globals/document',\n    '../component',\n    '../utils/merge-options',\n    '../utils/fn',\n    '../utils/log',\n    '../utils/time-ranges',\n    '../utils/buffer',\n    '../media-error',\n    '../utils/obj',\n    '../tracks/track-types',\n    '../utils/string-cases',\n    'skylark-videojs-vtt'\n], function (window, document, Component, mergeOptions, Fn, log, timeRages, buffer, MediaError, obj, TRACK_TYPES, stringCases, vtt) {\n    'use strict';\n    function createTrackHelper(self, kind, label, language, options = {}) {\n        const tracks = self.textTracks();\n        options.kind = kind;\n        if (label) {\n            options.label = label;\n        }\n        if (language) {\n            options.language = language;\n        }\n        options.tech = self;\n        const track = new TRACK_TYPES.ALL.text.TrackClass(options);\n        tracks.addTrack(track);\n        return track;\n    }\n    class Tech extends Component {\n        constructor(options = {}, ready = function () {\n        }) {\n            options.reportTouchActivity = false;\n            super(null, options, ready);\n            this.hasStarted_ = false;\n            this.listenTo('playing', function () {\n                this.hasStarted_ = true;\n            });\n            this.listenTo('loadstart', function () {\n                this.hasStarted_ = false;\n            });\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                if (options && options[props.getterName]) {\n                    this[props.privateName] = options[props.getterName];\n                }\n            });\n            if (!this.featuresProgressEvents) {\n                this.manualProgressOn();\n            }\n            if (!this.featuresTimeupdateEvents) {\n                this.manualTimeUpdatesOn();\n            }\n            [\n                'Text',\n                'Audio',\n                'Video'\n            ].forEach(track => {\n                if (options[`native${ track }Tracks`] === false) {\n                    this[`featuresNative${ track }Tracks`] = false;\n                }\n            });\n            if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n                this.featuresNativeTextTracks = false;\n            } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n                this.featuresNativeTextTracks = true;\n            }\n            if (!this.featuresNativeTextTracks) {\n                this.emulateTextTracks();\n            }\n            this.preloadTextTracks = options.preloadTextTracks !== false;\n            this.autoRemoteTextTracks_ = new TRACK_TYPES.ALL.text.ListClass();\n            this.initTrackListeners();\n            if (!options.nativeControlsForTouch) {\n                this.emitTapEvents();\n            }\n            if (this.constructor) {\n                this.name_ = this.constructor.name || 'Unknown Tech';\n            }\n        }\n        triggerSourceset(src) {\n            if (!this.isReady_) {\n                this.listenToOnce('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n            }\n            this.trigger({\n                src,\n                type: 'sourceset'\n            });\n        }\n        manualProgressOn() {\n            this.listenTo('durationchange', this.listenToDurationChange);\n            this.manualProgress = true;\n            this.listenToOnce('ready', this.trackProgress);\n        }\n        manualProgressOff() {\n            this.manualProgress = false;\n            this.stopTrackingProgress();\n            this.unlistenTo('durationchange', this.listenToDurationChange);\n        }\n        trackProgress(event) {\n            this.stopTrackingProgress();\n            this.progressInterval = this.setInterval(Fn.bind(this, function () {\n                const numBufferedPercent = this.undefined();\n                if (this.bufferedPercent_ !== numBufferedPercent) {\n                    this.trigger('progress');\n                }\n                this.bufferedPercent_ = numBufferedPercent;\n                if (numBufferedPercent === 1) {\n                    this.stopTrackingProgress();\n                }\n            }), 500);\n        }\n        onDurationChange(event) {\n            this.duration_ = this.duration();\n        }\n        buffered() {\n            return timeRages.createTimeRange(0, 0);\n        }\n        bufferedPercent() {\n            return buffer.bufferedPercent(this.buffered(), this.duration_);\n        }\n        stopTrackingProgress() {\n            this.clearInterval(this.progressInterval);\n        }\n        manualTimeUpdatesOn() {\n            this.manualTimeUpdates = true;\n            this.listenTo('play', this.trackCurrentTime);\n            this.listenTo('pause', this.stopTrackingCurrentTime);\n        }\n        manualTimeUpdatesOff() {\n            this.manualTimeUpdates = false;\n            this.stopTrackingCurrentTime();\n            this.unlistenTo('play', this.trackCurrentTime);\n            this.unlistenTo('pause', this.stopTrackingCurrentTime);\n        }\n        trackCurrentTime() {\n            if (this.currentTimeInterval) {\n                this.stopTrackingCurrentTime();\n            }\n            this.currentTimeInterval = this.setInterval(function () {\n                this.trigger({\n                    type: 'timeupdate',\n                    target: this,\n                    manuallyTriggered: true\n                });\n            }, 250);\n        }\n        stopTrackingCurrentTime() {\n            this.clearInterval(this.currentTimeInterval);\n            this.trigger({\n                type: 'timeupdate',\n                target: this,\n                manuallyTriggered: true\n            });\n        }\n        dispose() {\n            this.clearTracks(TRACK_TYPES.NORMAL.names);\n            if (this.manualProgress) {\n                this.manualProgressOff();\n            }\n            if (this.manualTimeUpdates) {\n                this.manualTimeUpdatesOff();\n            }\n            super.dispose();\n        }\n        clearTracks(types) {\n            types = [].concat(types);\n            types.forEach(type => {\n                const list = this[`${ type }Tracks`]() || [];\n                let i = list.length;\n                while (i--) {\n                    const track = list[i];\n                    if (type === 'text') {\n                        this.removeRemoteTextTrack(track);\n                    }\n                    list.removeTrack(track);\n                }\n            });\n        }\n        cleanupAutoTextTracks() {\n            const list = this.autoRemoteTextTracks_ || [];\n            let i = list.length;\n            while (i--) {\n                const track = list[i];\n                this.removeRemoteTextTrack(track);\n            }\n        }\n        reset() {\n        }\n        crossOrigin() {\n        }\n        setCrossOrigin() {\n        }\n        error(err) {\n            if (err !== undefined) {\n                this.error_ = new MediaError(err);\n                this.trigger('error');\n            }\n            return this.error_;\n        }\n        played() {\n            if (this.hasStarted_) {\n                return timeRages.createTimeRange(0, 0);\n            }\n            return timeRages.createTimeRange();\n        }\n        play() {\n        }\n        setScrubbing() {\n        }\n        scrubbing() {\n        }\n        setCurrentTime() {\n            if (this.manualTimeUpdates) {\n                this.trigger({\n                    type: 'timeupdate',\n                    target: this,\n                    manuallyTriggered: true\n                });\n            }\n        }\n        initTrackListeners() {\n            TRACK_TYPES.NORMAL.names.forEach(name => {\n                const props = TRACK_TYPES.NORMAL[name];\n                const trackListChanges = () => {\n                    this.trigger(`${ name }trackchange`);\n                };\n                const tracks = this[props.getterName]();\n                tracks.addEventListener('removetrack', trackListChanges);\n                tracks.addEventListener('addtrack', trackListChanges);\n                this.listenTo('dispose', () => {\n                    tracks.removeEventListener('removetrack', trackListChanges);\n                    tracks.removeEventListener('addtrack', trackListChanges);\n                });\n            });\n        }\n        addWebVttScript_() {\n            if (window.WebVTT) {\n                return;\n            }\n            if (document.body.contains(this.el())) {\n                if (!this.options_['vtt.js'] && obj.isPlain(vtt) && Object.keys(vtt).length > 0) {\n                    this.trigger('vttjsloaded');\n                    return;\n                }\n                const script = document.createElement('script');\n                script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n                script.onload = () => {\n                    this.trigger('vttjsloaded');\n                };\n                script.onerror = () => {\n                    this.trigger('vttjserror');\n                };\n                this.listenTo('dispose', () => {\n                    script.onload = null;\n                    script.onerror = null;\n                });\n                window.WebVTT = true;\n                this.el().parentNode.appendChild(script);\n            } else {\n                this.ready(this.addWebVttScript_);\n            }\n        }\n        emulateTextTracks() {\n            const tracks = this.textTracks();\n            const remoteTracks = this.remoteTextTracks();\n            const handleAddTrack = e => tracks.addTrack(e.track);\n            const handleRemoveTrack = e => tracks.removeTrack(e.track);\n            remoteTracks.on('addtrack', handleAddTrack);\n            remoteTracks.on('removetrack', handleRemoveTrack);\n            this.addWebVttScript_();\n            const updateDisplay = () => this.trigger('texttrackchange');\n            const textTracksChanges = () => {\n                updateDisplay();\n                for (let i = 0; i < tracks.length; i++) {\n                    const track = tracks[i];\n                    track.removeEventListener('cuechange', updateDisplay);\n                    if (track.mode === 'showing') {\n                        track.addEventListener('cuechange', updateDisplay);\n                    }\n                }\n            };\n            textTracksChanges();\n            tracks.addEventListener('change', textTracksChanges);\n            tracks.addEventListener('addtrack', textTracksChanges);\n            tracks.addEventListener('removetrack', textTracksChanges);\n            this.listenTo('dispose', function () {\n                remoteTracks.off('addtrack', handleAddTrack);\n                remoteTracks.off('removetrack', handleRemoveTrack);\n                tracks.removeEventListener('change', textTracksChanges);\n                tracks.removeEventListener('addtrack', textTracksChanges);\n                tracks.removeEventListener('removetrack', textTracksChanges);\n                for (let i = 0; i < tracks.length; i++) {\n                    const track = tracks[i];\n                    track.removeEventListener('cuechange', updateDisplay);\n                }\n            });\n        }\n        addTextTrack(kind, label, language) {\n            if (!kind) {\n                throw new Error('TextTrack kind is required but was not provided');\n            }\n            return createTrackHelper(this, kind, label, language);\n        }\n        createRemoteTextTrack(options) {\n            const track = mergeOptions(options, { tech: this });\n            return new TRACK_TYPES.REMOTE.remoteTextEl.TrackClass(track);\n        }\n        addRemoteTextTrack(options = {}, manualCleanup) {\n            const htmlTrackElement = this.createRemoteTextTrack(options);\n            if (manualCleanup !== true && manualCleanup !== false) {\n                log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n                manualCleanup = true;\n            }\n            this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n            this.remoteTextTracks().addTrack(htmlTrackElement.track);\n            if (manualCleanup !== true) {\n                this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n            }\n            return htmlTrackElement;\n        }\n        removeRemoteTextTrack(track) {\n            const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n            this.remoteTextTrackEls().removeTrackElement_(trackElement);\n            this.remoteTextTracks().removeTrack(track);\n            this.autoRemoteTextTracks_.removeTrack(track);\n        }\n        getVideoPlaybackQuality() {\n            return {};\n        }\n        requestPictureInPicture() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                return PromiseClass.reject();\n            }\n        }\n        disablePictureInPicture() {\n            return true;\n        }\n        setDisablePictureInPicture() {\n        }\n        setPoster() {\n        }\n        playsinline() {\n        }\n        setPlaysinline() {\n        }\n        overrideNativeAudioTracks() {\n        }\n        overrideNativeVideoTracks() {\n        }\n        canPlayType() {\n            return '';\n        }\n        static canPlayType() {\n            return '';\n        }\n        static canPlaySource(srcObj, options) {\n            return Tech.canPlayType(srcObj.type);\n        }\n        static isTech(component) {\n            return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n        }\n        static registerTech(name, tech) {\n            if (!Tech.techs_) {\n                Tech.techs_ = {};\n            }\n            if (!Tech.isTech(tech)) {\n                throw new Error(`Tech ${ name } must be a Tech`);\n            }\n            if (!Tech.canPlayType) {\n                throw new Error('Techs must have a static canPlayType method on them');\n            }\n            if (!Tech.canPlaySource) {\n                throw new Error('Techs must have a static canPlaySource method on them');\n            }\n            name = stringCases.toTitleCase(name);\n            Tech.techs_[name] = tech;\n            Tech.techs_[stringCases.toLowerCase(name)] = tech;\n            if (name !== 'Tech') {\n                Tech.defaultTechOrder_.push(name);\n            }\n            return tech;\n        }\n        static getTech(name) {\n            if (!name) {\n                return;\n            }\n            if (Tech.techs_ && Tech.techs_[name]) {\n                return Tech.techs_[name];\n            }\n            name = stringCases.toTitleCase(name);\n            if (window && window.videojs && window.videojs[name]) {\n                log.warn(`The ${ name } tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n                return window.videojs[name];\n            }\n        }\n    }\n    TRACK_TYPES.ALL.names.forEach(function (name) {\n        const props = TRACK_TYPES.ALL[name];\n        Tech.prototype[props.getterName] = function () {\n            this[props.privateName] = this[props.privateName] || new props.ListClass();\n            return this[props.privateName];\n        };\n    });\n    Tech.prototype.featuresVolumeControl = true;\n    Tech.prototype.featuresMuteControl = true;\n    Tech.prototype.featuresFullscreenResize = false;\n    Tech.prototype.featuresPlaybackRate = false;\n    Tech.prototype.featuresProgressEvents = false;\n    Tech.prototype.featuresSourceset = false;\n    Tech.prototype.featuresTimeupdateEvents = false;\n    Tech.prototype.featuresNativeTextTracks = false;\n    Tech.withSourceHandlers = function (_Tech) {\n        _Tech.registerSourceHandler = function (handler, index) {\n            let handlers = _Tech.sourceHandlers;\n            if (!handlers) {\n                handlers = _Tech.sourceHandlers = [];\n            }\n            if (index === undefined) {\n                index = handlers.length;\n            }\n            handlers.splice(index, 0, handler);\n        };\n        _Tech.canPlayType = function (type) {\n            const handlers = _Tech.sourceHandlers || [];\n            let can;\n            for (let i = 0; i < handlers.length; i++) {\n                can = handlers[i].canPlayType(type);\n                if (can) {\n                    return can;\n                }\n            }\n            return '';\n        };\n        _Tech.selectSourceHandler = function (source, options) {\n            const handlers = _Tech.sourceHandlers || [];\n            let can;\n            for (let i = 0; i < handlers.length; i++) {\n                can = handlers[i].canHandleSource(source, options);\n                if (can) {\n                    return handlers[i];\n                }\n            }\n            return null;\n        };\n        _Tech.canPlaySource = function (srcObj, options) {\n            const sh = _Tech.selectSourceHandler(srcObj, options);\n            if (sh) {\n                return sh.canHandleSource(srcObj, options);\n            }\n            return '';\n        };\n        const deferrable = [\n            'seekable',\n            'seeking',\n            'duration'\n        ];\n        deferrable.forEach(function (fnName) {\n            const originalFn = this[fnName];\n            if (typeof originalFn !== 'function') {\n                return;\n            }\n            this[fnName] = function () {\n                if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n                    return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n                }\n                return originalFn.apply(this, arguments);\n            };\n        }, _Tech.prototype);\n        _Tech.prototype.setSource = function (source) {\n            let sh = _Tech.selectSourceHandler(source, this.options_);\n            if (!sh) {\n                if (_Tech.nativeSourceHandler) {\n                    sh = _Tech.nativeSourceHandler;\n                } else {\n                    log.error('No source handler found for the current source.');\n                }\n            }\n            this.disposeSourceHandler();\n            this.unlistenTo('dispose', this.disposeSourceHandler);\n            if (sh !== _Tech.nativeSourceHandler) {\n                this.currentSource_ = source;\n            }\n            this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n            this.listenToOnce('dispose', this.disposeSourceHandler);\n        };\n        _Tech.prototype.disposeSourceHandler = function () {\n            if (this.currentSource_) {\n                this.clearTracks([\n                    'audio',\n                    'video'\n                ]);\n                this.currentSource_ = null;\n            }\n            this.cleanupAutoTextTracks();\n            if (this.sourceHandler_) {\n                if (this.sourceHandler_.dispose) {\n                    this.sourceHandler_.dispose();\n                }\n                this.sourceHandler_ = null;\n            }\n        };\n    };\n    Component.registerComponent('Tech', Tech);\n    Tech.registerTech('Tech', Tech);\n    Tech.defaultTechOrder_ = [];\n    return Tech;\n});\ndefine('skylark-videojs/tech/middleware',[\n    '../utils/obj',\n    '../utils/string-cases'\n], function (obj, stringCases) {\n    'use strict';\n    const middlewares = {};\n    const middlewareInstances = {};\n    const TERMINATOR = {};\n    function use(type, middleware) {\n        middlewares[type] = middlewares[type] || [];\n        middlewares[type].push(middleware);\n    }\n    function getMiddleware(type) {\n        if (type) {\n            return middlewares[type];\n        }\n        return middlewares;\n    }\n    function setSource(player, src, next) {\n        player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n    }\n    function setTech(middleware, tech) {\n        middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n    }\n    function get(middleware, tech, method) {\n        return middleware.reduceRight(middlewareIterator(method), tech[method]());\n    }\n    function set(middleware, tech, method, arg) {\n        return tech[method](middleware.reduce(middlewareIterator(method), arg));\n    }\n    function mediate(middleware, tech, method, arg = null) {\n        const callMethod = 'call' + stringCases.toTitleCase(method);\n        const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n        const terminated = middlewareValue === TERMINATOR;\n        const returnValue = terminated ? null : tech[method](middlewareValue);\n        executeRight(middleware, method, returnValue, terminated);\n        return returnValue;\n    }\n    const allowedGetters = {\n        buffered: 1,\n        currentTime: 1,\n        duration: 1,\n        muted: 1,\n        played: 1,\n        paused: 1,\n        seekable: 1,\n        volume: 1\n    };\n    const allowedSetters = {\n        setCurrentTime: 1,\n        setMuted: 1,\n        setVolume: 1\n    };\n    const allowedMediators = {\n        play: 1,\n        pause: 1\n    };\n    function middlewareIterator(method) {\n        return (value, mw) => {\n            if (value === TERMINATOR) {\n                return TERMINATOR;\n            }\n            if (mw[method]) {\n                return mw[method](value);\n            }\n            return value;\n        };\n    }\n    function executeRight(mws, method, value, terminated) {\n        for (let i = mws.length - 1; i >= 0; i--) {\n            const mw = mws[i];\n            if (mw[method]) {\n                mw[method](terminated, value);\n            }\n        }\n    }\n    function clearCacheForPlayer(player) {\n        middlewareInstances[player.id()] = null;\n    }\n    function getOrCreateFactory(player, mwFactory) {\n        const mws = middlewareInstances[player.id()];\n        let mw = null;\n        if (mws === undefined || mws === null) {\n            mw = mwFactory(player);\n            middlewareInstances[player.id()] = [[\n                    mwFactory,\n                    mw\n                ]];\n            return mw;\n        }\n        for (let i = 0; i < mws.length; i++) {\n            const [mwf, mwi] = mws[i];\n            if (mwf !== mwFactory) {\n                continue;\n            }\n            mw = mwi;\n        }\n        if (mw === null) {\n            mw = mwFactory(player);\n            mws.push([\n                mwFactory,\n                mw\n            ]);\n        }\n        return mw;\n    }\n    function setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n        const [mwFactory, ...mwrest] = middleware;\n        if (typeof mwFactory === 'string') {\n            setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n        } else if (mwFactory) {\n            const mw = getOrCreateFactory(player, mwFactory);\n            if (!mw.setSource) {\n                acc.push(mw);\n                return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n            }\n            mw.setSource(obj.assign({}, src), function (err, _src) {\n                if (err) {\n                    return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n                }\n                acc.push(mw);\n                setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n            });\n        } else if (mwrest.length) {\n            setSourceHelper(src, mwrest, next, player, acc, lastRun);\n        } else if (lastRun) {\n            next(src, acc);\n        } else {\n            setSourceHelper(src, middlewares['*'], next, player, acc, true);\n        }\n    }\n    return {\n        TERMINATOR: TERMINATOR,\n        use: use,\n        getMiddleware: getMiddleware,\n        setSource: setSource,\n        setTech: setTech,\n        get: get,\n        set: set,\n        mediate: mediate,\n        allowedGetters: allowedGetters,\n        allowedSetters: allowedSetters,\n        allowedMediators: allowedMediators,\n        clearCacheForPlayer: clearCacheForPlayer\n    };\n});\ndefine('skylark-videojs/utils/mimetypes',['./url'], function (Url) {\n    'use strict';\n    const MimetypesKind = {\n        opus: 'video/ogg',\n        ogv: 'video/ogg',\n        mp4: 'video/mp4',\n        mov: 'video/mp4',\n        m4v: 'video/mp4',\n        mkv: 'video/x-matroska',\n        m4a: 'audio/mp4',\n        mp3: 'audio/mpeg',\n        aac: 'audio/aac',\n        caf: 'audio/x-caf',\n        flac: 'audio/flac',\n        oga: 'audio/ogg',\n        wav: 'audio/wav',\n        m3u8: 'application/x-mpegURL',\n        jpg: 'image/jpeg',\n        jpeg: 'image/jpeg',\n        gif: 'image/gif',\n        png: 'image/png',\n        svg: 'image/svg+xml',\n        webp: 'image/webp'\n    };\n    const getMimetype = function (src = '') {\n        const ext = Url.getFileExtension(src);\n        const mimetype = MimetypesKind[ext.toLowerCase()];\n        return mimetype || '';\n    };\n    const findMimetype = (player, src) => {\n        if (!src) {\n            return '';\n        }\n        if (player.cache_.source.src === src && player.cache_.source.type) {\n            return player.cache_.source.type;\n        }\n        const matchingSources = player.cache_.sources.filter(s => s.src === src);\n        if (matchingSources.length) {\n            return matchingSources[0].type;\n        }\n        const sources = player.$$('source');\n        for (let i = 0; i < sources.length; i++) {\n            const s = sources[i];\n            if (s.type && s.src && s.src === src) {\n                return s.type;\n            }\n        }\n        return getMimetype(src);\n    };\n    return {\n        MimetypesKind: MimetypesKind,\n        getMimetype: getMimetype,\n        findMimetype: findMimetype\n    };\n});\ndefine('skylark-videojs/utils/filter-source',[\n    './obj',\n    './mimetypes'\n], function (obj, mimetypes) {\n    'use strict';\n    const filterSource = function (src) {\n        if (Array.isArray(src)) {\n            let newsrc = [];\n            src.forEach(function (srcobj) {\n                srcobj = filterSource(srcobj);\n                if (Array.isArray(srcobj)) {\n                    newsrc = newsrc.concat(srcobj);\n                } else if (obj.isObject(srcobj)) {\n                    newsrc.push(srcobj);\n                }\n            });\n            src = newsrc;\n        } else if (typeof src === 'string' && src.trim()) {\n            src = [fixSource({ src })];\n        } else if (obj.isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n            src = [fixSource(src)];\n        } else {\n            src = [];\n        }\n        return src;\n    };\n    function fixSource(src) {\n        if (!src.type) {\n            const mimetype = mimetypes.getMimetype(src.src);\n            if (mimetype) {\n                src.type = mimetype;\n            }\n        }\n        return src;\n    }\n    return filterSource;\n});\ndefine('skylark-videojs/tech/loader',[\n    '../component',\n    './tech',\n    '../utils/string-cases',\n    '../utils/merge-options'\n], function (Component, Tech, stringCases, mergeOptions) {\n    'use strict';\n    class MediaLoader extends Component {\n        constructor(player, options, ready) {\n            const options_ = mergeOptions({ createEl: false }, options);\n            super(player, options_, ready);\n            if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n                for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n                    const techName = stringCases.toTitleCase(j[i]);\n                    let tech = Tech.getTech(techName);\n                    if (!techName) {\n                        tech = Component.getComponent(techName);\n                    }\n                    if (tech && tech.isSupported()) {\n                        player.loadTech_(techName);\n                        break;\n                    }\n                }\n            } else {\n                player.src(options.playerOptions.sources);\n            }\n        }\n    }\n    Component.registerComponent('MediaLoader', MediaLoader);\n    return MediaLoader;\n});\ndefine('skylark-videojs/clickable-component',[\n    './component',\n    './utils/dom',\n    './utils/log',\n    './utils/obj',\n    './utils/keycode'\n], function (Component, Dom, log, obj, keycode) {\n    'use strict';\n    class ClickableComponent extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.emitTapEvents();\n            this.enable();\n        }\n        createEl(tag = 'div', props = {}, attributes = {}) {\n            props = obj.assign({\n                innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n                className: this.buildCSSClass(),\n                tabIndex: 0\n            }, props);\n            if (tag === 'button') {\n                log.error(`Creating a ClickableComponent with an HTML element of ${ tag } is not supported; use a Button instead.`);\n            }\n            attributes = obj.assign({ role: 'button' }, attributes);\n            this.tabIndex_ = props.tabIndex;\n            const el = super.createEl(tag, props, attributes);\n            this.createControlTextEl(el);\n            return el;\n        }\n        dispose() {\n            this.controlTextEl_ = null;\n            super.dispose();\n        }\n        createControlTextEl(el) {\n            this.controlTextEl_ = Dom.createEl('span', { className: 'vjs-control-text' }, { 'aria-live': 'polite' });\n            if (el) {\n                el.appendChild(this.controlTextEl_);\n            }\n            this.controlText(this.controlText_, el);\n            return this.controlTextEl_;\n        }\n        controlText(text, el = this.el()) {\n            if (text === undefined) {\n                return this.controlText_ || 'Need Text';\n            }\n            const localizedText = this.localize(text);\n            this.controlText_ = text;\n            Dom.textContent(this.controlTextEl_, localizedText);\n            if (!this.nonIconControl) {\n                el.setAttribute('title', localizedText);\n            }\n        }\n        buildCSSClass() {\n            return `vjs-control vjs-button ${ super.buildCSSClass() }`;\n        }\n        enable() {\n            if (!this.enabled_) {\n                this.enabled_ = true;\n                this.removeClass('vjs-disabled');\n                this.el_.setAttribute('aria-disabled', 'false');\n                if (typeof this.tabIndex_ !== 'undefined') {\n                    this.el_.setAttribute('tabIndex', this.tabIndex_);\n                }\n                this.listenTo([\n                    'tap',\n                    'click'\n                ], this.handleClick);\n                this.listenTo('keydown', this.handleKeyDown);\n            }\n        }\n        disable() {\n            this.enabled_ = false;\n            this.addClass('vjs-disabled');\n            this.el_.setAttribute('aria-disabled', 'true');\n            if (typeof this.tabIndex_ !== 'undefined') {\n                this.el_.removeAttribute('tabIndex');\n            }\n            this.unlistenTo('mouseover', this.handleMouseOver);\n            this.unlistenTo('mouseout', this.handleMouseOut);\n            this.unlistenTo([\n                'tap',\n                'click'\n            ], this.handleClick);\n            this.unlistenTo('keydown', this.handleKeyDown);\n        }\n        handleLanguagechange() {\n            this.controlText(this.controlText_);\n        }\n        handleClick(event) {\n            if (this.options_.clickHandler) {\n                this.options_.clickHandler.call(this, arguments);\n            }\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.trigger('click');\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n    }\n    Component.registerComponent('ClickableComponent', ClickableComponent);\n    return ClickableComponent;\n});\ndefine('skylark-videojs/poster-image',[\n    './clickable-component',\n    './component',\n    './utils/fn',\n    './utils/dom',\n    './utils/promise',\n    './utils/browser'\n], function (ClickableComponent, Component, Fn, Dom, promise, browser) {\n    'use strict';\n    class PosterImage extends ClickableComponent {\n        constructor(player, options) {\n            super(player, options);\n            this.update();\n            player.on('posterchange', Fn.bind(this, this.update));\n        }\n        dispose() {\n            this.player().off('posterchange', this.update);\n            super.dispose();\n        }\n        createEl() {\n            const el = Dom.createEl('div', {\n                className: 'vjs-poster',\n                tabIndex: -1\n            });\n            return el;\n        }\n        update(event) {\n            const url = this.player().poster();\n            this.setSrc(url);\n            if (url) {\n                this.show();\n            } else {\n                this.hide();\n            }\n        }\n        setSrc(url) {\n            let backgroundImage = '';\n            if (url) {\n                backgroundImage = `url(\"${ url }\")`;\n            }\n            this.el_.style.backgroundImage = backgroundImage;\n        }\n        handleClick(event) {\n            if (!this.player_.controls()) {\n                return;\n            }\n            const sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n            if (this.player_.tech(true) && !((browser.IE_VERSION || browser.IS_EDGE) && sourceIsEncrypted)) {\n                this.player_.tech(true).focus();\n            }\n            if (this.player_.paused()) {\n                promise.silencePromise(this.player_.play());\n            } else {\n                this.player_.pause();\n            }\n        }\n    }\n    Component.registerComponent('PosterImage', PosterImage);\n    return PosterImage;\n});\ndefine('skylark-videojs/tracks/text-track-display',[\n    '../component',\n    '../utils/fn',\n    '../utils/dom'\n], function (Component, Fn, Dom) {\n    'use strict';\n    const darkGray = '#222';\n    const lightGray = '#ccc';\n    const fontMap = {\n        monospace: 'monospace',\n        sansSerif: 'sans-serif',\n        serif: 'serif',\n        monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n        monospaceSerif: '\"Courier New\", monospace',\n        proportionalSansSerif: 'sans-serif',\n        proportionalSerif: 'serif',\n        casual: '\"Comic Sans MS\", Impact, fantasy',\n        script: '\"Monotype Corsiva\", cursive',\n        smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n    };\n    function constructColor(color, opacity) {\n        let hex;\n        if (color.length === 4) {\n            hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n        } else if (color.length === 7) {\n            hex = color.slice(1);\n        } else {\n            throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n        }\n        return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n    }\n    function tryUpdateStyle(el, style, rule) {\n        try {\n            el.style[style] = rule;\n        } catch (e) {\n            return;\n        }\n    }\n    class TextTrackDisplay extends Component {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n            const updateDisplayHandler = Fn.bind(this, this.updateDisplay);\n            player.on('loadstart', Fn.bind(this, this.toggleDisplay));\n            player.on('texttrackchange', updateDisplayHandler);\n            player.on('loadedmetadata', Fn.bind(this, this.preselectTrack));\n            player.ready(Fn.bind(this, function () {\n                if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n                    this.hide();\n                    return;\n                }\n                player.on('fullscreenchange', updateDisplayHandler);\n                player.on('playerresize', updateDisplayHandler);\n                window.addEventListener('orientationchange', updateDisplayHandler);\n                player.on('dispose', () => window.removeEventListener('orientationchange', updateDisplayHandler));\n                const tracks = this.options_.playerOptions.tracks || [];\n                for (let i = 0; i < tracks.length; i++) {\n                    this.player_.addRemoteTextTrack(tracks[i], true);\n                }\n                this.preselectTrack();\n            }));\n        }\n        preselectTrack() {\n            const modes = {\n                captions: 1,\n                subtitles: 1\n            };\n            const trackList = this.player_.textTracks();\n            const userPref = this.player_.cache_.selectedLanguage;\n            let firstDesc;\n            let firstCaptions;\n            let preferredTrack;\n            for (let i = 0; i < trackList.length; i++) {\n                const track = trackList[i];\n                if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n                    if (track.kind === userPref.kind) {\n                        preferredTrack = track;\n                    } else if (!preferredTrack) {\n                        preferredTrack = track;\n                    }\n                } else if (userPref && !userPref.enabled) {\n                    preferredTrack = null;\n                    firstDesc = null;\n                    firstCaptions = null;\n                } else if (track.default) {\n                    if (track.kind === 'descriptions' && !firstDesc) {\n                        firstDesc = track;\n                    } else if (track.kind in modes && !firstCaptions) {\n                        firstCaptions = track;\n                    }\n                }\n            }\n            if (preferredTrack) {\n                preferredTrack.mode = 'showing';\n            } else if (firstCaptions) {\n                firstCaptions.mode = 'showing';\n            } else if (firstDesc) {\n                firstDesc.mode = 'showing';\n            }\n        }\n        toggleDisplay() {\n            if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n                this.hide();\n            } else {\n                this.show();\n            }\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-text-track-display' }, {\n                'aria-live': 'off',\n                'aria-atomic': 'true'\n            });\n        }\n        clearDisplay() {\n            if (typeof window.WebVTT === 'function') {\n                window.WebVTT.processCues(window, [], this.el_);\n            }\n        }\n        updateDisplay() {\n            const tracks = this.player_.textTracks();\n            const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n            this.clearDisplay();\n            if (allowMultipleShowingTracks) {\n                const showingTracks = [];\n                for (let i = 0; i < tracks.length; ++i) {\n                    const track = tracks[i];\n                    if (track.mode !== 'showing') {\n                        continue;\n                    }\n                    showingTracks.push(track);\n                }\n                this.updateForTrack(showingTracks);\n                return;\n            }\n            let descriptionsTrack = null;\n            let captionsSubtitlesTrack = null;\n            let i = tracks.length;\n            while (i--) {\n                const track = tracks[i];\n                if (track.mode === 'showing') {\n                    if (track.kind === 'descriptions') {\n                        descriptionsTrack = track;\n                    } else {\n                        captionsSubtitlesTrack = track;\n                    }\n                }\n            }\n            if (captionsSubtitlesTrack) {\n                if (this.getAttribute('aria-live') !== 'off') {\n                    this.setAttribute('aria-live', 'off');\n                }\n                this.updateForTrack(captionsSubtitlesTrack);\n            } else if (descriptionsTrack) {\n                if (this.getAttribute('aria-live') !== 'assertive') {\n                    this.setAttribute('aria-live', 'assertive');\n                }\n                this.updateForTrack(descriptionsTrack);\n            }\n        }\n        updateDisplayState(track) {\n            const overrides = this.player_.textTrackSettings.getValues();\n            const cues = track.activeCues;\n            let i = cues.length;\n            while (i--) {\n                const cue = cues[i];\n                if (!cue) {\n                    continue;\n                }\n                const cueDiv = cue.displayState;\n                if (overrides.color) {\n                    cueDiv.firstChild.style.color = overrides.color;\n                }\n                if (overrides.textOpacity) {\n                    tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n                }\n                if (overrides.backgroundColor) {\n                    cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n                }\n                if (overrides.backgroundOpacity) {\n                    tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n                }\n                if (overrides.windowColor) {\n                    if (overrides.windowOpacity) {\n                        tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n                    } else {\n                        cueDiv.style.backgroundColor = overrides.windowColor;\n                    }\n                }\n                if (overrides.edgeStyle) {\n                    if (overrides.edgeStyle === 'dropshadow') {\n                        cueDiv.firstChild.style.textShadow = `2px 2px 3px ${ darkGray }, 2px 2px 4px ${ darkGray }, 2px 2px 5px ${ darkGray }`;\n                    } else if (overrides.edgeStyle === 'raised') {\n                        cueDiv.firstChild.style.textShadow = `1px 1px ${ darkGray }, 2px 2px ${ darkGray }, 3px 3px ${ darkGray }`;\n                    } else if (overrides.edgeStyle === 'depressed') {\n                        cueDiv.firstChild.style.textShadow = `1px 1px ${ lightGray }, 0 1px ${ lightGray }, -1px -1px ${ darkGray }, 0 -1px ${ darkGray }`;\n                    } else if (overrides.edgeStyle === 'uniform') {\n                        cueDiv.firstChild.style.textShadow = `0 0 4px ${ darkGray }, 0 0 4px ${ darkGray }, 0 0 4px ${ darkGray }, 0 0 4px ${ darkGray }`;\n                    }\n                }\n                if (overrides.fontPercent && overrides.fontPercent !== 1) {\n                    const fontSize = window.parseFloat(cueDiv.style.fontSize);\n                    cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n                    cueDiv.style.height = 'auto';\n                    cueDiv.style.top = 'auto';\n                }\n                if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n                    if (overrides.fontFamily === 'small-caps') {\n                        cueDiv.firstChild.style.fontVariant = 'small-caps';\n                    } else {\n                        cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n                    }\n                }\n            }\n        }\n        updateForTrack(tracks) {\n            if (!Array.isArray(tracks)) {\n                tracks = [tracks];\n            }\n            if (typeof window.WebVTT !== 'function' || tracks.every(track => {\n                    return !track.activeCues;\n                })) {\n                return;\n            }\n            const cues = [];\n            for (let i = 0; i < tracks.length; ++i) {\n                const track = tracks[i];\n                for (let j = 0; j < track.activeCues.length; ++j) {\n                    cues.push(track.activeCues[j]);\n                }\n            }\n            window.WebVTT.processCues(window, cues, this.el_);\n            for (let i = 0; i < tracks.length; ++i) {\n                const track = tracks[i];\n                for (let j = 0; j < track.activeCues.length; ++j) {\n                    const cueEl = track.activeCues[j].displayState;\n                    Dom.addClass(cueEl, 'vjs-text-track-cue');\n                    Dom.addClass(cueEl, 'vjs-text-track-cue-' + (track.language ? track.language : i));\n                }\n                if (this.player_.textTrackSettings) {\n                    this.updateDisplayState(track);\n                }\n            }\n        }\n    }\n    \n    Component.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n\n    TextTrackDisplay.constructColor = constructColor;\n\n    return TextTrackDisplay;\n});\ndefine('skylark-videojs/loading-spinner',[\n    './component',\n    './utils/dom'\n], function (Component, dom) {\n    'use strict';\n    class LoadingSpinner extends Component {\n        createEl() {\n            const isAudio = this.player_.isAudio();\n            const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n            const controlText = dom.createEl('span', {\n                className: 'vjs-control-text',\n                innerHTML: this.localize('{1} is loading.', [playerType])\n            });\n            const el = super.createEl('div', {\n                className: 'vjs-loading-spinner',\n                dir: 'ltr'\n            });\n            el.appendChild(controlText);\n            return el;\n        }\n    }\n    Component.registerComponent('LoadingSpinner', LoadingSpinner);\n    return LoadingSpinner;\n});\ndefine('skylark-videojs/button',[\n    './clickable-component',\n    './component',\n    './utils/log',\n    './utils/obj',\n    './utils/keycode'\n], function (ClickableComponent, Component, log, obj, keycode) {\n    'use strict';\n    class Button extends ClickableComponent {\n        createEl(tag, props = {}, attributes = {}) {\n            tag = 'button';\n            props = obj.assign({\n                innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n                className: this.buildCSSClass()\n            }, props);\n            attributes = obj.assign({ type: 'button' }, attributes);\n            const el = Component.prototype.createEl.call(this, tag, props, attributes);\n            this.createControlTextEl(el);\n            return el;\n        }\n        addChild(child, options = {}) {\n            const className = this.constructor.name;\n            log.warn(`Adding an actionable (user controllable) child to a Button (${ className }) is not supported; use a ClickableComponent instead.`);\n            return Component.prototype.addChild.call(this, child, options);\n        }\n        enable() {\n            super.enable();\n            this.el_.removeAttribute('disabled');\n        }\n        disable() {\n            super.disable();\n            this.el_.setAttribute('disabled', 'disabled');\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n                event.stopPropagation();\n                return;\n            }\n            super.handleKeyDown(event);\n        }\n    }\n    Component.registerComponent('Button', Button);\n    return Button;\n});\ndefine('skylark-videojs/big-play-button',[\n    './button',\n    './component',\n    './utils/promise',\n    './utils/browser'\n], function (Button, Component, promise, browser) {\n    'use strict';\n    class BigPlayButton extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.mouseused_ = false;\n            this.listenTo('mousedown', this.handleMouseDown);\n        }\n        buildCSSClass() {\n            return 'vjs-big-play-button';\n        }\n        handleClick(event) {\n            const playPromise = this.player_.play();\n            if (this.mouseused_ && event.clientX && event.clientY) {\n                const sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n                promise.silencePromise(playPromise);\n                if (this.player_.tech(true) && !((browser.IE_VERSION || browser.IS_EDGE) && sourceIsEncrypted)) {\n                    this.player_.tech(true).focus();\n                }\n                return;\n            }\n            const cb = this.player_.getChild('controlBar');\n            const playToggle = cb && cb.getChild('playToggle');\n            if (!playToggle) {\n                this.player_.tech(true).focus();\n                return;\n            }\n            const playFocus = () => playToggle.focus();\n            if (promise.isPromise(playPromise)) {\n                playPromise.then(playFocus, () => {\n                });\n            } else {\n                this.setTimeout(playFocus, 1);\n            }\n        }\n        handleKeyDown(event) {\n            this.mouseused_ = false;\n            super.handleKeyDown(event);\n        }\n        handleMouseDown(event) {\n            this.mouseused_ = true;\n        }\n    }\n    BigPlayButton.prototype.controlText_ = 'Play Video';\n    Component.registerComponent('BigPlayButton', BigPlayButton);\n    return BigPlayButton;\n});\ndefine('skylark-videojs/close-button',[\n    './button',\n    './component',\n    './utils/keycode'\n], function (Button, Component, keycode) {\n    'use strict';\n    class CloseButton extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.controlText(options && options.controlText || this.localize('Close'));\n        }\n        buildCSSClass() {\n            return `vjs-close-button ${ super.buildCSSClass() }`;\n        }\n        handleClick(event) {\n            this.trigger({\n                type: 'close',\n                bubbles: false\n            });\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.trigger('click');\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n    }\n    Component.registerComponent('CloseButton', CloseButton);\n    return CloseButton;\n});\ndefine('skylark-videojs/control-bar/play-toggle',[\n    '../button',\n    '../component'\n], function (Button, Component) {\n    'use strict';\n    class PlayToggle extends Button {\n        constructor(player, options = {}) {\n            super(player, options);\n            options.replay = options.replay === undefined || options.replay;\n            this.listenTo(player, 'play', this.handlePlay);\n            this.listenTo(player, 'pause', this.handlePause);\n            if (options.replay) {\n                this.listenTo(player, 'ended', this.handleEnded);\n            }\n        }\n        buildCSSClass() {\n            return `vjs-play-control ${ super.buildCSSClass() }`;\n        }\n        handleClick(event) {\n            if (this.player_.paused()) {\n                this.player_.play();\n            } else {\n                this.player_.pause();\n            }\n        }\n        handleSeeked(event) {\n            this.removeClass('vjs-ended');\n            if (this.player_.paused()) {\n                this.handlePause(event);\n            } else {\n                this.handlePlay(event);\n            }\n        }\n        handlePlay(event) {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-paused');\n            this.addClass('vjs-playing');\n            this.controlText('Pause');\n        }\n        handlePause(event) {\n            this.removeClass('vjs-playing');\n            this.addClass('vjs-paused');\n            this.controlText('Play');\n        }\n        handleEnded(event) {\n            this.removeClass('vjs-playing');\n            this.addClass('vjs-ended');\n            this.controlText('Replay');\n            this.listenToOnce(this.player_, 'seeked', this.handleSeeked);\n        }\n    }\n    PlayToggle.prototype.controlText_ = 'Play';\n    Component.registerComponent('PlayToggle', PlayToggle);\n    return PlayToggle;\n});\ndefine('skylark-videojs/utils/format-time',[],function () {\n    'use strict';\n    const defaultImplementation = function (seconds, guide) {\n        seconds = seconds < 0 ? 0 : seconds;\n        let s = Math.floor(seconds % 60);\n        let m = Math.floor(seconds / 60 % 60);\n        let h = Math.floor(seconds / 3600);\n        const gm = Math.floor(guide / 60 % 60);\n        const gh = Math.floor(guide / 3600);\n        if (isNaN(seconds) || seconds === Infinity) {\n            h = m = s = '-';\n        }\n        h = h > 0 || gh > 0 ? h + ':' : '';\n        m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n        s = s < 10 ? '0' + s : s;\n        return h + m + s;\n    };\n    let implementation = defaultImplementation;\n    function setFormatTime(customImplementation) {\n        implementation = customImplementation;\n    }\n    function resetFormatTime() {\n        implementation = defaultImplementation;\n    }\n    function formatTime(seconds, guide = seconds) {\n        return implementation(seconds, guide);\n    }\n\n    formatTime.setFormatTime = setFormatTime;\n    formatTime.resetFormatTime = resetFormatTime;\n\n    return   formatTime;\n});\ndefine('skylark-videojs/control-bar/time-controls/time-display',[\n    'skylark-langx-globals/document',\n    '../../component',\n    '../../utils/dom',\n    '../../utils/format-time',\n    '../../utils/log'\n], function (document, Component, Dom, formatTime, log) {\n    'use strict';\n    class TimeDisplay extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, [\n                'timeupdate',\n                'ended'\n            ], this.updateContent);\n            this.updateTextNode_();\n        }\n        createEl() {\n            const className = this.buildCSSClass();\n            const el = super.createEl('div', {\n                className: `${ className } vjs-time-control vjs-control`,\n                innerHTML: `<span class=\"vjs-control-text\" role=\"presentation\">${ this.localize(this.labelText_) }\\u00a0</span>`\n            });\n            this.contentEl_ = Dom.createEl('span', { className: `${ className }-display` }, {\n                'aria-live': 'off',\n                'role': 'presentation'\n            });\n            el.appendChild(this.contentEl_);\n            return el;\n        }\n        dispose() {\n            this.contentEl_ = null;\n            this.textNode_ = null;\n            super.dispose();\n        }\n        updateTextNode_(time = 0) {\n            time = formatTime(time);\n            if (this.formattedTime_ === time) {\n                return;\n            }\n            this.formattedTime_ = time;\n            this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n                if (!this.contentEl_) {\n                    return;\n                }\n                let oldNode = this.textNode_;\n                if (oldNode && this.contentEl_.firstChild !== oldNode) {\n                    oldNode = null;\n                    log.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n                }\n                this.textNode_ = document.createTextNode(this.formattedTime_);\n                if (!this.textNode_) {\n                    return;\n                }\n                if (oldNode) {\n                    this.contentEl_.replaceChild(this.textNode_, oldNode);\n                } else {\n                    this.contentEl_.appendChild(this.textNode_);\n                }\n            });\n        }\n        updateContent(event) {\n        }\n    }\n    TimeDisplay.prototype.labelText_ = 'Time';\n    TimeDisplay.prototype.controlText_ = 'Time';\n    Component.registerComponent('TimeDisplay', TimeDisplay);\n    return TimeDisplay;\n});\ndefine('skylark-videojs/control-bar/time-controls/current-time-display',[\n    './time-display',\n    '../../component'\n], function (TimeDisplay, Component) {\n    'use strict';\n    class CurrentTimeDisplay extends TimeDisplay {\n        buildCSSClass() {\n            return 'vjs-current-time';\n        }\n        updateContent(event) {\n            let time;\n            if (this.player_.ended()) {\n                time = this.player_.duration();\n            } else {\n                time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n            }\n            this.updateTextNode_(time);\n        }\n    }\n    CurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n    CurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n    Component.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n    return CurrentTimeDisplay;\n});\ndefine('skylark-videojs/control-bar/time-controls/duration-display',[\n    './time-display',\n    '../../component'\n], function (TimeDisplay, Component) {\n    'use strict';\n    class DurationDisplay extends TimeDisplay {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, 'durationchange', this.updateContent);\n            this.listenTo(player, 'loadstart', this.updateContent);\n            this.listenTo(player, 'loadedmetadata', this.updateContent);\n        }\n        buildCSSClass() {\n            return 'vjs-duration';\n        }\n        updateContent(event) {\n            const duration = this.player_.duration();\n            this.updateTextNode_(duration);\n        }\n    }\n    DurationDisplay.prototype.labelText_ = 'Duration';\n    DurationDisplay.prototype.controlText_ = 'Duration';\n    Component.registerComponent('DurationDisplay', DurationDisplay);\n    return DurationDisplay;\n});\ndefine('skylark-videojs/control-bar/time-controls/time-divider',[\n    '../../component'\n], function (Component) {\n    'use strict';\n    class TimeDivider extends Component {\n        createEl() {\n            return super.createEl('div', {\n                className: 'vjs-time-control vjs-time-divider',\n                innerHTML: '<div><span>/</span></div>'\n            }, { 'aria-hidden': true });\n        }\n    }\n    Component.registerComponent('TimeDivider', TimeDivider);\n    return TimeDivider;\n});\ndefine('skylark-videojs/control-bar/time-controls/remaining-time-display',[\n    './time-display',\n    '../../component',\n    '../../utils/dom'\n], function (TimeDisplay, Component, Dom) {\n    'use strict';\n    class RemainingTimeDisplay extends TimeDisplay {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, 'durationchange', this.updateContent);\n        }\n        buildCSSClass() {\n            return 'vjs-remaining-time';\n        }\n        createEl() {\n            const el = super.createEl();\n            el.insertBefore(Dom.createEl('span', {}, { 'aria-hidden': true }, '-'), this.contentEl_);\n            return el;\n        }\n        updateContent(event) {\n            if (typeof this.player_.duration() !== 'number') {\n                return;\n            }\n            let time;\n            if (this.player_.ended()) {\n                time = 0;\n            } else if (this.player_.remainingTimeDisplay) {\n                time = this.player_.remainingTimeDisplay();\n            } else {\n                time = this.player_.remainingTime();\n            }\n            this.updateTextNode_(time);\n        }\n    }\n    RemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n    RemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n    Component.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n    return RemainingTimeDisplay;\n});\ndefine('skylark-videojs/control-bar/live-display',[\n    '../component',\n    '../utils/dom'\n], function (Component, Dom) {\n    'use strict';\n    class LiveDisplay extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.updateShowing();\n            this.listenTo(this.player(), 'durationchange', this.updateShowing);\n        }\n        createEl() {\n            const el = super.createEl('div', { className: 'vjs-live-control vjs-control' });\n            this.contentEl_ = Dom.createEl('div', {\n                className: 'vjs-live-display',\n                innerHTML: `<span class=\"vjs-control-text\">${ this.localize('Stream Type') }\\u00a0</span>${ this.localize('LIVE') }`\n            }, { 'aria-live': 'off' });\n            el.appendChild(this.contentEl_);\n            return el;\n        }\n        dispose() {\n            this.contentEl_ = null;\n            super.dispose();\n        }\n        updateShowing(event) {\n            if (this.player().duration() === Infinity) {\n                this.show();\n            } else {\n                this.hide();\n            }\n        }\n    }\n    Component.registerComponent('LiveDisplay', LiveDisplay);\n    return LiveDisplay;\n});\ndefine('skylark-videojs/control-bar/seek-to-live',[\n    '../button',\n    '../component',\n    '../utils/dom'\n], function (Button, Component, Dom) {\n    'use strict';\n    class SeekToLive extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.updateLiveEdgeStatus();\n            if (this.player_.liveTracker) {\n                this.listenTo(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n            }\n        }\n        createEl() {\n            const el = super.createEl('button', { className: 'vjs-seek-to-live-control vjs-control' });\n            this.textEl_ = Dom.createEl('span', {\n                className: 'vjs-seek-to-live-text',\n                innerHTML: this.localize('LIVE')\n            }, { 'aria-hidden': 'true' });\n            el.appendChild(this.textEl_);\n            return el;\n        }\n        updateLiveEdgeStatus() {\n            if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n                this.setAttribute('aria-disabled', true);\n                this.addClass('vjs-at-live-edge');\n                this.controlText('Seek to live, currently playing live');\n            } else {\n                this.setAttribute('aria-disabled', false);\n                this.removeClass('vjs-at-live-edge');\n                this.controlText('Seek to live, currently behind live');\n            }\n        }\n        handleClick() {\n            this.player_.liveTracker.seekToLiveEdge();\n        }\n        dispose() {\n            if (this.player_.liveTracker) {\n                this.unlistenTo(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n            }\n            this.textEl_ = null;\n            super.dispose();\n        }\n    }\n    SeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\n    Component.registerComponent('SeekToLive', SeekToLive);\n    return SeekToLive;\n});\ndefine('skylark-videojs/utils/clamp',[],function () {\n    'use strict';\n    const clamp = function (number, min, max) {\n        number = Number(number);\n        return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n    };\n    return clamp;\n});\ndefine('skylark-videojs/slider/slider',[\n    '../component',\n    '../utils/dom',\n    '../utils/obj',\n    '../utils/browser',\n    '../utils/clamp',\n    '../utils/keycode'\n], function (Component, Dom, obj, browser, clamp, keycode) {\n    'use strict';\n    class Slider extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.bar = this.getChild(this.options_.barName);\n            this.vertical(!!this.options_.vertical);\n            this.enable();\n        }\n        enabled() {\n            return this.enabled_;\n        }\n        enable() {\n            if (this.enabled()) {\n                return;\n            }\n            this.listenTo('mousedown', this.handleMouseDown);\n            this.listenTo('touchstart', this.handleMouseDown);\n            this.listenTo('keydown', this.handleKeyDown);\n            this.listenTo('click', this.handleClick);\n            this.listenTo(this.player_, 'controlsvisible', this.update);\n            if (this.playerEvent) {\n                this.listenTo(this.player_, this.playerEvent, this.update);\n            }\n            this.removeClass('disabled');\n            this.setAttribute('tabindex', 0);\n            this.enabled_ = true;\n        }\n        disable() {\n            if (!this.enabled()) {\n                return;\n            }\n            const doc = this.bar.el_.ownerDocument;\n            this.unlistenTo('mousedown', this.handleMouseDown);\n            this.unlistenTo('touchstart', this.handleMouseDown);\n            this.unlistenTo('keydown', this.handleKeyDown);\n            this.unlistenTo('click', this.handleClick);\n            this.unlistenTo(this.player_, 'controlsvisible', this.update);\n            this.unlistenTo(doc, 'mousemove', this.handleMouseMove);\n            this.unlistenTo(doc, 'mouseup', this.handleMouseUp);\n            this.unlistenTo(doc, 'touchmove', this.handleMouseMove);\n            this.unlistenTo(doc, 'touchend', this.handleMouseUp);\n            this.removeAttribute('tabindex');\n            this.addClass('disabled');\n            if (this.playerEvent) {\n                this.unlistenTo(this.player_, this.playerEvent, this.update);\n            }\n            this.enabled_ = false;\n        }\n        createEl(type, props = {}, attributes = {}) {\n            props.className = props.className + ' vjs-slider';\n            props = obj.assign({ tabIndex: 0 }, props);\n            attributes = obj.assign({\n                'role': 'slider',\n                'aria-valuenow': 0,\n                'aria-valuemin': 0,\n                'aria-valuemax': 100,\n                'tabIndex': 0\n            }, attributes);\n            return super.createEl(type, props, attributes);\n        }\n        handleMouseDown(event) {\n            const doc = this.bar.el_.ownerDocument;\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n            }\n            if (event.type === 'touchstart' && !browser.IS_CHROME) {\n                event.preventDefault();\n            }\n            Dom.blockTextSelection();\n            this.addClass('vjs-sliding');\n            this.trigger('slideractive');\n            this.listenTo(doc, 'mousemove', this.handleMouseMove);\n            this.listenTo(doc, 'mouseup', this.handleMouseUp);\n            this.listenTo(doc, 'touchmove', this.handleMouseMove);\n            this.listenTo(doc, 'touchend', this.handleMouseUp);\n            this.handleMouseMove(event);\n        }\n        handleMouseMove(event) {\n        }\n        handleMouseUp() {\n            const doc = this.bar.el_.ownerDocument;\n            Dom.unblockTextSelection();\n            this.removeClass('vjs-sliding');\n            this.trigger('sliderinactive');\n            this.unlistenTo(doc, 'mousemove', this.handleMouseMove);\n            this.unlistenTo(doc, 'mouseup', this.handleMouseUp);\n            this.unlistenTo(doc, 'touchmove', this.handleMouseMove);\n            this.unlistenTo(doc, 'touchend', this.handleMouseUp);\n            this.update();\n        }\n        update() {\n            if (!this.el_ || !this.bar) {\n                return;\n            }\n            const progress = this.getProgress();\n            if (progress === this.progress_) {\n                return progress;\n            }\n            this.progress_ = progress;\n            this.requestNamedAnimationFrame('Slider#update', () => {\n                const sizeKey = this.vertical() ? 'height' : 'width';\n                this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n            });\n            return progress;\n        }\n        getProgress() {\n            return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n        }\n        calculateDistance(event) {\n            const position = Dom.getPointerPosition(this.el_, event);\n            if (this.vertical()) {\n                return position.y;\n            }\n            return position.x;\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepBack();\n            } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepForward();\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n        handleClick(event) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n        vertical(bool) {\n            if (bool === undefined) {\n                return this.vertical_ || false;\n            }\n            this.vertical_ = !!bool;\n            if (this.vertical_) {\n                this.addClass('vjs-slider-vertical');\n            } else {\n                this.addClass('vjs-slider-horizontal');\n            }\n        }\n    }\n    Component.registerComponent('Slider', Slider);\n    return Slider;\n});\ndefine('skylark-videojs/control-bar/progress-control/load-progress-bar',[\n    'skylark-langx-globals/document',\n    '../../component',\n    '../../utils/dom',\n    '../../utils/clamp'\n], function (document,Component, Dom, clamp) {\n    'use strict';\n    const percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n    class LoadProgressBar extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.partEls_ = [];\n            this.listenTo(player, 'progress', this.update);\n        }\n        createEl() {\n            const el = super.createEl('div', { className: 'vjs-load-progress' });\n            const wrapper = Dom.createEl('span', { className: 'vjs-control-text' });\n            const loadedText = Dom.createEl('span', { textContent: this.localize('Loaded') });\n            const separator = document.createTextNode(': ');\n            this.percentageEl_ = Dom.createEl('span', {\n                className: 'vjs-control-text-loaded-percentage',\n                textContent: '0%'\n            });\n            el.appendChild(wrapper);\n            wrapper.appendChild(loadedText);\n            wrapper.appendChild(separator);\n            wrapper.appendChild(this.percentageEl_);\n            return el;\n        }\n        dispose() {\n            this.partEls_ = null;\n            this.percentageEl_ = null;\n            super.dispose();\n        }\n        update(event) {\n            this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n                const liveTracker = this.player_.liveTracker;\n                const buffered = this.player_.buffered();\n                const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n                const bufferedEnd = this.player_.bufferedEnd();\n                const children = this.partEls_;\n                const percent = percentify(bufferedEnd, duration);\n                if (this.percent_ !== percent) {\n                    this.el_.style.width = percent;\n                    Dom.textContent(this.percentageEl_, percent);\n                    this.percent_ = percent;\n                }\n                for (let i = 0; i < buffered.length; i++) {\n                    const start = buffered.start(i);\n                    const end = buffered.end(i);\n                    let part = children[i];\n                    if (!part) {\n                        part = this.el_.appendChild(Dom.createEl());\n                        children[i] = part;\n                    }\n                    if (part.dataset.start === start && part.dataset.end === end) {\n                        continue;\n                    }\n                    part.dataset.start = start;\n                    part.dataset.end = end;\n                    part.style.left = percentify(start, bufferedEnd);\n                    part.style.width = percentify(end - start, bufferedEnd);\n                }\n                for (let i = children.length; i > buffered.length; i--) {\n                    this.el_.removeChild(children[i - 1]);\n                }\n                children.length = buffered.length;\n            });\n        }\n    }\n    Component.registerComponent('LoadProgressBar', LoadProgressBar);\n    return LoadProgressBar;\n});\ndefine('skylark-videojs/control-bar/progress-control/time-tooltip',[\n    '../../component',\n    '../../utils/dom',\n    '../../utils/format-time',\n    '../../utils/fn'\n], function (Component, Dom, formatTime, Fn) {\n    'use strict';\n    class TimeTooltip extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.update = Fn.throttle(Fn.bind(this, this.update), Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-time-tooltip' }, { 'aria-hidden': 'true' });\n        }\n        update(seekBarRect, seekBarPoint, content) {\n            const tooltipRect = Dom.findPosition(this.el_);\n            const playerRect = Dom.getBoundingClientRect(this.player_.el());\n            const seekBarPointPx = seekBarRect.width * seekBarPoint;\n            if (!playerRect || !tooltipRect) {\n                return;\n            }\n            const spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n            const spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n            let pullTooltipBy = tooltipRect.width / 2;\n            if (spaceLeftOfPoint < pullTooltipBy) {\n                pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n            } else if (spaceRightOfPoint < pullTooltipBy) {\n                pullTooltipBy = spaceRightOfPoint;\n            }\n            if (pullTooltipBy < 0) {\n                pullTooltipBy = 0;\n            } else if (pullTooltipBy > tooltipRect.width) {\n                pullTooltipBy = tooltipRect.width;\n            }\n            pullTooltipBy = Math.round(pullTooltipBy);\n            this.el_.style.right = `-${ pullTooltipBy }px`;\n            this.write(content);\n        }\n        write(content) {\n            Dom.textContent(this.el_, content);\n        }\n        updateTime(seekBarRect, seekBarPoint, time, cb) {\n            this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n                let content;\n                const duration = this.player_.duration();\n                if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n                    const liveWindow = this.player_.liveTracker.liveWindow();\n                    const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n                    content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n                } else {\n                    content = formatTime(time, duration);\n                }\n                this.update(seekBarRect, seekBarPoint, content);\n                if (cb) {\n                    cb();\n                }\n            });\n        }\n    }\n    Component.registerComponent('TimeTooltip', TimeTooltip);\n    return TimeTooltip;\n});\ndefine('skylark-videojs/control-bar/progress-control/play-progress-bar',[\n    '../../component',\n    '../../utils/browser',\n    '../../utils/fn',\n    './time-tooltip'\n], function (Component, browser, Fn) {\n    'use strict';\n    class PlayProgressBar extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.update = Fn.throttle(Fn.bind(this, this.update), Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-play-progress vjs-slider-bar' }, { 'aria-hidden': 'true' });\n        }\n        update(seekBarRect, seekBarPoint) {\n            const timeTooltip = this.getChild('timeTooltip');\n            if (!timeTooltip) {\n                return;\n            }\n            const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n            timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n        }\n    }\n    PlayProgressBar.prototype.options_ = { children: [] };\n    if (!browser.IS_IOS && !browser.IS_ANDROID) {\n        PlayProgressBar.prototype.options_.children.push('timeTooltip');\n    }\n    Component.registerComponent('PlayProgressBar', PlayProgressBar);\n    return PlayProgressBar;\n});\ndefine('skylark-videojs/control-bar/progress-control/mouse-time-display',[\n    '../../component',\n    '../../utils/fn',\n    './time-tooltip'\n], function (Component, Fn) {\n    'use strict';\n    class MouseTimeDisplay extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.update = Fn.throttle(Fn.bind(this, this.update), Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-mouse-display' });\n        }\n        update(seekBarRect, seekBarPoint) {\n            const time = seekBarPoint * this.player_.duration();\n            this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n                this.el_.style.left = `${ seekBarRect.width * seekBarPoint }px`;\n            });\n        }\n    }\n    MouseTimeDisplay.prototype.options_ = { children: ['timeTooltip'] };\n    Component.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n    return MouseTimeDisplay;\n});\ndefine('skylark-videojs/control-bar/progress-control/seek-bar',[\n    'skylark-langx-globals/document',\n    '../../slider/slider',\n    '../../component',\n    '../../utils/browser',\n    '../../utils/dom',\n    '../../utils/fn',\n    '../../utils/format-time',\n    '../../utils/promise',\n    '../../utils/keycode',\n    './load-progress-bar',\n    './play-progress-bar',\n    './mouse-time-display'\n], function (document,Slider, Component, browser, Dom, Fn, formatTime, promise, keycode) {\n    'use strict';\n    const STEP_SECONDS = 5;\n    const PAGE_KEY_MULTIPLIER = 12;\n    class SeekBar extends Slider {\n        constructor(player, options) {\n            super(player, options);\n            this.setEventHandlers_();\n        }\n        setEventHandlers_() {\n            this.update_ = Fn.bind(this, this.update);\n            this.update = Fn.throttle(this.update_, Fn.UPDATE_REFRESH_INTERVAL);\n            this.listenTo(this.player_, [\n                'ended',\n                'durationchange',\n                'timeupdate'\n            ], this.update);\n            if (this.player_.liveTracker) {\n                this.listenTo(this.player_.liveTracker, 'liveedgechange', this.update);\n            }\n            this.updateInterval = null;\n            this.listenTo(this.player_, ['playing'], this.enableInterval_);\n            this.listenTo(this.player_, [\n                'ended',\n                'pause',\n                'waiting'\n            ], this.disableInterval_);\n            if ('hidden' in document && 'visibilityState' in document) {\n                this.listenTo(document, 'visibilitychange', this.toggleVisibility_);\n            }\n        }\n        toggleVisibility_(e) {\n            if (document.hidden) {\n                this.disableInterval_(e);\n            } else {\n                this.enableInterval_();\n                this.update();\n            }\n        }\n        enableInterval_() {\n            if (this.updateInterval) {\n                return;\n            }\n            this.updateInterval = this.setInterval(this.update, Fn.UPDATE_REFRESH_INTERVAL);\n        }\n        disableInterval_(e) {\n            if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n                return;\n            }\n            if (!this.updateInterval) {\n                return;\n            }\n            this.clearInterval(this.updateInterval);\n            this.updateInterval = null;\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-progress-holder' }, { 'aria-label': this.localize('Progress Bar') });\n        }\n        update(event) {\n            const percent = super.update();\n            this.requestNamedAnimationFrame('SeekBar#update', () => {\n                const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n                const liveTracker = this.player_.liveTracker;\n                let duration = this.player_.duration();\n                if (liveTracker && liveTracker.isLive()) {\n                    duration = this.player_.liveTracker.liveCurrentTime();\n                }\n                if (this.percent_ !== percent) {\n                    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n                    this.percent_ = percent;\n                }\n                if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n                    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [\n                        formatTime(currentTime, duration),\n                        formatTime(duration, duration)\n                    ], '{1} of {2}'));\n                    this.currentTime_ = currentTime;\n                    this.duration_ = duration;\n                }\n                if (this.bar) {\n                    this.bar.update(Dom.getBoundingClientRect(this.el()), this.getProgress());\n                }\n            });\n            return percent;\n        }\n        getCurrentTime_() {\n            return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n        }\n        getPercent() {\n            const currentTime = this.getCurrentTime_();\n            let percent;\n            const liveTracker = this.player_.liveTracker;\n            if (liveTracker && liveTracker.isLive()) {\n                percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n                if (liveTracker.atLiveEdge()) {\n                    percent = 1;\n                }\n            } else {\n                percent = currentTime / this.player_.duration();\n            }\n            return percent;\n        }\n        handleMouseDown(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            event.stopPropagation();\n            this.player_.scrubbing(true);\n            this.videoWasPlaying = !this.player_.paused();\n            this.player_.pause();\n            super.handleMouseDown(event);\n        }\n        handleMouseMove(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            let newTime;\n            const distance = this.calculateDistance(event);\n            const liveTracker = this.player_.liveTracker;\n            if (!liveTracker || !liveTracker.isLive()) {\n                newTime = distance * this.player_.duration();\n                if (newTime === this.player_.duration()) {\n                    newTime = newTime - 0.1;\n                }\n            } else {\n                if (distance >= 0.99) {\n                    liveTracker.seekToLiveEdge();\n                    return;\n                }\n                const seekableStart = liveTracker.seekableStart();\n                const seekableEnd = liveTracker.liveCurrentTime();\n                newTime = seekableStart + distance * liveTracker.liveWindow();\n                if (newTime >= seekableEnd) {\n                    newTime = seekableEnd;\n                }\n                if (newTime <= seekableStart) {\n                    newTime = seekableStart + 0.1;\n                }\n                if (newTime === Infinity) {\n                    return;\n                }\n            }\n            this.player_.currentTime(newTime);\n        }\n        enable() {\n            super.enable();\n            const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n            if (!mouseTimeDisplay) {\n                return;\n            }\n            mouseTimeDisplay.show();\n        }\n        disable() {\n            super.disable();\n            const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n            if (!mouseTimeDisplay) {\n                return;\n            }\n            mouseTimeDisplay.hide();\n        }\n        handleMouseUp(event) {\n            super.handleMouseUp(event);\n            if (event) {\n                event.stopPropagation();\n            }\n            this.player_.scrubbing(false);\n            this.player_.trigger({\n                type: 'timeupdate',\n                target: this,\n                manuallyTriggered: true\n            });\n            if (this.videoWasPlaying) {\n                promise.silencePromise(this.player_.play());\n            } else {\n                this.update_();\n            }\n        }\n        stepForward() {\n            this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n        }\n        stepBack() {\n            this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n        }\n        handleAction(event) {\n            if (this.player_.paused()) {\n                this.player_.play();\n            } else {\n                this.player_.pause();\n            }\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.handleAction(event);\n            } else if (keycode.isEventKey(event, 'Home')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(0);\n            } else if (keycode.isEventKey(event, 'End')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(this.player_.duration());\n            } else if (/^[0-9]$/.test(keycode(event))) {\n                event.preventDefault();\n                event.stopPropagation();\n                const gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10 / 100;\n                this.player_.currentTime(this.player_.duration() * gotoFraction);\n            } else if (keycode.isEventKey(event, 'PgDn')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n            } else if (keycode.isEventKey(event, 'PgUp')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n            } else {\n                super.handleKeyDown(event);\n            }\n        }\n        dispose() {\n            this.disableInterval_();\n            thisunlistenTo(this.player_, [\n                'ended',\n                'durationchange',\n                'timeupdate'\n            ], this.update);\n            if (this.player_.liveTracker) {\n                this.listenTo(this.player_.liveTracker, 'liveedgechange', this.update);\n            }\n            this.unlistenTo(this.player_, ['playing'], this.enableInterval_);\n            this.unlistenTo(this.player_, [\n                'ended',\n                'pause',\n                'waiting'\n            ], this.disableInterval_);\n            if ('hidden' in document && 'visibilityState' in document) {\n                this.unlistenTo(document, 'visibilitychange', this.toggleVisibility_);\n            }\n            super.dispose();\n        }\n    }\n    SeekBar.prototype.options_ = {\n        children: [\n            'loadProgressBar',\n            'playProgressBar'\n        ],\n        barName: 'playProgressBar'\n    };\n    if (!browser.IS_IOS && !browser.IS_ANDROID) {\n        SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n    }\n    Component.registerComponent('SeekBar', SeekBar);\n    return SeekBar;\n});\ndefine('skylark-videojs/control-bar/progress-control/progress-control',[\n    '../../component',\n    '../../utils/dom',\n    '../../utils/clamp',\n    '../../utils/fn',\n    './seek-bar'\n], function (Component, Dom, clamp, Fn) {\n    'use strict';\n    class ProgressControl extends Component {\n        constructor(player, options) {\n            super(player, options);\n            this.handleMouseMove = Fn.throttle(Fn.bind(this, this.handleMouseMove), Fn.UPDATE_REFRESH_INTERVAL);\n            this.throttledHandleMouseSeek = Fn.throttle(Fn.bind(this, this.handleMouseSeek), Fn.UPDATE_REFRESH_INTERVAL);\n            this.enable();\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-progress-control vjs-control' });\n        }\n        handleMouseMove(event) {\n            const seekBar = this.getChild('seekBar');\n            if (!seekBar) {\n                return;\n            }\n            const playProgressBar = seekBar.getChild('playProgressBar');\n            const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n            if (!playProgressBar && !mouseTimeDisplay) {\n                return;\n            }\n            const seekBarEl = seekBar.el();\n            const seekBarRect = Dom.findPosition(seekBarEl);\n            let seekBarPoint = Dom.getPointerPosition(seekBarEl, event).x;\n            seekBarPoint = clamp(seekBarPoint, 0, 1);\n            if (mouseTimeDisplay) {\n                mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n            }\n            if (playProgressBar) {\n                playProgressBar.update(seekBarRect, seekBar.getProgress());\n            }\n        }\n        handleMouseSeek(event) {\n            const seekBar = this.getChild('seekBar');\n            if (seekBar) {\n                seekBar.handleMouseMove(event);\n            }\n        }\n        enabled() {\n            return this.enabled_;\n        }\n        disable() {\n            this.children().forEach(child => child.disable && child.disable());\n            if (!this.enabled()) {\n                return;\n            }\n            this.unlistenTo([\n                'mousedown',\n                'touchstart'\n            ], this.handleMouseDown);\n            this.unlistenTo(this.el_, 'mousemove', this.handleMouseMove);\n            this.handleMouseUp();\n            this.addClass('disabled');\n            this.enabled_ = false;\n        }\n        enable() {\n            this.children().forEach(child => child.enable && child.enable());\n            if (this.enabled()) {\n                return;\n            }\n            this.listenTo([\n                'mousedown',\n                'touchstart'\n            ], this.handleMouseDown);\n            this.listenTo(this.el_, 'mousemove', this.handleMouseMove);\n            this.removeClass('disabled');\n            this.enabled_ = true;\n        }\n        handleMouseDown(event) {\n            const doc = this.el_.ownerDocument;\n            const seekBar = this.getChild('seekBar');\n            if (seekBar) {\n                seekBar.handleMouseDown(event);\n            }\n            this.listenTo(doc, 'mousemove', this.throttledHandleMouseSeek);\n            this.listenTo(doc, 'touchmove', this.throttledHandleMouseSeek);\n            this.listenTo(doc, 'mouseup', this.handleMouseUp);\n            this.listenTo(doc, 'touchend', this.handleMouseUp);\n        }\n        handleMouseUp(event) {\n            const doc = this.el_.ownerDocument;\n            const seekBar = this.getChild('seekBar');\n            if (seekBar) {\n                seekBar.handleMouseUp(event);\n            }\n            this.unlistenTo(doc, 'mousemove', this.throttledHandleMouseSeek);\n            this.unlistenTo(doc, 'touchmove', this.throttledHandleMouseSeek);\n            this.unlistenTo(doc, 'mouseup', this.handleMouseUp);\n            this.unlistenTo(doc, 'touchend', this.handleMouseUp);\n        }\n    }\n    ProgressControl.prototype.options_ = { children: ['seekBar'] };\n    Component.registerComponent('ProgressControl', ProgressControl);\n    return ProgressControl;\n});\ndefine('skylark-videojs/control-bar/picture-in-picture-toggle',[\n    'skylark-langx-globals/document',\n    '../button',\n    '../component'\n], function (document,Button, Component) {\n    'use strict';\n    class PictureInPictureToggle extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, [\n                'enterpictureinpicture',\n                'leavepictureinpicture'\n            ], this.handlePictureInPictureChange);\n            this.listenTo(player, [\n                'disablepictureinpicturechanged',\n                'loadedmetadata'\n            ], this.handlePictureInPictureEnabledChange);\n            this.disable();\n        }\n        buildCSSClass() {\n            return `vjs-picture-in-picture-control ${ super.buildCSSClass() }`;\n        }\n        handlePictureInPictureEnabledChange() {\n            if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n                this.enable();\n            } else {\n                this.disable();\n            }\n        }\n        handlePictureInPictureChange(event) {\n            if (this.player_.isInPictureInPicture()) {\n                this.controlText('Exit Picture-in-Picture');\n            } else {\n                this.controlText('Picture-in-Picture');\n            }\n            this.handlePictureInPictureEnabledChange();\n        }\n        handleClick(event) {\n            if (!this.player_.isInPictureInPicture()) {\n                this.player_.requestPictureInPicture();\n            } else {\n                this.player_.exitPictureInPicture();\n            }\n        }\n    }\n    PictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\n    Component.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n    return PictureInPictureToggle;\n});\ndefine('skylark-videojs/control-bar/fullscreen-toggle',[\n    'skylark-langx-globals/document',\n    '../button',\n    '../component',\n], function (document,Button, Component) {\n    'use strict';\n    class FullscreenToggle extends Button {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, 'fullscreenchange', this.handleFullscreenChange);\n            if (document[player.fsApi_.fullscreenEnabled] === false) {\n                this.disable();\n            }\n        }\n        buildCSSClass() {\n            return `vjs-fullscreen-control ${ super.buildCSSClass() }`;\n        }\n        handleFullscreenChange(event) {\n            if (this.player_.isFullscreen()) {\n                this.controlText('Non-Fullscreen');\n            } else {\n                this.controlText('Fullscreen');\n            }\n        }\n        handleClick(event) {\n            if (!this.player_.isFullscreen()) {\n                this.player_.requestFullscreen();\n            } else {\n                this.player_.exitFullscreen();\n            }\n        }\n    }\n    FullscreenToggle.prototype.controlText_ = 'Fullscreen';\n    Component.registerComponent('FullscreenToggle', FullscreenToggle);\n    return FullscreenToggle;\n});\ndefine('skylark-videojs/control-bar/volume-control/check-volume-support',[],function () {\n    'use strict';\n    const checkVolumeSupport = function (self, player) {\n        if (player.tech_ && !player.tech_.featuresVolumeControl) {\n            self.addClass('vjs-hidden');\n        }\n        self.listenTo(player, 'loadstart', function () {\n            if (!player.tech_.featuresVolumeControl) {\n                self.addClass('vjs-hidden');\n            } else {\n                self.removeClass('vjs-hidden');\n            }\n        });\n    };\n    return checkVolumeSupport;\n});\ndefine('skylark-videojs/control-bar/volume-control/volume-level',[\n    '../../component'\n], function (Component) {\n    'use strict';\n    class VolumeLevel extends Component {\n        createEl() {\n            return super.createEl('div', {\n                className: 'vjs-volume-level',\n                innerHTML: '<span class=\"vjs-control-text\"></span>'\n            });\n        }\n    }\n    Component.registerComponent('VolumeLevel', VolumeLevel);\n    return VolumeLevel;\n});\ndefine('skylark-videojs/control-bar/volume-control/volume-bar',[\n    '../../slider/slider',\n    '../../component',\n    '../../utils/dom',\n    './volume-level'\n], function (Slider, Component, Dom) {\n    'use strict';\n    class VolumeBar extends Slider {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo('slideractive', this.updateLastVolume_);\n            this.listenTo(player, 'volumechange', this.updateARIAAttributes);\n            player.ready(() => this.updateARIAAttributes());\n        }\n        createEl() {\n            return super.createEl('div', { className: 'vjs-volume-bar vjs-slider-bar' }, {\n                'aria-label': this.localize('Volume Level'),\n                'aria-live': 'polite'\n            });\n        }\n        handleMouseDown(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            super.handleMouseDown(event);\n        }\n        handleMouseMove(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            this.checkMuted();\n            this.player_.volume(this.calculateDistance(event));\n        }\n        checkMuted() {\n            if (this.player_.muted()) {\n                this.player_.muted(false);\n            }\n        }\n        getPercent() {\n            if (this.player_.muted()) {\n                return 0;\n            }\n            return this.player_.volume();\n        }\n        stepForward() {\n            this.checkMuted();\n            this.player_.volume(this.player_.volume() + 0.1);\n        }\n        stepBack() {\n            this.checkMuted();\n            this.player_.volume(this.player_.volume() - 0.1);\n        }\n        updateARIAAttributes(event) {\n            const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n            this.el_.setAttribute('aria-valuenow', ariaValue);\n            this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n        }\n        volumeAsPercentage_() {\n            return Math.round(this.player_.volume() * 100);\n        }\n        updateLastVolume_() {\n            const volumeBeforeDrag = this.player_.volume();\n            this.listenToOnce('sliderinactive', () => {\n                if (this.player_.volume() === 0) {\n                    this.player_.lastVolume_(volumeBeforeDrag);\n                }\n            });\n        }\n    }\n    VolumeBar.prototype.options_ = {\n        children: ['volumeLevel'],\n        barName: 'volumeLevel'\n    };\n    VolumeBar.prototype.playerEvent = 'volumechange';\n    Component.registerComponent('VolumeBar', VolumeBar);\n    return VolumeBar;\n});\ndefine('skylark-videojs/control-bar/volume-control/volume-control',[\n    '../../component',\n    './check-volume-support',\n    '../../utils/obj',\n    '../../utils/fn',\n    './volume-bar'\n], function (Component, checkVolumeSupport, obj, Fn) {\n    'use strict';\n    class VolumeControl extends Component {\n        constructor(player, options = {}) {\n            options.vertical = options.vertical || false;\n            if (typeof options.volumeBar === 'undefined' || obj.isPlain(options.volumeBar)) {\n                options.volumeBar = options.volumeBar || {};\n                options.volumeBar.vertical = options.vertical;\n            }\n            super(player, options);\n            checkVolumeSupport(this, player);\n            this.throttledHandleMouseMove = Fn.throttle(Fn.bind(this, this.handleMouseMove), Fn.UPDATE_REFRESH_INTERVAL);\n            this.listenTo('mousedown', this.handleMouseDown);\n            this.listenTo('touchstart', this.handleMouseDown);\n            this.listenTo(this.volumeBar, [\n                'focus',\n                'slideractive'\n            ], () => {\n                this.volumeBar.addClass('vjs-slider-active');\n                this.addClass('vjs-slider-active');\n                this.trigger('slideractive');\n            });\n            this.listenTo(this.volumeBar, [\n                'blur',\n                'sliderinactive'\n            ], () => {\n                this.volumeBar.removeClass('vjs-slider-active');\n                this.removeClass('vjs-slider-active');\n                this.trigger('sliderinactive');\n            });\n        }\n        createEl() {\n            let orientationClass = 'vjs-volume-horizontal';\n            if (this.options_.vertical) {\n                orientationClass = 'vjs-volume-vertical';\n            }\n            return super.createEl('div', { className: `vjs-volume-control vjs-control ${ orientationClass }` });\n        }\n        handleMouseDown(event) {\n            const doc = this.el_.ownerDocument;\n            this.listenTo(doc, 'mousemove', this.throttledHandleMouseMove);\n            this.listenTo(doc, 'touchmove', this.throttledHandleMouseMove);\n            this.listenTo(doc, 'mouseup', this.handleMouseUp);\n            this.listenTo(doc, 'touchend', this.handleMouseUp);\n        }\n        handleMouseUp(event) {\n            const doc = this.el_.ownerDocument;\n            this.unlistenTo(doc, 'mousemove', this.throttledHandleMouseMove);\n            this.unlistenTo(doc, 'touchmove', this.throttledHandleMouseMove);\n            this.unlistenTo(doc, 'mouseup', this.handleMouseUp);\n            this.unlistenTo(doc, 'touchend', this.handleMouseUp);\n        }\n        handleMouseMove(event) {\n            this.volumeBar.handleMouseMove(event);\n        }\n    }\n    VolumeControl.prototype.options_ = { children: ['volumeBar'] };\n    Component.registerComponent('VolumeControl', VolumeControl);\n    return VolumeControl;\n});\ndefine('skylark-videojs/control-bar/volume-control/check-mute-support',[],function () {\n    'use strict';\n    const checkMuteSupport = function (self, player) {\n        if (player.tech_ && !player.tech_.featuresMuteControl) {\n            self.addClass('vjs-hidden');\n        }\n        self.listenTo(player, 'loadstart', function () {\n            if (!player.tech_.featuresMuteControl) {\n                self.addClass('vjs-hidden');\n            } else {\n                self.removeClass('vjs-hidden');\n            }\n        });\n    };\n    return checkMuteSupport;\n});\ndefine('skylark-videojs/control-bar/mute-toggle',[\n    '../button',\n    '../component',\n    '../utils/dom',\n    './volume-control/check-mute-support',\n    '../utils/browser'\n], function (Button, Component, Dom, checkMuteSupport, browser) {\n    'use strict';\n    class MuteToggle extends Button {\n        constructor(player, options) {\n            super(player, options);\n            checkMuteSupport(this, player);\n            this.listenTo(player, [\n                'loadstart',\n                'volumechange'\n            ], this.update);\n        }\n        buildCSSClass() {\n            return `vjs-mute-control ${ super.buildCSSClass() }`;\n        }\n        handleClick(event) {\n            const vol = this.player_.volume();\n            const lastVolume = this.player_.lastVolume_();\n            if (vol === 0) {\n                const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n                this.player_.volume(volumeToSet);\n                this.player_.muted(false);\n            } else {\n                this.player_.muted(this.player_.muted() ? false : true);\n            }\n        }\n        update(event) {\n            this.updateIcon_();\n            this.updateControlText_();\n        }\n        updateIcon_() {\n            const vol = this.player_.volume();\n            let level = 3;\n            if (browser.IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n                this.player_.muted(this.player_.tech_.el_.muted);\n            }\n            if (vol === 0 || this.player_.muted()) {\n                level = 0;\n            } else if (vol < 0.33) {\n                level = 1;\n            } else if (vol < 0.67) {\n                level = 2;\n            }\n            for (let i = 0; i < 4; i++) {\n                Dom.removeClass(this.el_, `vjs-vol-${ i }`);\n            }\n            Dom.addClass(this.el_, `vjs-vol-${ level }`);\n        }\n        updateControlText_() {\n            const soundOff = this.player_.muted() || this.player_.volume() === 0;\n            const text = soundOff ? 'Unmute' : 'Mute';\n            if (this.controlText() !== text) {\n                this.controlText(text);\n            }\n        }\n    }\n    MuteToggle.prototype.controlText_ = 'Mute';\n    Component.registerComponent('MuteToggle', MuteToggle);\n    return MuteToggle;\n});\ndefine('skylark-videojs/control-bar/volume-panel',[\n    'skylark-langx-globals/document',\n    '../component',\n    '../utils/obj',\n    '../utils/events',\n    '../utils/fn',\n    '../utils/keycode',\n    './volume-control/volume-control',\n    './mute-toggle'\n], function (document, Component, obj, Events, Fn, keycode) {\n    'use strict';\n    class VolumePanel extends Component {\n        constructor(player, options = {}) {\n            if (typeof options.inline !== 'undefined') {\n                options.inline = options.inline;\n            } else {\n                options.inline = true;\n            }\n            if (typeof options.volumeControl === 'undefined' || obj.isPlain(options.volumeControl)) {\n                options.volumeControl = options.volumeControl || {};\n                options.volumeControl.vertical = !options.inline;\n            }\n            super(player, options);\n            this.listenTo(player, ['loadstart'], this.volumePanelState_);\n            this.listenTo(this.muteToggle, 'keyup', this.handleKeyPress);\n            this.listenTo(this.volumeControl, 'keyup', this.handleVolumeControlKeyUp);\n            this.listenTo('keydown', this.handleKeyPress);\n            this.listenTo('mouseover', this.handleMouseOver);\n            this.listenTo('mouseout', this.handleMouseOut);\n            this.listenTo(this.volumeControl, ['slideractive'], this.sliderActive_);\n            this.listenTo(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n        }\n        sliderActive_() {\n            this.addClass('vjs-slider-active');\n        }\n        sliderInactive_() {\n            this.removeClass('vjs-slider-active');\n        }\n        volumePanelState_() {\n            if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n                this.addClass('vjs-hidden');\n            }\n            if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n                this.addClass('vjs-mute-toggle-only');\n            }\n        }\n        createEl() {\n            let orientationClass = 'vjs-volume-panel-horizontal';\n            if (!this.options_.inline) {\n                orientationClass = 'vjs-volume-panel-vertical';\n            }\n            return super.createEl('div', { className: `vjs-volume-panel vjs-control ${ orientationClass }` });\n        }\n        dispose() {\n            this.handleMouseOut();\n            super.dispose();\n        }\n        handleVolumeControlKeyUp(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                this.muteToggle.focus();\n            }\n        }\n        handleMouseOver(event) {\n            this.addClass('vjs-hover');\n            Events.on(document, 'keyup', Fn.bind(this, this.handleKeyPress));\n        }\n        handleMouseOut(event) {\n            this.removeClass('vjs-hover');\n            Events.off(document, 'keyup', Fn.bind(this, this.handleKeyPress));\n        }\n        handleKeyPress(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                this.handleMouseOut();\n            }\n        }\n    }\n    VolumePanel.prototype.options_ = {\n        children: [\n            'muteToggle',\n            'volumeControl'\n        ]\n    };\n    Component.registerComponent('VolumePanel', VolumePanel);\n    return VolumePanel;\n});\ndefine('skylark-videojs/menu/menu',[\n    'skylark-langx-globals/document',\n    '../component',\n    '../utils/dom',\n    '../utils/fn',\n    '../utils/events',\n    '../utils/keycode'\n], function (document,Component, Dom, Fn, Events, keycode) {\n    'use strict';\n    class Menu extends Component {\n        constructor(player, options) {\n            super(player, options);\n            if (options) {\n                this.menuButton_ = options.menuButton;\n            }\n            this.focusedChild_ = -1;\n            this.listenTo('keydown', this.handleKeyDown);\n            this.boundHandleBlur_ = Fn.bind(this, this.handleBlur);\n            this.boundHandleTapClick_ = Fn.bind(this, this.handleTapClick);\n        }\n        addEventListenerForItem(component) {\n            if (!(component instanceof Component)) {\n                return;\n            }\n            this.listenTo(component, 'blur', this.boundHandleBlur_);\n            this.listenTo(component, [\n                'tap',\n                'click'\n            ], this.boundHandleTapClick_);\n        }\n        removeEventListenerForItem(component) {\n            if (!(component instanceof Component)) {\n                return;\n            }\n            this.unlistenTo(component, 'blur', this.boundHandleBlur_);\n            this.unlistenTo(component, [\n                'tap',\n                'click'\n            ], this.boundHandleTapClick_);\n        }\n        removeChild(component) {\n            if (typeof component === 'string') {\n                component = this.getChild(component);\n            }\n            this.removeEventListenerForItem(component);\n            super.removeChild(component);\n        }\n        addItem(component) {\n            const childComponent = this.addChild(component);\n            if (childComponent) {\n                this.addEventListenerForItem(childComponent);\n            }\n        }\n        createEl() {\n            const contentElType = this.options_.contentElType || 'ul';\n            this.contentEl_ = Dom.createEl(contentElType, { className: 'vjs-menu-content' });\n            this.contentEl_.setAttribute('role', 'menu');\n            const el = super.createEl('div', {\n                append: this.contentEl_,\n                className: 'vjs-menu'\n            });\n            el.appendChild(this.contentEl_);\n            Events.on(el, 'click', function (event) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            });\n            return el;\n        }\n        dispose() {\n            this.contentEl_ = null;\n            this.boundHandleBlur_ = null;\n            this.boundHandleTapClick_ = null;\n            super.dispose();\n        }\n        handleBlur(event) {\n            const relatedTarget = event.relatedTarget || document.activeElement;\n            if (!this.children().some(element => {\n                    return element.el() === relatedTarget;\n                })) {\n                const btn = this.menuButton_;\n                if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n                    btn.unpressButton();\n                }\n            }\n        }\n        handleTapClick(event) {\n            if (this.menuButton_) {\n                this.menuButton_.unpressButton();\n                const childComponents = this.children();\n                if (!Array.isArray(childComponents)) {\n                    return;\n                }\n                const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n                if (!foundComponent) {\n                    return;\n                }\n                if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n                    this.menuButton_.focus();\n                }\n            }\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepForward();\n            } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n                event.preventDefault();\n                event.stopPropagation();\n                this.stepBack();\n            }\n        }\n        stepForward() {\n            let stepChild = 0;\n            if (this.focusedChild_ !== undefined) {\n                stepChild = this.focusedChild_ + 1;\n            }\n            this.focus(stepChild);\n        }\n        stepBack() {\n            let stepChild = 0;\n            if (this.focusedChild_ !== undefined) {\n                stepChild = this.focusedChild_ - 1;\n            }\n            this.focus(stepChild);\n        }\n        focus(item = 0) {\n            const children = this.children().slice();\n            const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n            if (haveTitle) {\n                children.shift();\n            }\n            if (children.length > 0) {\n                if (item < 0) {\n                    item = 0;\n                } else if (item >= children.length) {\n                    item = children.length - 1;\n                }\n                this.focusedChild_ = item;\n                children[item].el_.focus();\n            }\n        }\n    }\n    Component.registerComponent('Menu', Menu);\n    return Menu;\n});\ndefine('skylark-videojs/menu/menu-button',[\n    '../button',\n    '../component',\n    './menu',\n    '../utils/dom',\n    '../utils/fn',\n    '../utils/events',\n    '../utils/string-cases',\n    '../utils/browser',\n    '../utils/keycode'\n], function (Button, Component, Menu, Dom, Fn, Events, stringCases, browser, keycode) {\n    'use strict';\n    class MenuButton extends Component {\n        constructor(player, options = {}) {\n            super(player, options);\n            this.menuButton_ = new Button(player, options);\n            this.menuButton_.controlText(this.controlText_);\n            this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n            const buttonClass = Button.prototype.buildCSSClass();\n            this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n            this.menuButton_.removeClass('vjs-control');\n            this.addChild(this.menuButton_);\n            this.update();\n            this.enabled_ = true;\n            this.listenTo(this.menuButton_, 'tap', this.handleClick);\n            this.listenTo(this.menuButton_, 'click', this.handleClick);\n            this.listenTo(this.menuButton_, 'keydown', this.handleKeyDown);\n            this.listenTo(this.menuButton_, 'mouseenter', () => {\n                this.addClass('vjs-hover');\n                this.menu.show();\n                Events.on(document, 'keyup', Fn.bind(this, this.handleMenuKeyUp));\n            });\n            this.listenTo('mouseleave', this.handleMouseLeave);\n            this.listenTo('keydown', this.handleSubmenuKeyDown);\n        }\n        update() {\n            const menu = this.createMenu();\n            if (this.menu) {\n                this.menu.dispose();\n                this.removeChild(this.menu);\n            }\n            this.menu = menu;\n            this.addChild(menu);\n            this.buttonPressed_ = false;\n            this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n            if (this.items && this.items.length <= this.hideThreshold_) {\n                this.hide();\n            } else {\n                this.show();\n            }\n        }\n        createMenu() {\n            const menu = new Menu(this.player_, { menuButton: this });\n            this.hideThreshold_ = 0;\n            if (this.options_.title) {\n                const titleEl = Dom.createEl('li', {\n                    className: 'vjs-menu-title',\n                    innerHTML: stringCases.toTitleCase(this.options_.title),\n                    tabIndex: -1\n                });\n                this.hideThreshold_ += 1;\n                const titleComponent = new Component(this.player_, { el: titleEl });\n                menu.addItem(titleComponent);\n            }\n            this.items = this.createItems();\n            if (this.items) {\n                for (let i = 0; i < this.items.length; i++) {\n                    menu.addItem(this.items[i]);\n                }\n            }\n            return menu;\n        }\n        createItems() {\n        }\n        createEl() {\n            return super.createEl('div', { className: this.buildWrapperCSSClass() }, {});\n        }\n        buildWrapperCSSClass() {\n            let menuButtonClass = 'vjs-menu-button';\n            if (this.options_.inline === true) {\n                menuButtonClass += '-inline';\n            } else {\n                menuButtonClass += '-popup';\n            }\n            const buttonClass = Button.prototype.buildCSSClass();\n            return `vjs-menu-button ${ menuButtonClass } ${ buttonClass } ${ super.buildCSSClass() }`;\n        }\n        buildCSSClass() {\n            let menuButtonClass = 'vjs-menu-button';\n            if (this.options_.inline === true) {\n                menuButtonClass += '-inline';\n            } else {\n                menuButtonClass += '-popup';\n            }\n            return `vjs-menu-button ${ menuButtonClass } ${ super.buildCSSClass() }`;\n        }\n        controlText(text, el = this.menuButton_.el()) {\n            return this.menuButton_.controlText(text, el);\n        }\n        dispose() {\n            this.handleMouseLeave();\n            super.dispose();\n        }\n        handleClick(event) {\n            if (this.buttonPressed_) {\n                this.unpressButton();\n            } else {\n                this.pressButton();\n            }\n        }\n        handleMouseLeave(event) {\n            this.removeClass('vjs-hover');\n            Events.off(document, 'keyup', Fn.bind(this, this.handleMenuKeyUp));\n        }\n        focus() {\n            this.menuButton_.focus();\n        }\n        blur() {\n            this.menuButton_.blur();\n        }\n        handleKeyDown(event) {\n            if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n                if (this.buttonPressed_) {\n                    this.unpressButton();\n                }\n                if (!keycode.isEventKey(event, 'Tab')) {\n                    event.preventDefault();\n                    this.menuButton_.focus();\n                }\n            } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n                if (!this.buttonPressed_) {\n                    event.preventDefault();\n                    this.pressButton();\n                }\n            }\n        }\n        handleMenuKeyUp(event) {\n            if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n                this.removeClass('vjs-hover');\n            }\n        }\n        handleSubmenuKeyPress(event) {\n            this.handleSubmenuKeyDown(event);\n        }\n        handleSubmenuKeyDown(event) {\n            if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n                if (this.buttonPressed_) {\n                    this.unpressButton();\n                }\n                if (!keycode.isEventKey(event, 'Tab')) {\n                    event.preventDefault();\n                    this.menuButton_.focus();\n                }\n            } else {\n            }\n        }\n        pressButton() {\n            if (this.enabled_) {\n                this.buttonPressed_ = true;\n                this.menu.show();\n                this.menu.lockShowing();\n                this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n                if (browser.IS_IOS && Dom.isInFrame()) {\n                    return;\n                }\n                this.menu.focus();\n            }\n        }\n        unpressButton() {\n            if (this.enabled_) {\n                this.buttonPressed_ = false;\n                this.menu.unlockShowing();\n                this.menu.hide();\n                this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n            }\n        }\n        disable() {\n            this.unpressButton();\n            this.enabled_ = false;\n            this.addClass('vjs-disabled');\n            this.menuButton_.disable();\n        }\n        enable() {\n            this.enabled_ = true;\n            this.removeClass('vjs-disabled');\n            this.menuButton_.enable();\n        }\n    }\n    Component.registerComponent('MenuButton', MenuButton);\n    return MenuButton;\n});\ndefine('skylark-videojs/control-bar/track-button',[\n    '../menu/menu-button',\n    '../component',\n    '../utils/fn'\n], function (MenuButton, Component, Fn) {\n    'use strict';\n    class TrackButton extends MenuButton {\n        constructor(player, options) {\n            const tracks = options.tracks;\n            super(player, options);\n            if (this.items.length <= 1) {\n                this.hide();\n            }\n            if (!tracks) {\n                return;\n            }\n            const updateHandler = Fn.bind(this, this.update);\n            tracks.addEventListener('removetrack', updateHandler);\n            tracks.addEventListener('addtrack', updateHandler);\n            tracks.addEventListener('labelchange', updateHandler);\n            this.player_.on('ready', updateHandler);\n            this.player_.on('dispose', function () {\n                tracks.removeEventListener('removetrack', updateHandler);\n                tracks.removeEventListener('addtrack', updateHandler);\n                tracks.removeEventListener('labelchange', updateHandler);\n            });\n        }\n    }\n    Component.registerComponent('TrackButton', TrackButton);\n    return TrackButton;\n});\ndefine('skylark-videojs/menu/menu-keys',[],function () {\n    'use strict';\n    const MenuKeys = [\n        'Tab',\n        'Esc',\n        'Up',\n        'Down',\n        'Right',\n        'Left'\n    ];\n    return MenuKeys;\n});\ndefine('skylark-videojs/menu/menu-item',[\n    '../clickable-component',\n    '../component',\n    '../utils/obj',\n    './menu-keys',\n    '../utils/keycode'\n], function (ClickableComponent, Component, obj, MenuKeys, keycode) {\n    'use strict';\n    class MenuItem extends ClickableComponent {\n        constructor(player, options) {\n            super(player, options);\n            this.selectable = options.selectable;\n            this.isSelected_ = options.selected || false;\n            this.multiSelectable = options.multiSelectable;\n            this.selected(this.isSelected_);\n            if (this.selectable) {\n                if (this.multiSelectable) {\n                    this.el_.setAttribute('role', 'menuitemcheckbox');\n                } else {\n                    this.el_.setAttribute('role', 'menuitemradio');\n                }\n            } else {\n                this.el_.setAttribute('role', 'menuitem');\n            }\n        }\n        createEl(type, props, attrs) {\n            this.nonIconControl = true;\n            return super.createEl('li', obj.assign({\n                className: 'vjs-menu-item',\n                innerHTML: `<span class=\"vjs-menu-item-text\">${ this.localize(this.options_.label) }</span>`,\n                tabIndex: -1\n            }, props), attrs);\n        }\n        handleKeyDown(event) {\n            if (!MenuKeys.some(key => keycode.isEventKey(event, key))) {\n                super.handleKeyDown(event);\n            }\n        }\n        handleClick(event) {\n            this.selected(true);\n        }\n        selected(selected) {\n            if (this.selectable) {\n                if (selected) {\n                    this.addClass('vjs-selected');\n                    this.el_.setAttribute('aria-checked', 'true');\n                    this.controlText(', selected');\n                    this.isSelected_ = true;\n                } else {\n                    this.removeClass('vjs-selected');\n                    this.el_.setAttribute('aria-checked', 'false');\n                    this.controlText('');\n                    this.isSelected_ = false;\n                }\n            }\n        }\n    }\n    Component.registerComponent('MenuItem', MenuItem);\n    return MenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/text-track-menu-item',[\n    'skylark-langx-globals/document',\n    '../../menu/menu-item',\n    '../../component'\n], function (document,MenuItem, Component) {\n    'use strict';\n    class TextTrackMenuItem extends MenuItem {\n        constructor(player, options) {\n            const track = options.track;\n            const tracks = player.textTracks();\n            options.label = track.label || track.language || 'Unknown';\n            options.selected = track.mode === 'showing';\n            super(player, options);\n            this.track = track;\n            this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n            const changeHandler = (...args) => {\n                this.handleTracksChange.apply(this, args);\n            };\n            const selectedLanguageChangeHandler = (...args) => {\n                this.handleSelectedLanguageChange.apply(this, args);\n            };\n            player.on([\n                'loadstart',\n                'texttrackchange'\n            ], changeHandler);\n            tracks.addEventListener('change', changeHandler);\n            tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n            this.listenTo('dispose', function () {\n                player.off([\n                    'loadstart',\n                    'texttrackchange'\n                ], changeHandler);\n                tracks.removeEventListener('change', changeHandler);\n                tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n            });\n            if (tracks.onchange === undefined) {\n                let event;\n                this.listenTo([\n                    'tap',\n                    'click'\n                ], function () {\n                    if (typeof window.Event !== 'object') {\n                        try {\n                            event = new window.Event('change');\n                        } catch (err) {\n                        }\n                    }\n                    if (!event) {\n                        event = document.createEvent('Event');\n                        event.initEvent('change', true, true);\n                    }\n                    tracks.dispatchEvent(event);\n                });\n            }\n            this.handleTracksChange();\n        }\n        handleClick(event) {\n            const referenceTrack = this.track;\n            const tracks = this.player_.textTracks();\n            super.handleClick(event);\n            if (!tracks) {\n                return;\n            }\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                if (this.kinds.indexOf(track.kind) === -1) {\n                    continue;\n                }\n                if (track === referenceTrack) {\n                    if (track.mode !== 'showing') {\n                        track.mode = 'showing';\n                    }\n                } else if (track.mode !== 'disabled') {\n                    track.mode = 'disabled';\n                }\n            }\n        }\n        handleTracksChange(event) {\n            const shouldBeSelected = this.track.mode === 'showing';\n            if (shouldBeSelected !== this.isSelected_) {\n                this.selected(shouldBeSelected);\n            }\n        }\n        handleSelectedLanguageChange(event) {\n            if (this.track.mode === 'showing') {\n                const selectedLanguage = this.player_.cache_.selectedLanguage;\n                if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n                    return;\n                }\n                this.player_.cache_.selectedLanguage = {\n                    enabled: true,\n                    language: this.track.language,\n                    kind: this.track.kind\n                };\n            }\n        }\n        dispose() {\n            this.track = null;\n            super.dispose();\n        }\n    }\n    Component.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n    return TextTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/off-text-track-menu-item',[\n    './text-track-menu-item',\n    '../../component'\n], function (TextTrackMenuItem, Component) {\n    'use strict';\n    class OffTextTrackMenuItem extends TextTrackMenuItem {\n        constructor(player, options) {\n            options.track = {\n                player,\n                kind: options.kind,\n                kinds: options.kinds,\n                default: false,\n                mode: 'disabled'\n            };\n            if (!options.kinds) {\n                options.kinds = [options.kind];\n            }\n            if (options.label) {\n                options.track.label = options.label;\n            } else {\n                options.track.label = options.kinds.join(' and ') + ' off';\n            }\n            options.selectable = true;\n            options.multiSelectable = false;\n            super(player, options);\n        }\n        handleTracksChange(event) {\n            const tracks = this.player().textTracks();\n            let shouldBeSelected = true;\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                const track = tracks[i];\n                if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n                    shouldBeSelected = false;\n                    break;\n                }\n            }\n            if (shouldBeSelected !== this.isSelected_) {\n                this.selected(shouldBeSelected);\n            }\n        }\n        handleSelectedLanguageChange(event) {\n            const tracks = this.player().textTracks();\n            let allHidden = true;\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                const track = tracks[i];\n                if ([\n                        'captions',\n                        'descriptions',\n                        'subtitles'\n                    ].indexOf(track.kind) > -1 && track.mode === 'showing') {\n                    allHidden = false;\n                    break;\n                }\n            }\n            if (allHidden) {\n                this.player_.cache_.selectedLanguage = { enabled: false };\n            }\n        }\n    }\n    Component.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n    return OffTextTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/text-track-button',[\n    '../track-button',\n    '../../component',\n    './text-track-menu-item',\n    './off-text-track-menu-item'\n], function (TrackButton, Component, TextTrackMenuItem, OffTextTrackMenuItem) {\n    'use strict';\n    class TextTrackButton extends TrackButton {\n        constructor(player, options = {}) {\n            options.tracks = player.textTracks();\n            super(player, options);\n        }\n        createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n            let label;\n            if (this.label_) {\n                label = `${ this.label_ } off`;\n            }\n            items.push(new OffTextTrackMenuItem(this.player_, {\n                kinds: this.kinds_,\n                kind: this.kind_,\n                label\n            }));\n            this.hideThreshold_ += 1;\n            const tracks = this.player_.textTracks();\n            if (!Array.isArray(this.kinds_)) {\n                this.kinds_ = [this.kind_];\n            }\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                if (this.kinds_.indexOf(track.kind) > -1) {\n                    const item = new TrackMenuItem(this.player_, {\n                        track,\n                        kinds: this.kinds_,\n                        kind: this.kind_,\n                        selectable: true,\n                        multiSelectable: false\n                    });\n                    item.addClass(`vjs-${ track.kind }-menu-item`);\n                    items.push(item);\n                }\n            }\n            return items;\n        }\n    }\n    Component.registerComponent('TextTrackButton', TextTrackButton);\n    return TextTrackButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/chapters-track-menu-item',[\n    '../../menu/menu-item',\n    '../../component',\n    '../../utils/fn'\n], function (MenuItem, Component, Fn) {\n    'use strict';\n    class ChaptersTrackMenuItem extends MenuItem {\n        constructor(player, options) {\n            const track = options.track;\n            const cue = options.cue;\n            const currentTime = player.currentTime();\n            options.selectable = true;\n            options.multiSelectable = false;\n            options.label = cue.text;\n            options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n            super(player, options);\n            this.track = track;\n            this.cue = cue;\n            track.addEventListener('cuechange', Fn.bind(this, this.update));\n        }\n        handleClick(event) {\n            super.handleClick();\n            this.player_.currentTime(this.cue.startTime);\n            this.update(this.cue.startTime);\n        }\n        update(event) {\n            const cue = this.cue;\n            const currentTime = this.player_.currentTime();\n            this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n        }\n    }\n    Component.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n    return ChaptersTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/chapters-button',[\n    './text-track-button',\n    '../../component',\n    './chapters-track-menu-item',\n    '../../utils/string-cases'\n], function (TextTrackButton, Component, ChaptersTrackMenuItem, stringCases) {\n    'use strict';\n    class ChaptersButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n        }\n        buildCSSClass() {\n            return `vjs-chapters-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-chapters-button ${ super.buildWrapperCSSClass() }`;\n        }\n        update(event) {\n            if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n                this.setTrack(this.findChaptersTrack());\n            }\n            super.update();\n        }\n        setTrack(track) {\n            if (this.track_ === track) {\n                return;\n            }\n            if (!this.updateHandler_) {\n                this.updateHandler_ = this.update.bind(this);\n            }\n            if (this.track_) {\n                const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n                if (remoteTextTrackEl) {\n                    remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n                }\n                this.track_ = null;\n            }\n            this.track_ = track;\n            if (this.track_) {\n                this.track_.mode = 'hidden';\n                const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n                if (remoteTextTrackEl) {\n                    remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n                }\n            }\n        }\n        findChaptersTrack() {\n            const tracks = this.player_.textTracks() || [];\n            for (let i = tracks.length - 1; i >= 0; i--) {\n                const track = tracks[i];\n                if (track.kind === this.kind_) {\n                    return track;\n                }\n            }\n        }\n        getMenuCaption() {\n            if (this.track_ && this.track_.label) {\n                return this.track_.label;\n            }\n            return this.localize(stringCases.toTitleCase(this.kind_));\n        }\n        createMenu() {\n            this.options_.title = this.getMenuCaption();\n            return super.createMenu();\n        }\n        createItems() {\n            const items = [];\n            if (!this.track_) {\n                return items;\n            }\n            const cues = this.track_.cues;\n            if (!cues) {\n                return items;\n            }\n            for (let i = 0, l = cues.length; i < l; i++) {\n                const cue = cues[i];\n                const mi = new ChaptersTrackMenuItem(this.player_, {\n                    track: this.track_,\n                    cue\n                });\n                items.push(mi);\n            }\n            return items;\n        }\n    }\n    ChaptersButton.prototype.kind_ = 'chapters';\n    ChaptersButton.prototype.controlText_ = 'Chapters';\n    Component.registerComponent('ChaptersButton', ChaptersButton);\n    return ChaptersButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/descriptions-button',[\n    './text-track-button',\n    '../../component',\n    '../../utils/fn'\n], function (TextTrackButton, Component, Fn) {\n    'use strict';\n    class DescriptionsButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n            const tracks = player.textTracks();\n            const changeHandler = Fn.bind(this, this.handleTracksChange);\n            tracks.addEventListener('change', changeHandler);\n            this.listenTo('dispose', function () {\n                tracks.removeEventListener('change', changeHandler);\n            });\n        }\n        handleTracksChange(event) {\n            const tracks = this.player().textTracks();\n            let disabled = false;\n            for (let i = 0, l = tracks.length; i < l; i++) {\n                const track = tracks[i];\n                if (track.kind !== this.kind_ && track.mode === 'showing') {\n                    disabled = true;\n                    break;\n                }\n            }\n            if (disabled) {\n                this.disable();\n            } else {\n                this.enable();\n            }\n        }\n        buildCSSClass() {\n            return `vjs-descriptions-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-descriptions-button ${ super.buildWrapperCSSClass() }`;\n        }\n    }\n    DescriptionsButton.prototype.kind_ = 'descriptions';\n    DescriptionsButton.prototype.controlText_ = 'Descriptions';\n    Component.registerComponent('DescriptionsButton', DescriptionsButton);\n    return DescriptionsButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/subtitles-button',[\n    './text-track-button',\n    '../../component'\n], function (TextTrackButton, Component) {\n    'use strict';\n    class SubtitlesButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n        }\n        buildCSSClass() {\n            return `vjs-subtitles-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-subtitles-button ${ super.buildWrapperCSSClass() }`;\n        }\n    }\n    SubtitlesButton.prototype.kind_ = 'subtitles';\n    SubtitlesButton.prototype.controlText_ = 'Subtitles';\n    Component.registerComponent('SubtitlesButton', SubtitlesButton);\n    return SubtitlesButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/caption-settings-menu-item',[\n    './text-track-menu-item',\n    '../../component'\n], function (TextTrackMenuItem, Component) {\n    'use strict';\n    class CaptionSettingsMenuItem extends TextTrackMenuItem {\n        constructor(player, options) {\n            options.track = {\n                player,\n                kind: options.kind,\n                label: options.kind + ' settings',\n                selectable: false,\n                default: false,\n                mode: 'disabled'\n            };\n            options.selectable = false;\n            options.name = 'CaptionSettingsMenuItem';\n            super(player, options);\n            this.addClass('vjs-texttrack-settings');\n            this.controlText(', opens ' + options.kind + ' settings dialog');\n        }\n        handleClick(event) {\n            this.player().getChild('textTrackSettings').open();\n        }\n    }\n    Component.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n    return CaptionSettingsMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/captions-button',[\n    './text-track-button',\n    '../../component',\n    './caption-settings-menu-item'\n], function (TextTrackButton, Component, CaptionSettingsMenuItem) {\n    'use strict';\n    class CaptionsButton extends TextTrackButton {\n        constructor(player, options, ready) {\n            super(player, options, ready);\n        }\n        buildCSSClass() {\n            return `vjs-captions-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-captions-button ${ super.buildWrapperCSSClass() }`;\n        }\n        createItems() {\n            const items = [];\n            if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n                items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n                this.hideThreshold_ += 1;\n            }\n            return super.createItems(items);\n        }\n    }\n    CaptionsButton.prototype.kind_ = 'captions';\n    CaptionsButton.prototype.controlText_ = 'Captions';\n    Component.registerComponent('CaptionsButton', CaptionsButton);\n    return CaptionsButton;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/subs-caps-menu-item',[\n    './text-track-menu-item',\n    '../../component',\n    '../../utils/obj'\n], function (TextTrackMenuItem, Component, obj) {\n    'use strict';\n    class SubsCapsMenuItem extends TextTrackMenuItem {\n        createEl(type, props, attrs) {\n            let innerHTML = `<span class=\"vjs-menu-item-text\">${ this.localize(this.options_.label) }`;\n            if (this.options_.track.kind === 'captions') {\n                innerHTML += `\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\n        <span class=\"vjs-control-text\"> ${ this.localize('Captions') }</span>\n      `;\n            }\n            innerHTML += '</span>';\n            const el = super.createEl(type, obj.assign({ innerHTML }, props), attrs);\n            return el;\n        }\n    }\n    Component.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n    return SubsCapsMenuItem;\n});\ndefine('skylark-videojs/control-bar/text-track-controls/subs-caps-button',[\n    './text-track-button',\n    '../../component',\n    './caption-settings-menu-item',\n    './subs-caps-menu-item',\n    '../../utils/string-cases'\n], function (TextTrackButton, Component, CaptionSettingsMenuItem, SubsCapsMenuItem, stringCases) {\n    'use strict';\n    class SubsCapsButton extends TextTrackButton {\n        constructor(player, options = {}) {\n            super(player, options);\n            this.label_ = 'subtitles';\n            if ([\n                    'en',\n                    'en-us',\n                    'en-ca',\n                    'fr-ca'\n                ].indexOf(this.player_.language_) > -1) {\n                this.label_ = 'captions';\n            }\n            this.menuButton_.controlText(stringCases.toTitleCase(this.label_));\n        }\n        buildCSSClass() {\n            return `vjs-subs-caps-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-subs-caps-button ${ super.buildWrapperCSSClass() }`;\n        }\n        createItems() {\n            let items = [];\n            if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n                items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n                this.hideThreshold_ += 1;\n            }\n            items = super.createItems(items, SubsCapsMenuItem);\n            return items;\n        }\n    }\n    SubsCapsButton.prototype.kinds_ = [\n        'captions',\n        'subtitles'\n    ];\n    SubsCapsButton.prototype.controlText_ = 'Subtitles';\n    Component.registerComponent('SubsCapsButton', SubsCapsButton);\n    return SubsCapsButton;\n});\ndefine('skylark-videojs/control-bar/audio-track-controls/audio-track-menu-item',[\n    '../../menu/menu-item',\n    '../../component',\n    '../../utils/obj'\n], function (MenuItem, Component, obj) {\n    'use strict';\n    class AudioTrackMenuItem extends MenuItem {\n        constructor(player, options) {\n            const track = options.track;\n            const tracks = player.audioTracks();\n            options.label = track.label || track.language || 'Unknown';\n            options.selected = track.enabled;\n            super(player, options);\n            this.track = track;\n            this.addClass(`vjs-${ track.kind }-menu-item`);\n            const changeHandler = (...args) => {\n                this.handleTracksChange.apply(this, args);\n            };\n            tracks.addEventListener('change', changeHandler);\n            this.listenTo('dispose', () => {\n                tracks.removeEventListener('change', changeHandler);\n            });\n        }\n        createEl(type, props, attrs) {\n            let innerHTML = `<span class=\"vjs-menu-item-text\">${ this.localize(this.options_.label) }`;\n            if (this.options_.track.kind === 'main-desc') {\n                innerHTML += `\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\n        <span class=\"vjs-control-text\"> ${ this.localize('Descriptions') }</span>\n      `;\n            }\n            innerHTML += '</span>';\n            const el = super.createEl(type, obj.assign({ innerHTML }, props), attrs);\n            return el;\n        }\n        handleClick(event) {\n            const tracks = this.player_.audioTracks();\n            super.handleClick(event);\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                track.enabled = track === this.track;\n            }\n        }\n        handleTracksChange(event) {\n            this.selected(this.track.enabled);\n        }\n    }\n    Component.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n    return AudioTrackMenuItem;\n});\ndefine('skylark-videojs/control-bar/audio-track-controls/audio-track-button',[\n    '../track-button',\n    '../../component',\n    './audio-track-menu-item'\n], function (TrackButton, Component, AudioTrackMenuItem) {\n    'use strict';\n    class AudioTrackButton extends TrackButton {\n        constructor(player, options = {}) {\n            options.tracks = player.audioTracks();\n            super(player, options);\n        }\n        buildCSSClass() {\n            return `vjs-audio-button ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-audio-button ${ super.buildWrapperCSSClass() }`;\n        }\n        createItems(items = []) {\n            this.hideThreshold_ = 1;\n            const tracks = this.player_.audioTracks();\n            for (let i = 0; i < tracks.length; i++) {\n                const track = tracks[i];\n                items.push(new AudioTrackMenuItem(this.player_, {\n                    track,\n                    selectable: true,\n                    multiSelectable: false\n                }));\n            }\n            return items;\n        }\n    }\n    AudioTrackButton.prototype.controlText_ = 'Audio Track';\n    Component.registerComponent('AudioTrackButton', AudioTrackButton);\n    return AudioTrackButton;\n});\ndefine('skylark-videojs/control-bar/playback-rate-menu/playback-rate-menu-item',[\n    '../../menu/menu-item',\n    '../../component'\n], function (MenuItem, Component) {\n    'use strict';\n    class PlaybackRateMenuItem extends MenuItem {\n        constructor(player, options) {\n            const label = options.rate;\n            const rate = parseFloat(label, 10);\n            options.label = label;\n            options.selected = rate === 1;\n            options.selectable = true;\n            options.multiSelectable = false;\n            super(player, options);\n            this.label = label;\n            this.rate = rate;\n            this.listenTo(player, 'ratechange', this.update);\n        }\n        handleClick(event) {\n            super.handleClick();\n            this.player().playbackRate(this.rate);\n        }\n        update(event) {\n            this.selected(this.player().playbackRate() === this.rate);\n        }\n    }\n    PlaybackRateMenuItem.prototype.contentElType = 'button';\n    Component.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n    return PlaybackRateMenuItem;\n});\ndefine('skylark-videojs/control-bar/playback-rate-menu/playback-rate-menu-button',[\n    '../../menu/menu-button',\n    '../../menu/menu',\n    './playback-rate-menu-item',\n    '../../component',\n    '../../utils/dom'\n], function (MenuButton, Menu, PlaybackRateMenuItem, Component, Dom) {\n    'use strict';\n    class PlaybackRateMenuButton extends MenuButton {\n        constructor(player, options) {\n            super(player, options);\n            this.updateVisibility();\n            this.updateLabel();\n            this.listenTo(player, 'loadstart', this.updateVisibility);\n            this.listenTo(player, 'ratechange', this.updateLabel);\n        }\n        createEl() {\n            const el = super.createEl();\n            this.labelEl_ = Dom.createEl('div', {\n                className: 'vjs-playback-rate-value',\n                innerHTML: '1x'\n            });\n            el.appendChild(this.labelEl_);\n            return el;\n        }\n        dispose() {\n            this.labelEl_ = null;\n            super.dispose();\n        }\n        buildCSSClass() {\n            return `vjs-playback-rate ${ super.buildCSSClass() }`;\n        }\n        buildWrapperCSSClass() {\n            return `vjs-playback-rate ${ super.buildWrapperCSSClass() }`;\n        }\n        createMenu() {\n            const menu = new Menu(this.player());\n            const rates = this.playbackRates();\n            if (rates) {\n                for (let i = rates.length - 1; i >= 0; i--) {\n                    menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n                }\n            }\n            return menu;\n        }\n        updateARIAAttributes() {\n            this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n        }\n        handleClick(event) {\n            const currentRate = this.player().playbackRate();\n            const rates = this.playbackRates();\n            let newRate = rates[0];\n            for (let i = 0; i < rates.length; i++) {\n                if (rates[i] > currentRate) {\n                    newRate = rates[i];\n                    break;\n                }\n            }\n            this.player().playbackRate(newRate);\n        }\n        playbackRates() {\n            return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n        }\n        playbackRateSupported() {\n            return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n        }\n        updateVisibility(event) {\n            if (this.playbackRateSupported()) {\n                this.removeClass('vjs-hidden');\n            } else {\n                this.addClass('vjs-hidden');\n            }\n        }\n        updateLabel(event) {\n            if (this.playbackRateSupported()) {\n                this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n            }\n        }\n    }\n    PlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n    Component.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n    return PlaybackRateMenuButton;\n});\ndefine('skylark-videojs/control-bar/spacer-controls/spacer',[\n    '../../component'\n], function (Component) {\n    'use strict';\n    class Spacer extends Component {\n        buildCSSClass() {\n            return `vjs-spacer ${ super.buildCSSClass() }`;\n        }\n        createEl() {\n            return super.createEl('div', { className: this.buildCSSClass() });\n        }\n    }\n    Component.registerComponent('Spacer', Spacer);\n    return Spacer;\n});\ndefine('skylark-videojs/control-bar/spacer-controls/custom-control-spacer',[\n    './spacer',\n    '../../component'\n], function (Spacer, Component) {\n    'use strict';\n    class CustomControlSpacer extends Spacer {\n        buildCSSClass() {\n            return `vjs-custom-control-spacer ${ super.buildCSSClass() }`;\n        }\n        createEl() {\n            const el = super.createEl({ className: this.buildCSSClass() });\n            el.innerHTML = '\\xA0';\n            return el;\n        }\n    }\n    Component.registerComponent('CustomControlSpacer', CustomControlSpacer);\n    return CustomControlSpacer;\n});\ndefine('skylark-videojs/control-bar/control-bar',[\n    'skylark-langx-globals/document',\n    '../component',\n    './play-toggle',\n    './time-controls/current-time-display',\n    './time-controls/duration-display',\n    './time-controls/time-divider',\n    './time-controls/remaining-time-display',\n    './live-display',\n    './seek-to-live',\n    './progress-control/progress-control',\n    './picture-in-picture-toggle',\n    './fullscreen-toggle',\n    './volume-panel',\n    './text-track-controls/chapters-button',\n    './text-track-controls/descriptions-button',\n    './text-track-controls/subtitles-button',\n    './text-track-controls/captions-button',\n    './text-track-controls/subs-caps-button',\n    './audio-track-controls/audio-track-button',\n    './playback-rate-menu/playback-rate-menu-button',\n    './spacer-controls/custom-control-spacer'\n], function (document,Component) {\n    'use strict';\n    class ControlBar extends Component {\n        createEl() {\n            return super.createEl('div', {\n                className: 'vjs-control-bar',\n                dir: 'ltr'\n            });\n        }\n    }\n    ControlBar.prototype.options_ = {\n        children: [\n            'playToggle',\n            'volumePanel',\n            'currentTimeDisplay',\n            'timeDivider',\n            'durationDisplay',\n            'progressControl',\n            'liveDisplay',\n            'seekToLive',\n            'remainingTimeDisplay',\n            'customControlSpacer',\n            'playbackRateMenuButton',\n            'chaptersButton',\n            'descriptionsButton',\n            'subsCapsButton',\n            'audioTrackButton',\n            'fullscreenToggle'\n        ]\n    };\n    if ('exitPictureInPicture' in document) {\n        ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n    }\n    Component.registerComponent('ControlBar', ControlBar);\n    return ControlBar;\n});\ndefine('skylark-videojs/error-display',[\n    './component',\n    './modal-dialog'\n], function (Component, ModalDialog) {\n    'use strict';\n    class ErrorDisplay extends ModalDialog {\n        constructor(player, options) {\n            super(player, options);\n            this.listenTo(player, 'error', this.open);\n        }\n        buildCSSClass() {\n            return `vjs-error-display ${ super.buildCSSClass() }`;\n        }\n        content() {\n            const error = this.player().error();\n            return error ? this.localize(error.message) : '';\n        }\n    }\n    ErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n        pauseOnOpen: false,\n        fillAlways: true,\n        temporary: false,\n        uncloseable: true\n    });\n    Component.registerComponent('ErrorDisplay', ErrorDisplay);\n    return ErrorDisplay;\n});\ndefine('skylark-videojs/tracks/text-track-settings',[\n    '../component',\n    '../modal-dialog',\n    '../utils/dom',\n    '../utils/fn',\n    '../utils/obj',\n    '../utils/log'\n], function (Component, ModalDialog, Dom, Fn, Obj, log) {\n    'use strict';\n    const LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n    const COLOR_BLACK = [\n        '#000',\n        'Black'\n    ];\n    const COLOR_BLUE = [\n        '#00F',\n        'Blue'\n    ];\n    const COLOR_CYAN = [\n        '#0FF',\n        'Cyan'\n    ];\n    const COLOR_GREEN = [\n        '#0F0',\n        'Green'\n    ];\n    const COLOR_MAGENTA = [\n        '#F0F',\n        'Magenta'\n    ];\n    const COLOR_RED = [\n        '#F00',\n        'Red'\n    ];\n    const COLOR_WHITE = [\n        '#FFF',\n        'White'\n    ];\n    const COLOR_YELLOW = [\n        '#FF0',\n        'Yellow'\n    ];\n    const OPACITY_OPAQUE = [\n        '1',\n        'Opaque'\n    ];\n    const OPACITY_SEMI = [\n        '0.5',\n        'Semi-Transparent'\n    ];\n    const OPACITY_TRANS = [\n        '0',\n        'Transparent'\n    ];\n    const selectConfigs = {\n        backgroundColor: {\n            selector: '.vjs-bg-color > select',\n            id: 'captions-background-color-%s',\n            label: 'Color',\n            options: [\n                COLOR_BLACK,\n                COLOR_WHITE,\n                COLOR_RED,\n                COLOR_GREEN,\n                COLOR_BLUE,\n                COLOR_YELLOW,\n                COLOR_MAGENTA,\n                COLOR_CYAN\n            ]\n        },\n        backgroundOpacity: {\n            selector: '.vjs-bg-opacity > select',\n            id: 'captions-background-opacity-%s',\n            label: 'Transparency',\n            options: [\n                OPACITY_OPAQUE,\n                OPACITY_SEMI,\n                OPACITY_TRANS\n            ]\n        },\n        color: {\n            selector: '.vjs-fg-color > select',\n            id: 'captions-foreground-color-%s',\n            label: 'Color',\n            options: [\n                COLOR_WHITE,\n                COLOR_BLACK,\n                COLOR_RED,\n                COLOR_GREEN,\n                COLOR_BLUE,\n                COLOR_YELLOW,\n                COLOR_MAGENTA,\n                COLOR_CYAN\n            ]\n        },\n        edgeStyle: {\n            selector: '.vjs-edge-style > select',\n            id: '%s',\n            label: 'Text Edge Style',\n            options: [\n                [\n                    'none',\n                    'None'\n                ],\n                [\n                    'raised',\n                    'Raised'\n                ],\n                [\n                    'depressed',\n                    'Depressed'\n                ],\n                [\n                    'uniform',\n                    'Uniform'\n                ],\n                [\n                    'dropshadow',\n                    'Dropshadow'\n                ]\n            ]\n        },\n        fontFamily: {\n            selector: '.vjs-font-family > select',\n            id: 'captions-font-family-%s',\n            label: 'Font Family',\n            options: [\n                [\n                    'proportionalSansSerif',\n                    'Proportional Sans-Serif'\n                ],\n                [\n                    'monospaceSansSerif',\n                    'Monospace Sans-Serif'\n                ],\n                [\n                    'proportionalSerif',\n                    'Proportional Serif'\n                ],\n                [\n                    'monospaceSerif',\n                    'Monospace Serif'\n                ],\n                [\n                    'casual',\n                    'Casual'\n                ],\n                [\n                    'script',\n                    'Script'\n                ],\n                [\n                    'small-caps',\n                    'Small Caps'\n                ]\n            ]\n        },\n        fontPercent: {\n            selector: '.vjs-font-percent > select',\n            id: 'captions-font-size-%s',\n            label: 'Font Size',\n            options: [\n                [\n                    '0.50',\n                    '50%'\n                ],\n                [\n                    '0.75',\n                    '75%'\n                ],\n                [\n                    '1.00',\n                    '100%'\n                ],\n                [\n                    '1.25',\n                    '125%'\n                ],\n                [\n                    '1.50',\n                    '150%'\n                ],\n                [\n                    '1.75',\n                    '175%'\n                ],\n                [\n                    '2.00',\n                    '200%'\n                ],\n                [\n                    '3.00',\n                    '300%'\n                ],\n                [\n                    '4.00',\n                    '400%'\n                ]\n            ],\n            default: 2,\n            parser: v => v === '1.00' ? null : Number(v)\n        },\n        textOpacity: {\n            selector: '.vjs-text-opacity > select',\n            id: 'captions-foreground-opacity-%s',\n            label: 'Transparency',\n            options: [\n                OPACITY_OPAQUE,\n                OPACITY_SEMI\n            ]\n        },\n        windowColor: {\n            selector: '.vjs-window-color > select',\n            id: 'captions-window-color-%s',\n            label: 'Color'\n        },\n        windowOpacity: {\n            selector: '.vjs-window-opacity > select',\n            id: 'captions-window-opacity-%s',\n            label: 'Transparency',\n            options: [\n                OPACITY_TRANS,\n                OPACITY_SEMI,\n                OPACITY_OPAQUE\n            ]\n        }\n    };\n    selectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n    function parseOptionValue(value, parser) {\n        if (parser) {\n            value = parser(value);\n        }\n        if (value && value !== 'none') {\n            return value;\n        }\n    }\n    function getSelectedOptionValue(el, parser) {\n        const value = el.options[el.options.selectedIndex].value;\n        return parseOptionValue(value, parser);\n    }\n    function setSelectedOption(el, value, parser) {\n        if (!value) {\n            return;\n        }\n        for (let i = 0; i < el.options.length; i++) {\n            if (parseOptionValue(el.options[i].value, parser) === value) {\n                el.selectedIndex = i;\n                break;\n            }\n        }\n    }\n    class TextTrackSettings extends ModalDialog {\n        constructor(player, options) {\n            options.temporary = false;\n            super(player, options);\n            this.updateDisplay = Fn.bind(this, this.updateDisplay);\n            this.fill();\n            this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n            this.endDialog = Dom.createEl('p', {\n                className: 'vjs-control-text',\n                textContent: this.localize('End of dialog window.')\n            });\n            this.el().appendChild(this.endDialog);\n            this.setDefaults();\n            if (options.persistTextTrackSettings === undefined) {\n                this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n            }\n            this.listenTo(this.$('.vjs-done-button'), 'click', () => {\n                this.saveSettings();\n                this.close();\n            });\n            this.listenTo(this.$('.vjs-default-button'), 'click', () => {\n                this.setDefaults();\n                this.updateDisplay();\n            });\n            Obj.each(selectConfigs, config => {\n                this.listenTo(this.$(config.selector), 'change', this.updateDisplay);\n            });\n            if (this.options_.persistTextTrackSettings) {\n                this.restoreSettings();\n            }\n        }\n        dispose() {\n            this.endDialog = null;\n            super.dispose();\n        }\n        createElSelect_(key, legendId = '', type = 'label') {\n            const config = selectConfigs[key];\n            const id = config.id.replace('%s', this.id_);\n            const selectLabelledbyIds = [\n                legendId,\n                id\n            ].join(' ').trim();\n            return [\n                `<${ type } id=\"${ id }\" class=\"${ type === 'label' ? 'vjs-label' : '' }\">`,\n                this.localize(config.label),\n                `</${ type }>`,\n                `<select aria-labelledby=\"${ selectLabelledbyIds }\">`\n            ].concat(config.options.map(o => {\n                const optionId = id + '-' + o[1].replace(/\\W+/g, '');\n                return [\n                    `<option id=\"${ optionId }\" value=\"${ o[0] }\" `,\n                    `aria-labelledby=\"${ selectLabelledbyIds } ${ optionId }\">`,\n                    this.localize(o[1]),\n                    '</option>'\n                ].join('');\n            })).concat('</select>').join('');\n        }\n        createElFgColor_() {\n            const legendId = `captions-text-legend-${ this.id_ }`;\n            return [\n                '<fieldset class=\"vjs-fg-color vjs-track-setting\">',\n                `<legend id=\"${ legendId }\">`,\n                this.localize('Text'),\n                '</legend>',\n                this.createElSelect_('color', legendId),\n                '<span class=\"vjs-text-opacity vjs-opacity\">',\n                this.createElSelect_('textOpacity', legendId),\n                '</span>',\n                '</fieldset>'\n            ].join('');\n        }\n        createElBgColor_() {\n            const legendId = `captions-background-${ this.id_ }`;\n            return [\n                '<fieldset class=\"vjs-bg-color vjs-track-setting\">',\n                `<legend id=\"${ legendId }\">`,\n                this.localize('Background'),\n                '</legend>',\n                this.createElSelect_('backgroundColor', legendId),\n                '<span class=\"vjs-bg-opacity vjs-opacity\">',\n                this.createElSelect_('backgroundOpacity', legendId),\n                '</span>',\n                '</fieldset>'\n            ].join('');\n        }\n        createElWinColor_() {\n            const legendId = `captions-window-${ this.id_ }`;\n            return [\n                '<fieldset class=\"vjs-window-color vjs-track-setting\">',\n                `<legend id=\"${ legendId }\">`,\n                this.localize('Window'),\n                '</legend>',\n                this.createElSelect_('windowColor', legendId),\n                '<span class=\"vjs-window-opacity vjs-opacity\">',\n                this.createElSelect_('windowOpacity', legendId),\n                '</span>',\n                '</fieldset>'\n            ].join('');\n        }\n        createElColors_() {\n            return Dom.createEl('div', {\n                className: 'vjs-track-settings-colors',\n                innerHTML: [\n                    this.createElFgColor_(),\n                    this.createElBgColor_(),\n                    this.createElWinColor_()\n                ].join('')\n            });\n        }\n        createElFont_() {\n            return Dom.createEl('div', {\n                className: 'vjs-track-settings-font',\n                innerHTML: [\n                    '<fieldset class=\"vjs-font-percent vjs-track-setting\">',\n                    this.createElSelect_('fontPercent', '', 'legend'),\n                    '</fieldset>',\n                    '<fieldset class=\"vjs-edge-style vjs-track-setting\">',\n                    this.createElSelect_('edgeStyle', '', 'legend'),\n                    '</fieldset>',\n                    '<fieldset class=\"vjs-font-family vjs-track-setting\">',\n                    this.createElSelect_('fontFamily', '', 'legend'),\n                    '</fieldset>'\n                ].join('')\n            });\n        }\n        createElControls_() {\n            const defaultsDescription = this.localize('restore all settings to the default values');\n            return Dom.createEl('div', {\n                className: 'vjs-track-settings-controls',\n                innerHTML: [\n                    `<button type=\"button\" class=\"vjs-default-button\" title=\"${ defaultsDescription }\">`,\n                    this.localize('Reset'),\n                    `<span class=\"vjs-control-text\"> ${ defaultsDescription }</span>`,\n                    '</button>',\n                    `<button type=\"button\" class=\"vjs-done-button\">${ this.localize('Done') }</button>`\n                ].join('')\n            });\n        }\n        content() {\n            return [\n                this.createElColors_(),\n                this.createElFont_(),\n                this.createElControls_()\n            ];\n        }\n        label() {\n            return this.localize('Caption Settings Dialog');\n        }\n        description() {\n            return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n        }\n        buildCSSClass() {\n            return super.buildCSSClass() + ' vjs-text-track-settings';\n        }\n        getValues() {\n            return Obj.reduce(selectConfigs, (accum, config, key) => {\n                const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n                if (value !== undefined) {\n                    accum[key] = value;\n                }\n                return accum;\n            }, {});\n        }\n        setValues(values) {\n            Obj.each(selectConfigs, (config, key) => {\n                setSelectedOption(this.$(config.selector), values[key], config.parser);\n            });\n        }\n        setDefaults() {\n            Obj.each(selectConfigs, config => {\n                const index = config.hasOwnProperty('default') ? config.default : 0;\n                this.$(config.selector).selectedIndex = index;\n            });\n        }\n        restoreSettings() {\n            let values;\n            try {\n                values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY));\n            } catch (err) {\n                log.warn(err);\n            }\n            if (values) {\n                this.setValues(values);\n            }\n        }\n        saveSettings() {\n            if (!this.options_.persistTextTrackSettings) {\n                return;\n            }\n            const values = this.getValues();\n            try {\n                if (Object.keys(values).length) {\n                    window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n                } else {\n                    window.localStorage.removeItem(LOCAL_STORAGE_KEY);\n                }\n            } catch (err) {\n                log.warn(err);\n            }\n        }\n        updateDisplay() {\n            const ttDisplay = this.player_.getChild('textTrackDisplay');\n            if (ttDisplay) {\n                ttDisplay.updateDisplay();\n            }\n        }\n        conditionalBlur_() {\n            this.previouslyActiveEl_ = null;\n            const cb = this.player_.controlBar;\n            const subsCapsBtn = cb && cb.subsCapsButton;\n            const ccBtn = cb && cb.captionsButton;\n            if (subsCapsBtn) {\n                subsCapsBtn.focus();\n            } else if (ccBtn) {\n                ccBtn.focus();\n            }\n        }\n    }\n    Component.registerComponent('TextTrackSettings', TextTrackSettings);\n    return TextTrackSettings;\n});\ndefine('skylark-videojs/resize-manager',[\n    './utils/fn',\n    './utils/events',\n    './utils/merge-options',\n    './component'\n], function ( Fn, Events, mergeOptions, Component) {\n    'use strict';\n    class ResizeManager extends Component {\n        constructor(player, options) {\n            let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver;\n            if (options.ResizeObserver === null) {\n                RESIZE_OBSERVER_AVAILABLE = false;\n            }\n            const options_ = mergeOptions({\n                createEl: !RESIZE_OBSERVER_AVAILABLE,\n                reportTouchActivity: false\n            }, options);\n            super(player, options_);\n            this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n            this.loadListener_ = null;\n            this.resizeObserver_ = null;\n            this.debouncedHandler_ = Fn.debounce(() => {\n                this.resizeHandler();\n            }, 100, false, this);\n            if (RESIZE_OBSERVER_AVAILABLE) {\n                this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n                this.resizeObserver_.observe(player.el());\n            } else {\n                this.loadListener_ = () => {\n                    if (!this.el_ || !this.el_.contentWindow) {\n                        return;\n                    }\n                    const debouncedHandler_ = this.debouncedHandler_;\n                    let unloadListener_ = this.unloadListener_ = function () {\n                        Events.off(this, 'resize', debouncedHandler_);\n                        Events.off(this, 'unload', unloadListener_);\n                        unloadListener_ = null;\n                    };\n                    Events.on(this.el_.contentWindow, 'unload', unloadListener_);\n                    Events.on(this.el_.contentWindow, 'resize', debouncedHandler_);\n                };\n                this.listenToOnce('load', this.loadListener_);\n            }\n        }\n        createEl() {\n            return super.createEl('iframe', {\n                className: 'vjs-resize-manager',\n                tabIndex: -1\n            }, { 'aria-hidden': 'true' });\n        }\n        resizeHandler() {\n            if (!this.player_ || !this.player_.trigger) {\n                return;\n            }\n            this.player_.trigger('playerresize');\n        }\n        dispose() {\n            if (this.debouncedHandler_) {\n                this.debouncedHandler_.cancel();\n            }\n            if (this.resizeObserver_) {\n                if (this.player_.el()) {\n                    this.resizeObserver_.unobserve(this.player_.el());\n                }\n                this.resizeObserver_.disconnect();\n            }\n            if (this.loadListener_) {\n                this.unlistenTo('load', this.loadListener_);\n            }\n            if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n                this.unloadListener_.call(this.el_.contentWindow);\n            }\n            this.ResizeObserver = null;\n            this.resizeObserver = null;\n            this.debouncedHandler_ = null;\n            this.loadListener_ = null;\n            super.dispose();\n        }\n    }\n    Component.registerComponent('ResizeManager', ResizeManager);\n    return ResizeManager;\n});\ndefine('skylark-videojs/live-tracker',[\n    './component',\n    './utils/merge-options',\n    './utils/browser',\n    './utils/fn'\n], function (Component, mergeOptions, browser,  Fn) {\n    'use strict';\n    const defaults = {\n        trackingThreshold: 30,\n        liveTolerance: 15\n    };\n    class LiveTracker extends Component {\n        constructor(player, options) {\n            const options_ = mergeOptions(defaults, options, { createEl: false });\n            super(player, options_);\n            this.reset_();\n            this.listenTo(this.player_, 'durationchange', this.handleDurationchange);\n            if (browser.IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n                this.listenTo(document, 'visibilitychange', this.handleVisibilityChange);\n            }\n        }\n        handleVisibilityChange() {\n            if (this.player_.duration() !== Infinity) {\n                return;\n            }\n            if (document.hidden) {\n                this.stopTracking();\n            } else {\n                this.startTracking();\n            }\n        }\n        trackLive_() {\n            const seekable = this.player_.seekable();\n            if (!seekable || !seekable.length) {\n                return;\n            }\n            const newTime = Number(window.performance.now().toFixed(4));\n            const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n            this.lastTime_ = newTime;\n            this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n            const liveCurrentTime = this.liveCurrentTime();\n            const currentTime = this.player_.currentTime();\n            let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n            if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n                isBehind = false;\n            }\n            if (isBehind !== this.behindLiveEdge_) {\n                this.behindLiveEdge_ = isBehind;\n                this.trigger('liveedgechange');\n            }\n        }\n        handleDurationchange() {\n            if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n                if (this.player_.options_.liveui) {\n                    this.player_.addClass('vjs-liveui');\n                }\n                this.startTracking();\n            } else {\n                this.player_.removeClass('vjs-liveui');\n                this.stopTracking();\n            }\n        }\n        startTracking() {\n            if (this.isTracking()) {\n                return;\n            }\n            if (!this.timeupdateSeen_) {\n                this.timeupdateSeen_ = this.player_.hasStarted();\n            }\n            this.trackingInterval_ = this.setInterval(this.trackLive_, Fn.UPDATE_REFRESH_INTERVAL);\n            this.trackLive_();\n            this.listenTo(this.player_, [\n                'play',\n                'pause'\n            ], this.trackLive_);\n            if (!this.timeupdateSeen_) {\n                this.listenToOnce(this.player_, 'play', this.handlePlay);\n                this.listenToOnce(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n            } else {\n                this.listenTo(this.player_, 'seeked', this.handleSeeked);\n            }\n        }\n        handleFirstTimeupdate() {\n            this.timeupdateSeen_ = true;\n            this.listenTo(this.player_, 'seeked', this.handleSeeked);\n        }\n        handleSeeked() {\n            const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n            this.seekedBehindLive_ = this.skipNextSeeked_ ? false : timeDiff > 2;\n            this.skipNextSeeked_ = false;\n            this.trackLive_();\n        }\n        handlePlay() {\n            this.listenToOnce(this.player_, 'timeupdate', this.seekToLiveEdge);\n        }\n        reset_() {\n            this.lastTime_ = -1;\n            this.pastSeekEnd_ = 0;\n            this.lastSeekEnd_ = -1;\n            this.behindLiveEdge_ = true;\n            this.timeupdateSeen_ = false;\n            this.seekedBehindLive_ = false;\n            this.skipNextSeeked_ = false;\n            this.clearInterval(this.trackingInterval_);\n            this.trackingInterval_ = null;\n\n            /*\n            this.unlistenTo(this.player_, [\n                'play',\n                'pause'\n            ], this.trackLive_);\n            this.unlistenTo(this.player_, 'seeked', this.handleSeeked);\n            this.unlistenTo(this.player_, 'play', this.handlePlay);\n            this.unlistenTo(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n            this.unlistenTo(this.player_, 'timeupdate', this.seekToLiveEdge);\n            */\n            this.unlistenTo(this.player_, [\n                'play',\n                'pause'\n            ], this.trackLive_);\n            this.unlistenTo(this.player_, 'seeked', this.handleSeeked);\n            this.unlistenTo(this.player_, 'play', this.handlePlay);\n            this.unlistenTo(this.player_, 'timeupdate', this.handleFirstTimeupdate);\n            this.unlistenTo(this.player_, 'timeupdate', this.seekToLiveEdge);\n        }\n        stopTracking() {\n            if (!this.isTracking()) {\n                return;\n            }\n            this.reset_();\n            this.trigger('liveedgechange');\n        }\n        seekableEnd() {\n            const seekable = this.player_.seekable();\n            const seekableEnds = [];\n            let i = seekable ? seekable.length : 0;\n            while (i--) {\n                seekableEnds.push(seekable.end(i));\n            }\n            return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n        }\n        seekableStart() {\n            const seekable = this.player_.seekable();\n            const seekableStarts = [];\n            let i = seekable ? seekable.length : 0;\n            while (i--) {\n                seekableStarts.push(seekable.start(i));\n            }\n            return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n        }\n        liveWindow() {\n            const liveCurrentTime = this.liveCurrentTime();\n            if (liveCurrentTime === Infinity) {\n                return 0;\n            }\n            return liveCurrentTime - this.seekableStart();\n        }\n        isLive() {\n            return this.isTracking();\n        }\n        atLiveEdge() {\n            return !this.behindLiveEdge();\n        }\n        liveCurrentTime() {\n            return this.pastSeekEnd() + this.seekableEnd();\n        }\n        pastSeekEnd() {\n            const seekableEnd = this.seekableEnd();\n            if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n                this.pastSeekEnd_ = 0;\n            }\n            this.lastSeekEnd_ = seekableEnd;\n            return this.pastSeekEnd_;\n        }\n        behindLiveEdge() {\n            return this.behindLiveEdge_;\n        }\n        isTracking() {\n            return typeof this.trackingInterval_ === 'number';\n        }\n        seekToLiveEdge() {\n            this.seekedBehindLive_ = false;\n            if (this.atLiveEdge()) {\n                return;\n            }\n            this.skipNextSeeked_ = true;\n            this.player_.currentTime(this.liveCurrentTime());\n        }\n        dispose() {\n            this.unlistenTo(document, 'visibilitychange', this.handleVisibilityChange);\n            this.stopTracking();\n            super.dispose();\n        }\n    }\n    Component.registerComponent('LiveTracker', LiveTracker);\n    return LiveTracker;\n});\ndefine('skylark-videojs/tech/setup-sourceset',[\n    'skylark-langx-globals/document',\n    '../utils/merge-options',\n    '../utils/url'\n], function (document,mergeOptions, url) {\n    'use strict';\n    const sourcesetLoad = tech => {\n        const el = tech.el();\n        if (el.hasAttribute('src')) {\n            tech.triggerSourceset(el.src);\n            return true;\n        }\n        const sources = tech.$$('source');\n        const srcUrls = [];\n        let src = '';\n        if (!sources.length) {\n            return false;\n        }\n        for (let i = 0; i < sources.length; i++) {\n            const url = sources[i].src;\n            if (url && srcUrls.indexOf(url) === -1) {\n                srcUrls.push(url);\n            }\n        }\n        if (!srcUrls.length) {\n            return false;\n        }\n        if (srcUrls.length === 1) {\n            src = srcUrls[0];\n        }\n        tech.triggerSourceset(src);\n        return true;\n    };\n    const innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n        get() {\n            return this.cloneNode(true).innerHTML;\n        },\n        set(v) {\n            const dummy = document.createElement(this.nodeName.toLowerCase());\n            dummy.innerHTML = v;\n            const docFrag = document.createDocumentFragment();\n            while (dummy.childNodes.length) {\n                docFrag.appendChild(dummy.childNodes[0]);\n            }\n            this.innerText = '';\n            window.Element.prototype.appendChild.call(this, docFrag);\n            return this.innerHTML;\n        }\n    });\n    const getDescriptor = (priority, prop) => {\n        let descriptor = {};\n        for (let i = 0; i < priority.length; i++) {\n            descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n            if (descriptor && descriptor.set && descriptor.get) {\n                break;\n            }\n        }\n        descriptor.enumerable = true;\n        descriptor.configurable = true;\n        return descriptor;\n    };\n    const getInnerHTMLDescriptor = tech => getDescriptor([\n        tech.el(),\n        window.HTMLMediaElement.prototype,\n        window.Element.prototype,\n        innerHTMLDescriptorPolyfill\n    ], 'innerHTML');\n    const firstSourceWatch = function (tech) {\n        const el = tech.el();\n        if (el.resetSourceWatch_) {\n            return;\n        }\n        const old = {};\n        const innerDescriptor = getInnerHTMLDescriptor(tech);\n        const appendWrapper = appendFn => (...args) => {\n            const retval = appendFn.apply(el, args);\n            sourcesetLoad(tech);\n            return retval;\n        };\n        [\n            'append',\n            'appendChild',\n            'insertAdjacentHTML'\n        ].forEach(k => {\n            if (!el[k]) {\n                return;\n            }\n            old[k] = el[k];\n            el[k] = appendWrapper(old[k]);\n        });\n        Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, { set: appendWrapper(innerDescriptor.set) }));\n        el.resetSourceWatch_ = () => {\n            el.resetSourceWatch_ = null;\n            Object.keys(old).forEach(k => {\n                el[k] = old[k];\n            });\n            Object.defineProperty(el, 'innerHTML', innerDescriptor);\n        };\n        tech.one('sourceset', el.resetSourceWatch_);\n    };\n    const srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n        get() {\n            if (this.hasAttribute('src')) {\n                return url.getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n            }\n            return '';\n        },\n        set(v) {\n            window.Element.prototype.setAttribute.call(this, 'src', v);\n            return v;\n        }\n    });\n    const getSrcDescriptor = tech => getDescriptor([\n        tech.el(),\n        window.HTMLMediaElement.prototype,\n        srcDescriptorPolyfill\n    ], 'src');\n    const setupSourceset = function (tech) {\n        if (!tech.featuresSourceset) {\n            return;\n        }\n        const el = tech.el();\n        if (el.resetSourceset_) {\n            return;\n        }\n        const srcDescriptor = getSrcDescriptor(tech);\n        const oldSetAttribute = el.setAttribute;\n        const oldLoad = el.load;\n        Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n            set: v => {\n                const retval = srcDescriptor.set.call(el, v);\n                tech.triggerSourceset(el.src);\n                return retval;\n            }\n        }));\n        el.setAttribute = (n, v) => {\n            const retval = oldSetAttribute.call(el, n, v);\n            if (/src/i.test(n)) {\n                tech.triggerSourceset(el.src);\n            }\n            return retval;\n        };\n        el.load = () => {\n            const retval = oldLoad.call(el);\n            if (!sourcesetLoad(tech)) {\n                tech.triggerSourceset('');\n                firstSourceWatch(tech);\n            }\n            return retval;\n        };\n        if (el.currentSrc) {\n            tech.triggerSourceset(el.currentSrc);\n        } else if (!sourcesetLoad(tech)) {\n            firstSourceWatch(tech);\n        }\n        el.resetSourceset_ = () => {\n            el.resetSourceset_ = null;\n            el.load = oldLoad;\n            el.setAttribute = oldSetAttribute;\n            Object.defineProperty(el, 'src', srcDescriptor);\n            if (el.resetSourceWatch_) {\n                el.resetSourceWatch_();\n            }\n        };\n    };\n    return setupSourceset;\n});\ndefine('skylark-videojs/utils/define-lazy-property',[],function () {\n    'use strict';\n    const defineLazyProperty = function (obj, key, getValue, setter = true) {\n        const set = value => Object.defineProperty(obj, key, {\n            value,\n            enumerable: true,\n            writable: true\n        });\n        const options = {\n            configurable: true,\n            enumerable: true,\n            get() {\n                const value = getValue();\n                set(value);\n                return value;\n            }\n        };\n        if (setter) {\n            options.set = set;\n        }\n        return Object.defineProperty(obj, key, options);\n    };\n    return defineLazyProperty;\n});\ndefine('skylark-videojs/tech/html5',[\n    'skylark-langx-globals/document',\n    './tech',\n    '../utils/dom',\n    '../utils/url',\n    '../utils/log',\n    '../utils/browser',\n    '../utils/obj',\n    '../utils/merge-options',\n    '../utils/string-cases',\n    '../tracks/track-types',\n    './setup-sourceset',\n    '../utils/define-lazy-property',\n    '../utils/promise'\n], function (\n    document,\n    Tech, \n    Dom, \n    Url, \n    log, \n    browser,  \n    obj, \n    mergeOptions, \n    stringCases, \n    TRACK_TYPES, \n    setupSourceset, \n    defineLazyProperty, \n    promise\n) {\n    'use strict';\n    const NORMAL = TRACK_TYPES.NORMAL,\n          REMOTE = TRACK_TYPES.REMOTE;\n\n    class Html5 extends Tech {\n        constructor(options, ready) {\n            super(options, ready);\n            const source = options.source;\n            let crossoriginTracks = false;\n            if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n                this.setSource(source);\n            } else {\n                this.handleLateInit_(this.el_);\n            }\n            if (options.enableSourceset) {\n                this.setupSourcesetHandling_();\n            }\n            this.isScrubbing_ = false;\n            if (this.el_.hasChildNodes()) {\n                const nodes = this.el_.childNodes;\n                let nodesLength = nodes.length;\n                const removeNodes = [];\n                while (nodesLength--) {\n                    const node = nodes[nodesLength];\n                    const nodeName = node.nodeName.toLowerCase();\n                    if (nodeName === 'track') {\n                        if (!this.featuresNativeTextTracks) {\n                            removeNodes.push(node);\n                        } else {\n                            this.remoteTextTrackEls().addTrackElement_(node);\n                            this.remoteTextTracks().addTrack(node.track);\n                            this.textTracks().addTrack(node.track);\n                            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && Url.isCrossOrigin(node.src)) {\n                                crossoriginTracks = true;\n                            }\n                        }\n                    }\n                }\n                for (let i = 0; i < removeNodes.length; i++) {\n                    this.el_.removeChild(removeNodes[i]);\n                }\n            }\n            this.proxyNativeTracks_();\n            if (this.featuresNativeTextTracks && crossoriginTracks) {\n                log.warn(\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n\" + 'This may prevent text tracks from loading.');\n            }\n            this.restoreMetadataTracksInIOSNativePlayer_();\n            if ((browser.TOUCH_ENABLED || browser.IS_IPHONE || browser.IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n                this.setControls(true);\n            }\n            this.proxyWebkitFullscreen_();\n            this.triggerReady();\n        }\n        dispose() {\n            if (this.el_ && this.el_.resetSourceset_) {\n                this.el_.resetSourceset_();\n            }\n            Html5.disposeMediaElement(this.el_);\n            this.options_ = null;\n            super.dispose();\n        }\n        setupSourcesetHandling_() {\n            setupSourceset(this);\n        }\n        restoreMetadataTracksInIOSNativePlayer_() {\n            const textTracks = this.textTracks();\n            let metadataTracksPreFullscreenState;\n            const takeMetadataTrackSnapshot = () => {\n                metadataTracksPreFullscreenState = [];\n                for (let i = 0; i < textTracks.length; i++) {\n                    const track = textTracks[i];\n                    if (track.kind === 'metadata') {\n                        metadataTracksPreFullscreenState.push({\n                            track,\n                            storedMode: track.mode\n                        });\n                    }\n                }\n            };\n            takeMetadataTrackSnapshot();\n            textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n            this.listenTo('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n            const restoreTrackMode = () => {\n                for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n                    const storedTrack = metadataTracksPreFullscreenState[i];\n                    if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n                        storedTrack.track.mode = storedTrack.storedMode;\n                    }\n                }\n                textTracks.removeEventListener('change', restoreTrackMode);\n            };\n            this.listenTo('webkitbeginfullscreen', () => {\n                textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.removeEventListener('change', restoreTrackMode);\n                textTracks.addEventListener('change', restoreTrackMode);\n            });\n            this.listenTo('webkitendfullscreen', () => {\n                textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n                textTracks.removeEventListener('change', restoreTrackMode);\n            });\n        }\n        overrideNative_(type, override) {\n            if (override !== this[`featuresNative${ type }Tracks`]) {\n                return;\n            }\n            const lowerCaseType = type.toLowerCase();\n            if (this[`${ lowerCaseType }TracksListeners_`]) {\n                Object.keys(this[`${ lowerCaseType }TracksListeners_`]).forEach(eventName => {\n                    const elTracks = this.el()[`${ lowerCaseType }Tracks`];\n                    elTracks.removeEventListener(eventName, this[`${ lowerCaseType }TracksListeners_`][eventName]);\n                });\n            }\n            this[`featuresNative${ type }Tracks`] = !override;\n            this[`${ lowerCaseType }TracksListeners_`] = null;\n            this.proxyNativeTracksForType_(lowerCaseType);\n        }\n        overrideNativeAudioTracks(override) {\n            this.overrideNative_('Audio', override);\n        }\n        overrideNativeVideoTracks(override) {\n            this.overrideNative_('Video', override);\n        }\n        proxyNativeTracksForType_(name) {\n            const props = NORMAL[name];\n            const elTracks = this.el()[props.getterName];\n            const techTracks = this[props.getterName]();\n            if (!this[`featuresNative${ props.capitalName }Tracks`] || !elTracks || !elTracks.addEventListener) {\n                return;\n            }\n            const listeners = {\n                change: e => {\n                    const event = {\n                        type: 'change',\n                        target: techTracks,\n                        currentTarget: techTracks,\n                        srcElement: techTracks\n                    };\n                    techTracks.trigger(event);\n                    if (name === 'text') {\n                        this[REMOTE.remoteText.getterName]().trigger(event);\n                    }\n                },\n                addtrack(e) {\n                    techTracks.addTrack(e.track);\n                },\n                removetrack(e) {\n                    techTracks.removeTrack(e.track);\n                }\n            };\n            const removeOldTracks = function () {\n                const removeTracks = [];\n                for (let i = 0; i < techTracks.length; i++) {\n                    let found = false;\n                    for (let j = 0; j < elTracks.length; j++) {\n                        if (elTracks[j] === techTracks[i]) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        removeTracks.push(techTracks[i]);\n                    }\n                }\n                while (removeTracks.length) {\n                    techTracks.removeTrack(removeTracks.shift());\n                }\n            };\n            this[props.getterName + 'Listeners_'] = listeners;\n            Object.keys(listeners).forEach(eventName => {\n                const listener = listeners[eventName];\n                elTracks.addEventListener(eventName, listener);\n                this.listenTo('dispose', e => elTracks.removeEventListener(eventName, listener));\n            });\n            this.listenTo('loadstart', removeOldTracks);\n            this.listenTo('dispose', e => this.unlistenTo('loadstart', removeOldTracks));\n        }\n        proxyNativeTracks_() {\n            NORMAL.names.forEach(name => {\n                this.proxyNativeTracksForType_(name);\n            });\n        }\n        createEl() {\n            let el = this.options_.tag;\n            if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n                if (el) {\n                    const clone = el.cloneNode(true);\n                    if (el.parentNode) {\n                        el.parentNode.insertBefore(clone, el);\n                    }\n                    Html5.disposeMediaElement(el);\n                    el = clone;\n                } else {\n                    el = document.createElement('video');\n                    const tagAttributes = this.options_.tag && Dom.getAttributes(this.options_.tag);\n                    const attributes = mergeOptions({}, tagAttributes);\n                    if (!browser.TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n                        delete attributes.controls;\n                    }\n                    Dom.setAttributes(el, obj.assign(attributes, {\n                        id: this.options_.techId,\n                        class: 'vjs-tech'\n                    }));\n                }\n                el.playerId = this.options_.playerId;\n            }\n            if (typeof this.options_.preload !== 'undefined') {\n                Dom.setAttribute(el, 'preload', this.options_.preload);\n            }\n            if (this.options_.disablePictureInPicture !== undefined) {\n                el.disablePictureInPicture = this.options_.disablePictureInPicture;\n            }\n            const settingsAttrs = [\n                'loop',\n                'muted',\n                'playsinline',\n                'autoplay'\n            ];\n            for (let i = 0; i < settingsAttrs.length; i++) {\n                const attr = settingsAttrs[i];\n                const value = this.options_[attr];\n                if (typeof value !== 'undefined') {\n                    if (value) {\n                        Dom.setAttribute(el, attr, attr);\n                    } else {\n                        Dom.removeAttribute(el, attr);\n                    }\n                    el[attr] = value;\n                }\n            }\n            return el;\n        }\n        handleLateInit_(el) {\n            if (el.networkState === 0 || el.networkState === 3) {\n                return;\n            }\n            if (el.readyState === 0) {\n                let loadstartFired = false;\n                const setLoadstartFired = function () {\n                    loadstartFired = true;\n                };\n                this.listenTo('loadstart', setLoadstartFired);\n                const triggerLoadstart = function () {\n                    if (!loadstartFired) {\n                        this.trigger('loadstart');\n                    }\n                };\n                this.listenTo('loadedmetadata', triggerLoadstart);\n                this.ready(function () {\n                    this.unlistenTo('loadstart', setLoadstartFired);\n                    this.unlistenTo('loadedmetadata', triggerLoadstart);\n                    if (!loadstartFired) {\n                        this.trigger('loadstart');\n                    }\n                });\n                return;\n            }\n            const eventsToTrigger = ['loadstart'];\n            eventsToTrigger.push('loadedmetadata');\n            if (el.readyState >= 2) {\n                eventsToTrigger.push('loadeddata');\n            }\n            if (el.readyState >= 3) {\n                eventsToTrigger.push('canplay');\n            }\n            if (el.readyState >= 4) {\n                eventsToTrigger.push('canplaythrough');\n            }\n            this.ready(function () {\n                eventsToTrigger.forEach(function (type) {\n                    this.trigger(type);\n                }, this);\n            });\n        }\n        setScrubbing(isScrubbing) {\n            this.isScrubbing_ = isScrubbing;\n        }\n        scrubbing() {\n            return this.isScrubbing_;\n        }\n        setCurrentTime(seconds) {\n            try {\n                if (this.isScrubbing_ && this.el_.fastSeek && browser.IS_ANY_SAFARI) {\n                    this.el_.fastSeek(seconds);\n                } else {\n                    this.el_.currentTime = seconds;\n                }\n            } catch (e) {\n                log(e, 'Video is not ready. (Video.js)');\n            }\n        }\n        duration() {\n            if (this.el_.duration === Infinity && browser.IS_ANDROID && browser.IS_CHROME && this.el_.currentTime === 0) {\n                const checkProgress = () => {\n                    if (this.el_.currentTime > 0) {\n                        if (this.el_.duration === Infinity) {\n                            this.trigger('durationchange');\n                        }\n                        this.unlistenTo('timeupdate', checkProgress);\n                    }\n                };\n                this.listenTo('timeupdate', checkProgress);\n                return NaN;\n            }\n            return this.el_.duration || NaN;\n        }\n        width() {\n            return this.el_.offsetWidth;\n        }\n        height() {\n            return this.el_.offsetHeight;\n        }\n        proxyWebkitFullscreen_() {\n            if (!('webkitDisplayingFullscreen' in this.el_)) {\n                return;\n            }\n            const endFn = function () {\n                this.trigger('fullscreenchange', { isFullscreen: false });\n            };\n            const beginFn = function () {\n                if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n                    this.listenToOnce('webkitendfullscreen', endFn);\n                    this.trigger('fullscreenchange', {\n                        isFullscreen: true,\n                        nativeIOSFullscreen: true\n                    });\n                }\n            };\n            this.listenTo('webkitbeginfullscreen', beginFn);\n            this.listenTo('dispose', () => {\n                this.unlistenTo('webkitbeginfullscreen', beginFn);\n                this.unlistenTo('webkitendfullscreen', endFn);\n            });\n        }\n        supportsFullScreen() {\n            if (typeof this.el_.webkitEnterFullScreen === 'function') {\n                const userAgent = window.navigator && window.navigator.userAgent || '';\n                if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        enterFullScreen() {\n            const video = this.el_;\n            if (video.paused && video.networkState <= video.HAVE_METADATA) {\n                promise.silencePromise(this.el_.play());\n                this.setTimeout(function () {\n                    video.pause();\n                    try {\n                        video.webkitEnterFullScreen();\n                    } catch (e) {\n                        this.trigger('fullscreenerror', e);\n                    }\n                }, 0);\n            } else {\n                try {\n                    video.webkitEnterFullScreen();\n                } catch (e) {\n                    this.trigger('fullscreenerror', e);\n                }\n            }\n        }\n        exitFullScreen() {\n            if (!this.el_.webkitDisplayingFullscreen) {\n                this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n                return;\n            }\n            this.el_.webkitExitFullScreen();\n        }\n        requestPictureInPicture() {\n            return this.el_.requestPictureInPicture();\n        }\n        src(src) {\n            if (src === undefined) {\n                return this.el_.src;\n            }\n            this.setSrc(src);\n        }\n        reset() {\n            Html5.resetMediaElement(this.el_);\n        }\n        currentSrc() {\n            if (this.currentSource_) {\n                return this.currentSource_.src;\n            }\n            return this.el_.currentSrc;\n        }\n        setControls(val) {\n            this.el_.controls = !!val;\n        }\n        addTextTrack(kind, label, language) {\n            if (!this.featuresNativeTextTracks) {\n                return super.addTextTrack(kind, label, language);\n            }\n            return this.el_.addTextTrack(kind, label, language);\n        }\n        createRemoteTextTrack(options) {\n            if (!this.featuresNativeTextTracks) {\n                return super.createRemoteTextTrack(options);\n            }\n            const htmlTrackElement = document.createElement('track');\n            if (options.kind) {\n                htmlTrackElement.kind = options.kind;\n            }\n            if (options.label) {\n                htmlTrackElement.label = options.label;\n            }\n            if (options.language || options.srclang) {\n                htmlTrackElement.srclang = options.language || options.srclang;\n            }\n            if (options.default) {\n                htmlTrackElement.default = options.default;\n            }\n            if (options.id) {\n                htmlTrackElement.id = options.id;\n            }\n            if (options.src) {\n                htmlTrackElement.src = options.src;\n            }\n            return htmlTrackElement;\n        }\n        addRemoteTextTrack(options, manualCleanup) {\n            const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n            if (this.featuresNativeTextTracks) {\n                this.el().appendChild(htmlTrackElement);\n            }\n            return htmlTrackElement;\n        }\n        removeRemoteTextTrack(track) {\n            super.removeRemoteTextTrack(track);\n            if (this.featuresNativeTextTracks) {\n                const tracks = this.$$('track');\n                let i = tracks.length;\n                while (i--) {\n                    if (track === tracks[i] || track === tracks[i].track) {\n                        this.el().removeChild(tracks[i]);\n                    }\n                }\n            }\n        }\n        getVideoPlaybackQuality() {\n            if (typeof this.el().getVideoPlaybackQuality === 'function') {\n                return this.el().getVideoPlaybackQuality();\n            }\n            const videoPlaybackQuality = {};\n            if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n                videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n                videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n            }\n            if (window.performance && typeof window.performance.now === 'function') {\n                videoPlaybackQuality.creationTime = window.performance.now();\n            } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n                videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n            }\n            return videoPlaybackQuality;\n        }\n    }\n    defineLazyProperty(Html5, 'TEST_VID', function () {\n        if (!Dom.isReal()) {\n            return;\n        }\n        const video = document.createElement('video');\n        const track = document.createElement('track');\n        track.kind = 'captions';\n        track.srclang = 'en';\n        track.label = 'English';\n        video.appendChild(track);\n        return video;\n    });\n    Html5.isSupported = function () {\n        try {\n            Html5.TEST_VID.volume = 0.5;\n        } catch (e) {\n            return false;\n        }\n        return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n    };\n    Html5.canPlayType = function (type) {\n        return Html5.TEST_VID.canPlayType(type);\n    };\n    Html5.canPlaySource = function (srcObj, options) {\n        return Html5.canPlayType(srcObj.type);\n    };\n    Html5.canControlVolume = function () {\n        try {\n            const volume = Html5.TEST_VID.volume;\n            Html5.TEST_VID.volume = volume / 2 + 0.1;\n            return volume !== Html5.TEST_VID.volume;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canMuteVolume = function () {\n        try {\n            const muted = Html5.TEST_VID.muted;\n            Html5.TEST_VID.muted = !muted;\n            if (Html5.TEST_VID.muted) {\n                Dom.setAttribute(Html5.TEST_VID, 'muted', 'muted');\n            } else {\n                Dom.removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n            }\n            return muted !== Html5.TEST_VID.muted;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canControlPlaybackRate = function () {\n        if (browser.IS_ANDROID && browser.IS_CHROME && browser.CHROME_VERSION < 58) {\n            return false;\n        }\n        try {\n            const playbackRate = Html5.TEST_VID.playbackRate;\n            Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n            return playbackRate !== Html5.TEST_VID.playbackRate;\n        } catch (e) {\n            return false;\n        }\n    };\n    Html5.canOverrideAttributes = function () {\n        try {\n            const noop = () => {\n            };\n            Object.defineProperty(document.createElement('video'), 'src', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('audio'), 'src', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('video'), 'innerHTML', {\n                get: noop,\n                set: noop\n            });\n            Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n                get: noop,\n                set: noop\n            });\n        } catch (e) {\n            return false;\n        }\n        return true;\n    };\n    Html5.supportsNativeTextTracks = function () {\n        return browser.IS_ANY_SAFARI || browser.IS_IOS && browser.IS_CHROME;\n    };\n    Html5.supportsNativeVideoTracks = function () {\n        return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n    };\n    Html5.supportsNativeAudioTracks = function () {\n        return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n    };\n    Html5.Events = [\n        'loadstart',\n        'suspend',\n        'abort',\n        'error',\n        'emptied',\n        'stalled',\n        'loadedmetadata',\n        'loadeddata',\n        'canplay',\n        'canplaythrough',\n        'playing',\n        'waiting',\n        'seeking',\n        'seeked',\n        'ended',\n        'durationchange',\n        'timeupdate',\n        'progress',\n        'play',\n        'pause',\n        'ratechange',\n        'resize',\n        'volumechange'\n    ];\n    [\n        [\n            'featuresVolumeControl',\n            'canControlVolume'\n        ],\n        [\n            'featuresMuteControl',\n            'canMuteVolume'\n        ],\n        [\n            'featuresPlaybackRate',\n            'canControlPlaybackRate'\n        ],\n        [\n            'featuresSourceset',\n            'canOverrideAttributes'\n        ],\n        [\n            'featuresNativeTextTracks',\n            'supportsNativeTextTracks'\n        ],\n        [\n            'featuresNativeVideoTracks',\n            'supportsNativeVideoTracks'\n        ],\n        [\n            'featuresNativeAudioTracks',\n            'supportsNativeAudioTracks'\n        ]\n    ].forEach(function ([key, fn]) {\n        defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n    });\n    Html5.prototype.movingMediaElementInDOM = !browser.IS_IOS;\n    Html5.prototype.featuresFullscreenResize = true;\n    Html5.prototype.featuresProgressEvents = true;\n    Html5.prototype.featuresTimeupdateEvents = true;\n    let canPlayType;\n    Html5.patchCanPlayType = function () {\n        if (browser.ANDROID_VERSION >= 4 && !browser.IS_FIREFOX && !browser.IS_CHROME) {\n            canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n            Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n                const mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n                if (type && mpegurlRE.test(type)) {\n                    return 'maybe';\n                }\n                return canPlayType.call(this, type);\n            };\n        }\n    };\n    Html5.unpatchCanPlayType = function () {\n        const r = Html5.TEST_VID.constructor.prototype.canPlayType;\n        if (canPlayType) {\n            Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n        }\n        return r;\n    };\n    Html5.patchCanPlayType();\n    Html5.disposeMediaElement = function (el) {\n        if (!el) {\n            return;\n        }\n        if (el.parentNode) {\n            el.parentNode.removeChild(el);\n        }\n        while (el.hasChildNodes()) {\n            el.removeChild(el.firstChild);\n        }\n        el.removeAttribute('src');\n        if (typeof el.load === 'function') {\n            (function () {\n                try {\n                    el.load();\n                } catch (e) {\n                }\n            }());\n        }\n    };\n    Html5.resetMediaElement = function (el) {\n        if (!el) {\n            return;\n        }\n        const sources = el.querySelectorAll('source');\n        let i = sources.length;\n        while (i--) {\n            el.removeChild(sources[i]);\n        }\n        el.removeAttribute('src');\n        if (typeof el.load === 'function') {\n            (function () {\n                try {\n                    el.load();\n                } catch (e) {\n                }\n            }());\n        }\n    };\n    [\n        'muted',\n        'defaultMuted',\n        'autoplay',\n        'controls',\n        'loop',\n        'playsinline'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop] || this.el_.hasAttribute(prop);\n        };\n    });\n    [\n        'muted',\n        'defaultMuted',\n        'autoplay',\n        'loop',\n        'playsinline'\n    ].forEach(function (prop) {\n        Html5.prototype['set' + stringCases.toTitleCase(prop)] = function (v) {\n            this.el_[prop] = v;\n            if (v) {\n                this.el_.setAttribute(prop, prop);\n            } else {\n                this.el_.removeAttribute(prop);\n            }\n        };\n    });\n    [\n        'paused',\n        'currentTime',\n        'buffered',\n        'volume',\n        'poster',\n        'preload',\n        'error',\n        'seeking',\n        'seekable',\n        'ended',\n        'playbackRate',\n        'defaultPlaybackRate',\n        'disablePictureInPicture',\n        'played',\n        'networkState',\n        'readyState',\n        'videoWidth',\n        'videoHeight',\n        'crossOrigin'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop];\n        };\n    });\n    [\n        'volume',\n        'src',\n        'poster',\n        'preload',\n        'playbackRate',\n        'defaultPlaybackRate',\n        'disablePictureInPicture',\n        'crossOrigin'\n    ].forEach(function (prop) {\n        Html5.prototype['set' + stringCases.toTitleCase(prop)] = function (v) {\n            this.el_[prop] = v;\n        };\n    });\n    [\n        'pause',\n        'load',\n        'play'\n    ].forEach(function (prop) {\n        Html5.prototype[prop] = function () {\n            return this.el_[prop]();\n        };\n    });\n    Tech.withSourceHandlers(Html5);\n    Html5.nativeSourceHandler = {};\n    Html5.nativeSourceHandler.canPlayType = function (type) {\n        try {\n            return Html5.TEST_VID.canPlayType(type);\n        } catch (e) {\n            return '';\n        }\n    };\n    Html5.nativeSourceHandler.canHandleSource = function (source, options) {\n        if (source.type) {\n            return Html5.nativeSourceHandler.canPlayType(source.type);\n        } else if (source.src) {\n            const ext = Url.getFileExtension(source.src);\n            return Html5.nativeSourceHandler.canPlayType(`video/${ ext }`);\n        }\n        return '';\n    };\n    Html5.nativeSourceHandler.handleSource = function (source, tech, options) {\n        tech.setSrc(source.src);\n    };\n    Html5.nativeSourceHandler.dispose = function () {\n    };\n    Html5.registerSourceHandler(Html5.nativeSourceHandler);\n    Tech.registerTech('Html5', Html5);\n    return Html5;\n});\ndefine('skylark-videojs/player',[\n    'skylark-langx-globals/document',\n    './component',\n    './mixins/evented',\n    './utils/events',\n    './utils/dom',\n    './utils/fn',\n    './utils/guid',\n    './utils/browser',\n    './utils/log',\n    './utils/string-cases',\n    './utils/time-ranges',\n    './utils/buffer',\n    './utils/stylesheet',\n    './fullscreen-api',\n    './media-error',\n    './utils/safeParseTuple',\n    './utils/obj',\n    './utils/merge-options',\n    './utils/promise',\n    './tracks/text-track-list-converter',\n    './modal-dialog',\n    './tech/tech',\n    './tech/middleware',\n    './tracks/track-types',\n    './utils/filter-source',\n    './utils/mimetypes',\n    './utils/keycode',\n    './tech/loader',\n    './poster-image',\n    './tracks/text-track-display',\n    './loading-spinner',\n    './big-play-button',\n    './close-button',\n    './control-bar/control-bar',\n    './error-display',\n    './tracks/text-track-settings',\n    './resize-manager',\n    './live-tracker',\n    './tech/html5'\n], function (\n    document,\n    Component,\n    evented, \n    Events, \n    Dom, \n    Fn, \n    Guid, \n    browser, \n    log, \n    stringCases, \n    timeRages, \n    buffer, \n    stylesheet, \n    FullscreenApi, \n    MediaError, \n    safeParseTuple, \n    obj, \n    mergeOptions, \n    promise, \n    textTrackConverter, \n    ModalDialog, \n    Tech, \n    middleware, \n    TRACK_TYPES, \n    filterSource, \n    mimetypes, \n    keycode\n) {\n    'use strict';\n    const TECH_EVENTS_RETRIGGER = [\n        'progress',\n        'abort',\n        'suspend',\n        'emptied',\n        'stalled',\n        'loadedmetadata',\n        'loadeddata',\n        'timeupdate',\n        'resize',\n        'volumechange',\n        'texttrackchange'\n    ];\n    const TECH_EVENTS_QUEUE = {\n        canplay: 'CanPlay',\n        canplaythrough: 'CanPlayThrough',\n        playing: 'Playing',\n        seeked: 'Seeked'\n    };\n    const BREAKPOINT_ORDER = [\n        'tiny',\n        'xsmall',\n        'small',\n        'medium',\n        'large',\n        'xlarge',\n        'huge'\n    ];\n    const BREAKPOINT_CLASSES = {};\n    BREAKPOINT_ORDER.forEach(k => {\n        const v = k.charAt(0) === 'x' ? `x-${ k.substring(1) }` : k;\n        BREAKPOINT_CLASSES[k] = `vjs-layout-${ v }`;\n    });\n    const DEFAULT_BREAKPOINTS = {\n        tiny: 210,\n        xsmall: 320,\n        small: 425,\n        medium: 768,\n        large: 1440,\n        xlarge: 2560,\n        huge: Infinity\n    };\n    class Player extends Component {\n        constructor(tag, options, ready) {\n            tag.id = tag.id || options.id || `vjs_video_${ Guid.newGUID() }`;\n            options = obj.assign(Player.getTagSettings(tag), options);\n            options.initChildren = false;\n            options.createEl = false;\n            options.evented = false;\n            options.reportTouchActivity = false;\n            if (!options.language) {\n                if (typeof tag.closest === 'function') {\n                    const closest = tag.closest('[lang]');\n                    if (closest && closest.getAttribute) {\n                        options.language = closest.getAttribute('lang');\n                    }\n                } else {\n                    let element = tag;\n                    while (element && element.nodeType === 1) {\n                        if (Dom.getAttributes(element).hasOwnProperty('lang')) {\n                            options.language = element.getAttribute('lang');\n                            break;\n                        }\n                        element = element.parentNode;\n                    }\n                }\n            }\n            super(null, options, ready);\n            this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n            this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n            this.isFullscreen_ = false;\n            this.log = log.createLogger(this.id_);\n            this.fsApi_ = FullscreenApi;\n            this.isPosterFromTech_ = false;\n            this.queuedCallbacks_ = [];\n            this.isReady_ = false;\n            this.hasStarted_ = false;\n            this.userActive_ = false;\n            this.debugEnabled_ = false;\n            if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n                throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n            }\n            this.tag = tag;\n            this.tagAttributes = tag && Dom.getAttributes(tag);\n            this.language(this.options_.language);\n            if (options.languages) {\n                const languagesToLower = {};\n                Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n                    languagesToLower[name.toLowerCase()] = options.languages[name];\n                });\n                this.languages_ = languagesToLower;\n            } else {\n                this.languages_ = Player.prototype.options_.languages;\n            }\n            this.resetCache_();\n            this.poster_ = options.poster || '';\n            this.controls_ = !!options.controls;\n            tag.controls = false;\n            tag.removeAttribute('controls');\n            this.changingSrc_ = false;\n            this.playCallbacks_ = [];\n            this.playTerminatedQueue_ = [];\n            if (tag.hasAttribute('autoplay')) {\n                this.autoplay(true);\n            } else {\n                this.autoplay(this.options_.autoplay);\n            }\n            if (options.plugins) {\n                Object.keys(options.plugins).forEach(name => {\n                    if (typeof this[name] !== 'function') {\n                        throw new Error(`plugin \"${ name }\" does not exist`);\n                    }\n                });\n            }\n            this.scrubbing_ = false;\n            this.el_ = this.createEl();\n            //evented(this, { eventBusKey: 'el_' });\n            if (this.fsApi_.requestFullscreen) {\n                Events.on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n                this.listenTo(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n            }\n            if (this.fluid_) {\n                this.listenTo([\n                    'playerreset',\n                    'resize'\n                ], this.updateStyleEl_);\n            }\n            const playerOptionsCopy = mergeOptions(this.options_);\n            if (options.plugins) {\n                Object.keys(options.plugins).forEach(name => {\n                    this[name](options.plugins[name]);\n                });\n            }\n            if (options.debug) {\n                this.debug(true);\n            }\n            this.options_.playerOptions = playerOptionsCopy;\n            this.middleware_ = [];\n            this.initChildren();\n            this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n            if (this.controls()) {\n                this.addClass('vjs-controls-enabled');\n            } else {\n                this.addClass('vjs-controls-disabled');\n            }\n            this.el_.setAttribute('role', 'region');\n            if (this.isAudio()) {\n                this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n            } else {\n                this.el_.setAttribute('aria-label', this.localize('Video Player'));\n            }\n            if (this.isAudio()) {\n                this.addClass('vjs-audio');\n            }\n            if (this.flexNotSupported_()) {\n                this.addClass('vjs-no-flex');\n            }\n            if (browser.TOUCH_ENABLED) {\n                this.addClass('vjs-touch-enabled');\n            }\n            if (!browser.IS_IOS) {\n                this.addClass('vjs-workinghover');\n            }\n            Player.players[this.id_] = this;\n            const majorVersion = \"7\";\n            this.addClass(`vjs-v${ majorVersion }`);\n            this.userActive(true);\n            this.reportUserActivity();\n            this.listenToOnce('play', this.listenForUserActivity_);\n            this.listenTo('stageclick', this.handleStageClick_);\n            this.listenTo('keydown', this.handleKeyDown);\n            this.listenTo('languagechange', this.handleLanguagechange);\n            this.breakpoints(this.options_.breakpoints);\n            this.responsive(this.options_.responsive);\n        }\n        dispose() {\n            this.trigger('dispose');\n            this.unlistenTo('dispose');\n            Events.off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n            Events.off(document, 'keydown', this.boundFullWindowOnEscKey_);\n            if (this.styleEl_ && this.styleEl_.parentNode) {\n                this.styleEl_.parentNode.removeChild(this.styleEl_);\n                this.styleEl_ = null;\n            }\n            Player.players[this.id_] = null;\n            if (this.tag && this.tag.player) {\n                this.tag.player = null;\n            }\n            if (this.el_ && this.el_.player) {\n                this.el_.player = null;\n            }\n            if (this.tech_) {\n                this.tech_.dispose();\n                this.isPosterFromTech_ = false;\n                this.poster_ = '';\n            }\n            if (this.playerElIngest_) {\n                this.playerElIngest_ = null;\n            }\n            if (this.tag) {\n                this.tag = null;\n            }\n            middleware.clearCacheForPlayer(this);\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES[name];\n                const list = this[props.getterName]();\n                if (list && list.off) {\n                    list.off();\n                }\n            });\n            super.dispose();\n        }\n        createEl() {\n            let tag = this.tag;\n            let el;\n            let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n            const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n            if (playerElIngest) {\n                el = this.el_ = tag.parentNode;\n            } else if (!divEmbed) {\n                el = this.el_ = super.createEl('div');\n            }\n            const attrs = Dom.getAttributes(tag);\n            if (divEmbed) {\n                el = this.el_ = tag;\n                tag = this.tag = document.createElement('video');\n                while (el.children.length) {\n                    tag.appendChild(el.firstChild);\n                }\n                if (!Dom.hasClass(el, 'video-js')) {\n                    Dom.addClass(el, 'video-js');\n                }\n                el.appendChild(tag);\n                playerElIngest = this.playerElIngest_ = el;\n                Object.keys(el).forEach(k => {\n                    try {\n                        tag[k] = el[k];\n                    } catch (e) {\n                    }\n                });\n            }\n            tag.setAttribute('tabindex', '-1');\n            attrs.tabindex = '-1';\n            if (browser.IE_VERSION || browser.IS_CHROME && browser.IS_WINDOWS) {\n                tag.setAttribute('role', 'application');\n                attrs.role = 'application';\n            }\n            tag.removeAttribute('width');\n            tag.removeAttribute('height');\n            if ('width' in attrs) {\n                delete attrs.width;\n            }\n            if ('height' in attrs) {\n                delete attrs.height;\n            }\n            Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n                if (!(divEmbed && attr === 'class')) {\n                    el.setAttribute(attr, attrs[attr]);\n                }\n                if (divEmbed) {\n                    tag.setAttribute(attr, attrs[attr]);\n                }\n            });\n            tag.playerId = tag.id;\n            tag.id += '_html5_api';\n            tag.className = 'vjs-tech';\n            tag.player = el.player = this;\n            this.addClass('vjs-paused');\n            if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n                this.styleEl_ = stylesheet.createStyleElement('vjs-styles-dimensions');\n                const defaultsStyleEl = Dom.$('.vjs-styles-defaults');\n                const head = Dom.$('head');\n                head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n            }\n            this.fill_ = false;\n            this.fluid_ = false;\n            this.width(this.options_.width);\n            this.height(this.options_.height);\n            this.fill(this.options_.fill);\n            this.fluid(this.options_.fluid);\n            this.aspectRatio(this.options_.aspectRatio);\n            this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n            const links = tag.getElementsByTagName('a');\n            for (let i = 0; i < links.length; i++) {\n                const linkEl = links.item(i);\n                Dom.addClass(linkEl, 'vjs-hidden');\n                linkEl.setAttribute('hidden', 'hidden');\n            }\n            tag.initNetworkState_ = tag.networkState;\n            if (tag.parentNode && !playerElIngest) {\n                tag.parentNode.insertBefore(el, tag);\n            }\n            Dom.prependTo(tag, el);\n            this.children_.unshift(tag);\n            this.el_.setAttribute('lang', this.language_);\n            this.el_ = el;\n            return el;\n        }\n        crossOrigin(value) {\n            if (!value) {\n                return this.techGet_('crossOrigin');\n            }\n            if (value !== 'anonymous' && value !== 'use-credentials') {\n                log.warn(`crossOrigin must be \"anonymous\" or \"use-credentials\", given \"${ value }\"`);\n                return;\n            }\n            this.techCall_('setCrossOrigin', value);\n            return;\n        }\n        width(value) {\n            return this.dimension('width', value);\n        }\n        height(value) {\n            return this.dimension('height', value);\n        }\n        dimension(dimension, value) {\n            const privDimension = dimension + '_';\n            if (value === undefined) {\n                return this[privDimension] || 0;\n            }\n            if (value === '' || value === 'auto') {\n                this[privDimension] = undefined;\n                this.updateStyleEl_();\n                return;\n            }\n            const parsedVal = parseFloat(value);\n            if (isNaN(parsedVal)) {\n                log.error(`Improper value \"${ value }\" supplied for for ${ dimension }`);\n                return;\n            }\n            this[privDimension] = parsedVal;\n            this.updateStyleEl_();\n        }\n        fluid(bool) {\n            if (bool === undefined) {\n                return !!this.fluid_;\n            }\n            this.fluid_ = !!bool;\n            if (evented.isEvented(this)) {\n                this.unlistenTo([\n                    'playerreset',\n                    'resize'\n                ], this.updateStyleEl_);\n            }\n            if (bool) {\n                this.addClass('vjs-fluid');\n                this.fill(false);\n                evented.addEventedCallback(this, () => {\n                    this.listenTo([\n                        'playerreset',\n                        'resize'\n                    ], this.updateStyleEl_);\n                });\n            } else {\n                this.removeClass('vjs-fluid');\n            }\n            this.updateStyleEl_();\n        }\n        fill(bool) {\n            if (bool === undefined) {\n                return !!this.fill_;\n            }\n            this.fill_ = !!bool;\n            if (bool) {\n                this.addClass('vjs-fill');\n                this.fluid(false);\n            } else {\n                this.removeClass('vjs-fill');\n            }\n        }\n        aspectRatio(ratio) {\n            if (ratio === undefined) {\n                return this.aspectRatio_;\n            }\n            if (!/^\\d+\\:\\d+$/.test(ratio)) {\n                throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n            }\n            this.aspectRatio_ = ratio;\n            this.fluid(true);\n            this.updateStyleEl_();\n        }\n        updateStyleEl_() {\n            if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n                const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n                const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n                const techEl = this.tech_ && this.tech_.el();\n                if (techEl) {\n                    if (width >= 0) {\n                        techEl.width = width;\n                    }\n                    if (height >= 0) {\n                        techEl.height = height;\n                    }\n                }\n                return;\n            }\n            let width;\n            let height;\n            let aspectRatio;\n            let idClass;\n            if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n                aspectRatio = this.aspectRatio_;\n            } else if (this.videoWidth() > 0) {\n                aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n            } else {\n                aspectRatio = '16:9';\n            }\n            const ratioParts = aspectRatio.split(':');\n            const ratioMultiplier = ratioParts[1] / ratioParts[0];\n            if (this.width_ !== undefined) {\n                width = this.width_;\n            } else if (this.height_ !== undefined) {\n                width = this.height_ / ratioMultiplier;\n            } else {\n                width = this.videoWidth() || 300;\n            }\n            if (this.height_ !== undefined) {\n                height = this.height_;\n            } else {\n                height = width * ratioMultiplier;\n            }\n            if (/^[^a-zA-Z]/.test(this.id())) {\n                idClass = 'dimensions-' + this.id();\n            } else {\n                idClass = this.id() + '-dimensions';\n            }\n            this.addClass(idClass);\n            stylesheet.setTextContent(this.styleEl_, `\n      .${ idClass } {\n        width: ${ width }px;\n        height: ${ height }px;\n      }\n\n      .${ idClass }.vjs-fluid {\n        padding-top: ${ ratioMultiplier * 100 }%;\n      }\n    `);\n        }\n        loadTech_(techName, source) {\n            if (this.tech_) {\n                this.unloadTech_();\n            }\n            const titleTechName = stringCases.toTitleCase(techName);\n            const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n            if (titleTechName !== 'Html5' && this.tag) {\n                Tech.getTech('Html5').disposeMediaElement(this.tag);\n                this.tag.player = null;\n                this.tag = null;\n            }\n            this.techName_ = titleTechName;\n            this.isReady_ = false;\n            const autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n            const techOptions = {\n                source,\n                autoplay,\n                'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n                'playerId': this.id(),\n                'techId': `${ this.id() }_${ camelTechName }_api`,\n                'playsinline': this.options_.playsinline,\n                'preload': this.options_.preload,\n                'loop': this.options_.loop,\n                'disablePictureInPicture': this.options_.disablePictureInPicture,\n                'muted': this.options_.muted,\n                'poster': this.poster(),\n                'language': this.language(),\n                'playerElIngest': this.playerElIngest_ || false,\n                'vtt.js': this.options_['vtt.js'],\n                'canOverridePoster': !!this.options_.techCanOverridePoster,\n                'enableSourceset': this.options_.enableSourceset,\n                'Promise': this.options_.Promise\n            };\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                techOptions[props.getterName] = this[props.privateName];\n            });\n            obj.assign(techOptions, this.options_[titleTechName]);\n            obj.assign(techOptions, this.options_[camelTechName]);\n            obj.assign(techOptions, this.options_[techName.toLowerCase()]);\n            if (this.tag) {\n                techOptions.tag = this.tag;\n            }\n            if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n                techOptions.startTime = this.cache_.currentTime;\n            }\n            const TechClass = Tech.getTech(techName);\n            if (!TechClass) {\n                throw new Error(`No Tech named '${ titleTechName }' exists! '${ titleTechName }' should be registered using videojs.registerTech()'`);\n            }\n            this.tech_ = new TechClass(techOptions);\n            this.tech_.ready(Fn.bind(this, this.handleTechReady_), true);\n            textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n            TECH_EVENTS_RETRIGGER.forEach(event => {\n                this.listenTo(this.tech_, event, this[`handleTech${ stringCases.toTitleCase(event) }_`]);\n            });\n            Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n                this.listenTo(this.tech_, event, eventObj => {\n                    if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n                        this.queuedCallbacks_.push({\n                            callback: this[`handleTech${ TECH_EVENTS_QUEUE[event] }_`].bind(this),\n                            event: eventObj\n                        });\n                        return;\n                    }\n                    this[`handleTech${ TECH_EVENTS_QUEUE[event] }_`](eventObj);\n                });\n            });\n            this.listenTo(this.tech_, 'loadstart', this.handleTechLoadStart_);\n            this.listenTo(this.tech_, 'sourceset', this.handleTechSourceset_);\n            this.listenTo(this.tech_, 'waiting', this.handleTechWaiting_);\n            this.listenTo(this.tech_, 'ended', this.handleTechEnded_);\n            this.listenTo(this.tech_, 'seeking', this.handleTechSeeking_);\n            this.listenTo(this.tech_, 'play', this.handleTechPlay_);\n            this.listenTo(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n            this.listenTo(this.tech_, 'pause', this.handleTechPause_);\n            this.listenTo(this.tech_, 'durationchange', this.handleTechDurationChange_);\n            this.listenTo(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n            this.listenTo(this.tech_, 'fullscreenerror', this.handleTechFullscreenError_);\n            this.listenTo(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n            this.listenTo(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n            this.listenTo(this.tech_, 'error', this.handleTechError_);\n            this.listenTo(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n            this.listenTo(this.tech_, 'posterchange', this.handleTechPosterChange_);\n            this.listenTo(this.tech_, 'textdata', this.handleTechTextData_);\n            this.listenTo(this.tech_, 'ratechange', this.handleTechRateChange_);\n            this.usingNativeControls(this.techGet_('controls'));\n            if (this.controls() && !this.usingNativeControls()) {\n                this.addTechControlsListeners_();\n            }\n            if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n                Dom.prependTo(this.tech_.el(), this.el());\n            }\n            if (this.tag) {\n                this.tag.player = null;\n                this.tag = null;\n            }\n        }\n        unloadTech_() {\n            TRACK_TYPES.ALL.names.forEach(name => {\n                const props = TRACK_TYPES.ALL[name];\n                this[props.privateName] = this[props.getterName]();\n            });\n            this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n            this.isReady_ = false;\n            this.tech_.dispose();\n            this.tech_ = false;\n            if (this.isPosterFromTech_) {\n                this.poster_ = '';\n                this.trigger('posterchange');\n            }\n            this.isPosterFromTech_ = false;\n        }\n        tech(safety) {\n            if (safety === undefined) {\n                log.warn(\"Using the tech directly can be dangerous. I hope you know what you're doing.\\n\" + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n            }\n            return this.tech_;\n        }\n        addTechControlsListeners_() {\n            this.removeTechControlsListeners_();\n            this.listenTo(this.tech_, 'mouseup', this.handleTechClick_);\n            this.listenTo(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n            this.listenTo(this.tech_, 'touchstart', this.handleTechTouchStart_);\n            this.listenTo(this.tech_, 'touchmove', this.handleTechTouchMove_);\n            this.listenTo(this.tech_, 'touchend', this.handleTechTouchEnd_);\n            this.listenTo(this.tech_, 'tap', this.handleTechTap_);\n        }\n        removeTechControlsListeners_() {\n            this.unlistenTo(this.tech_, 'tap', this.handleTechTap_);\n            this.unlistenTo(this.tech_, 'touchstart', this.handleTechTouchStart_);\n            this.unlistenTo(this.tech_, 'touchmove', this.handleTechTouchMove_);\n            this.unlistenTo(this.tech_, 'touchend', this.handleTechTouchEnd_);\n            this.unlistenTo(this.tech_, 'mouseup', this.handleTechClick_);\n            this.unlistenTo(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n        }\n        handleTechReady_() {\n            this.triggerReady();\n            if (this.cache_.volume) {\n                this.techCall_('setVolume', this.cache_.volume);\n            }\n            this.handleTechPosterChange_();\n            this.handleTechDurationChange_();\n        }\n        handleTechLoadStart_() {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-seeking');\n            this.error(null);\n            this.handleTechDurationChange_();\n            if (!this.paused()) {\n                this.trigger('loadstart');\n                this.trigger('firstplay');\n            } else {\n                this.hasStarted(false);\n                this.trigger('loadstart');\n            }\n            this.manualAutoplay_(this.autoplay());\n        }\n        manualAutoplay_(type) {\n            if (!this.tech_ || typeof type !== 'string') {\n                return;\n            }\n            const muted = () => {\n                const previouslyMuted = this.muted();\n                this.muted(true);\n                const restoreMuted = () => {\n                    this.muted(previouslyMuted);\n                };\n                this.playTerminatedQueue_.push(restoreMuted);\n                const mutedPromise = this.play();\n                if (!promise.isPromise(mutedPromise)) {\n                    return;\n                }\n                return mutedPromise.catch(restoreMuted);\n            };\n            let promise;\n            if (type === 'any' && this.muted() !== true) {\n                promise = this.play();\n                if (promise.isPromise(promise)) {\n                    promise = promise.catch(muted);\n                }\n            } else if (type === 'muted' && this.muted() !== true) {\n                promise = muted();\n            } else {\n                promise = this.play();\n            }\n            if (!promise.isPromise(promise)) {\n                return;\n            }\n            return promise.then(() => {\n                this.trigger({\n                    type: 'autoplay-success',\n                    autoplay: type\n                });\n            }).catch(e => {\n                this.trigger({\n                    type: 'autoplay-failure',\n                    autoplay: type\n                });\n            });\n        }\n        updateSourceCaches_(srcObj = '') {\n            let src = srcObj;\n            let type = '';\n            if (typeof src !== 'string') {\n                src = srcObj.src;\n                type = srcObj.type;\n            }\n            this.cache_.source = this.cache_.source || {};\n            this.cache_.sources = this.cache_.sources || [];\n            if (src && !type) {\n                type = mimetypes.findMimetype(this, src);\n            }\n            this.cache_.source = mergeOptions({}, srcObj, {\n                src,\n                type\n            });\n            const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n            const sourceElSources = [];\n            const sourceEls = this.$$('source');\n            const matchingSourceEls = [];\n            for (let i = 0; i < sourceEls.length; i++) {\n                const sourceObj = Dom.getAttributes(sourceEls[i]);\n                sourceElSources.push(sourceObj);\n                if (sourceObj.src && sourceObj.src === src) {\n                    matchingSourceEls.push(sourceObj.src);\n                }\n            }\n            if (matchingSourceEls.length && !matchingSources.length) {\n                this.cache_.sources = sourceElSources;\n            } else if (!matchingSources.length) {\n                this.cache_.sources = [this.cache_.source];\n            }\n            this.cache_.src = src;\n        }\n        handleTechSourceset_(event) {\n            if (!this.changingSrc_) {\n                let updateSourceCaches = src => this.updateSourceCaches_(src);\n                const playerSrc = this.currentSource().src;\n                const eventSrc = event.src;\n                if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n                    if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n                        updateSourceCaches = () => {\n                        };\n                    }\n                }\n                updateSourceCaches(eventSrc);\n                if (!event.src) {\n                    this.tech_.any([\n                        'sourceset',\n                        'loadstart'\n                    ], e => {\n                        if (e.type === 'sourceset') {\n                            return;\n                        }\n                        const techSrc = this.techGet('currentSrc');\n                        this.lastSource_.tech = techSrc;\n                        this.updateSourceCaches_(techSrc);\n                    });\n                }\n            }\n            this.lastSource_ = {\n                player: this.currentSource().src,\n                tech: event.src\n            };\n            this.trigger({\n                src: event.src,\n                type: 'sourceset'\n            });\n        }\n        hasStarted(request) {\n            if (request === undefined) {\n                return this.hasStarted_;\n            }\n            if (request === this.hasStarted_) {\n                return;\n            }\n            this.hasStarted_ = request;\n            if (this.hasStarted_) {\n                this.addClass('vjs-has-started');\n                this.trigger('firstplay');\n            } else {\n                this.removeClass('vjs-has-started');\n            }\n        }\n        handleTechPlay_() {\n            this.removeClass('vjs-ended');\n            this.removeClass('vjs-paused');\n            this.addClass('vjs-playing');\n            this.hasStarted(true);\n            this.trigger('play');\n        }\n        handleTechRateChange_() {\n            if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n                this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n                this.queuedCallbacks_ = [];\n            }\n            this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n            this.trigger('ratechange');\n        }\n        handleTechWaiting_() {\n            this.addClass('vjs-waiting');\n            this.trigger('waiting');\n            const timeWhenWaiting = this.currentTime();\n            const timeUpdateListener = () => {\n                if (timeWhenWaiting !== this.currentTime()) {\n                    this.removeClass('vjs-waiting');\n                    this.unlistenTo('timeupdate', timeUpdateListener);\n                }\n            };\n            this.listenTo('timeupdate', timeUpdateListener);\n        }\n        handleTechCanPlay_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('canplay');\n        }\n        handleTechCanPlayThrough_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('canplaythrough');\n        }\n        handleTechPlaying_() {\n            this.removeClass('vjs-waiting');\n            this.trigger('playing');\n        }\n        handleTechSeeking_() {\n            this.addClass('vjs-seeking');\n            this.trigger('seeking');\n        }\n        handleTechSeeked_() {\n            this.removeClass('vjs-seeking');\n            this.removeClass('vjs-ended');\n            this.trigger('seeked');\n        }\n        handleTechFirstPlay_() {\n            if (this.options_.starttime) {\n                log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n                this.currentTime(this.options_.starttime);\n            }\n            this.addClass('vjs-has-started');\n            this.trigger('firstplay');\n        }\n        handleTechPause_() {\n            this.removeClass('vjs-playing');\n            this.addClass('vjs-paused');\n            this.trigger('pause');\n        }\n        handleTechEnded_() {\n            this.addClass('vjs-ended');\n            if (this.options_.loop) {\n                this.currentTime(0);\n                this.play();\n            } else if (!this.paused()) {\n                this.pause();\n            }\n            this.trigger('ended');\n        }\n        handleTechDurationChange_() {\n            this.duration(this.techGet_('duration'));\n        }\n        handleTechClick_(event) {\n            if (!Dom.isSingleLeftClick(event)) {\n                return;\n            }\n            if (!this.controls_) {\n                return;\n            }\n            if (this.paused()) {\n                promise.silencePromise(this.play());\n            } else {\n                this.pause();\n            }\n        }\n        handleTechDoubleClick_(event) {\n            if (!this.controls_) {\n                return;\n            }\n            const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n            if (!inAllowedEls) {\n                if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n                    if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n                        this.options_.userActions.doubleClick.call(this, event);\n                    } else if (this.isFullscreen()) {\n                        this.exitFullscreen();\n                    } else {\n                        this.requestFullscreen();\n                    }\n                }\n            }\n        }\n        handleTechTap_() {\n            this.userActive(!this.userActive());\n        }\n        handleTechTouchStart_() {\n            this.userWasActive = this.userActive();\n        }\n        handleTechTouchMove_() {\n            if (this.userWasActive) {\n                this.reportUserActivity();\n            }\n        }\n        handleTechTouchEnd_(event) {\n            if (event.cancelable) {\n                event.preventDefault();\n            }\n        }\n        handleStageClick_() {\n            this.reportUserActivity();\n        }\n        toggleFullscreenClass_() {\n            if (this.isFullscreen()) {\n                this.addClass('vjs-fullscreen');\n            } else {\n                this.removeClass('vjs-fullscreen');\n            }\n        }\n        documentFullscreenChange_(e) {\n            const targetPlayer = e.target.player;\n            if (targetPlayer && targetPlayer !== this) {\n                return;\n            }\n            const el = this.el();\n            let isFs = document[this.fsApi_.fullscreenElement] === el;\n            if (!isFs && el.matches) {\n                isFs = el.matches(':' + this.fsApi_.fullscreen);\n            } else if (!isFs && el.msMatchesSelector) {\n                isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n            }\n            this.isFullscreen(isFs);\n        }\n        handleTechFullscreenChange_(event, data) {\n            if (data) {\n                if (data.nativeIOSFullscreen) {\n                    this.toggleClass('vjs-ios-native-fs');\n                }\n                this.isFullscreen(data.isFullscreen);\n            }\n        }\n        handleTechFullscreenError_(event, err) {\n            this.trigger('fullscreenerror', err);\n        }\n        togglePictureInPictureClass_() {\n            if (this.isInPictureInPicture()) {\n                this.addClass('vjs-picture-in-picture');\n            } else {\n                this.removeClass('vjs-picture-in-picture');\n            }\n        }\n        handleTechEnterPictureInPicture_(event) {\n            this.isInPictureInPicture(true);\n        }\n        handleTechLeavePictureInPicture_(event) {\n            this.isInPictureInPicture(false);\n        }\n        handleTechError_() {\n            const error = this.tech_.error();\n            this.error(error);\n        }\n        handleTechTextData_() {\n            let data = null;\n            if (arguments.length > 1) {\n                data = arguments[1];\n            }\n            this.trigger('textdata', data);\n        }\n        getCache() {\n            return this.cache_;\n        }\n        resetCache_() {\n            this.cache_ = {\n                currentTime: 0,\n                initTime: 0,\n                inactivityTimeout: this.options_.inactivityTimeout,\n                duration: NaN,\n                lastVolume: 1,\n                lastPlaybackRate: this.defaultPlaybackRate(),\n                media: null,\n                src: '',\n                source: {},\n                sources: [],\n                volume: 1\n            };\n        }\n        techCall_(method, arg) {\n            this.ready(function () {\n                if (method in middleware.allowedSetters) {\n                    return middleware.set(this.middleware_, this.tech_, method, arg);\n                } else if (method in middleware.allowedMediators) {\n                    return middleware.mediate(this.middleware_, this.tech_, method, arg);\n                }\n                try {\n                    if (this.tech_) {\n                        this.tech_[method](arg);\n                    }\n                } catch (e) {\n                    log(e);\n                    throw e;\n                }\n            }, true);\n        }\n        techGet_(method) {\n            if (!this.tech_ || !this.tech_.isReady_) {\n                return;\n            }\n            if (method in middleware.allowedGetters) {\n                return middleware.get(this.middleware_, this.tech_, method);\n            } else if (method in middleware.allowedMediators) {\n                return middleware.mediate(this.middleware_, this.tech_, method);\n            }\n            try {\n                return this.tech_[method]();\n            } catch (e) {\n                if (this.tech_[method] === undefined) {\n                    log(`Video.js: ${ method } method not defined for ${ this.techName_ } playback technology.`, e);\n                    throw e;\n                }\n                if (e.name === 'TypeError') {\n                    log(`Video.js: ${ method } unavailable on ${ this.techName_ } playback technology element.`, e);\n                    this.tech_.isReady_ = false;\n                    throw e;\n                }\n                log(e);\n                throw e;\n            }\n        }\n        play() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                return new PromiseClass(resolve => {\n                    this.play_(resolve);\n                });\n            }\n            return this.play_();\n        }\n        play_(callback = promise.silencePromise) {\n            this.playCallbacks_.push(callback);\n            const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n            if (this.waitToPlay_) {\n                this.unlistenTo([\n                    'ready',\n                    'loadstart'\n                ], this.waitToPlay_);\n                this.waitToPlay_ = null;\n            }\n            if (!this.isReady_ || !isSrcReady) {\n                this.waitToPlay_ = e => {\n                    this.play_();\n                };\n                this.listenToOnce([\n                    'ready',\n                    'loadstart'\n                ], this.waitToPlay_);\n                if (!isSrcReady && (browser.IS_ANY_SAFARI || browser.IS_IOS)) {\n                    this.load();\n                }\n                return;\n            }\n            const val = this.techGet_('play');\n            if (val === null) {\n                this.runPlayTerminatedQueue_();\n            } else {\n                this.runPlayCallbacks_(val);\n            }\n        }\n        runPlayTerminatedQueue_() {\n            const queue = this.playTerminatedQueue_.slice(0);\n            this.playTerminatedQueue_ = [];\n            queue.forEach(function (q) {\n                q();\n            });\n        }\n        runPlayCallbacks_(val) {\n            const callbacks = this.playCallbacks_.slice(0);\n            this.playCallbacks_ = [];\n            this.playTerminatedQueue_ = [];\n            callbacks.forEach(function (cb) {\n                cb(val);\n            });\n        }\n        pause() {\n            this.techCall_('pause');\n        }\n        paused() {\n            return this.techGet_('paused') === false ? false : true;\n        }\n        played() {\n            return this.techGet_('played') || timeRages.createTimeRange(0, 0);\n        }\n        scrubbing(isScrubbing) {\n            if (typeof isScrubbing === 'undefined') {\n                return this.scrubbing_;\n            }\n            this.scrubbing_ = !!isScrubbing;\n            this.techCall_('setScrubbing', this.scrubbing_);\n            if (isScrubbing) {\n                this.addClass('vjs-scrubbing');\n            } else {\n                this.removeClass('vjs-scrubbing');\n            }\n        }\n        currentTime(seconds) {\n            if (typeof seconds !== 'undefined') {\n                if (seconds < 0) {\n                    seconds = 0;\n                }\n                if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n                    this.cache_.initTime = seconds;\n                    this.unlistenTo('canplay', this.applyInitTime_);\n                    this.listenToOnce('canplay', this.applyInitTime_);\n                    return;\n                }\n                this.techCall_('setCurrentTime', seconds);\n                this.cache_.initTime = 0;\n                return;\n            }\n            this.cache_.currentTime = this.techGet_('currentTime') || 0;\n            return this.cache_.currentTime;\n        }\n        applyInitTime_() {\n            this.currentTime(this.cache_.initTime);\n        }\n        duration(seconds) {\n            if (seconds === undefined) {\n                return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n            }\n            seconds = parseFloat(seconds);\n            if (seconds < 0) {\n                seconds = Infinity;\n            }\n            if (seconds !== this.cache_.duration) {\n                this.cache_.duration = seconds;\n                if (seconds === Infinity) {\n                    this.addClass('vjs-live');\n                } else {\n                    this.removeClass('vjs-live');\n                }\n                if (!isNaN(seconds)) {\n                    this.trigger('durationchange');\n                }\n            }\n        }\n        remainingTime() {\n            return this.duration() - this.currentTime();\n        }\n        remainingTimeDisplay() {\n            return Math.floor(this.duration()) - Math.floor(this.currentTime());\n        }\n        buffered() {\n            let buffered = this.techGet_('buffered');\n            if (!buffered || !buffered.length) {\n                buffered = timeRages.createTimeRange(0, 0);\n            }\n            return buffered;\n        }\n        bufferedPercent() {\n            return buffer.bufferedPercent(this.buffered(), this.duration());\n        }\n        bufferedEnd() {\n            const buffered = this.buffered();\n            const duration = this.duration();\n            let end = buffered.end(buffered.length - 1);\n            if (end > duration) {\n                end = duration;\n            }\n            return end;\n        }\n        volume(percentAsDecimal) {\n            let vol;\n            if (percentAsDecimal !== undefined) {\n                vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n                this.cache_.volume = vol;\n                this.techCall_('setVolume', vol);\n                if (vol > 0) {\n                    this.lastVolume_(vol);\n                }\n                return;\n            }\n            vol = parseFloat(this.techGet_('volume'));\n            return isNaN(vol) ? 1 : vol;\n        }\n        muted(muted) {\n            if (muted !== undefined) {\n                this.techCall_('setMuted', muted);\n                return;\n            }\n            return this.techGet_('muted') || false;\n        }\n        defaultMuted(defaultMuted) {\n            if (defaultMuted !== undefined) {\n                return this.techCall_('setDefaultMuted', defaultMuted);\n            }\n            return this.techGet_('defaultMuted') || false;\n        }\n        lastVolume_(percentAsDecimal) {\n            if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n                this.cache_.lastVolume = percentAsDecimal;\n                return;\n            }\n            return this.cache_.lastVolume;\n        }\n        supportsFullScreen() {\n            return this.techGet_('supportsFullScreen') || false;\n        }\n        isFullscreen(isFS) {\n            if (isFS !== undefined) {\n                const oldValue = this.isFullscreen_;\n                this.isFullscreen_ = Boolean(isFS);\n                if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n                    this.trigger('fullscreenchange');\n                }\n                this.toggleFullscreenClass_();\n                return;\n            }\n            return this.isFullscreen_;\n        }\n        requestFullscreen(fullscreenOptions) {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                const self = this;\n                return new PromiseClass((resolve, reject) => {\n                    function offHandler() {\n                        self.off('fullscreenerror', errorHandler);\n                        self.off('fullscreenchange', changeHandler);\n                    }\n                    function changeHandler() {\n                        offHandler();\n                        resolve();\n                    }\n                    function errorHandler(e, err) {\n                        offHandler();\n                        reject(err);\n                    }\n                    self.one('fullscreenchange', changeHandler);\n                    self.one('fullscreenerror', errorHandler);\n                    const promise = self.requestFullscreenHelper_(fullscreenOptions);\n                    if (promise) {\n                        promise.then(offHandler, offHandler);\n                        return promise;\n                    }\n                });\n            }\n            return this.requestFullscreenHelper_();\n        }\n        requestFullscreenHelper_(fullscreenOptions) {\n            let fsOptions;\n            if (!this.fsApi_.prefixed) {\n                fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n                if (fullscreenOptions !== undefined) {\n                    fsOptions = fullscreenOptions;\n                }\n            }\n            if (this.fsApi_.requestFullscreen) {\n                const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n                if (promise) {\n                    promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n                }\n                return promise;\n            } else if (this.tech_.supportsFullScreen()) {\n                this.techCall_('enterFullScreen');\n            } else {\n                this.enterFullWindow();\n            }\n        }\n        exitFullscreen() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (PromiseClass) {\n                const self = this;\n                return new PromiseClass((resolve, reject) => {\n                    function offHandler() {\n                        self.off('fullscreenerror', errorHandler);\n                        self.off('fullscreenchange', changeHandler);\n                    }\n                    function changeHandler() {\n                        offHandler();\n                        resolve();\n                    }\n                    function errorHandler(e, err) {\n                        offHandler();\n                        reject(err);\n                    }\n                    self.one('fullscreenchange', changeHandler);\n                    self.one('fullscreenerror', errorHandler);\n                    const promise = self.exitFullscreenHelper_();\n                    if (promise) {\n                        promise.then(offHandler, offHandler);\n                        return promise;\n                    }\n                });\n            }\n            return this.exitFullscreenHelper_();\n        }\n        exitFullscreenHelper_() {\n            if (this.fsApi_.requestFullscreen) {\n                const promise = document[this.fsApi_.exitFullscreen]();\n                if (promise) {\n                    promise.then(() => this.isFullscreen(false));\n                }\n                return promise;\n            } else if (this.tech_.supportsFullScreen()) {\n                this.techCall_('exitFullScreen');\n            } else {\n                this.exitFullWindow();\n            }\n        }\n        enterFullWindow() {\n            this.isFullscreen(true);\n            this.isFullWindow = true;\n            this.docOrigOverflow = document.documentElement.style.overflow;\n            Events.on(document, 'keydown', this.boundFullWindowOnEscKey_);\n            document.documentElement.style.overflow = 'hidden';\n            Dom.addClass(document.body, 'vjs-full-window');\n            this.trigger('enterFullWindow');\n        }\n        fullWindowOnEscKey(event) {\n            if (keycode.isEventKey(event, 'Esc')) {\n                if (this.isFullscreen() === true) {\n                    this.exitFullscreen();\n                } else {\n                    this.exitFullWindow();\n                }\n            }\n        }\n        exitFullWindow() {\n            this.isFullscreen(false);\n            this.isFullWindow = false;\n            Events.off(document, 'keydown', this.boundFullWindowOnEscKey_);\n            document.documentElement.style.overflow = this.docOrigOverflow;\n            Dom.removeClass(document.body, 'vjs-full-window');\n            this.trigger('exitFullWindow');\n        }\n        disablePictureInPicture(value) {\n            if (value === undefined) {\n                return this.techGet_('disablePictureInPicture');\n            }\n            this.techCall_('setDisablePictureInPicture', value);\n            this.options_.disablePictureInPicture = value;\n            this.trigger('disablepictureinpicturechanged');\n        }\n        isInPictureInPicture(isPiP) {\n            if (isPiP !== undefined) {\n                this.isInPictureInPicture_ = !!isPiP;\n                this.togglePictureInPictureClass_();\n                return;\n            }\n            return !!this.isInPictureInPicture_;\n        }\n        requestPictureInPicture() {\n            if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n                return this.techGet_('requestPictureInPicture');\n            }\n        }\n        exitPictureInPicture() {\n            if ('pictureInPictureEnabled' in document) {\n                return document.exitPictureInPicture();\n            }\n        }\n        handleKeyDown(event) {\n            const {userActions} = this.options_;\n            if (!userActions || !userActions.hotkeys) {\n                return;\n            }\n            const excludeElement = el => {\n                const tagName = el.tagName.toLowerCase();\n                if (el.isContentEditable) {\n                    return true;\n                }\n                const allowedInputTypes = [\n                    'button',\n                    'checkbox',\n                    'hidden',\n                    'radio',\n                    'reset',\n                    'submit'\n                ];\n                if (tagName === 'input') {\n                    return allowedInputTypes.indexOf(el.type) === -1;\n                }\n                const excludedTags = ['textarea'];\n                return excludedTags.indexOf(tagName) !== -1;\n            };\n            if (excludeElement(this.el_.ownerDocument.activeElement)) {\n                return;\n            }\n            if (typeof userActions.hotkeys === 'function') {\n                userActions.hotkeys.call(this, event);\n            } else {\n                this.handleHotkeys(event);\n            }\n        }\n        handleHotkeys(event) {\n            const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n            const {fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'), muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'), playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')} = hotkeys;\n            if (fullscreenKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const FSToggle = Component.getComponent('FullscreenToggle');\n                if (document[this.fsApi_.fullscreenEnabled] !== false) {\n                    FSToggle.prototype.handleClick.call(this, event);\n                }\n            } else if (muteKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const MuteToggle = Component.getComponent('MuteToggle');\n                MuteToggle.prototype.handleClick.call(this, event);\n            } else if (playPauseKey.call(this, event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                const PlayToggle = Component.getComponent('PlayToggle');\n                PlayToggle.prototype.handleClick.call(this, event);\n            }\n        }\n        canPlayType(type) {\n            let can;\n            for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n                const techName = j[i];\n                let tech = Tech.getTech(techName);\n                if (!tech) {\n                    tech = Component.getComponent(techName);\n                }\n                if (!tech) {\n                    log.error(`The \"${ techName }\" tech is undefined. Skipped browser support check for that tech.`);\n                    continue;\n                }\n                if (tech.isSupported()) {\n                    can = tech.canPlayType(type);\n                    if (can) {\n                        return can;\n                    }\n                }\n            }\n            return '';\n        }\n        selectSource(sources) {\n            const techs = this.options_.techOrder.map(techName => {\n                return [\n                    techName,\n                    Tech.getTech(techName)\n                ];\n            }).filter(([techName, tech]) => {\n                if (tech) {\n                    return tech.isSupported();\n                }\n                log.error(`The \"${ techName }\" tech is undefined. Skipped browser support check for that tech.`);\n                return false;\n            });\n            const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n                let found;\n                outerArray.some(outerChoice => {\n                    return innerArray.some(innerChoice => {\n                        found = tester(outerChoice, innerChoice);\n                        if (found) {\n                            return true;\n                        }\n                    });\n                });\n                return found;\n            };\n            let foundSourceAndTech;\n            const flip = fn => (a, b) => fn(b, a);\n            const finder = ([techName, tech], source) => {\n                if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n                    return {\n                        source,\n                        tech: techName\n                    };\n                }\n            };\n            if (this.options_.sourceOrder) {\n                foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n            } else {\n                foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n            }\n            return foundSourceAndTech || false;\n        }\n        src(source) {\n            if (typeof source === 'undefined') {\n                return this.cache_.src || '';\n            }\n            const sources = filterSource(source);\n            if (!sources.length) {\n                this.setTimeout(function () {\n                    this.error({\n                        code: 4,\n                        message: this.localize(this.options_.notSupportedMessage)\n                    });\n                }, 0);\n                return;\n            }\n            this.changingSrc_ = true;\n            this.cache_.sources = sources;\n            this.updateSourceCaches_(sources[0]);\n            middleware.setSource(this, sources[0], (middlewareSource, mws) => {\n                this.middleware_ = mws;\n                this.cache_.sources = sources;\n                this.updateSourceCaches_(middlewareSource);\n                const err = this.src_(middlewareSource);\n                if (err) {\n                    if (sources.length > 1) {\n                        return this.src(sources.slice(1));\n                    }\n                    this.changingSrc_ = false;\n                    this.setTimeout(function () {\n                        this.error({\n                            code: 4,\n                            message: this.localize(this.options_.notSupportedMessage)\n                        });\n                    }, 0);\n                    this.triggerReady();\n                    return;\n                }\n                middleware.setTech(mws, this.tech_);\n            });\n        }\n        src_(source) {\n            const sourceTech = this.selectSource([source]);\n            if (!sourceTech) {\n                return true;\n            }\n            if (!stringCases.titleCaseEquals(sourceTech.tech, this.techName_)) {\n                this.changingSrc_ = true;\n                this.loadTech_(sourceTech.tech, sourceTech.source);\n                this.tech_.ready(() => {\n                    this.changingSrc_ = false;\n                });\n                return false;\n            }\n            this.ready(function () {\n                if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n                    this.techCall_('setSource', source);\n                } else {\n                    this.techCall_('src', source.src);\n                }\n                this.changingSrc_ = false;\n            }, true);\n            return false;\n        }\n        load() {\n            this.techCall_('load');\n        }\n        reset() {\n            const PromiseClass = this.options_.Promise || window.Promise;\n            if (this.paused() || !PromiseClass) {\n                this.doReset_();\n            } else {\n                const playPromise = this.play();\n                promise.silencePromise(playPromise.then(() => this.doReset_()));\n            }\n        }\n        doReset_() {\n            if (this.tech_) {\n                this.tech_.clearTracks('text');\n            }\n            this.resetCache_();\n            this.poster('');\n            this.loadTech_(this.options_.techOrder[0], null);\n            this.techCall_('reset');\n            this.resetControlBarUI_();\n            if (evented.isEvented(this)) {\n                this.trigger('playerreset');\n            }\n        }\n        resetControlBarUI_() {\n            this.resetProgressBar_();\n            this.resetPlaybackRate_();\n            this.resetVolumeBar_();\n        }\n        resetProgressBar_() {\n            this.currentTime(0);\n            const {durationDisplay, remainingTimeDisplay} = this.controlBar;\n            if (durationDisplay) {\n                durationDisplay.updateContent();\n            }\n            if (remainingTimeDisplay) {\n                remainingTimeDisplay.updateContent();\n            }\n        }\n        resetPlaybackRate_() {\n            this.playbackRate(this.defaultPlaybackRate());\n            this.handleTechRateChange_();\n        }\n        resetVolumeBar_() {\n            this.volume(1);\n            this.trigger('volumechange');\n        }\n        currentSources() {\n            const source = this.currentSource();\n            const sources = [];\n            if (Object.keys(source).length !== 0) {\n                sources.push(source);\n            }\n            return this.cache_.sources || sources;\n        }\n        currentSource() {\n            return this.cache_.source || {};\n        }\n        currentSrc() {\n            return this.currentSource() && this.currentSource().src || '';\n        }\n        currentType() {\n            return this.currentSource() && this.currentSource().type || '';\n        }\n        preload(value) {\n            if (value !== undefined) {\n                this.techCall_('setPreload', value);\n                this.options_.preload = value;\n                return;\n            }\n            return this.techGet_('preload');\n        }\n        autoplay(value) {\n            if (value === undefined) {\n                return this.options_.autoplay || false;\n            }\n            let techAutoplay;\n            if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n                this.options_.autoplay = value;\n                this.manualAutoplay_(value);\n                techAutoplay = false;\n            } else if (!value) {\n                this.options_.autoplay = false;\n            } else {\n                this.options_.autoplay = true;\n            }\n            techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n            if (this.tech_) {\n                this.techCall_('setAutoplay', techAutoplay);\n            }\n        }\n        playsinline(value) {\n            if (value !== undefined) {\n                this.techCall_('setPlaysinline', value);\n                this.options_.playsinline = value;\n                return this;\n            }\n            return this.techGet_('playsinline');\n        }\n        loop(value) {\n            if (value !== undefined) {\n                this.techCall_('setLoop', value);\n                this.options_.loop = value;\n                return;\n            }\n            return this.techGet_('loop');\n        }\n        poster(src) {\n            if (src === undefined) {\n                return this.poster_;\n            }\n            if (!src) {\n                src = '';\n            }\n            if (src === this.poster_) {\n                return;\n            }\n            this.poster_ = src;\n            this.techCall_('setPoster', src);\n            this.isPosterFromTech_ = false;\n            this.trigger('posterchange');\n        }\n        handleTechPosterChange_() {\n            if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n                const newPoster = this.tech_.poster() || '';\n                if (newPoster !== this.poster_) {\n                    this.poster_ = newPoster;\n                    this.isPosterFromTech_ = true;\n                    this.trigger('posterchange');\n                }\n            }\n        }\n        controls(bool) {\n            if (bool === undefined) {\n                return !!this.controls_;\n            }\n            bool = !!bool;\n            if (this.controls_ === bool) {\n                return;\n            }\n            this.controls_ = bool;\n            if (this.usingNativeControls()) {\n                this.techCall_('setControls', bool);\n            }\n            if (this.controls_) {\n                this.removeClass('vjs-controls-disabled');\n                this.addClass('vjs-controls-enabled');\n                this.trigger('controlsenabled');\n                if (!this.usingNativeControls()) {\n                    this.addTechControlsListeners_();\n                }\n            } else {\n                this.removeClass('vjs-controls-enabled');\n                this.addClass('vjs-controls-disabled');\n                this.trigger('controlsdisabled');\n                if (!this.usingNativeControls()) {\n                    this.removeTechControlsListeners_();\n                }\n            }\n        }\n        usingNativeControls(bool) {\n            if (bool === undefined) {\n                return !!this.usingNativeControls_;\n            }\n            bool = !!bool;\n            if (this.usingNativeControls_ === bool) {\n                return;\n            }\n            this.usingNativeControls_ = bool;\n            if (this.usingNativeControls_) {\n                this.addClass('vjs-using-native-controls');\n                this.trigger('usingnativecontrols');\n            } else {\n                this.removeClass('vjs-using-native-controls');\n                this.trigger('usingcustomcontrols');\n            }\n        }\n        error(err) {\n            if (err === undefined) {\n                return this.error_ || null;\n            }\n            if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n                const triggerSuppressedError = function () {\n                    this.error(err);\n                };\n                this.options_.suppressNotSupportedError = false;\n                this.any([\n                    'click',\n                    'touchstart'\n                ], triggerSuppressedError);\n                this.listenToOnce('loadstart', function () {\n                    this.unlistenTo([\n                        'click',\n                        'touchstart'\n                    ], triggerSuppressedError);\n                });\n                return;\n            }\n            if (err === null) {\n                this.error_ = err;\n                this.removeClass('vjs-error');\n                if (this.errorDisplay) {\n                    this.errorDisplay.close();\n                }\n                return;\n            }\n            this.error_ = new MediaError(err);\n            this.addClass('vjs-error');\n            log.error(`(CODE:${ this.error_.code } ${ MediaError.errorTypes[this.error_.code] })`, this.error_.message, this.error_);\n            this.trigger('error');\n            return;\n        }\n        reportUserActivity(event) {\n            this.userActivity_ = true;\n        }\n        userActive(bool) {\n            if (bool === undefined) {\n                return this.userActive_;\n            }\n            bool = !!bool;\n            if (bool === this.userActive_) {\n                return;\n            }\n            this.userActive_ = bool;\n            if (this.userActive_) {\n                this.userActivity_ = true;\n                this.removeClass('vjs-user-inactive');\n                this.addClass('vjs-user-active');\n                this.trigger('useractive');\n                return;\n            }\n            if (this.tech_) {\n                this.tech_.one('mousemove', function (e) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                });\n            }\n            this.userActivity_ = false;\n            this.removeClass('vjs-user-active');\n            this.addClass('vjs-user-inactive');\n            this.trigger('userinactive');\n        }\n        listenForUserActivity_() {\n            let mouseInProgress;\n            let lastMoveX;\n            let lastMoveY;\n            const handleActivity = Fn.bind(this, this.reportUserActivity);\n            const handleMouseMove = function (e) {\n                if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n                    lastMoveX = e.screenX;\n                    lastMoveY = e.screenY;\n                    handleActivity();\n                }\n            };\n            const handleMouseDown = function () {\n                handleActivity();\n                this.clearInterval(mouseInProgress);\n                mouseInProgress = this.setInterval(handleActivity, 250);\n            };\n            const handleMouseUpAndMouseLeave = function (event) {\n                handleActivity();\n                this.clearInterval(mouseInProgress);\n            };\n            this.listenTo('mousedown', handleMouseDown);\n            this.listenTo('mousemove', handleMouseMove);\n            this.listenTo('mouseup', handleMouseUpAndMouseLeave);\n            this.listenTo('mouseleave', handleMouseUpAndMouseLeave);\n            const controlBar = this.getChild('controlBar');\n            if (controlBar && !browser.IS_IOS && !browser.IS_ANDROID) {\n                controlBar.on('mouseenter', function (event) {\n                    this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n                    this.player().options_.inactivityTimeout = 0;\n                });\n                controlBar.on('mouseleave', function (event) {\n                    this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n                });\n            }\n            this.listenTo('keydown', handleActivity);\n            this.listenTo('keyup', handleActivity);\n            let inactivityTimeout;\n            this.setInterval(function () {\n                if (!this.userActivity_) {\n                    return;\n                }\n                this.userActivity_ = false;\n                this.userActive(true);\n                this.clearTimeout(inactivityTimeout);\n                const timeout = this.options_.inactivityTimeout;\n                if (timeout <= 0) {\n                    return;\n                }\n                inactivityTimeout = this.setTimeout(function () {\n                    if (!this.userActivity_) {\n                        this.userActive(false);\n                    }\n                }, timeout);\n            }, 250);\n        }\n        playbackRate(rate) {\n            if (rate !== undefined) {\n                this.techCall_('setPlaybackRate', rate);\n                return;\n            }\n            if (this.tech_ && this.tech_.featuresPlaybackRate) {\n                return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n            }\n            return 1;\n        }\n        defaultPlaybackRate(rate) {\n            if (rate !== undefined) {\n                return this.techCall_('setDefaultPlaybackRate', rate);\n            }\n            if (this.tech_ && this.tech_.featuresPlaybackRate) {\n                return this.techGet_('defaultPlaybackRate');\n            }\n            return 1;\n        }\n        isAudio(bool) {\n            if (bool !== undefined) {\n                this.isAudio_ = !!bool;\n                return;\n            }\n            return !!this.isAudio_;\n        }\n        addTextTrack(kind, label, language) {\n            if (this.tech_) {\n                return this.tech_.addTextTrack(kind, label, language);\n            }\n        }\n        addRemoteTextTrack(options, manualCleanup) {\n            if (this.tech_) {\n                return this.tech_.addRemoteTextTrack(options, manualCleanup);\n            }\n        }\n        removeRemoteTextTrack(obj = {}) {\n            let {track} = obj;\n            if (!track) {\n                track = obj;\n            }\n            if (this.tech_) {\n                return this.tech_.removeRemoteTextTrack(track);\n            }\n        }\n        getVideoPlaybackQuality() {\n            return this.techGet_('getVideoPlaybackQuality');\n        }\n        videoWidth() {\n            return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n        }\n        videoHeight() {\n            return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n        }\n        language(code) {\n            if (code === undefined) {\n                return this.language_;\n            }\n            if (this.language_ !== String(code).toLowerCase()) {\n                this.language_ = String(code).toLowerCase();\n                if (evented.isEvented(this)) {\n                    this.trigger('languagechange');\n                }\n            }\n        }\n        languages() {\n            return mergeOptions(Player.prototype.options_.languages, this.languages_);\n        }\n        toJSON() {\n            const options = mergeOptions(this.options_);\n            const tracks = options.tracks;\n            options.tracks = [];\n            for (let i = 0; i < tracks.length; i++) {\n                let track = tracks[i];\n                track = mergeOptions(track);\n                track.player = undefined;\n                options.tracks[i] = track;\n            }\n            return options;\n        }\n        createModal(content, options) {\n            options = options || {};\n            options.content = content || '';\n            const modal = new ModalDialog(this, options);\n            this.addChild(modal);\n            modal.on('dispose', () => {\n                this.removeChild(modal);\n            });\n            modal.open();\n            return modal;\n        }\n        updateCurrentBreakpoint_() {\n            if (!this.responsive()) {\n                return;\n            }\n            const currentBreakpoint = this.currentBreakpoint();\n            const currentWidth = this.currentWidth();\n            for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n                const candidateBreakpoint = BREAKPOINT_ORDER[i];\n                const maxWidth = this.breakpoints_[candidateBreakpoint];\n                if (currentWidth <= maxWidth) {\n                    if (currentBreakpoint === candidateBreakpoint) {\n                        return;\n                    }\n                    if (currentBreakpoint) {\n                        this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n                    }\n                    this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n                    this.breakpoint_ = candidateBreakpoint;\n                    break;\n                }\n            }\n        }\n        removeCurrentBreakpoint_() {\n            const className = this.currentBreakpointClass();\n            this.breakpoint_ = '';\n            if (className) {\n                this.removeClass(className);\n            }\n        }\n        breakpoints(breakpoints) {\n            if (breakpoints === undefined) {\n                return obj.assign(this.breakpoints_);\n            }\n            this.breakpoint_ = '';\n            this.breakpoints_ = obj.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n            this.updateCurrentBreakpoint_();\n            return obj.assign(this.breakpoints_);\n        }\n        responsive(value) {\n            if (value === undefined) {\n                return this.responsive_;\n            }\n            value = Boolean(value);\n            const current = this.responsive_;\n            if (value === current) {\n                return;\n            }\n            this.responsive_ = value;\n            if (value) {\n                this.listenTo('playerresize', this.updateCurrentBreakpoint_);\n                this.updateCurrentBreakpoint_();\n            } else {\n                this.unlistenTo('playerresize', this.updateCurrentBreakpoint_);\n                this.removeCurrentBreakpoint_();\n            }\n            return value;\n        }\n        currentBreakpoint() {\n            return this.breakpoint_;\n        }\n        currentBreakpointClass() {\n            return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n        }\n        loadMedia(media, ready) {\n            if (!media || typeof media !== 'object') {\n                return;\n            }\n            this.reset();\n            this.cache_.media = mergeOptions(media);\n            const {artwork, poster, src, textTracks} = this.cache_.media;\n            if (!artwork && poster) {\n                this.cache_.media.artwork = [{\n                        src: poster,\n                        type: mimetypes.getMimetype(poster)\n                    }];\n            }\n            if (src) {\n                this.src(src);\n            }\n            if (poster) {\n                this.poster(poster);\n            }\n            if (Array.isArray(textTracks)) {\n                textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n            }\n            this.ready(ready);\n        }\n        getMedia() {\n            if (!this.cache_.media) {\n                const poster = this.poster();\n                const src = this.currentSources();\n                const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n                    kind: tt.kind,\n                    label: tt.label,\n                    language: tt.language,\n                    src: tt.src\n                }));\n                const media = {\n                    src,\n                    textTracks\n                };\n                if (poster) {\n                    media.poster = poster;\n                    media.artwork = [{\n                            src: media.poster,\n                            type: mimetypes.getMimetype(media.poster)\n                        }];\n                }\n                return media;\n            }\n            return mergeOptions(this.cache_.media);\n        }\n        static getTagSettings(tag) {\n            const baseOptions = {\n                sources: [],\n                tracks: []\n            };\n            const tagOptions = Dom.getAttributes(tag);\n            const dataSetup = tagOptions['data-setup'];\n            if (Dom.hasClass(tag, 'vjs-fill')) {\n                tagOptions.fill = true;\n            }\n            if (Dom.hasClass(tag, 'vjs-fluid')) {\n                tagOptions.fluid = true;\n            }\n            if (dataSetup !== null) {\n                const [err, data] = safeParseTuple(dataSetup || '{}');\n                if (err) {\n                    log.error(err);\n                }\n                obj.assign(tagOptions, data);\n            }\n            obj.assign(baseOptions, tagOptions);\n            if (tag.hasChildNodes()) {\n                const children = tag.childNodes;\n                for (let i = 0, j = children.length; i < j; i++) {\n                    const child = children[i];\n                    const childName = child.nodeName.toLowerCase();\n                    if (childName === 'source') {\n                        baseOptions.sources.push(Dom.getAttributes(child));\n                    } else if (childName === 'track') {\n                        baseOptions.tracks.push(Dom.getAttributes(child));\n                    }\n                }\n            }\n            return baseOptions;\n        }\n        flexNotSupported_() {\n            const elem = document.createElement('i');\n            return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || 'msFlexOrder' in elem.style);\n        }\n        debug(enabled) {\n            if (enabled === undefined) {\n                return this.debugEnabled_;\n            }\n            if (enabled) {\n                this.trigger('debugon');\n                this.previousLogLevel_ = this.log.level;\n                this.log.level('debug');\n                this.debugEnabled_ = true;\n            } else {\n                this.trigger('debugoff');\n                this.log.level(this.previousLogLevel_);\n                this.previousLogLevel_ = undefined;\n                this.debugEnabled_ = false;\n            }\n        }\n    }\n    TRACK_TYPES.ALL.names.forEach(function (name) {\n        const props = TRACK_TYPES.ALL[name];\n        Player.prototype[props.getterName] = function () {\n            if (this.tech_) {\n                return this.tech_[props.getterName]();\n            }\n            this[props.privateName] = this[props.privateName] || new props.ListClass();\n            return this[props.privateName];\n        };\n    });\n    Player.prototype.crossorigin = Player.prototype.crossOrigin;\n    Player.players = {};\n    const navigator = window.navigator;\n    Player.prototype.options_ = {\n        techOrder: Tech.defaultTechOrder_,\n        html5: {},\n        inactivityTimeout: 2000,\n        playbackRates: [],\n        liveui: false,\n        children: [\n            'mediaLoader',\n            'posterImage',\n            'textTrackDisplay',\n            'loadingSpinner',\n            'bigPlayButton',\n            'liveTracker',\n            'controlBar',\n            'errorDisplay',\n            'textTrackSettings',\n            'resizeManager'\n        ],\n        language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n        languages: {},\n        notSupportedMessage: 'No compatible source was found for this media.',\n        fullscreen: { options: { navigationUI: 'hide' } },\n        breakpoints: {},\n        responsive: false\n    };\n    [\n        'ended',\n        'seeking',\n        'seekable',\n        'networkState',\n        'readyState'\n    ].forEach(function (fn) {\n        Player.prototype[fn] = function () {\n            return this.techGet_(fn);\n        };\n    });\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n        Player.prototype[`handleTech${ stringCases.toTitleCase(event) }_`] = function () {\n            return this.trigger(event);\n        };\n    });\n    Component.registerComponent('Player', Player);\n    return Player;\n});\ndefine('skylark-videojs/plugin',[\n    './mixins/evented',\n    './mixins/stateful',\n    './utils/events',\n    './utils/fn',\n    './utils/log',\n    './player'\n], function (evented, stateful, Events, Fn, log, Player) {\n    'use strict';\n    const BASE_PLUGIN_NAME = 'plugin';\n    const PLUGIN_CACHE_KEY = 'activePlugins_';\n    const pluginStorage = {};\n    const pluginExists = name => pluginStorage.hasOwnProperty(name);\n    const getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n    const markPluginAsActive = (player, name) => {\n        player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n        player[PLUGIN_CACHE_KEY][name] = true;\n    };\n    const triggerSetupEvent = (player, hash, before) => {\n        const eventName = (before ? 'before' : '') + 'pluginsetup';\n        player.trigger(eventName, hash);\n        player.trigger(eventName + ':' + hash.name, hash);\n    };\n    const createBasicPlugin = function (name, plugin) {\n        const basicPluginWrapper = function () {\n            triggerSetupEvent(this, {\n                name,\n                plugin,\n                instance: null\n            }, true);\n            const instance = plugin.apply(this, arguments);\n            markPluginAsActive(this, name);\n            triggerSetupEvent(this, {\n                name,\n                plugin,\n                instance\n            });\n            return instance;\n        };\n        Object.keys(plugin).forEach(function (prop) {\n            basicPluginWrapper[prop] = plugin[prop];\n        });\n        return basicPluginWrapper;\n    };\n    const createPluginFactory = (name, PluginSubClass) => {\n        PluginSubClass.prototype.name = name;\n        return function (...args) {\n            triggerSetupEvent(this, {\n                name,\n                plugin: PluginSubClass,\n                instance: null\n            }, true);\n            const instance = new PluginSubClass(...[\n                this,\n                ...args\n            ]);\n            this[name] = () => instance;\n            triggerSetupEvent(this, instance.getEventHash());\n            return instance;\n        };\n    };\n    class Plugin {\n        constructor(player) {\n            if (this.constructor === Plugin) {\n                throw new Error('Plugin must be sub-classed; not directly instantiated.');\n            }\n            this.player = player;\n            if (!this.log) {\n                this.log = this.player.log.createLogger(this.name);\n            }\n            evented(this);\n            delete this.trigger;\n            stateful(this, this.constructor.defaultState);\n            markPluginAsActive(player, this.name);\n            this.dispose = Fn.bind(this, this.dispose);\n            player.on('dispose', this.dispose);\n        }\n        version() {\n            return this.constructor.VERSION;\n        }\n        getEventHash(hash = {}) {\n            hash.name = this.name;\n            hash.plugin = this.constructor;\n            hash.instance = this;\n            return hash;\n        }\n        trigger(event, hash = {}) {\n            return Events.trigger(this.eventBusEl_, event, this.getEventHash(hash));\n        }\n        handleStateChanged(e) {\n        }\n        dispose() {\n            const {name, player} = this;\n            this.trigger('dispose');\n            this.unlistenTo();\n            player.off('dispose', this.dispose);\n            player[PLUGIN_CACHE_KEY][name] = false;\n            this.player = this.state = null;\n            player[name] = createPluginFactory(name, pluginStorage[name]);\n        }\n        static isBasic(plugin) {\n            const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n            return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n        }\n        static registerPlugin(name, plugin) {\n            if (typeof name !== 'string') {\n                throw new Error(`Illegal plugin name, \"${ name }\", must be a string, was ${ typeof name }.`);\n            }\n            if (pluginExists(name)) {\n                log.warn(`A plugin named \"${ name }\" already exists. You may want to avoid re-registering plugins!`);\n            } else if (Player.prototype.hasOwnProperty(name)) {\n                throw new Error(`Illegal plugin name, \"${ name }\", cannot share a name with an existing player method!`);\n            }\n            if (typeof plugin !== 'function') {\n                throw new Error(`Illegal plugin for \"${ name }\", must be a function, was ${ typeof plugin }.`);\n            }\n            pluginStorage[name] = plugin;\n            if (name !== BASE_PLUGIN_NAME) {\n                if (Plugin.isBasic(plugin)) {\n                    Player.prototype[name] = createBasicPlugin(name, plugin);\n                } else {\n                    Player.prototype[name] = createPluginFactory(name, plugin);\n                }\n            }\n            return plugin;\n        }\n        static deregisterPlugin(name) {\n            if (name === BASE_PLUGIN_NAME) {\n                throw new Error('Cannot de-register base plugin.');\n            }\n            if (pluginExists(name)) {\n                delete pluginStorage[name];\n                delete Player.prototype[name];\n            }\n        }\n        static getPlugins(names = Object.keys(pluginStorage)) {\n            let result;\n            names.forEach(name => {\n                const plugin = getPlugin(name);\n                if (plugin) {\n                    result = result || {};\n                    result[name] = plugin;\n                }\n            });\n            return result;\n        }\n        static getPluginVersion(name) {\n            const plugin = getPlugin(name);\n            return plugin && plugin.VERSION || '';\n        }\n    }\n    Plugin.getPlugin = getPlugin;\n    Plugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n    Plugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n    Player.prototype.usingPlugin = function (name) {\n        return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n    };\n    Player.prototype.hasPlugin = function (name) {\n        return !!pluginExists(name);\n    };\n    return Plugin;\n});\ndefine('skylark-videojs/utils/inherits',[\r\n  \"skylark-langx-constructs/inherit\"\r\n],function(inherit){\r\n  /*\r\n  function _inherits(subClass, superClass) {\r\n    if (typeof superClass !== \"function\" && superClass !== null) {\r\n      throw new TypeError(\"Super expression must either be null or a function\");\r\n    }\r\n\r\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n      constructor: {\r\n        value: subClass,\r\n        writable: true,\r\n        configurable: true\r\n      }\r\n    });\r\n    if (superClass) Object.setPrototypeOf(subClass, superClass);\r\n  }\r\n \r\n  return _inherits;\r\n  */\r\n\r\n  return inherit;\r\n});\r\n\ndefine('skylark-videojs/extend',[\n    './utils/inherits'\n], function (_inherits) {\n    'use strict';\n    const extend = function (superClass, subClassMethods = {}) {\n        let subClass = function () {\n            superClass.apply(this, arguments);\n        };\n        let methods = {};\n        if (typeof subClassMethods === 'object') {\n            if (subClassMethods.constructor !== Object.prototype.constructor) {\n                subClass = subClassMethods.constructor;\n            }\n            methods = subClassMethods;\n        } else if (typeof subClassMethods === 'function') {\n            subClass = subClassMethods;\n        }\n        _inherits(subClass, superClass);\n        if (superClass) {\n            subClass.super_ = superClass;\n        }\n        for (const name in methods) {\n            if (methods.hasOwnProperty(name)) {\n                subClass.prototype[name] = methods[name];\n            }\n        }\n        return subClass;\n    };\n    return extend;\n});\ndefine('skylark-videojs/video',[\n    \"skylark-langx-globals/window\",\n    'skylark-net-http/xhr',\n    './setup',\n    './utils/stylesheet',\n    './component',\n    './event-target',\n    './utils/events',\n    './player',\n    './plugin',\n    './utils/merge-options',\n    './utils/fn',\n    './tracks/text-track',\n    './tracks/audio-track',\n    './tracks/video-track',\n    './utils/time-ranges',\n    './utils/format-time',\n    './utils/log',\n    './utils/dom',\n    './utils/browser',\n    './utils/url',\n    './utils/obj',\n    './utils/computed-style',\n    './extend',\n    './tech/tech',\n    './tech/middleware',\n    './utils/define-lazy-property'\n], function (\n    window,\n    xhr,\n    setup, \n    stylesheet, \n    Component, \n    EventTarget, \n    Events, \n    Player, \n    Plugin, \n    mergeOptions, \n    Fn, \n    TextTrack, \n    AudioTrack, \n    VideoTrack, \n    timeRanges, \n    formatTime, \n    log, \n    Dom, \n    browser, \n    Url, \n    obj, \n    computedStyle, \n    extend, \n    Tech, \n    middleware, \n    defineLazyProperty\n) {\n    'use strict';\n\n    var middlewareUse = middleware.use,\n        TERMINATOR = middleware.TERMINATOR;\n\n\n    const normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n    function videojs(id, options, ready) {\n        let player = videojs.getPlayer(id);\n        if (player) {\n            if (options) {\n                log.warn(`Player \"${ id }\" is already initialised. Options will not be applied.`);\n            }\n            if (ready) {\n                player.ready(ready);\n            }\n            return player;\n        }\n        const el = typeof id === 'string' ? Dom.$('#' + normalizeId(id)) : id;\n        if (!Dom.isEl(el)) {\n            throw new TypeError('The element or ID supplied is not valid. (videojs)');\n        }\n        if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n            log.warn('The element supplied is not included in the DOM');\n        }\n        options = options || {};\n        videojs.hooks('beforesetup').forEach(hookFunction => {\n            const opts = hookFunction(el, mergeOptions(options));\n            if (!obj.isObject(opts) || Array.isArray(opts)) {\n                log.error('please return an object in beforesetup hooks');\n                return;\n            }\n            options = mergeOptions(options, opts);\n        });\n        const PlayerComponent = Component.getComponent('Player');\n        player = new PlayerComponent(el, options, ready);\n        videojs.hooks('setup').forEach(hookFunction => hookFunction(player));\n        return player;\n    }\n    videojs.hooks_ = {};\n    videojs.hooks = function (type, fn) {\n        videojs.hooks_[type] = videojs.hooks_[type] || [];\n        if (fn) {\n            videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n        }\n        return videojs.hooks_[type];\n    };\n    videojs.hook = function (type, fn) {\n        videojs.hooks(type, fn);\n    };\n    videojs.hookOnce = function (type, fn) {\n        videojs.hooks(type, [].concat(fn).map(original => {\n            const wrapper = (...args) => {\n                videojs.removeHook(type, wrapper);\n                return original(...args);\n            };\n            return wrapper;\n        }));\n    };\n    videojs.removeHook = function (type, fn) {\n        const index = videojs.hooks(type).indexOf(fn);\n        if (index <= -1) {\n            return false;\n        }\n        videojs.hooks_[type] = videojs.hooks_[type].slice();\n        videojs.hooks_[type].splice(index, 1);\n        return true;\n    };\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && Dom.isReal()) {\n        let style = Dom.$('.vjs-styles-defaults');\n        if (!style) {\n            style = stylesheet.createStyleElement('vjs-styles-defaults');\n            const head = Dom.$('head');\n            if (head) {\n                head.insertBefore(style, head.firstChild);\n            }\n            stylesheet.setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid {\n        padding-top: 56.25%\n      }\n    `);\n        }\n    }\n    setup.autoSetupTimeout(1, videojs);\n    videojs.VERSION = \"7.11.5\";\n    videojs.options = Player.prototype.options_;\n    videojs.getPlayers = () => Player.players;\n    videojs.getPlayer = id => {\n        const players = Player.players;\n        let tag;\n        if (typeof id === 'string') {\n            const nId = normalizeId(id);\n            const player = players[nId];\n            if (player) {\n                return player;\n            }\n            tag = Dom.$('#' + nId);\n        } else {\n            tag = id;\n        }\n        if (Dom.isEl(tag)) {\n            const {player, playerId} = tag;\n            if (player || players[playerId]) {\n                return player || players[playerId];\n            }\n        }\n    };\n    videojs.getAllPlayers = () => Object.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\n    videojs.players = Player.players;\n    videojs.getComponent = Component.getComponent;\n    videojs.registerComponent = (name, comp) => {\n        if (Tech.isTech(comp)) {\n            log.warn(`The ${ name } tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n        }\n        Component.registerComponent.call(Component, name, comp);\n    };\n    videojs.getTech = Tech.getTech;\n    videojs.registerTech = Tech.registerTech;\n    videojs.use = middlewareUse;\n    Object.defineProperty(videojs, 'middleware', {\n        value: {},\n        writeable: false,\n        enumerable: true\n    });\n    Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n        value: TERMINATOR,\n        writeable: false,\n        enumerable: true\n    });\n    videojs.browser = browser;\n    videojs.TOUCH_ENABLED = browser.TOUCH_ENABLED;\n    videojs.extend = extend;\n    videojs.mergeOptions = mergeOptions;\n    videojs.bind = Fn.bind;\n    videojs.registerPlugin = Plugin.registerPlugin;\n    videojs.deregisterPlugin = Plugin.deregisterPlugin;\n    videojs.plugin = (name, plugin) => {\n        log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n        return Plugin.registerPlugin(name, plugin);\n    };\n    videojs.getPlugins = Plugin.getPlugins;\n    videojs.getPlugin = Plugin.getPlugin;\n    videojs.getPluginVersion = Plugin.getPluginVersion;\n    videojs.addLanguage = function (code, data) {\n        code = ('' + code).toLowerCase();\n        videojs.options.languages = mergeOptions(videojs.options.languages, { [code]: data });\n        return videojs.options.languages[code];\n    };\n    videojs.log = log;\n    videojs.createLogger = log.createLogger;\n    videojs.createTimeRange = videojs.undefined = timeRanges.createTimeRanges;\n    videojs.formatTime = formatTime;\n    videojs.setFormatTime = formatTime.setFormatTime;\n    videojs.resetFormatTime = formatTime.resetFormatTime;\n    videojs.parseUrl = Url.parseUrl;\n    videojs.isCrossOrigin = Url.isCrossOrigin;\n    videojs.EventTarget = EventTarget;\n    videojs.on = Events.on;\n    videojs.one = Events.one;\n    videojs.off = Events.off;\n    videojs.trigger = Events.trigger;\n    videojs.xhr = xhr;\n    videojs.TextTrack = TextTrack;\n    videojs.AudioTrack = AudioTrack;\n    videojs.VideoTrack = VideoTrack;\n    [\n        'isEl',\n        'isTextNode',\n        'createEl',\n        'hasClass',\n        'addClass',\n        'removeClass',\n        'toggleClass',\n        'setAttributes',\n        'getAttributes',\n        'emptyEl',\n        'appendContent',\n        'insertContent'\n    ].forEach(k => {\n        videojs[k] = function () {\n            log.warn(`videojs.${ k }() is deprecated; use videojs.dom.${ k }() instead`);\n            return Dom[k].apply(null, arguments);\n        };\n    });\n    videojs.computedStyle = computedStyle;\n    videojs.dom = Dom;\n    videojs.url = Url;\n    videojs.defineLazyProperty = defineLazyProperty;\n    return videojs;\n});\ndefine('skylark-videojs/main',[\n\t'skylark-langx/skylark',\n    './video'\n//    '@videojs/http-streaming'\n], function (skylark,videojs) {\n    'use strict';\n\n    return skylark.attach(\"intg.videojs\",videojs);\n});\ndefine('skylark-videojs', ['skylark-videojs/main'], function (main) { return main; });\n\n"]}